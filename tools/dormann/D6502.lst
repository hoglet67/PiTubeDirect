AS65 Assembler for R6502 [1.42].  Copyright 1994-2007, Frank A. Kingswood                                                Page    1
---------------------------------------------------- 6502_functional_test.a65 ----------------------------------------------------

6346 lines read, no errors in pass 1.
                        ;
                        ; 6 5 0 2   F U N C T I O N A L   T E S T
                        ;
                        ; Copyright (C) 2012-2020  Klaus Dormann
                        ;
                        ; This program is free software: you can redistribute it and/or modify
                        ; it under the terms of the GNU General Public License as published by
                        ; the Free Software Foundation, either version 3 of the License, or
                        ; (at your option) any later version.
                        ;
                        ; This program is distributed in the hope that it will be useful,
                        ; but WITHOUT ANY WARRANTY; without even the implied warranty of
                        ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        ; GNU General Public License for more details.
                        ;
                        ; You should have received a copy of the GNU General Public License
                        ; along with this program.  If not, see <http://www.gnu.org/licenses/>.
                        
                        
                        ; This program is designed to test all opcodes of a 6502 emulator using all
                        ; addressing modes with focus on propper setting of the processor status
                        ; register bits.
                        ;
                        ; version 05-jan-2020
                        ; contact info at http://2m5.de or email K@2m5.de
                        ;
                        ; assembled with AS65 written by Frank A. Kingswood
                        ; The assembler as65_142.zip can be obtained from my GitHub repository
                        ; command line switches: -l -m -s2 -w -h0
                        ;                         |  |  |   |  no page headers in listing
                        ;                         |  |  |   wide listing (133 char/col)
                        ;                         |  |  write intel hex file instead of binary
                        ;                         |  expand macros in listing
                        ;                         generate pass2 listing
                        ;
                        ; No IO - should be run from a monitor with access to registers.
                        ; To run load intel hex image with a load command, than alter PC to 400 hex
                        ; (code_segment) and enter a go command.
                        ; Loop on program counter determines error or successful completion of test.
                        ; Check listing for relevant traps (jump/branch *).
                        ; Please note that in early tests some instructions will have to be used before
                        ; they are actually tested!
                        ;
                        ; RESET, NMI or IRQ should not occur and will be trapped if vectors are enabled.
                        ; Tests documented behavior of the original NMOS 6502 only! No unofficial
                        ; opcodes. Additional opcodes of newer versions of the CPU (65C02, 65816) will
                        ; not be tested. Decimal ops will only be tested with valid BCD operands and
                        ; N V Z flags will be ignored.
                        ;
                        ; Debugging hints:
                        ;     Most of the code is written sequentially. if you hit a trap, check the
                        ;   immediately preceeding code for the instruction to be tested. Results are
                        ;   tested first, flags are checked second by pushing them onto the stack and
                        ;   pulling them to the accumulator after the result was checked. The "real"
                        ;   flags are no longer valid for the tested instruction at this time!
                        ;     If the tested instruction was indexed, the relevant index (X or Y) must
                        ;   also be checked. Opposed to the flags, X and Y registers are still valid.
                        ;
                        ; versions:
                        ;   28-jul-2012  1st version distributed for testing
                        ;   29-jul-2012  fixed references to location 0, now #0
                        ;                added license - GPLv3
                        ;   30-jul-2012  added configuration options
                        ;   01-aug-2012  added trap macro to allow user to change error handling
                        ;   01-dec-2012  fixed trap in branch field must be a branch
                        ;   02-mar-2013  fixed PLA flags not tested
                        ;   19-jul-2013  allowed ROM vectors to be loaded when load_data_direct = 0
                        ;                added test sequence check to detect if tests jump their fence
                        ;   23-jul-2013  added RAM integrity check option
                        ;   16-aug-2013  added error report to standard output option
                        ;   13-dec-2014  added binary/decimal opcode table switch test
                        ;   14-dec-2014  improved relative address test
                        ;   23-aug-2015  added option to disable self modifying tests
                        ;   24-aug-2015  all self modifying immediate opcodes now execute in data RAM
                        ;                added small branch offset pretest
                        ;   21-oct-2015  added option to disable decimal mode ADC & SBC tests
                        ;   04-dec-2017  fixed BRK only tested with interrupts enabled
                        ;                added option to skip the remainder of a failing test
                        ;                in report.i65
                        ;   05-jan-2020  fixed shifts not testing zero result and flag when last 1-bit
                        ;                is shifted out
                        
                        ; C O N F I G U R A T I O N
                        
                        ;ROM_vectors writable (0=no, 1=yes)
                        ;if ROM vectors can not be used interrupts will not be trapped
                        ;as a consequence BRK can not be tested but will be emulated to test RTI
0000 =                  ROM_vectors = 0
                        
                        ;load_data_direct (0=move from code segment, 1=load directly)
                        ;loading directly is preferred but may not be supported by your platform
                        ;0 produces only consecutive object code, 1 is not suitable for a binary image
0000 =                  load_data_direct = 0
                        
                        ;I_flag behavior (0=force enabled, 1=force disabled, 2=prohibit change, 3=allow
                        ;change) 2 requires extra code and is not recommended. SEI & CLI can only be
                        ;tested if you allow changing the interrupt status (I_flag = 3)
0003 =                  I_flag = 3
                        
                        ;configure memory - try to stay away from memory used by the system
                        ;zero_page memory start address, $52 (82) consecutive Bytes required
                        ;                                add 2 if I_flag = 2
0050 =                  zero_page = $50
                        
                        ;data_segment memory start address, $7B (123) consecutive Bytes required
3200 =                  data_segment = $3200
                        
                            if (data_segment & $ff) != 0
                                ERROR ERROR ERROR low byte of data_segment MUST be $00 !!
                            endif
                        
                        ;code_segment memory start address, 13.1kB of consecutive space required
                        ;                                   add 2.5 kB if I_flag = 2
3400 =                  code_segment = $3400
                        
                        ;self modifying code may be disabled to allow running in ROM
                        ;0=part of the code is self modifying and must reside in RAM
                        ;1=tests disabled: branch range
0000 =                  disable_selfmod = 0
                        
                        ;report errors through I/O channel (0=use standard self trap loops, 1=include
                        ;report.i65 as I/O channel, add 3.5 kB)
0001 =                  report = 1
                        
                        ;RAM integrity test option. Checks for undesired RAM writes.
                        ;set lowest non RAM or RAM mirror address page (-1=disable, 0=64k, $40=16k)
                        ;leave disabled if a monitor, OS or background interrupt is allowed to alter RAM
ffff =                  ram_top = -1
                        
                        ;disable test decimal mode ADC & SBC, 0=enable, 1=disable,
                        ;2=disable including decimal flag in processor status
0000 =                  disable_decimal = 0
                        
                                noopt       ;do not take shortcuts
                        
                        ;macros for error & success traps to allow user modification
                        ;example:
                        ;trap    macro
                        ;        jsr my_error_handler
                        ;        endm
                        ;trap_eq macro
                        ;        bne skip\?
                        ;        trap           ;failed equal (zero)
                        ;skip\?
                        ;        endm
                        ;
                        ; my_error_handler should pop the calling address from the stack and report it.
                        ; putting larger portions of code (more than 3 bytes) inside the trap macro
                        ; may lead to branch range problems for some tests.
                            if report = 0
                        trap    macro
                                jmp *           ;failed anyway
                                endm
                        trap_eq macro
                                beq *           ;failed equal (zero)
                                endm
                        trap_ne macro
                                bne *           ;failed not equal (non zero)
                                endm
                        trap_cs macro
                                bcs *           ;failed carry set
                                endm
                        trap_cc macro
                                bcc *           ;failed carry clear
                                endm
                        trap_mi macro
                                bmi *           ;failed minus (bit 7 set)
                                endm
                        trap_pl macro
                                bpl *           ;failed plus (bit 7 clear)
                                endm
                        trap_vs macro
                                bvs *           ;failed overflow set
                                endm
                        trap_vc macro
                                bvc *           ;failed overflow clear
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                                jmp *           ;test passed, no errors
                                endm
                            endif
                            if report = 1
                        trap    macro
                                jsr report_error
                                endm
                        trap_eq macro
                                bne skip\?
                                trap           ;failed equal (zero)
                        skip\?
                                endm
                        trap_ne macro
                                beq skip\?
                                trap            ;failed not equal (non zero)
                        skip\?
                                endm
                        trap_cs macro
                                bcc skip\?
                                trap            ;failed carry set
                        skip\?
                                endm
                        trap_cc macro
                                bcs skip\?
                                trap            ;failed carry clear
                        skip\?
                                endm
                        trap_mi macro
                                bpl skip\?
                                trap            ;failed minus (bit 7 set)
                        skip\?
                                endm
                        trap_pl macro
                                bmi skip\?
                                trap            ;failed plus (bit 7 clear)
                        skip\?
                                endm
                        trap_vs macro
                                bvc skip\?
                                trap            ;failed overflow set
                        skip\?
                                endm
                        trap_vc macro
                                bvs skip\?
                                trap            ;failed overflow clear
                        skip\?
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                                jsr report_success
                                endm
                            endif
                        
                        
0001 =                  carry   equ %00000001   ;flag bits in status
0002 =                  zero    equ %00000010
0004 =                  intdis  equ %00000100
0008 =                  decmode equ %00001000
0010 =                  break   equ %00010000
0020 =                  reserv  equ %00100000
0040 =                  overfl  equ %01000000
0080 =                  minus   equ %10000000
                        
0001 =                  fc      equ carry
0002 =                  fz      equ zero
0003 =                  fzc     equ carry+zero
0040 =                  fv      equ overfl
0042 =                  fvz     equ overfl+zero
0080 =                  fn      equ minus
0081 =                  fnc     equ minus+carry
0082 =                  fnz     equ minus+zero
0083 =                  fnzc    equ minus+zero+carry
00c0 =                  fnv     equ minus+overfl
                        
0030 =                  fao     equ break+reserv    ;bits always on after PHP, BRK
0034 =                  fai     equ fao+intdis      ;+ forced interrupt disable
0038 =                  faod    equ fao+decmode     ;+ ignore decimal
003c =                  faid    equ fai+decmode     ;+ ignore decimal
00ff =                  m8      equ $ff             ;8 bit mask
00fb =                  m8i     equ $ff&~intdis     ;8 bit mask - interrupt disable
                        
                        ;macros to allow masking of status bits.
                        ;masking test of decimal bit
                        ;masking of interrupt enable/disable on load and compare
                        ;masking of always on bits after PHP or BRK (unused & break) on compare
                            if disable_decimal < 2
                                if I_flag = 0
                        load_flag   macro
                                    lda #\1&m8i         ;force enable interrupts (mask I)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8i   ;I_flag is always enabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 1
                        load_flag   macro
                                    lda #\1|intdis      ;force disable interrupts
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fai)&m8    ;I_flag is always disabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1|fai)       ;invert expected flags + always on bits + I
                                    endm
                                endif
                                if I_flag = 2
                        load_flag   macro
                                    lda #\1
                                    ora flag_I_on       ;restore I-flag
                                    and flag_I_off
                                    endm
                        cmp_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    cmp #(\1|fao)&m8i   ;expected flags + always on bits, mask I
                                    endm
                        eor_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 3
                        load_flag   macro
                                    lda #\1             ;allow test to change I-flag (no mask)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8    ;expected flags + always on bits
                                    endm
                        eor_flag    macro
                                    eor #\1|fao         ;invert expected flags + always on bits
                                    endm
                                endif
                            else
                                if I_flag = 0
                        load_flag   macro
                                    lda #\1&m8i         ;force enable interrupts (mask I)
                                    endm
                        cmp_flag    macro
                                    ora #decmode        ;ignore decimal mode bit
                                    cmp #(\1|faod)&m8i  ;I_flag is always enabled + always on bits
                                    endm
                        eor_flag    macro
                                    ora #decmode        ;ignore decimal mode bit
                                    eor #(\1&m8i|faod)  ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 1
                        load_flag   macro
                                    lda #\1|intdis      ;force disable interrupts
                                    endm
                        cmp_flag    macro
                                    ora #decmode        ;ignore decimal mode bit
                                    cmp #(\1|faid)&m8   ;I_flag is always disabled + always on bits
                                    endm
                        eor_flag    macro
                                    ora #decmode        ;ignore decimal mode bit
                                    eor #(\1|faid)      ;invert expected flags + always on bits + I
                                    endm
                                endif
                                if I_flag = 2
                        load_flag   macro
                                    lda #\1
                                    ora flag_I_on       ;restore I-flag
                                    and flag_I_off
                                    endm
                        cmp_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    ora #decmode        ;ignore decimal mode bit
                                    cmp #(\1|faod)&m8i  ;expected flags + always on bits, mask I
                                    endm
                        eor_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    ora #decmode        ;ignore decimal mode bit
                                    eor #(\1&m8i|faod)  ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 3
                        load_flag   macro
                                    lda #\1             ;allow test to change I-flag (no mask)
                                    endm
                        cmp_flag    macro
                                    ora #decmode        ;ignore decimal mode bit
                                    cmp #(\1|faod)&m8   ;expected flags + always on bits
                                    endm
                        eor_flag    macro
                                    ora #decmode        ;ignore decimal mode bit
                                    eor #\1|faod        ;invert expected flags + always on bits
                                    endm
                                endif
                            endif
                        
                        ;macros to set (register|memory|zeropage) & status
                        set_stat    macro       ;setting flags in the processor status register
                                    load_flag \1
                                    pha         ;use stack to load status
                                    plp
                                    endm
                        
                        set_a       macro       ;precharging accu & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda #\1     ;precharge accu
                                    plp
                                    endm
                        
                        set_x       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldx #\1     ;precharge index x
                                    plp
                                    endm
                        
                        set_y       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldy #\1     ;precharge index y
                                    plp
                                    endm
                        
                        set_ax      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;precharge accu
                                    plp
                                    endm
                        
                        set_ay      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,y    ;precharge accu
                                    plp
                                    endm
                        
                        set_z       macro       ;precharging indexed zp & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to zeropage
                                    sta zpt
                                    plp
                                    endm
                        
                        set_zx      macro       ;precharging zp,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed zeropage
                                    sta zpt,x
                                    plp
                                    endm
                        
                        set_abs     macro       ;precharging indexed memory & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to memory
                                    sta abst
                                    plp
                                    endm
                        
                        set_absx    macro       ;precharging abs,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed memory
                                    sta abst,x
                                    plp
                                    endm
                        
                        ;macros to test (register|memory|zeropage) & status & (mask)
                        tst_stat    macro       ;testing flags in the processor status register
                                    php         ;save status
                                    pla         ;use stack to retrieve status
                                    pha
                                    cmp_flag \1
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_a       macro       ;testing result in accu & flags
                                    php         ;save flags
                                    cmp #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_x       macro       ;testing result in x index & flags
                                    php         ;save flags
                                    cpx #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_y       macro       ;testing result in y index & flags
                                    php         ;save flags
                                    cpy #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_ax      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne     ;
                                    endm
                        
                        tst_ay      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,y    ;test result
                                    trap_ne     ;
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,y    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_z       macro       ;indexed testing result in zp & flags
                                    php         ;save flags
                                    lda zpt
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_zx      macro       ;testing result in zp,x & flags
                                    php         ;save flags
                                    lda zpt,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_abs     macro       ;indexed testing result in memory & flags
                                    php         ;save flags
                                    lda abst
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_absx    macro       ;testing result in abs,x & flags
                                    php         ;save flags
                                    lda abst,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        ; RAM integrity test
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                        ;   uses zpt word as indirect pointer, zpt+2 word as checksum
                                if ram_top > -1
                        check_ram   macro
                                    cld
                                    lda #0
                                    sta zpt         ;set low byte of indirect pointer
                                    sta zpt+3       ;checksum high byte
                                  if disable_selfmod = 0
                                    sta range_adr   ;reset self modifying code
                                  endif
                                    clc
                                    ldx #zp_bss-zero_page ;zeropage - write test area
                        ccs3\?      adc zero_page,x
                                    bcc ccs2\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs2\?      inx
                                    bne ccs3\?
                                    ldx #hi(abs1)   ;set high byte of indirect pointer
                                    stx zpt+1
                                    ldy #lo(abs1)   ;data after write & execute test area
                        ccs5\?      adc (zpt),y
                                    bcc ccs4\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs4\?      iny
                                    bne ccs5\?
                                    inx             ;advance RAM high address
                                    stx zpt+1
                                    cpx #ram_top
                                    bne ccs5\?
                                    sta zpt+2       ;checksum low is
                                    cmp ram_chksm   ;checksum low expected
                                    trap_ne         ;checksum mismatch
                                    lda zpt+3       ;checksum high is
                                    cmp ram_chksm+1 ;checksum high expected
                                    trap_ne         ;checksum mismatch
                                    endm
                                else
                        check_ram   macro
                                    ;RAM check disabled - RAM size not set
                                    endm
                                endif
                        
                        next_test   macro           ;make sure, tests don't jump the fence
                                    lda test_case   ;previous test
                                    cmp #test_num
                                    trap_ne         ;test is out of sequence
                        test_num = test_num + 1
                                    lda #test_num   ;*** next tests' number
                                    sta test_case
                                    ;check_ram       ;uncomment to find altered RAM after each test
                                    endm
                        
                            if load_data_direct = 1
                                data
                            else
                                bss                 ;uninitialized segment, copy of data at end of code!
                            endif
0050 =                          org zero_page
                        ;break test interrupt save
0050 =                  irq_a   ds  1               ;a register
0051 =                  irq_x   ds  1               ;x register
                            if I_flag = 2
                        ;masking for I bit in status
                        flag_I_on   ds  1           ;or mask to load flags
                        flag_I_off  ds  1           ;and mask to load flags
                            endif
0052 =                  zpt                         ;6 bytes store/modify test area
                        ;add/subtract operand generation and result/flag prediction
0052 =                  adfc    ds  1               ;carry flag before op
0053 =                  ad1     ds  1               ;operand 1 - accumulator
0054 =                  ad2     ds  1               ;operand 2 - memory / immediate
0055 =                  adrl    ds  1               ;expected result bits 0-7
0056 =                  adrh    ds  1               ;expected result bit 8 (carry)
0057 =                  adrf    ds  1               ;expected flags NV0000ZC (only binary mode)
0058 =                  sb2     ds  1               ;operand 2 complemented for subtract
0059 =                  zp_bss
0059 =                  zps     db  $80,1           ;additional shift pattern to test zero result & flag
005b =                  zp1     db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
005f =                  zp7f    db  $7f             ;test pattern for compare
                        ;logical zeropage operands
0060 =                  zpOR    db  0,$1f,$71,$80   ;test pattern for OR
0064 =                  zpAN    db  $0f,$ff,$7f,$80 ;test pattern for AND
0068 =                  zpEO    db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
006c =                  ind1    dw  abs1            ;indirect pointer to pattern in absolute memory
006e =                          dw  abs1+1
0070 =                          dw  abs1+2
0072 =                          dw  abs1+3
0074 =                          dw  abs7f
0076 =                  inw1    dw  abs1-$f8        ;indirect pointer for wrap-test pattern
0078 =                  indt    dw  abst            ;indirect pointer to store area in absolute memory
007a =                          dw  abst+1
007c =                          dw  abst+2
007e =                          dw  abst+3
0080 =                  inwt    dw  abst-$f8        ;indirect pointer for wrap-test store
0082 =                  indAN   dw  absAN           ;indirect pointer to AND pattern in absolute memory
0084 =                          dw  absAN+1
0086 =                          dw  absAN+2
0088 =                          dw  absAN+3
008a =                  indEO   dw  absEO           ;indirect pointer to EOR pattern in absolute memory
008c =                          dw  absEO+1
008e =                          dw  absEO+2
0090 =                          dw  absEO+3
0092 =                  indOR   dw  absOR           ;indirect pointer to OR pattern in absolute memory
0094 =                          dw  absOR+1
0096 =                          dw  absOR+2
0098 =                          dw  absOR+3
                        ;add/subtract indirect pointers
009a =                  adi2    dw  ada2            ;indirect pointer to operand 2 in absolute memory
009c =                  sbi2    dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
009e =                  adiy2   dw  ada2-$ff        ;with offset for indirect indexed
00a0 =                  sbiy2   dw  sba2-$ff
00a2 =                  zp_bss_end
                        
3200 =                          org data_segment
3200 =                  test_case   ds  1           ;current test number
3201 =                  ram_chksm   ds  2           ;checksum for RAM integrity test
                        ;add/subtract operand copy - abs tests write area
3203 =                  abst                        ;6 bytes store/modify test area
3203 =                  ada2    ds  1               ;operand 2
3204 =                  sba2    ds  1               ;operand 2 complemented for subtract
3205 =                          ds  4               ;fill remaining bytes
3209 =                  data_bss
                            if load_data_direct = 1
                        ex_andi and #0              ;execute immediate opcodes
                                rts
                        ex_eori eor #0              ;execute immediate opcodes
                                rts
                        ex_orai ora #0              ;execute immediate opcodes
                                rts
                        ex_adci adc #0              ;execute immediate opcodes
                                rts
                        ex_sbci sbc #0              ;execute immediate opcodes
                                rts
                            else
3209 =                  ex_andi ds  3
320c =                  ex_eori ds  3
320f =                  ex_orai ds  3
3212 =                  ex_adci ds  3
3215 =                  ex_sbci ds  3
                            endif
                        ;zps    db  $80,1           ;additional shift patterns test zero result & flag
3218 =                  abs1    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
321c =                  abs7f   db  $7f             ;test pattern for compare
                        ;loads
321d =                  fLDx    db  fn,fn,0,fz              ;expected flags for load
                        ;shifts
3221 =                  rASL                                ;expected result ASL & ROL -carry
3221 =                  rROL    db  0,2,$86,$04,$82,0
3227 =                  rROLc   db  1,3,$87,$05,$83,1       ;expected result ROL +carry
322d =                  rLSR                                ;expected result LSR & ROR -carry
322d =                  rROR    db  $40,0,$61,$41,$20,0
3233 =                  rRORc   db  $c0,$80,$e1,$c1,$a0,$80 ;expected result ROR +carry
3239 =                  fASL                                ;expected flags for shifts
3239 =                  fROL    db  fzc,0,fnc,fc,fn,fz      ;no carry in
323f =                  fROLc   db  fc,0,fnc,fc,fn,0        ;carry in
3245 =                  fLSR
3245 =                  fROR    db  0,fzc,fc,0,fc,fz        ;no carry in
324b =                  fRORc   db  fn,fnc,fnc,fn,fnc,fn    ;carry in
                        ;increments (decrements)
3251 =                  rINC    db  $7f,$80,$ff,0,1         ;expected result for INC/DEC
3256 =                  fINC    db  0,fn,fn,fz,0            ;expected flags for INC/DEC
                        ;logical memory operand
325b =                  absOR   db  0,$1f,$71,$80           ;test pattern for OR
325f =                  absAN   db  $0f,$ff,$7f,$80         ;test pattern for AND
3263 =                  absEO   db  $ff,$0f,$8f,$8f         ;test pattern for EOR
                        ;logical accu operand
3267 =                  absORa  db  0,$f1,$1f,0             ;test pattern for OR
326b =                  absANa  db  $f0,$ff,$ff,$ff         ;test pattern for AND
326f =                  absEOa  db  $ff,$f0,$f0,$0f         ;test pattern for EOR
                        ;logical results
3273 =                  absrlo  db  0,$ff,$7f,$80
3277 =                  absflo  db  fz,fn,0,fn
327b =                  data_bss_end
                        
                        
                                code
3400 =                          org code_segment
3400 : d8               start   cld
3401 : a2ff                     ldx #$ff
3403 : 9a                       txs
3404 : a900                     lda #0          ;*** test 0 = initialize
3406 : 8d0032                   sta test_case
0000 =                  test_num = 0
                        
                        ;stop interrupts before initializing BSS
                            if I_flag = 1
                                sei
                            endif
                        
                        ;initialize I/O for report channel
                            if report = 1
3409 : 207674                   jsr report_init
                            endif
                        
                        ;pretest small branch offset
340c : a205                     ldx #5
340e : 4c3634                   jmp psb_test
3411 :                  psb_bwok
3411 : a005                     ldy #5
3413 : d008                     bne psb_forw
                                trap        ;branch should be taken
3415 : 208574          >        jsr report_error
                        
3418 : 88                       dey         ;forward landing zone
3419 : 88                       dey
341a : 88                       dey
341b : 88                       dey
341c : 88                       dey
341d :                  psb_forw
341d : 88                       dey
341e : 88                       dey
341f : 88                       dey
3420 : 88                       dey
3421 : 88                       dey
3422 : f017                     beq psb_fwok
                                trap        ;forward offset
3424 : 208574          >        jsr report_error
                        
                        
3427 : ca                       dex         ;backward landing zone
3428 : ca                       dex
3429 : ca                       dex
342a : ca                       dex
342b : ca                       dex
342c :                  psb_back
342c : ca                       dex
342d : ca                       dex
342e : ca                       dex
342f : ca                       dex
3430 : ca                       dex
3431 : f0de                     beq psb_bwok
                                trap        ;backward offset
3433 : 208574          >        jsr report_error
                        
3436 :                  psb_test
3436 : d0f4                     bne psb_back
                                trap        ;branch should be taken
3438 : 208574          >        jsr report_error
                        
343b :                  psb_fwok
                        
                        ;initialize BSS segment
                            if load_data_direct != 1
343b : a248                     ldx #zp_end-zp_init-1
343d : bd2076           ld_zp   lda zp_init,x
3440 : 9559                     sta zp_bss,x
3442 : ca                       dex
3443 : 10f8                     bpl ld_zp
3445 : a271                     ldx #data_end-data_init-1
3447 : bd6976           ld_data lda data_init,x
344a : 9d0932                   sta data_bss,x
344d : ca                       dex
344e : 10f7                     bpl ld_data
                              if ROM_vectors = 1
                                ldx #5
                        ld_vect lda vec_init,x
                                sta vec_bss,x
                                dex
                                bpl ld_vect
                              endif
                            endif
                        
                        ;retain status of interrupt flag
                            if I_flag = 2
                                php
                                pla
                                and #4          ;isolate flag
                                sta flag_I_on   ;or mask
                                eor #lo(~4)     ;reverse
                                sta flag_I_off  ;and mask
                            endif
                        
                        ;generate checksum for RAM integrity test
                            if ram_top > -1
                                lda #0
                                sta zpt         ;set low byte of indirect pointer
                                sta ram_chksm+1 ;checksum high byte
                              if disable_selfmod = 0
                                sta range_adr   ;reset self modifying code
                              endif
                                clc
                                ldx #zp_bss-zero_page ;zeropage - write test area
                        gcs3    adc zero_page,x
                                bcc gcs2
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs2    inx
                                bne gcs3
                                ldx #hi(abs1)   ;set high byte of indirect pointer
                                stx zpt+1
                                ldy #lo(abs1)   ;data after write & execute test area
                        gcs5    adc (zpt),y
                                bcc gcs4
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs4    iny
                                bne gcs5
                                inx             ;advance RAM high address
                                stx zpt+1
                                cpx #ram_top
                                bne gcs5
                                sta ram_chksm   ;checksum complete
                            endif
                                next_test
3450 : ad0032          >            lda test_case   ;previous test
3453 : c900            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3455 : f003            >        beq skip0006
                       >        trap            ;failed not equal (non zero)
3457 : 208574          >        jsr report_error
                       >
345a :                 >skip0006
                       >
0001 =                 >test_num = test_num + 1
345a : a901            >            lda #test_num   ;*** next tests' number
345c : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                            if disable_selfmod = 0
                        ;testing relative addressing with BEQ
345f : a0fe                     ldy #$fe        ;testing maximum range, not -1/-2 (invalid/self adr)
3461 :                  range_loop
3461 : 88                       dey             ;next relative address
3462 : 98                       tya
3463 : aa                       tax             ;precharge count to end of loop
3464 : 1008                     bpl range_fw    ;calculate relative address
3466 : 18                       clc             ;avoid branch self or to relative address of branch
3467 : 6902                     adc #2
3469 : ea                       nop             ;offset landing zone - tolerate +/-5 offset to branch
346a : ea                       nop
346b : ea                       nop
346c : ea                       nop
346d : ea                       nop
346e :                  range_fw
346e : ea                       nop
346f : ea                       nop
3470 : ea                       nop
3471 : ea                       nop
3472 : ea                       nop
3473 : 497f                     eor #$7f        ;complement except sign
3475 : 8d0135                   sta range_adr   ;load into test target
3478 : a900                     lda #0          ;should set zero flag in status register
347a : 4c0035                   jmp range_op
                        
347d : ca                       dex             ; offset landing zone - backward branch too far
347e : ca                       dex
347f : ca                       dex
3480 : ca                       dex
3481 : ca                       dex
                                ;relative address target field with branch under test in the middle
3482 : ca                       dex             ;-128 - max backward
3483 : ca                       dex
3484 : ca                       dex
3485 : ca                       dex
3486 : ca                       dex
3487 : ca                       dex
3488 : ca                       dex
3489 : ca                       dex
348a : ca                       dex             ;-120
348b : ca                       dex
348c : ca                       dex
348d : ca                       dex
348e : ca                       dex
348f : ca                       dex
3490 : ca                       dex
3491 : ca                       dex
3492 : ca                       dex
3493 : ca                       dex
3494 : ca                       dex             ;-110
3495 : ca                       dex
3496 : ca                       dex
3497 : ca                       dex
3498 : ca                       dex
3499 : ca                       dex
349a : ca                       dex
349b : ca                       dex
349c : ca                       dex
349d : ca                       dex
349e : ca                       dex             ;-100
349f : ca                       dex
34a0 : ca                       dex
34a1 : ca                       dex
34a2 : ca                       dex
34a3 : ca                       dex
34a4 : ca                       dex
34a5 : ca                       dex
34a6 : ca                       dex
34a7 : ca                       dex
34a8 : ca                       dex             ;-90
34a9 : ca                       dex
34aa : ca                       dex
34ab : ca                       dex
34ac : ca                       dex
34ad : ca                       dex
34ae : ca                       dex
34af : ca                       dex
34b0 : ca                       dex
34b1 : ca                       dex
34b2 : ca                       dex             ;-80
34b3 : ca                       dex
34b4 : ca                       dex
34b5 : ca                       dex
34b6 : ca                       dex
34b7 : ca                       dex
34b8 : ca                       dex
34b9 : ca                       dex
34ba : ca                       dex
34bb : ca                       dex
34bc : ca                       dex             ;-70
34bd : ca                       dex
34be : ca                       dex
34bf : ca                       dex
34c0 : ca                       dex
34c1 : ca                       dex
34c2 : ca                       dex
34c3 : ca                       dex
34c4 : ca                       dex
34c5 : ca                       dex
34c6 : ca                       dex             ;-60
34c7 : ca                       dex
34c8 : ca                       dex
34c9 : ca                       dex
34ca : ca                       dex
34cb : ca                       dex
34cc : ca                       dex
34cd : ca                       dex
34ce : ca                       dex
34cf : ca                       dex
34d0 : ca                       dex             ;-50
34d1 : ca                       dex
34d2 : ca                       dex
34d3 : ca                       dex
34d4 : ca                       dex
34d5 : ca                       dex
34d6 : ca                       dex
34d7 : ca                       dex
34d8 : ca                       dex
34d9 : ca                       dex
34da : ca                       dex             ;-40
34db : ca                       dex
34dc : ca                       dex
34dd : ca                       dex
34de : ca                       dex
34df : ca                       dex
34e0 : ca                       dex
34e1 : ca                       dex
34e2 : ca                       dex
34e3 : ca                       dex
34e4 : ca                       dex             ;-30
34e5 : ca                       dex
34e6 : ca                       dex
34e7 : ca                       dex
34e8 : ca                       dex
34e9 : ca                       dex
34ea : ca                       dex
34eb : ca                       dex
34ec : ca                       dex
34ed : ca                       dex
34ee : ca                       dex             ;-20
34ef : ca                       dex
34f0 : ca                       dex
34f1 : ca                       dex
34f2 : ca                       dex
34f3 : ca                       dex
34f4 : ca                       dex
34f5 : ca                       dex
34f6 : ca                       dex
34f7 : ca                       dex
34f8 : ca                       dex             ;-10
34f9 : ca                       dex
34fa : ca                       dex
34fb : ca                       dex
34fc : ca                       dex
34fd : ca                       dex
34fe : ca                       dex
34ff : ca                       dex             ;-3
3500 :                  range_op                ;test target with zero flag=0, z=1 if previous dex
3501 =                  range_adr   = *+1       ;modifiable relative address
3500 : f03e                     beq *+64        ;+64 if called without modification
3502 : ca                       dex             ;+0
3503 : ca                       dex
3504 : ca                       dex
3505 : ca                       dex
3506 : ca                       dex
3507 : ca                       dex
3508 : ca                       dex
3509 : ca                       dex
350a : ca                       dex
350b : ca                       dex
350c : ca                       dex             ;+10
350d : ca                       dex
350e : ca                       dex
350f : ca                       dex
3510 : ca                       dex
3511 : ca                       dex
3512 : ca                       dex
3513 : ca                       dex
3514 : ca                       dex
3515 : ca                       dex
3516 : ca                       dex             ;+20
3517 : ca                       dex
3518 : ca                       dex
3519 : ca                       dex
351a : ca                       dex
351b : ca                       dex
351c : ca                       dex
351d : ca                       dex
351e : ca                       dex
351f : ca                       dex
3520 : ca                       dex             ;+30
3521 : ca                       dex
3522 : ca                       dex
3523 : ca                       dex
3524 : ca                       dex
3525 : ca                       dex
3526 : ca                       dex
3527 : ca                       dex
3528 : ca                       dex
3529 : ca                       dex
352a : ca                       dex             ;+40
352b : ca                       dex
352c : ca                       dex
352d : ca                       dex
352e : ca                       dex
352f : ca                       dex
3530 : ca                       dex
3531 : ca                       dex
3532 : ca                       dex
3533 : ca                       dex
3534 : ca                       dex             ;+50
3535 : ca                       dex
3536 : ca                       dex
3537 : ca                       dex
3538 : ca                       dex
3539 : ca                       dex
353a : ca                       dex
353b : ca                       dex
353c : ca                       dex
353d : ca                       dex
353e : ca                       dex             ;+60
353f : ca                       dex
3540 : ca                       dex
3541 : ca                       dex
3542 : ca                       dex
3543 : ca                       dex
3544 : ca                       dex
3545 : ca                       dex
3546 : ca                       dex
3547 : ca                       dex
3548 : ca                       dex             ;+70
3549 : ca                       dex
354a : ca                       dex
354b : ca                       dex
354c : ca                       dex
354d : ca                       dex
354e : ca                       dex
354f : ca                       dex
3550 : ca                       dex
3551 : ca                       dex
3552 : ca                       dex             ;+80
3553 : ca                       dex
3554 : ca                       dex
3555 : ca                       dex
3556 : ca                       dex
3557 : ca                       dex
3558 : ca                       dex
3559 : ca                       dex
355a : ca                       dex
355b : ca                       dex
355c : ca                       dex             ;+90
355d : ca                       dex
355e : ca                       dex
355f : ca                       dex
3560 : ca                       dex
3561 : ca                       dex
3562 : ca                       dex
3563 : ca                       dex
3564 : ca                       dex
3565 : ca                       dex
3566 : ca                       dex             ;+100
3567 : ca                       dex
3568 : ca                       dex
3569 : ca                       dex
356a : ca                       dex
356b : ca                       dex
356c : ca                       dex
356d : ca                       dex
356e : ca                       dex
356f : ca                       dex
3570 : ca                       dex             ;+110
3571 : ca                       dex
3572 : ca                       dex
3573 : ca                       dex
3574 : ca                       dex
3575 : ca                       dex
3576 : ca                       dex
3577 : ca                       dex
3578 : ca                       dex
3579 : ca                       dex
357a : ca                       dex             ;+120
357b : ca                       dex
357c : ca                       dex
357d : ca                       dex
357e : ca                       dex
357f : ca                       dex
3580 : ca                       dex
3581 : ea                       nop             ;offset landing zone - forward branch too far
3582 : ea                       nop
3583 : ea                       nop
3584 : ea                       nop
3585 : ea                       nop
3586 : f008                     beq range_ok    ;+127 - max forward
                                trap            ; bad range
3588 : 208574          >        jsr report_error
                        
358b : ea                       nop             ;offset landing zone - tolerate +/-5 offset to branch
358c : ea                       nop
358d : ea                       nop
358e : ea                       nop
358f : ea                       nop
3590 :                  range_ok
3590 : ea                       nop
3591 : ea                       nop
3592 : ea                       nop
3593 : ea                       nop
3594 : ea                       nop
3595 : c000                     cpy #0
3597 : f003                     beq range_end
3599 : 4c6134                   jmp range_loop
359c :                  range_end               ;range test successful
                            endif
                                next_test
359c : ad0032          >            lda test_case   ;previous test
359f : c901            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
35a1 : f003            >        beq skip0010
                       >        trap            ;failed not equal (non zero)
35a3 : 208574          >        jsr report_error
                       >
35a6 :                 >skip0010
                       >
0002 =                 >test_num = test_num + 1
35a6 : a902            >            lda #test_num   ;*** next tests' number
35a8 : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ;partial test BNE & CMP, CPX, CPY immediate
35ab : c001                     cpy #1          ;testing BNE true
35ad : d003                     bne test_bne
                                trap
35af : 208574          >        jsr report_error
                        
35b2 :                  test_bne
35b2 : a900                     lda #0
35b4 : c900                     cmp #0          ;test compare immediate
                                trap_ne
35b6 : f003            >        beq skip0013
                       >        trap            ;failed not equal (non zero)
35b8 : 208574          >        jsr report_error
                       >
35bb :                 >skip0013
                        
                                trap_cc
35bb : b003            >        bcs skip0015
                       >        trap            ;failed carry clear
35bd : 208574          >        jsr report_error
                       >
35c0 :                 >skip0015
                        
                                trap_mi
35c0 : 1003            >        bpl skip0017
                       >        trap            ;failed minus (bit 7 set)
35c2 : 208574          >        jsr report_error
                       >
35c5 :                 >skip0017
                        
35c5 : c901                     cmp #1
                                trap_eq
35c7 : d003            >        bne skip0019
                       >        trap           ;failed equal (zero)
35c9 : 208574          >        jsr report_error
                       >
35cc :                 >skip0019
                        
                                trap_cs
35cc : 9003            >        bcc skip0021
                       >        trap            ;failed carry set
35ce : 208574          >        jsr report_error
                       >
35d1 :                 >skip0021
                        
                                trap_pl
35d1 : 3003            >        bmi skip0023
                       >        trap            ;failed plus (bit 7 clear)
35d3 : 208574          >        jsr report_error
                       >
35d6 :                 >skip0023
                        
35d6 : aa                       tax
35d7 : e000                     cpx #0          ;test compare x immediate
                                trap_ne
35d9 : f003            >        beq skip0025
                       >        trap            ;failed not equal (non zero)
35db : 208574          >        jsr report_error
                       >
35de :                 >skip0025
                        
                                trap_cc
35de : b003            >        bcs skip0027
                       >        trap            ;failed carry clear
35e0 : 208574          >        jsr report_error
                       >
35e3 :                 >skip0027
                        
                                trap_mi
35e3 : 1003            >        bpl skip0029
                       >        trap            ;failed minus (bit 7 set)
35e5 : 208574          >        jsr report_error
                       >
35e8 :                 >skip0029
                        
35e8 : e001                     cpx #1
                                trap_eq
35ea : d003            >        bne skip0031
                       >        trap           ;failed equal (zero)
35ec : 208574          >        jsr report_error
                       >
35ef :                 >skip0031
                        
                                trap_cs
35ef : 9003            >        bcc skip0033
                       >        trap            ;failed carry set
35f1 : 208574          >        jsr report_error
                       >
35f4 :                 >skip0033
                        
                                trap_pl
35f4 : 3003            >        bmi skip0035
                       >        trap            ;failed plus (bit 7 clear)
35f6 : 208574          >        jsr report_error
                       >
35f9 :                 >skip0035
                        
35f9 : a8                       tay
35fa : c000                     cpy #0          ;test compare y immediate
                                trap_ne
35fc : f003            >        beq skip0037
                       >        trap            ;failed not equal (non zero)
35fe : 208574          >        jsr report_error
                       >
3601 :                 >skip0037
                        
                                trap_cc
3601 : b003            >        bcs skip0039
                       >        trap            ;failed carry clear
3603 : 208574          >        jsr report_error
                       >
3606 :                 >skip0039
                        
                                trap_mi
3606 : 1003            >        bpl skip0041
                       >        trap            ;failed minus (bit 7 set)
3608 : 208574          >        jsr report_error
                       >
360b :                 >skip0041
                        
360b : c001                     cpy #1
                                trap_eq
360d : d003            >        bne skip0043
                       >        trap           ;failed equal (zero)
360f : 208574          >        jsr report_error
                       >
3612 :                 >skip0043
                        
                                trap_cs
3612 : 9003            >        bcc skip0045
                       >        trap            ;failed carry set
3614 : 208574          >        jsr report_error
                       >
3617 :                 >skip0045
                        
                                trap_pl
3617 : 3003            >        bmi skip0047
                       >        trap            ;failed plus (bit 7 clear)
3619 : 208574          >        jsr report_error
                       >
361c :                 >skip0047
                        
                                next_test
361c : ad0032          >            lda test_case   ;previous test
361f : c902            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3621 : f003            >        beq skip0050
                       >        trap            ;failed not equal (non zero)
3623 : 208574          >        jsr report_error
                       >
3626 :                 >skip0050
                       >
0003 =                 >test_num = test_num + 1
3626 : a903            >            lda #test_num   ;*** next tests' number
3628 : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        ;testing stack operations PHA PHP PLA PLP
                        
362b : a2ff                     ldx #$ff        ;initialize stack
362d : 9a                       txs
362e : a955                     lda #$55
3630 : 48                       pha
3631 : a9aa                     lda #$aa
3633 : 48                       pha
3634 : cdfe01                   cmp $1fe        ;on stack ?
                                trap_ne
3637 : f003            >        beq skip0052
                       >        trap            ;failed not equal (non zero)
3639 : 208574          >        jsr report_error
                       >
363c :                 >skip0052
                        
363c : ba                       tsx
363d : 8a                       txa             ;overwrite accu
363e : c9fd                     cmp #$fd        ;sp decremented?
                                trap_ne
3640 : f003            >        beq skip0054
                       >        trap            ;failed not equal (non zero)
3642 : 208574          >        jsr report_error
                       >
3645 :                 >skip0054
                        
3645 : 68                       pla
3646 : c9aa                     cmp #$aa        ;successful retreived from stack?
                                trap_ne
3648 : f003            >        beq skip0056
                       >        trap            ;failed not equal (non zero)
364a : 208574          >        jsr report_error
                       >
364d :                 >skip0056
                        
364d : 68                       pla
364e : c955                     cmp #$55
                                trap_ne
3650 : f003            >        beq skip0058
                       >        trap            ;failed not equal (non zero)
3652 : 208574          >        jsr report_error
                       >
3655 :                 >skip0058
                        
3655 : cdff01                   cmp $1ff        ;remains on stack?
                                trap_ne
3658 : f003            >        beq skip0060
                       >        trap            ;failed not equal (non zero)
365a : 208574          >        jsr report_error
                       >
365d :                 >skip0060
                        
365d : ba                       tsx
365e : e0ff                     cpx #$ff        ;sp incremented?
                                trap_ne
3660 : f003            >        beq skip0062
                       >        trap            ;failed not equal (non zero)
3662 : 208574          >        jsr report_error
                       >
3665 :                 >skip0062
                        
                                next_test
3665 : ad0032          >            lda test_case   ;previous test
3668 : c903            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
366a : f003            >        beq skip0065
                       >        trap            ;failed not equal (non zero)
366c : 208574          >        jsr report_error
                       >
366f :                 >skip0065
                       >
0004 =                 >test_num = test_num + 1
366f : a904            >            lda #test_num   ;*** next tests' number
3671 : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ;testing branch decisions BPL BMI BVC BVS BCC BCS BNE BEQ
                                set_stat $ff    ;all on
                       >            load_flag $ff    
3674 : a9ff            >            lda #$ff                 ;allow test to change I-flag (no mask)
                       >
3676 : 48              >            pha         ;use stack to load status
3677 : 28              >            plp
                        
3678 : 101a                     bpl nbr1        ;branches should not be taken
367a : 501b                     bvc nbr2
367c : 901c                     bcc nbr3
367e : d01d                     bne nbr4
3680 : 3003                     bmi br1         ;branches should be taken
                                trap
3682 : 208574          >        jsr report_error
                        
3685 : 7003             br1     bvs br2
                                trap
3687 : 208574          >        jsr report_error
                        
368a : b003             br2     bcs br3
                                trap
368c : 208574          >        jsr report_error
                        
368f : f00f             br3     beq br4
                                trap
3691 : 208574          >        jsr report_error
                        
3694 :                  nbr1
                                trap            ;previous bpl taken
3694 : 208574          >        jsr report_error
                        
3697 :                  nbr2
                                trap            ;previous bvc taken
3697 : 208574          >        jsr report_error
                        
369a :                  nbr3
                                trap            ;previous bcc taken
369a : 208574          >        jsr report_error
                        
369d :                  nbr4
                                trap            ;previous bne taken
369d : 208574          >        jsr report_error
                        
36a0 : 08               br4     php
36a1 : ba                       tsx
36a2 : e0fe                     cpx #$fe        ;sp after php?
                                trap_ne
36a4 : f003            >        beq skip0077
                       >        trap            ;failed not equal (non zero)
36a6 : 208574          >        jsr report_error
                       >
36a9 :                 >skip0077
                        
36a9 : 68                       pla
                                cmp_flag $ff    ;returned all flags on?
36aa : c9ff            >            cmp #($ff    |fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
36ac : f003            >        beq skip0080
                       >        trap            ;failed not equal (non zero)
36ae : 208574          >        jsr report_error
                       >
36b1 :                 >skip0080
                        
36b1 : ba                       tsx
36b2 : e0ff                     cpx #$ff        ;sp after php?
                                trap_ne
36b4 : f003            >        beq skip0082
                       >        trap            ;failed not equal (non zero)
36b6 : 208574          >        jsr report_error
                       >
36b9 :                 >skip0082
                        
                                set_stat 0      ;all off
                       >            load_flag 0      
36b9 : a900            >            lda #0                   ;allow test to change I-flag (no mask)
                       >
36bb : 48              >            pha         ;use stack to load status
36bc : 28              >            plp
                        
36bd : 301a                     bmi nbr11       ;branches should not be taken
36bf : 701b                     bvs nbr12
36c1 : b01c                     bcs nbr13
36c3 : f01d                     beq nbr14
36c5 : 1003                     bpl br11        ;branches should be taken
                                trap
36c7 : 208574          >        jsr report_error
                        
36ca : 5003             br11    bvc br12
                                trap
36cc : 208574          >        jsr report_error
                        
36cf : 9003             br12    bcc br13
                                trap
36d1 : 208574          >        jsr report_error
                        
36d4 : d00f             br13    bne br14
                                trap
36d6 : 208574          >        jsr report_error
                        
36d9 :                  nbr11
                                trap            ;previous bmi taken
36d9 : 208574          >        jsr report_error
                        
36dc :                  nbr12
                                trap            ;previous bvs taken
36dc : 208574          >        jsr report_error
                        
36df :                  nbr13
                                trap            ;previous bcs taken
36df : 208574          >        jsr report_error
                        
36e2 :                  nbr14
                                trap            ;previous beq taken
36e2 : 208574          >        jsr report_error
                        
36e5 : 08               br14    php
36e6 : 68                       pla
                                cmp_flag 0      ;flags off except break (pushed by sw) + reserved?
36e7 : c930            >            cmp #(0      |fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
36e9 : f003            >        beq skip0095
                       >        trap            ;failed not equal (non zero)
36eb : 208574          >        jsr report_error
                       >
36ee :                 >skip0095
                        
                                ;crosscheck flags
                                set_stat zero
                       >            load_flag zero
36ee : a902            >            lda #zero             ;allow test to change I-flag (no mask)
                       >
36f0 : 48              >            pha         ;use stack to load status
36f1 : 28              >            plp
                        
36f2 : d002                     bne brzs1
36f4 : f003                     beq brzs2
36f6 :                  brzs1
                                trap            ;branch zero/non zero
36f6 : 208574          >        jsr report_error
                        
36f9 : b002             brzs2   bcs brzs3
36fb : 9003                     bcc brzs4
36fd :                  brzs3
                                trap            ;branch carry/no carry
36fd : 208574          >        jsr report_error
                        
3700 : 3002             brzs4   bmi brzs5
3702 : 1003                     bpl brzs6
3704 :                  brzs5
                                trap            ;branch minus/plus
3704 : 208574          >        jsr report_error
                        
3707 : 7002             brzs6   bvs brzs7
3709 : 5003                     bvc brzs8
370b :                  brzs7
                                trap            ;branch overflow/no overflow
370b : 208574          >        jsr report_error
                        
370e :                  brzs8
                                set_stat carry
                       >            load_flag carry
370e : a901            >            lda #carry             ;allow test to change I-flag (no mask)
                       >
3710 : 48              >            pha         ;use stack to load status
3711 : 28              >            plp
                        
3712 : f002                     beq brcs1
3714 : d003                     bne brcs2
3716 :                  brcs1
                                trap            ;branch zero/non zero
3716 : 208574          >        jsr report_error
                        
3719 : 9002             brcs2   bcc brcs3
371b : b003                     bcs brcs4
371d :                  brcs3
                                trap            ;branch carry/no carry
371d : 208574          >        jsr report_error
                        
3720 : 3002             brcs4   bmi brcs5
3722 : 1003                     bpl brcs6
3724 :                  brcs5
                                trap            ;branch minus/plus
3724 : 208574          >        jsr report_error
                        
3727 : 7002             brcs6   bvs brcs7
3729 : 5003                     bvc brcs8
372b :                  brcs7
                                trap            ;branch overflow/no overflow
372b : 208574          >        jsr report_error
                        
                        
372e :                  brcs8
                                set_stat minus
                       >            load_flag minus
372e : a980            >            lda #minus             ;allow test to change I-flag (no mask)
                       >
3730 : 48              >            pha         ;use stack to load status
3731 : 28              >            plp
                        
3732 : f002                     beq brmi1
3734 : d003                     bne brmi2
3736 :                  brmi1
                                trap            ;branch zero/non zero
3736 : 208574          >        jsr report_error
                        
3739 : b002             brmi2   bcs brmi3
373b : 9003                     bcc brmi4
373d :                  brmi3
                                trap            ;branch carry/no carry
373d : 208574          >        jsr report_error
                        
3740 : 1002             brmi4   bpl brmi5
3742 : 3003                     bmi brmi6
3744 :                  brmi5
                                trap            ;branch minus/plus
3744 : 208574          >        jsr report_error
                        
3747 : 7002             brmi6   bvs brmi7
3749 : 5003                     bvc brmi8
374b :                  brmi7
                                trap            ;branch overflow/no overflow
374b : 208574          >        jsr report_error
                        
374e :                  brmi8
                                set_stat overfl
                       >            load_flag overfl
374e : a940            >            lda #overfl             ;allow test to change I-flag (no mask)
                       >
3750 : 48              >            pha         ;use stack to load status
3751 : 28              >            plp
                        
3752 : f002                     beq brvs1
3754 : d003                     bne brvs2
3756 :                  brvs1
                                trap            ;branch zero/non zero
3756 : 208574          >        jsr report_error
                        
3759 : b002             brvs2   bcs brvs3
375b : 9003                     bcc brvs4
375d :                  brvs3
                                trap            ;branch carry/no carry
375d : 208574          >        jsr report_error
                        
3760 : 3002             brvs4   bmi brvs5
3762 : 1003                     bpl brvs6
3764 :                  brvs5
                                trap            ;branch minus/plus
3764 : 208574          >        jsr report_error
                        
3767 : 5002             brvs6   bvc brvs7
3769 : 7003                     bvs brvs8
376b :                  brvs7
                                trap            ;branch overflow/no overflow
376b : 208574          >        jsr report_error
                        
376e :                  brvs8
                                set_stat $ff-zero
                       >            load_flag $ff-zero
376e : a9fd            >            lda #$ff-zero             ;allow test to change I-flag (no mask)
                       >
3770 : 48              >            pha         ;use stack to load status
3771 : 28              >            plp
                        
3772 : f002                     beq brzc1
3774 : d003                     bne brzc2
3776 :                  brzc1
                                trap            ;branch zero/non zero
3776 : 208574          >        jsr report_error
                        
3779 : 9002             brzc2   bcc brzc3
377b : b003                     bcs brzc4
377d :                  brzc3
                                trap            ;branch carry/no carry
377d : 208574          >        jsr report_error
                        
3780 : 1002             brzc4   bpl brzc5
3782 : 3003                     bmi brzc6
3784 :                  brzc5
                                trap            ;branch minus/plus
3784 : 208574          >        jsr report_error
                        
3787 : 5002             brzc6   bvc brzc7
3789 : 7003                     bvs brzc8
378b :                  brzc7
                                trap            ;branch overflow/no overflow
378b : 208574          >        jsr report_error
                        
378e :                  brzc8
                                set_stat $ff-carry
                       >            load_flag $ff-carry
378e : a9fe            >            lda #$ff-carry             ;allow test to change I-flag (no mask)
                       >
3790 : 48              >            pha         ;use stack to load status
3791 : 28              >            plp
                        
3792 : d002                     bne brcc1
3794 : f003                     beq brcc2
3796 :                  brcc1
                                trap            ;branch zero/non zero
3796 : 208574          >        jsr report_error
                        
3799 : b002             brcc2   bcs brcc3
379b : 9003                     bcc brcc4
379d :                  brcc3
                                trap            ;branch carry/no carry
379d : 208574          >        jsr report_error
                        
37a0 : 1002             brcc4   bpl brcc5
37a2 : 3003                     bmi brcc6
37a4 :                  brcc5
                                trap            ;branch minus/plus
37a4 : 208574          >        jsr report_error
                        
37a7 : 5002             brcc6   bvc brcc7
37a9 : 7003                     bvs brcc8
37ab :                  brcc7
                                trap            ;branch overflow/no overflow
37ab : 208574          >        jsr report_error
                        
37ae :                  brcc8
                                set_stat $ff-minus
                       >            load_flag $ff-minus
37ae : a97f            >            lda #$ff-minus             ;allow test to change I-flag (no mask)
                       >
37b0 : 48              >            pha         ;use stack to load status
37b1 : 28              >            plp
                        
37b2 : d002                     bne brpl1
37b4 : f003                     beq brpl2
37b6 :                  brpl1
                                trap            ;branch zero/non zero
37b6 : 208574          >        jsr report_error
                        
37b9 : 9002             brpl2   bcc brpl3
37bb : b003                     bcs brpl4
37bd :                  brpl3
                                trap            ;branch carry/no carry
37bd : 208574          >        jsr report_error
                        
37c0 : 3002             brpl4   bmi brpl5
37c2 : 1003                     bpl brpl6
37c4 :                  brpl5
                                trap            ;branch minus/plus
37c4 : 208574          >        jsr report_error
                        
37c7 : 5002             brpl6   bvc brpl7
37c9 : 7003                     bvs brpl8
37cb :                  brpl7
                                trap            ;branch overflow/no overflow
37cb : 208574          >        jsr report_error
                        
37ce :                  brpl8
                                set_stat $ff-overfl
                       >            load_flag $ff-overfl
37ce : a9bf            >            lda #$ff-overfl             ;allow test to change I-flag (no mask)
                       >
37d0 : 48              >            pha         ;use stack to load status
37d1 : 28              >            plp
                        
37d2 : d002                     bne brvc1
37d4 : f003                     beq brvc2
37d6 :                  brvc1
                                trap            ;branch zero/non zero
37d6 : 208574          >        jsr report_error
                        
37d9 : 9002             brvc2   bcc brvc3
37db : b003                     bcs brvc4
37dd :                  brvc3
                                trap            ;branch carry/no carry
37dd : 208574          >        jsr report_error
                        
37e0 : 1002             brvc4   bpl brvc5
37e2 : 3003                     bmi brvc6
37e4 :                  brvc5
                                trap            ;branch minus/plus
37e4 : 208574          >        jsr report_error
                        
37e7 : 7002             brvc6   bvs brvc7
37e9 : 5003                     bvc brvc8
37eb :                  brvc7
                                trap            ;branch overflow/no overflow
37eb : 208574          >        jsr report_error
                        
37ee :                  brvc8
                                next_test
37ee : ad0032          >            lda test_case   ;previous test
37f1 : c904            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
37f3 : f003            >        beq skip0146
                       >        trap            ;failed not equal (non zero)
37f5 : 208574          >        jsr report_error
                       >
37f8 :                 >skip0146
                       >
0005 =                 >test_num = test_num + 1
37f8 : a905            >            lda #test_num   ;*** next tests' number
37fa : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; test PHA does not alter flags or accumulator but PLA does
37fd : a255                     ldx #$55        ;x & y protected
37ff : a0aa                     ldy #$aa
                                set_a 1,$ff     ;push
                       >            load_flag $ff     
3801 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
3803 : 48              >            pha         ;use stack to load status
3804 : a901            >            lda #1     ;precharge accu
3806 : 28              >            plp
                        
3807 : 48                       pha
                                tst_a 1,$ff
3808 : 08              >            php         ;save flags
3809 : c901            >            cmp #1     ;test result
                       >            trap_ne
380b : f003            >        beq skip0151
                       >        trap            ;failed not equal (non zero)
380d : 208574          >        jsr report_error
                       >
3810 :                 >skip0151
                       >
3810 : 68              >            pla         ;load status
3811 : 48              >            pha
                       >            cmp_flag $ff
3812 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3814 : f003            >        beq skip0154
                       >        trap            ;failed not equal (non zero)
3816 : 208574          >        jsr report_error
                       >
3819 :                 >skip0154
                       >
3819 : 28              >            plp         ;restore status
                        
                                set_a 0,0
                       >            load_flag 0
381a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
381c : 48              >            pha         ;use stack to load status
381d : a900            >            lda #0     ;precharge accu
381f : 28              >            plp
                        
3820 : 48                       pha
                                tst_a 0,0
3821 : 08              >            php         ;save flags
3822 : c900            >            cmp #0     ;test result
                       >            trap_ne
3824 : f003            >        beq skip0159
                       >        trap            ;failed not equal (non zero)
3826 : 208574          >        jsr report_error
                       >
3829 :                 >skip0159
                       >
3829 : 68              >            pla         ;load status
382a : 48              >            pha
                       >            cmp_flag 0
382b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
382d : f003            >        beq skip0162
                       >        trap            ;failed not equal (non zero)
382f : 208574          >        jsr report_error
                       >
3832 :                 >skip0162
                       >
3832 : 28              >            plp         ;restore status
                        
                                set_a $ff,$ff
                       >            load_flag $ff
3833 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3835 : 48              >            pha         ;use stack to load status
3836 : a9ff            >            lda #$ff     ;precharge accu
3838 : 28              >            plp
                        
3839 : 48                       pha
                                tst_a $ff,$ff
383a : 08              >            php         ;save flags
383b : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
383d : f003            >        beq skip0167
                       >        trap            ;failed not equal (non zero)
383f : 208574          >        jsr report_error
                       >
3842 :                 >skip0167
                       >
3842 : 68              >            pla         ;load status
3843 : 48              >            pha
                       >            cmp_flag $ff
3844 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3846 : f003            >        beq skip0170
                       >        trap            ;failed not equal (non zero)
3848 : 208574          >        jsr report_error
                       >
384b :                 >skip0170
                       >
384b : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
384c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
384e : 48              >            pha         ;use stack to load status
384f : a901            >            lda #1     ;precharge accu
3851 : 28              >            plp
                        
3852 : 48                       pha
                                tst_a 1,0
3853 : 08              >            php         ;save flags
3854 : c901            >            cmp #1     ;test result
                       >            trap_ne
3856 : f003            >        beq skip0175
                       >        trap            ;failed not equal (non zero)
3858 : 208574          >        jsr report_error
                       >
385b :                 >skip0175
                       >
385b : 68              >            pla         ;load status
385c : 48              >            pha
                       >            cmp_flag 0
385d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
385f : f003            >        beq skip0178
                       >        trap            ;failed not equal (non zero)
3861 : 208574          >        jsr report_error
                       >
3864 :                 >skip0178
                       >
3864 : 28              >            plp         ;restore status
                        
                                set_a 0,$ff
                       >            load_flag $ff
3865 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3867 : 48              >            pha         ;use stack to load status
3868 : a900            >            lda #0     ;precharge accu
386a : 28              >            plp
                        
386b : 48                       pha
                                tst_a 0,$ff
386c : 08              >            php         ;save flags
386d : c900            >            cmp #0     ;test result
                       >            trap_ne
386f : f003            >        beq skip0183
                       >        trap            ;failed not equal (non zero)
3871 : 208574          >        jsr report_error
                       >
3874 :                 >skip0183
                       >
3874 : 68              >            pla         ;load status
3875 : 48              >            pha
                       >            cmp_flag $ff
3876 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3878 : f003            >        beq skip0186
                       >        trap            ;failed not equal (non zero)
387a : 208574          >        jsr report_error
                       >
387d :                 >skip0186
                       >
387d : 28              >            plp         ;restore status
                        
                                set_a $ff,0
                       >            load_flag 0
387e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3880 : 48              >            pha         ;use stack to load status
3881 : a9ff            >            lda #$ff     ;precharge accu
3883 : 28              >            plp
                        
3884 : 48                       pha
                                tst_a $ff,0
3885 : 08              >            php         ;save flags
3886 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
3888 : f003            >        beq skip0191
                       >        trap            ;failed not equal (non zero)
388a : 208574          >        jsr report_error
                       >
388d :                 >skip0191
                       >
388d : 68              >            pla         ;load status
388e : 48              >            pha
                       >            cmp_flag 0
388f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3891 : f003            >        beq skip0194
                       >        trap            ;failed not equal (non zero)
3893 : 208574          >        jsr report_error
                       >
3896 :                 >skip0194
                       >
3896 : 28              >            plp         ;restore status
                        
                                set_a 0,$ff     ;pull
                       >            load_flag $ff     
3897 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
3899 : 48              >            pha         ;use stack to load status
389a : a900            >            lda #0     ;precharge accu
389c : 28              >            plp
                        
389d : 68                       pla
                                tst_a $ff,$ff-zero
389e : 08              >            php         ;save flags
389f : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
38a1 : f003            >        beq skip0199
                       >        trap            ;failed not equal (non zero)
38a3 : 208574          >        jsr report_error
                       >
38a6 :                 >skip0199
                       >
38a6 : 68              >            pla         ;load status
38a7 : 48              >            pha
                       >            cmp_flag $ff-zero
38a8 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
38aa : f003            >        beq skip0202
                       >        trap            ;failed not equal (non zero)
38ac : 208574          >        jsr report_error
                       >
38af :                 >skip0202
                       >
38af : 28              >            plp         ;restore status
                        
                                set_a $ff,0
                       >            load_flag 0
38b0 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
38b2 : 48              >            pha         ;use stack to load status
38b3 : a9ff            >            lda #$ff     ;precharge accu
38b5 : 28              >            plp
                        
38b6 : 68                       pla
                                tst_a 0,zero
38b7 : 08              >            php         ;save flags
38b8 : c900            >            cmp #0     ;test result
                       >            trap_ne
38ba : f003            >        beq skip0207
                       >        trap            ;failed not equal (non zero)
38bc : 208574          >        jsr report_error
                       >
38bf :                 >skip0207
                       >
38bf : 68              >            pla         ;load status
38c0 : 48              >            pha
                       >            cmp_flag zero
38c1 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
38c3 : f003            >        beq skip0210
                       >        trap            ;failed not equal (non zero)
38c5 : 208574          >        jsr report_error
                       >
38c8 :                 >skip0210
                       >
38c8 : 28              >            plp         ;restore status
                        
                                set_a $fe,$ff
                       >            load_flag $ff
38c9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
38cb : 48              >            pha         ;use stack to load status
38cc : a9fe            >            lda #$fe     ;precharge accu
38ce : 28              >            plp
                        
38cf : 68                       pla
                                tst_a 1,$ff-zero-minus
38d0 : 08              >            php         ;save flags
38d1 : c901            >            cmp #1     ;test result
                       >            trap_ne
38d3 : f003            >        beq skip0215
                       >        trap            ;failed not equal (non zero)
38d5 : 208574          >        jsr report_error
                       >
38d8 :                 >skip0215
                       >
38d8 : 68              >            pla         ;load status
38d9 : 48              >            pha
                       >            cmp_flag $ff-zero-minus
38da : c97d            >            cmp #($ff-zero-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
38dc : f003            >        beq skip0218
                       >        trap            ;failed not equal (non zero)
38de : 208574          >        jsr report_error
                       >
38e1 :                 >skip0218
                       >
38e1 : 28              >            plp         ;restore status
                        
                                set_a 0,0
                       >            load_flag 0
38e2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
38e4 : 48              >            pha         ;use stack to load status
38e5 : a900            >            lda #0     ;precharge accu
38e7 : 28              >            plp
                        
38e8 : 68                       pla
                                tst_a $ff,minus
38e9 : 08              >            php         ;save flags
38ea : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
38ec : f003            >        beq skip0223
                       >        trap            ;failed not equal (non zero)
38ee : 208574          >        jsr report_error
                       >
38f1 :                 >skip0223
                       >
38f1 : 68              >            pla         ;load status
38f2 : 48              >            pha
                       >            cmp_flag minus
38f3 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
38f5 : f003            >        beq skip0226
                       >        trap            ;failed not equal (non zero)
38f7 : 208574          >        jsr report_error
                       >
38fa :                 >skip0226
                       >
38fa : 28              >            plp         ;restore status
                        
                                set_a $ff,$ff
                       >            load_flag $ff
38fb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
38fd : 48              >            pha         ;use stack to load status
38fe : a9ff            >            lda #$ff     ;precharge accu
3900 : 28              >            plp
                        
3901 : 68                       pla
                                tst_a 0,$ff-minus
3902 : 08              >            php         ;save flags
3903 : c900            >            cmp #0     ;test result
                       >            trap_ne
3905 : f003            >        beq skip0231
                       >        trap            ;failed not equal (non zero)
3907 : 208574          >        jsr report_error
                       >
390a :                 >skip0231
                       >
390a : 68              >            pla         ;load status
390b : 48              >            pha
                       >            cmp_flag $ff-minus
390c : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
390e : f003            >        beq skip0234
                       >        trap            ;failed not equal (non zero)
3910 : 208574          >        jsr report_error
                       >
3913 :                 >skip0234
                       >
3913 : 28              >            plp         ;restore status
                        
                                set_a $fe,0
                       >            load_flag 0
3914 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3916 : 48              >            pha         ;use stack to load status
3917 : a9fe            >            lda #$fe     ;precharge accu
3919 : 28              >            plp
                        
391a : 68                       pla
                                tst_a 1,0
391b : 08              >            php         ;save flags
391c : c901            >            cmp #1     ;test result
                       >            trap_ne
391e : f003            >        beq skip0239
                       >        trap            ;failed not equal (non zero)
3920 : 208574          >        jsr report_error
                       >
3923 :                 >skip0239
                       >
3923 : 68              >            pla         ;load status
3924 : 48              >            pha
                       >            cmp_flag 0
3925 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3927 : f003            >        beq skip0242
                       >        trap            ;failed not equal (non zero)
3929 : 208574          >        jsr report_error
                       >
392c :                 >skip0242
                       >
392c : 28              >            plp         ;restore status
                        
392d : e055                     cpx #$55        ;x & y unchanged?
                                trap_ne
392f : f003            >        beq skip0244
                       >        trap            ;failed not equal (non zero)
3931 : 208574          >        jsr report_error
                       >
3934 :                 >skip0244
                        
3934 : c0aa                     cpy #$aa
                                trap_ne
3936 : f003            >        beq skip0246
                       >        trap            ;failed not equal (non zero)
3938 : 208574          >        jsr report_error
                       >
393b :                 >skip0246
                        
                                next_test
393b : ad0032          >            lda test_case   ;previous test
393e : c905            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3940 : f003            >        beq skip0249
                       >        trap            ;failed not equal (non zero)
3942 : 208574          >        jsr report_error
                       >
3945 :                 >skip0249
                       >
0006 =                 >test_num = test_num + 1
3945 : a906            >            lda #test_num   ;*** next tests' number
3947 : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; partial pretest EOR #
                                set_a $3c,0
                       >            load_flag 0
394a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
394c : 48              >            pha         ;use stack to load status
394d : a93c            >            lda #$3c     ;precharge accu
394f : 28              >            plp
                        
3950 : 49c3                     eor #$c3
                                tst_a $ff,fn
3952 : 08              >            php         ;save flags
3953 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
3955 : f003            >        beq skip0254
                       >        trap            ;failed not equal (non zero)
3957 : 208574          >        jsr report_error
                       >
395a :                 >skip0254
                       >
395a : 68              >            pla         ;load status
395b : 48              >            pha
                       >            cmp_flag fn
395c : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
395e : f003            >        beq skip0257
                       >        trap            ;failed not equal (non zero)
3960 : 208574          >        jsr report_error
                       >
3963 :                 >skip0257
                       >
3963 : 28              >            plp         ;restore status
                        
                                set_a $c3,0
                       >            load_flag 0
3964 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3966 : 48              >            pha         ;use stack to load status
3967 : a9c3            >            lda #$c3     ;precharge accu
3969 : 28              >            plp
                        
396a : 49c3                     eor #$c3
                                tst_a 0,fz
396c : 08              >            php         ;save flags
396d : c900            >            cmp #0     ;test result
                       >            trap_ne
396f : f003            >        beq skip0262
                       >        trap            ;failed not equal (non zero)
3971 : 208574          >        jsr report_error
                       >
3974 :                 >skip0262
                       >
3974 : 68              >            pla         ;load status
3975 : 48              >            pha
                       >            cmp_flag fz
3976 : c932            >            cmp #(fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3978 : f003            >        beq skip0265
                       >        trap            ;failed not equal (non zero)
397a : 208574          >        jsr report_error
                       >
397d :                 >skip0265
                       >
397d : 28              >            plp         ;restore status
                        
                                next_test
397e : ad0032          >            lda test_case   ;previous test
3981 : c906            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3983 : f003            >        beq skip0268
                       >        trap            ;failed not equal (non zero)
3985 : 208574          >        jsr report_error
                       >
3988 :                 >skip0268
                       >
0007 =                 >test_num = test_num + 1
3988 : a907            >            lda #test_num   ;*** next tests' number
398a : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; PC modifying instructions except branches (NOP, JMP, JSR, RTS, BRK, RTI)
                        ; testing NOP
398d : a224                     ldx #$24
398f : a042                     ldy #$42
                                set_a $18,0
                       >            load_flag 0
3991 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3993 : 48              >            pha         ;use stack to load status
3994 : a918            >            lda #$18     ;precharge accu
3996 : 28              >            plp
                        
3997 : ea                       nop
                                tst_a $18,0
3998 : 08              >            php         ;save flags
3999 : c918            >            cmp #$18     ;test result
                       >            trap_ne
399b : f003            >        beq skip0273
                       >        trap            ;failed not equal (non zero)
399d : 208574          >        jsr report_error
                       >
39a0 :                 >skip0273
                       >
39a0 : 68              >            pla         ;load status
39a1 : 48              >            pha
                       >            cmp_flag 0
39a2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
39a4 : f003            >        beq skip0276
                       >        trap            ;failed not equal (non zero)
39a6 : 208574          >        jsr report_error
                       >
39a9 :                 >skip0276
                       >
39a9 : 28              >            plp         ;restore status
                        
39aa : e024                     cpx #$24
                                trap_ne
39ac : f003            >        beq skip0278
                       >        trap            ;failed not equal (non zero)
39ae : 208574          >        jsr report_error
                       >
39b1 :                 >skip0278
                        
39b1 : c042                     cpy #$42
                                trap_ne
39b3 : f003            >        beq skip0280
                       >        trap            ;failed not equal (non zero)
39b5 : 208574          >        jsr report_error
                       >
39b8 :                 >skip0280
                        
39b8 : a2db                     ldx #$db
39ba : a0bd                     ldy #$bd
                                set_a $e7,$ff
                       >            load_flag $ff
39bc : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
39be : 48              >            pha         ;use stack to load status
39bf : a9e7            >            lda #$e7     ;precharge accu
39c1 : 28              >            plp
                        
39c2 : ea                       nop
                                tst_a $e7,$ff
39c3 : 08              >            php         ;save flags
39c4 : c9e7            >            cmp #$e7     ;test result
                       >            trap_ne
39c6 : f003            >        beq skip0285
                       >        trap            ;failed not equal (non zero)
39c8 : 208574          >        jsr report_error
                       >
39cb :                 >skip0285
                       >
39cb : 68              >            pla         ;load status
39cc : 48              >            pha
                       >            cmp_flag $ff
39cd : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
39cf : f003            >        beq skip0288
                       >        trap            ;failed not equal (non zero)
39d1 : 208574          >        jsr report_error
                       >
39d4 :                 >skip0288
                       >
39d4 : 28              >            plp         ;restore status
                        
39d5 : e0db                     cpx #$db
                                trap_ne
39d7 : f003            >        beq skip0290
                       >        trap            ;failed not equal (non zero)
39d9 : 208574          >        jsr report_error
                       >
39dc :                 >skip0290
                        
39dc : c0bd                     cpy #$bd
                                trap_ne
39de : f003            >        beq skip0292
                       >        trap            ;failed not equal (non zero)
39e0 : 208574          >        jsr report_error
                       >
39e3 :                 >skip0292
                        
                                next_test
39e3 : ad0032          >            lda test_case   ;previous test
39e6 : c907            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
39e8 : f003            >        beq skip0295
                       >        trap            ;failed not equal (non zero)
39ea : 208574          >        jsr report_error
                       >
39ed :                 >skip0295
                       >
0008 =                 >test_num = test_num + 1
39ed : a908            >            lda #test_num   ;*** next tests' number
39ef : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; jump absolute
                                set_stat $0
                       >            load_flag $0
39f2 : a900            >            lda #$0             ;allow test to change I-flag (no mask)
                       >
39f4 : 48              >            pha         ;use stack to load status
39f5 : 28              >            plp
                        
39f6 : a946                     lda #'F'
39f8 : a241                     ldx #'A'
39fa : a052                     ldy #'R'        ;N=0, V=0, Z=0, C=0
39fc : 4cb572                   jmp test_far
39ff : ea                       nop
3a00 : ea                       nop
                                trap_ne         ;runover protection
3a01 : f003            >        beq skip0299
                       >        trap            ;failed not equal (non zero)
3a03 : 208574          >        jsr report_error
                       >
3a06 :                 >skip0299
                        
3a06 : e8                       inx
3a07 : e8                       inx
3a08 :                  far_ret
                                trap_eq         ;returned flags OK?
3a08 : d003            >        bne skip0301
                       >        trap           ;failed equal (zero)
3a0a : 208574          >        jsr report_error
                       >
3a0d :                 >skip0301
                        
                                trap_pl
3a0d : 3003            >        bmi skip0303
                       >        trap            ;failed plus (bit 7 clear)
3a0f : 208574          >        jsr report_error
                       >
3a12 :                 >skip0303
                        
                                trap_cc
3a12 : b003            >        bcs skip0305
                       >        trap            ;failed carry clear
3a14 : 208574          >        jsr report_error
                       >
3a17 :                 >skip0305
                        
                                trap_vc
3a17 : 7003            >        bvs skip0307
                       >        trap            ;failed overflow clear
3a19 : 208574          >        jsr report_error
                       >
3a1c :                 >skip0307
                        
3a1c : c9ec                     cmp #('F'^$aa)  ;returned registers OK?
                                trap_ne
3a1e : f003            >        beq skip0309
                       >        trap            ;failed not equal (non zero)
3a20 : 208574          >        jsr report_error
                       >
3a23 :                 >skip0309
                        
3a23 : e042                     cpx #('A'+1)
                                trap_ne
3a25 : f003            >        beq skip0311
                       >        trap            ;failed not equal (non zero)
3a27 : 208574          >        jsr report_error
                       >
3a2a :                 >skip0311
                        
3a2a : c04f                     cpy #('R'-3)
                                trap_ne
3a2c : f003            >        beq skip0313
                       >        trap            ;failed not equal (non zero)
3a2e : 208574          >        jsr report_error
                       >
3a31 :                 >skip0313
                        
3a31 : ca                       dex
3a32 : c8                       iny
3a33 : c8                       iny
3a34 : c8                       iny
3a35 : 49aa                     eor #$aa        ;N=0, V=1, Z=0, C=1
3a37 : 4c433a                   jmp test_near
3a3a : ea                       nop
3a3b : ea                       nop
                                trap_ne         ;runover protection
3a3c : f003            >        beq skip0315
                       >        trap            ;failed not equal (non zero)
3a3e : 208574          >        jsr report_error
                       >
3a41 :                 >skip0315
                        
3a41 : e8                       inx
3a42 : e8                       inx
3a43 :                  test_near
                                trap_eq         ;passed flags OK?
3a43 : d003            >        bne skip0317
                       >        trap           ;failed equal (zero)
3a45 : 208574          >        jsr report_error
                       >
3a48 :                 >skip0317
                        
                                trap_mi
3a48 : 1003            >        bpl skip0319
                       >        trap            ;failed minus (bit 7 set)
3a4a : 208574          >        jsr report_error
                       >
3a4d :                 >skip0319
                        
                                trap_cc
3a4d : b003            >        bcs skip0321
                       >        trap            ;failed carry clear
3a4f : 208574          >        jsr report_error
                       >
3a52 :                 >skip0321
                        
                                trap_vc
3a52 : 7003            >        bvs skip0323
                       >        trap            ;failed overflow clear
3a54 : 208574          >        jsr report_error
                       >
3a57 :                 >skip0323
                        
3a57 : c946                     cmp #'F'        ;passed registers OK?
                                trap_ne
3a59 : f003            >        beq skip0325
                       >        trap            ;failed not equal (non zero)
3a5b : 208574          >        jsr report_error
                       >
3a5e :                 >skip0325
                        
3a5e : e041                     cpx #'A'
                                trap_ne
3a60 : f003            >        beq skip0327
                       >        trap            ;failed not equal (non zero)
3a62 : 208574          >        jsr report_error
                       >
3a65 :                 >skip0327
                        
3a65 : c052                     cpy #'R'
                                trap_ne
3a67 : f003            >        beq skip0329
                       >        trap            ;failed not equal (non zero)
3a69 : 208574          >        jsr report_error
                       >
3a6c :                 >skip0329
                        
                                next_test
3a6c : ad0032          >            lda test_case   ;previous test
3a6f : c908            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3a71 : f003            >        beq skip0332
                       >        trap            ;failed not equal (non zero)
3a73 : 208574          >        jsr report_error
                       >
3a76 :                 >skip0332
                       >
0009 =                 >test_num = test_num + 1
3a76 : a909            >            lda #test_num   ;*** next tests' number
3a78 : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; jump indirect
                                set_stat 0
                       >            load_flag 0
3a7b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3a7d : 48              >            pha         ;use stack to load status
3a7e : 28              >            plp
                        
3a7f : a949                     lda #'I'
3a81 : a24e                     ldx #'N'
3a83 : a044                     ldy #'D'        ;N=0, V=0, Z=0, C=0
3a85 : 6cfc72                   jmp (ptr_tst_ind)
3a88 : ea                       nop
                                trap_ne         ;runover protection
3a89 : f003            >        beq skip0336
                       >        trap            ;failed not equal (non zero)
3a8b : 208574          >        jsr report_error
                       >
3a8e :                 >skip0336
                        
3a8e : 88                       dey
3a8f : 88                       dey
3a90 :                  ind_ret
3a90 : 08                       php             ;either SP or Y count will fail, if we do not hit
3a91 : 88                       dey
3a92 : 88                       dey
3a93 : 88                       dey
3a94 : 28                       plp
                                trap_eq         ;returned flags OK?
3a95 : d003            >        bne skip0338
                       >        trap           ;failed equal (zero)
3a97 : 208574          >        jsr report_error
                       >
3a9a :                 >skip0338
                        
                                trap_pl
3a9a : 3003            >        bmi skip0340
                       >        trap            ;failed plus (bit 7 clear)
3a9c : 208574          >        jsr report_error
                       >
3a9f :                 >skip0340
                        
                                trap_cc
3a9f : b003            >        bcs skip0342
                       >        trap            ;failed carry clear
3aa1 : 208574          >        jsr report_error
                       >
3aa4 :                 >skip0342
                        
                                trap_vc
3aa4 : 7003            >        bvs skip0344
                       >        trap            ;failed overflow clear
3aa6 : 208574          >        jsr report_error
                       >
3aa9 :                 >skip0344
                        
3aa9 : c9e3                     cmp #('I'^$aa)  ;returned registers OK?
                                trap_ne
3aab : f003            >        beq skip0346
                       >        trap            ;failed not equal (non zero)
3aad : 208574          >        jsr report_error
                       >
3ab0 :                 >skip0346
                        
3ab0 : e04f                     cpx #('N'+1)
                                trap_ne
3ab2 : f003            >        beq skip0348
                       >        trap            ;failed not equal (non zero)
3ab4 : 208574          >        jsr report_error
                       >
3ab7 :                 >skip0348
                        
3ab7 : c03e                     cpy #('D'-6)
                                trap_ne
3ab9 : f003            >        beq skip0350
                       >        trap            ;failed not equal (non zero)
3abb : 208574          >        jsr report_error
                       >
3abe :                 >skip0350
                        
3abe : ba                       tsx             ;SP check
3abf : e0ff                     cpx #$ff
                                trap_ne
3ac1 : f003            >        beq skip0352
                       >        trap            ;failed not equal (non zero)
3ac3 : 208574          >        jsr report_error
                       >
3ac6 :                 >skip0352
                        
                                next_test
3ac6 : ad0032          >            lda test_case   ;previous test
3ac9 : c909            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3acb : f003            >        beq skip0355
                       >        trap            ;failed not equal (non zero)
3acd : 208574          >        jsr report_error
                       >
3ad0 :                 >skip0355
                       >
000a =                 >test_num = test_num + 1
3ad0 : a90a            >            lda #test_num   ;*** next tests' number
3ad2 : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; jump subroutine & return from subroutine
                                set_stat 0
                       >            load_flag 0
3ad5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3ad7 : 48              >            pha         ;use stack to load status
3ad8 : 28              >            plp
                        
3ad9 : a94a                     lda #'J'
3adb : a253                     ldx #'S'
3add : a052                     ldy #'R'        ;N=0, V=0, Z=0, C=0
3adf : 205373                   jsr test_jsr
3ae1 =                  jsr_ret = *-1           ;last address of jsr = return address
3ae2 : 08                       php             ;either SP or Y count will fail, if we do not hit
3ae3 : 88                       dey
3ae4 : 88                       dey
3ae5 : 88                       dey
3ae6 : 28                       plp
                                trap_eq         ;returned flags OK?
3ae7 : d003            >        bne skip0359
                       >        trap           ;failed equal (zero)
3ae9 : 208574          >        jsr report_error
                       >
3aec :                 >skip0359
                        
                                trap_pl
3aec : 3003            >        bmi skip0361
                       >        trap            ;failed plus (bit 7 clear)
3aee : 208574          >        jsr report_error
                       >
3af1 :                 >skip0361
                        
                                trap_cc
3af1 : b003            >        bcs skip0363
                       >        trap            ;failed carry clear
3af3 : 208574          >        jsr report_error
                       >
3af6 :                 >skip0363
                        
                                trap_vc
3af6 : 7003            >        bvs skip0365
                       >        trap            ;failed overflow clear
3af8 : 208574          >        jsr report_error
                       >
3afb :                 >skip0365
                        
3afb : c9e0                     cmp #('J'^$aa)  ;returned registers OK?
                                trap_ne
3afd : f003            >        beq skip0367
                       >        trap            ;failed not equal (non zero)
3aff : 208574          >        jsr report_error
                       >
3b02 :                 >skip0367
                        
3b02 : e054                     cpx #('S'+1)
                                trap_ne
3b04 : f003            >        beq skip0369
                       >        trap            ;failed not equal (non zero)
3b06 : 208574          >        jsr report_error
                       >
3b09 :                 >skip0369
                        
3b09 : c04c                     cpy #('R'-6)
                                trap_ne
3b0b : f003            >        beq skip0371
                       >        trap            ;failed not equal (non zero)
3b0d : 208574          >        jsr report_error
                       >
3b10 :                 >skip0371
                        
3b10 : ba                       tsx             ;sp?
3b11 : e0ff                     cpx #$ff
                                trap_ne
3b13 : f003            >        beq skip0373
                       >        trap            ;failed not equal (non zero)
3b15 : 208574          >        jsr report_error
                       >
3b18 :                 >skip0373
                        
                                next_test
3b18 : ad0032          >            lda test_case   ;previous test
3b1b : c90a            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3b1d : f003            >        beq skip0376
                       >        trap            ;failed not equal (non zero)
3b1f : 208574          >        jsr report_error
                       >
3b22 :                 >skip0376
                       >
000b =                 >test_num = test_num + 1
3b22 : a90b            >            lda #test_num   ;*** next tests' number
3b24 : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; break & return from interrupt
                            if ROM_vectors = 1
                                load_flag 0     ;with interrupts enabled if allowed!
                                pha
                                lda #'B'
                                ldx #'R'
                                ldy #'K'
                                plp             ;N=0, V=0, Z=0, C=0
                                brk
                            else
3b27 : a93b                     lda #hi brk_ret0 ;emulated break
3b29 : 48                       pha
3b2a : a93e                     lda #lo brk_ret0
3b2c : 48                       pha
                                load_flag fao    ;set break & unused on stack
3b2d : a930            >            lda #fao                 ;allow test to change I-flag (no mask)
                        
3b2f : 48                       pha
                                load_flag intdis ;during interrupt
3b30 : a904            >            lda #intdis              ;allow test to change I-flag (no mask)
                        
3b32 : 48                       pha
3b33 : a942                     lda #'B'
3b35 : a252                     ldx #'R'
3b37 : a04b                     ldy #'K'
3b39 : 28                       plp             ;N=0, V=0, Z=0, C=0
3b3a : 4cbf73                   jmp irq_trap
                            endif
3b3d : 88                       dey             ;should not be executed
3b3e :                  brk_ret0                ;address of break return
3b3e : 08                       php             ;either SP or Y count will fail, if we do not hit
3b3f : 88                       dey
3b40 : 88                       dey
3b41 : 88                       dey
3b42 : c9e8                     cmp #'B'^$aa    ;returned registers OK?
                                ;the IRQ vector was never executed if A & X stay unmodified
                                trap_ne
3b44 : f003            >        beq skip0380
                       >        trap            ;failed not equal (non zero)
3b46 : 208574          >        jsr report_error
                       >
3b49 :                 >skip0380
                        
3b49 : e053                     cpx #'R'+1
                                trap_ne
3b4b : f003            >        beq skip0382
                       >        trap            ;failed not equal (non zero)
3b4d : 208574          >        jsr report_error
                       >
3b50 :                 >skip0382
                        
3b50 : c045                     cpy #'K'-6
                                trap_ne
3b52 : f003            >        beq skip0384
                       >        trap            ;failed not equal (non zero)
3b54 : 208574          >        jsr report_error
                       >
3b57 :                 >skip0384
                        
3b57 : 68                       pla             ;returned flags OK (unchanged)?
                                cmp_flag 0
3b58 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
3b5a : f003            >        beq skip0387
                       >        trap            ;failed not equal (non zero)
3b5c : 208574          >        jsr report_error
                       >
3b5f :                 >skip0387
                        
3b5f : ba                       tsx             ;sp?
3b60 : e0ff                     cpx #$ff
                                trap_ne
3b62 : f003            >        beq skip0389
                       >        trap            ;failed not equal (non zero)
3b64 : 208574          >        jsr report_error
                       >
3b67 :                 >skip0389
                        
                            if ROM_vectors = 1
                                load_flag $ff   ;with interrupts disabled if allowed!
                                pha
                                lda #$ff-'B'
                                ldx #$ff-'R'
                                ldy #$ff-'K'
                                plp             ;N=1, V=1, Z=1, C=1
                                brk
                            else
3b67 : a93b                     lda #hi brk_ret1 ;emulated break
3b69 : 48                       pha
3b6a : a97c                     lda #lo brk_ret1
3b6c : 48                       pha
                                load_flag $ff
3b6d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                        
3b6f : 48                       pha             ;set break & unused on stack
3b70 : 48                       pha             ;actual flags
3b71 : a9bd                     lda #$ff-'B'
3b73 : a2ad                     ldx #$ff-'R'
3b75 : a0b4                     ldy #$ff-'K'
3b77 : 28                       plp             ;N=1, V=1, Z=1, C=1
3b78 : 4cbf73                   jmp irq_trap
                            endif
3b7b : 88                       dey             ;should not be executed
3b7c :                  brk_ret1                ;address of break return
3b7c : 08                       php             ;either SP or Y count will fail, if we do not hit
3b7d : 88                       dey
3b7e : 88                       dey
3b7f : 88                       dey
3b80 : c917                     cmp #($ff-'B')^$aa  ;returned registers OK?
                                ;the IRQ vector was never executed if A & X stay unmodified
                                trap_ne
3b82 : f003            >        beq skip0392
                       >        trap            ;failed not equal (non zero)
3b84 : 208574          >        jsr report_error
                       >
3b87 :                 >skip0392
                        
3b87 : e0ae                     cpx #$ff-'R'+1
                                trap_ne
3b89 : f003            >        beq skip0394
                       >        trap            ;failed not equal (non zero)
3b8b : 208574          >        jsr report_error
                       >
3b8e :                 >skip0394
                        
3b8e : c0ae                     cpy #$ff-'K'-6
                                trap_ne
3b90 : f003            >        beq skip0396
                       >        trap            ;failed not equal (non zero)
3b92 : 208574          >        jsr report_error
                       >
3b95 :                 >skip0396
                        
3b95 : 68                       pla             ;returned flags OK (unchanged)?
                                cmp_flag $ff
3b96 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
3b98 : f003            >        beq skip0399
                       >        trap            ;failed not equal (non zero)
3b9a : 208574          >        jsr report_error
                       >
3b9d :                 >skip0399
                        
3b9d : ba                       tsx             ;sp?
3b9e : e0ff                     cpx #$ff
                                trap_ne
3ba0 : f003            >        beq skip0401
                       >        trap            ;failed not equal (non zero)
3ba2 : 208574          >        jsr report_error
                       >
3ba5 :                 >skip0401
                        
                                next_test
3ba5 : ad0032          >            lda test_case   ;previous test
3ba8 : c90b            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3baa : f003            >        beq skip0404
                       >        trap            ;failed not equal (non zero)
3bac : 208574          >        jsr report_error
                       >
3baf :                 >skip0404
                       >
000c =                 >test_num = test_num + 1
3baf : a90c            >            lda #test_num   ;*** next tests' number
3bb1 : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; test set and clear flags CLC CLI CLD CLV SEC SEI SED
                                set_stat $ff
                       >            load_flag $ff
3bb4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3bb6 : 48              >            pha         ;use stack to load status
3bb7 : 28              >            plp
                        
3bb8 : 18                       clc
                                tst_stat $ff-carry
3bb9 : 08              >            php         ;save status
3bba : 68              >            pla         ;use stack to retrieve status
3bbb : 48              >            pha
                       >            cmp_flag $ff-carry
3bbc : c9fe            >            cmp #($ff-carry|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3bbe : f003            >        beq skip0410
                       >        trap            ;failed not equal (non zero)
3bc0 : 208574          >        jsr report_error
                       >
3bc3 :                 >skip0410
                       >
3bc3 : 28              >            plp         ;restore status
                        
3bc4 : 38                       sec
                                tst_stat $ff
3bc5 : 08              >            php         ;save status
3bc6 : 68              >            pla         ;use stack to retrieve status
3bc7 : 48              >            pha
                       >            cmp_flag $ff
3bc8 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3bca : f003            >        beq skip0414
                       >        trap            ;failed not equal (non zero)
3bcc : 208574          >        jsr report_error
                       >
3bcf :                 >skip0414
                       >
3bcf : 28              >            plp         ;restore status
                        
                            if I_flag = 3
3bd0 : 58                       cli
                                tst_stat $ff-intdis
3bd1 : 08              >            php         ;save status
3bd2 : 68              >            pla         ;use stack to retrieve status
3bd3 : 48              >            pha
                       >            cmp_flag $ff-intdis
3bd4 : c9fb            >            cmp #($ff-intdis|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3bd6 : f003            >        beq skip0418
                       >        trap            ;failed not equal (non zero)
3bd8 : 208574          >        jsr report_error
                       >
3bdb :                 >skip0418
                       >
3bdb : 28              >            plp         ;restore status
                        
3bdc : 78                       sei
                                tst_stat $ff
3bdd : 08              >            php         ;save status
3bde : 68              >            pla         ;use stack to retrieve status
3bdf : 48              >            pha
                       >            cmp_flag $ff
3be0 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3be2 : f003            >        beq skip0422
                       >        trap            ;failed not equal (non zero)
3be4 : 208574          >        jsr report_error
                       >
3be7 :                 >skip0422
                       >
3be7 : 28              >            plp         ;restore status
                        
                            endif
3be8 : d8                       cld
                                tst_stat $ff-decmode
3be9 : 08              >            php         ;save status
3bea : 68              >            pla         ;use stack to retrieve status
3beb : 48              >            pha
                       >            cmp_flag $ff-decmode
3bec : c9f7            >            cmp #($ff-decmode|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3bee : f003            >        beq skip0426
                       >        trap            ;failed not equal (non zero)
3bf0 : 208574          >        jsr report_error
                       >
3bf3 :                 >skip0426
                       >
3bf3 : 28              >            plp         ;restore status
                        
3bf4 : f8                       sed
                                tst_stat $ff
3bf5 : 08              >            php         ;save status
3bf6 : 68              >            pla         ;use stack to retrieve status
3bf7 : 48              >            pha
                       >            cmp_flag $ff
3bf8 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3bfa : f003            >        beq skip0430
                       >        trap            ;failed not equal (non zero)
3bfc : 208574          >        jsr report_error
                       >
3bff :                 >skip0430
                       >
3bff : 28              >            plp         ;restore status
                        
3c00 : b8                       clv
                                tst_stat $ff-overfl
3c01 : 08              >            php         ;save status
3c02 : 68              >            pla         ;use stack to retrieve status
3c03 : 48              >            pha
                       >            cmp_flag $ff-overfl
3c04 : c9bf            >            cmp #($ff-overfl|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3c06 : f003            >        beq skip0434
                       >        trap            ;failed not equal (non zero)
3c08 : 208574          >        jsr report_error
                       >
3c0b :                 >skip0434
                       >
3c0b : 28              >            plp         ;restore status
                        
                                set_stat 0
                       >            load_flag 0
3c0c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3c0e : 48              >            pha         ;use stack to load status
3c0f : 28              >            plp
                        
                                tst_stat 0
3c10 : 08              >            php         ;save status
3c11 : 68              >            pla         ;use stack to retrieve status
3c12 : 48              >            pha
                       >            cmp_flag 0
3c13 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3c15 : f003            >        beq skip0440
                       >        trap            ;failed not equal (non zero)
3c17 : 208574          >        jsr report_error
                       >
3c1a :                 >skip0440
                       >
3c1a : 28              >            plp         ;restore status
                        
3c1b : 38                       sec
                                tst_stat carry
3c1c : 08              >            php         ;save status
3c1d : 68              >            pla         ;use stack to retrieve status
3c1e : 48              >            pha
                       >            cmp_flag carry
3c1f : c931            >            cmp #(carry|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3c21 : f003            >        beq skip0444
                       >        trap            ;failed not equal (non zero)
3c23 : 208574          >        jsr report_error
                       >
3c26 :                 >skip0444
                       >
3c26 : 28              >            plp         ;restore status
                        
3c27 : 18                       clc
                                tst_stat 0
3c28 : 08              >            php         ;save status
3c29 : 68              >            pla         ;use stack to retrieve status
3c2a : 48              >            pha
                       >            cmp_flag 0
3c2b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3c2d : f003            >        beq skip0448
                       >        trap            ;failed not equal (non zero)
3c2f : 208574          >        jsr report_error
                       >
3c32 :                 >skip0448
                       >
3c32 : 28              >            plp         ;restore status
                        
                            if I_flag = 3
3c33 : 78                       sei
                                tst_stat intdis
3c34 : 08              >            php         ;save status
3c35 : 68              >            pla         ;use stack to retrieve status
3c36 : 48              >            pha
                       >            cmp_flag intdis
3c37 : c934            >            cmp #(intdis|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3c39 : f003            >        beq skip0452
                       >        trap            ;failed not equal (non zero)
3c3b : 208574          >        jsr report_error
                       >
3c3e :                 >skip0452
                       >
3c3e : 28              >            plp         ;restore status
                        
3c3f : 58                       cli
                                tst_stat 0
3c40 : 08              >            php         ;save status
3c41 : 68              >            pla         ;use stack to retrieve status
3c42 : 48              >            pha
                       >            cmp_flag 0
3c43 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3c45 : f003            >        beq skip0456
                       >        trap            ;failed not equal (non zero)
3c47 : 208574          >        jsr report_error
                       >
3c4a :                 >skip0456
                       >
3c4a : 28              >            plp         ;restore status
                        
                            endif
3c4b : f8                       sed
                                tst_stat decmode
3c4c : 08              >            php         ;save status
3c4d : 68              >            pla         ;use stack to retrieve status
3c4e : 48              >            pha
                       >            cmp_flag decmode
3c4f : c938            >            cmp #(decmode|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3c51 : f003            >        beq skip0460
                       >        trap            ;failed not equal (non zero)
3c53 : 208574          >        jsr report_error
                       >
3c56 :                 >skip0460
                       >
3c56 : 28              >            plp         ;restore status
                        
3c57 : d8                       cld
                                tst_stat 0
3c58 : 08              >            php         ;save status
3c59 : 68              >            pla         ;use stack to retrieve status
3c5a : 48              >            pha
                       >            cmp_flag 0
3c5b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3c5d : f003            >        beq skip0464
                       >        trap            ;failed not equal (non zero)
3c5f : 208574          >        jsr report_error
                       >
3c62 :                 >skip0464
                       >
3c62 : 28              >            plp         ;restore status
                        
                                set_stat overfl
                       >            load_flag overfl
3c63 : a940            >            lda #overfl             ;allow test to change I-flag (no mask)
                       >
3c65 : 48              >            pha         ;use stack to load status
3c66 : 28              >            plp
                        
                                tst_stat overfl
3c67 : 08              >            php         ;save status
3c68 : 68              >            pla         ;use stack to retrieve status
3c69 : 48              >            pha
                       >            cmp_flag overfl
3c6a : c970            >            cmp #(overfl|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3c6c : f003            >        beq skip0470
                       >        trap            ;failed not equal (non zero)
3c6e : 208574          >        jsr report_error
                       >
3c71 :                 >skip0470
                       >
3c71 : 28              >            plp         ;restore status
                        
3c72 : b8                       clv
                                tst_stat 0
3c73 : 08              >            php         ;save status
3c74 : 68              >            pla         ;use stack to retrieve status
3c75 : 48              >            pha
                       >            cmp_flag 0
3c76 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3c78 : f003            >        beq skip0474
                       >        trap            ;failed not equal (non zero)
3c7a : 208574          >        jsr report_error
                       >
3c7d :                 >skip0474
                       >
3c7d : 28              >            plp         ;restore status
                        
                                next_test
3c7e : ad0032          >            lda test_case   ;previous test
3c81 : c90c            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3c83 : f003            >        beq skip0477
                       >        trap            ;failed not equal (non zero)
3c85 : 208574          >        jsr report_error
                       >
3c88 :                 >skip0477
                       >
000d =                 >test_num = test_num + 1
3c88 : a90d            >            lda #test_num   ;*** next tests' number
3c8a : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        ; testing index register increment/decrement and transfer
                        ; INX INY DEX DEY TAX TXA TAY TYA
3c8d : a2fe                     ldx #$fe
                                set_stat $ff
                       >            load_flag $ff
3c8f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3c91 : 48              >            pha         ;use stack to load status
3c92 : 28              >            plp
                        
3c93 : e8                       inx             ;ff
                                tst_x $ff,$ff-zero
3c94 : 08              >            php         ;save flags
3c95 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
3c97 : f003            >        beq skip0482
                       >        trap            ;failed not equal (non zero)
3c99 : 208574          >        jsr report_error
                       >
3c9c :                 >skip0482
                       >
3c9c : 68              >            pla         ;load status
3c9d : 48              >            pha
                       >            cmp_flag $ff-zero
3c9e : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3ca0 : f003            >        beq skip0485
                       >        trap            ;failed not equal (non zero)
3ca2 : 208574          >        jsr report_error
                       >
3ca5 :                 >skip0485
                       >
3ca5 : 28              >            plp         ;restore status
                        
3ca6 : e8                       inx             ;00
                                tst_x 0,$ff-minus
3ca7 : 08              >            php         ;save flags
3ca8 : e000            >            cpx #0     ;test result
                       >            trap_ne
3caa : f003            >        beq skip0488
                       >        trap            ;failed not equal (non zero)
3cac : 208574          >        jsr report_error
                       >
3caf :                 >skip0488
                       >
3caf : 68              >            pla         ;load status
3cb0 : 48              >            pha
                       >            cmp_flag $ff-minus
3cb1 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3cb3 : f003            >        beq skip0491
                       >        trap            ;failed not equal (non zero)
3cb5 : 208574          >        jsr report_error
                       >
3cb8 :                 >skip0491
                       >
3cb8 : 28              >            plp         ;restore status
                        
3cb9 : e8                       inx             ;01
                                tst_x 1,$ff-minus-zero
3cba : 08              >            php         ;save flags
3cbb : e001            >            cpx #1     ;test result
                       >            trap_ne
3cbd : f003            >        beq skip0494
                       >        trap            ;failed not equal (non zero)
3cbf : 208574          >        jsr report_error
                       >
3cc2 :                 >skip0494
                       >
3cc2 : 68              >            pla         ;load status
3cc3 : 48              >            pha
                       >            cmp_flag $ff-minus-zero
3cc4 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3cc6 : f003            >        beq skip0497
                       >        trap            ;failed not equal (non zero)
3cc8 : 208574          >        jsr report_error
                       >
3ccb :                 >skip0497
                       >
3ccb : 28              >            plp         ;restore status
                        
3ccc : ca                       dex             ;00
                                tst_x 0,$ff-minus
3ccd : 08              >            php         ;save flags
3cce : e000            >            cpx #0     ;test result
                       >            trap_ne
3cd0 : f003            >        beq skip0500
                       >        trap            ;failed not equal (non zero)
3cd2 : 208574          >        jsr report_error
                       >
3cd5 :                 >skip0500
                       >
3cd5 : 68              >            pla         ;load status
3cd6 : 48              >            pha
                       >            cmp_flag $ff-minus
3cd7 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3cd9 : f003            >        beq skip0503
                       >        trap            ;failed not equal (non zero)
3cdb : 208574          >        jsr report_error
                       >
3cde :                 >skip0503
                       >
3cde : 28              >            plp         ;restore status
                        
3cdf : ca                       dex             ;ff
                                tst_x $ff,$ff-zero
3ce0 : 08              >            php         ;save flags
3ce1 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
3ce3 : f003            >        beq skip0506
                       >        trap            ;failed not equal (non zero)
3ce5 : 208574          >        jsr report_error
                       >
3ce8 :                 >skip0506
                       >
3ce8 : 68              >            pla         ;load status
3ce9 : 48              >            pha
                       >            cmp_flag $ff-zero
3cea : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3cec : f003            >        beq skip0509
                       >        trap            ;failed not equal (non zero)
3cee : 208574          >        jsr report_error
                       >
3cf1 :                 >skip0509
                       >
3cf1 : 28              >            plp         ;restore status
                        
3cf2 : ca                       dex             ;fe
                                set_stat 0
                       >            load_flag 0
3cf3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3cf5 : 48              >            pha         ;use stack to load status
3cf6 : 28              >            plp
                        
3cf7 : e8                       inx             ;ff
                                tst_x $ff,minus
3cf8 : 08              >            php         ;save flags
3cf9 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
3cfb : f003            >        beq skip0514
                       >        trap            ;failed not equal (non zero)
3cfd : 208574          >        jsr report_error
                       >
3d00 :                 >skip0514
                       >
3d00 : 68              >            pla         ;load status
3d01 : 48              >            pha
                       >            cmp_flag minus
3d02 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3d04 : f003            >        beq skip0517
                       >        trap            ;failed not equal (non zero)
3d06 : 208574          >        jsr report_error
                       >
3d09 :                 >skip0517
                       >
3d09 : 28              >            plp         ;restore status
                        
3d0a : e8                       inx             ;00
                                tst_x 0,zero
3d0b : 08              >            php         ;save flags
3d0c : e000            >            cpx #0     ;test result
                       >            trap_ne
3d0e : f003            >        beq skip0520
                       >        trap            ;failed not equal (non zero)
3d10 : 208574          >        jsr report_error
                       >
3d13 :                 >skip0520
                       >
3d13 : 68              >            pla         ;load status
3d14 : 48              >            pha
                       >            cmp_flag zero
3d15 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3d17 : f003            >        beq skip0523
                       >        trap            ;failed not equal (non zero)
3d19 : 208574          >        jsr report_error
                       >
3d1c :                 >skip0523
                       >
3d1c : 28              >            plp         ;restore status
                        
3d1d : e8                       inx             ;01
                                tst_x 1,0
3d1e : 08              >            php         ;save flags
3d1f : e001            >            cpx #1     ;test result
                       >            trap_ne
3d21 : f003            >        beq skip0526
                       >        trap            ;failed not equal (non zero)
3d23 : 208574          >        jsr report_error
                       >
3d26 :                 >skip0526
                       >
3d26 : 68              >            pla         ;load status
3d27 : 48              >            pha
                       >            cmp_flag 0
3d28 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3d2a : f003            >        beq skip0529
                       >        trap            ;failed not equal (non zero)
3d2c : 208574          >        jsr report_error
                       >
3d2f :                 >skip0529
                       >
3d2f : 28              >            plp         ;restore status
                        
3d30 : ca                       dex             ;00
                                tst_x 0,zero
3d31 : 08              >            php         ;save flags
3d32 : e000            >            cpx #0     ;test result
                       >            trap_ne
3d34 : f003            >        beq skip0532
                       >        trap            ;failed not equal (non zero)
3d36 : 208574          >        jsr report_error
                       >
3d39 :                 >skip0532
                       >
3d39 : 68              >            pla         ;load status
3d3a : 48              >            pha
                       >            cmp_flag zero
3d3b : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3d3d : f003            >        beq skip0535
                       >        trap            ;failed not equal (non zero)
3d3f : 208574          >        jsr report_error
                       >
3d42 :                 >skip0535
                       >
3d42 : 28              >            plp         ;restore status
                        
3d43 : ca                       dex             ;ff
                                tst_x $ff,minus
3d44 : 08              >            php         ;save flags
3d45 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
3d47 : f003            >        beq skip0538
                       >        trap            ;failed not equal (non zero)
3d49 : 208574          >        jsr report_error
                       >
3d4c :                 >skip0538
                       >
3d4c : 68              >            pla         ;load status
3d4d : 48              >            pha
                       >            cmp_flag minus
3d4e : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3d50 : f003            >        beq skip0541
                       >        trap            ;failed not equal (non zero)
3d52 : 208574          >        jsr report_error
                       >
3d55 :                 >skip0541
                       >
3d55 : 28              >            plp         ;restore status
                        
                        
3d56 : a0fe                     ldy #$fe
                                set_stat $ff
                       >            load_flag $ff
3d58 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3d5a : 48              >            pha         ;use stack to load status
3d5b : 28              >            plp
                        
3d5c : c8                       iny             ;ff
                                tst_y $ff,$ff-zero
3d5d : 08              >            php         ;save flags
3d5e : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
3d60 : f003            >        beq skip0546
                       >        trap            ;failed not equal (non zero)
3d62 : 208574          >        jsr report_error
                       >
3d65 :                 >skip0546
                       >
3d65 : 68              >            pla         ;load status
3d66 : 48              >            pha
                       >            cmp_flag $ff-zero
3d67 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3d69 : f003            >        beq skip0549
                       >        trap            ;failed not equal (non zero)
3d6b : 208574          >        jsr report_error
                       >
3d6e :                 >skip0549
                       >
3d6e : 28              >            plp         ;restore status
                        
3d6f : c8                       iny             ;00
                                tst_y 0,$ff-minus
3d70 : 08              >            php         ;save flags
3d71 : c000            >            cpy #0     ;test result
                       >            trap_ne
3d73 : f003            >        beq skip0552
                       >        trap            ;failed not equal (non zero)
3d75 : 208574          >        jsr report_error
                       >
3d78 :                 >skip0552
                       >
3d78 : 68              >            pla         ;load status
3d79 : 48              >            pha
                       >            cmp_flag $ff-minus
3d7a : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3d7c : f003            >        beq skip0555
                       >        trap            ;failed not equal (non zero)
3d7e : 208574          >        jsr report_error
                       >
3d81 :                 >skip0555
                       >
3d81 : 28              >            plp         ;restore status
                        
3d82 : c8                       iny             ;01
                                tst_y 1,$ff-minus-zero
3d83 : 08              >            php         ;save flags
3d84 : c001            >            cpy #1     ;test result
                       >            trap_ne
3d86 : f003            >        beq skip0558
                       >        trap            ;failed not equal (non zero)
3d88 : 208574          >        jsr report_error
                       >
3d8b :                 >skip0558
                       >
3d8b : 68              >            pla         ;load status
3d8c : 48              >            pha
                       >            cmp_flag $ff-minus-zero
3d8d : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3d8f : f003            >        beq skip0561
                       >        trap            ;failed not equal (non zero)
3d91 : 208574          >        jsr report_error
                       >
3d94 :                 >skip0561
                       >
3d94 : 28              >            plp         ;restore status
                        
3d95 : 88                       dey             ;00
                                tst_y 0,$ff-minus
3d96 : 08              >            php         ;save flags
3d97 : c000            >            cpy #0     ;test result
                       >            trap_ne
3d99 : f003            >        beq skip0564
                       >        trap            ;failed not equal (non zero)
3d9b : 208574          >        jsr report_error
                       >
3d9e :                 >skip0564
                       >
3d9e : 68              >            pla         ;load status
3d9f : 48              >            pha
                       >            cmp_flag $ff-minus
3da0 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3da2 : f003            >        beq skip0567
                       >        trap            ;failed not equal (non zero)
3da4 : 208574          >        jsr report_error
                       >
3da7 :                 >skip0567
                       >
3da7 : 28              >            plp         ;restore status
                        
3da8 : 88                       dey             ;ff
                                tst_y $ff,$ff-zero
3da9 : 08              >            php         ;save flags
3daa : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
3dac : f003            >        beq skip0570
                       >        trap            ;failed not equal (non zero)
3dae : 208574          >        jsr report_error
                       >
3db1 :                 >skip0570
                       >
3db1 : 68              >            pla         ;load status
3db2 : 48              >            pha
                       >            cmp_flag $ff-zero
3db3 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3db5 : f003            >        beq skip0573
                       >        trap            ;failed not equal (non zero)
3db7 : 208574          >        jsr report_error
                       >
3dba :                 >skip0573
                       >
3dba : 28              >            plp         ;restore status
                        
3dbb : 88                       dey             ;fe
                                set_stat 0
                       >            load_flag 0
3dbc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3dbe : 48              >            pha         ;use stack to load status
3dbf : 28              >            plp
                        
3dc0 : c8                       iny             ;ff
                                tst_y $ff,0+minus
3dc1 : 08              >            php         ;save flags
3dc2 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
3dc4 : f003            >        beq skip0578
                       >        trap            ;failed not equal (non zero)
3dc6 : 208574          >        jsr report_error
                       >
3dc9 :                 >skip0578
                       >
3dc9 : 68              >            pla         ;load status
3dca : 48              >            pha
                       >            cmp_flag 0+minus
3dcb : c9b0            >            cmp #(0+minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3dcd : f003            >        beq skip0581
                       >        trap            ;failed not equal (non zero)
3dcf : 208574          >        jsr report_error
                       >
3dd2 :                 >skip0581
                       >
3dd2 : 28              >            plp         ;restore status
                        
3dd3 : c8                       iny             ;00
                                tst_y 0,zero
3dd4 : 08              >            php         ;save flags
3dd5 : c000            >            cpy #0     ;test result
                       >            trap_ne
3dd7 : f003            >        beq skip0584
                       >        trap            ;failed not equal (non zero)
3dd9 : 208574          >        jsr report_error
                       >
3ddc :                 >skip0584
                       >
3ddc : 68              >            pla         ;load status
3ddd : 48              >            pha
                       >            cmp_flag zero
3dde : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3de0 : f003            >        beq skip0587
                       >        trap            ;failed not equal (non zero)
3de2 : 208574          >        jsr report_error
                       >
3de5 :                 >skip0587
                       >
3de5 : 28              >            plp         ;restore status
                        
3de6 : c8                       iny             ;01
                                tst_y 1,0
3de7 : 08              >            php         ;save flags
3de8 : c001            >            cpy #1     ;test result
                       >            trap_ne
3dea : f003            >        beq skip0590
                       >        trap            ;failed not equal (non zero)
3dec : 208574          >        jsr report_error
                       >
3def :                 >skip0590
                       >
3def : 68              >            pla         ;load status
3df0 : 48              >            pha
                       >            cmp_flag 0
3df1 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3df3 : f003            >        beq skip0593
                       >        trap            ;failed not equal (non zero)
3df5 : 208574          >        jsr report_error
                       >
3df8 :                 >skip0593
                       >
3df8 : 28              >            plp         ;restore status
                        
3df9 : 88                       dey             ;00
                                tst_y 0,zero
3dfa : 08              >            php         ;save flags
3dfb : c000            >            cpy #0     ;test result
                       >            trap_ne
3dfd : f003            >        beq skip0596
                       >        trap            ;failed not equal (non zero)
3dff : 208574          >        jsr report_error
                       >
3e02 :                 >skip0596
                       >
3e02 : 68              >            pla         ;load status
3e03 : 48              >            pha
                       >            cmp_flag zero
3e04 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3e06 : f003            >        beq skip0599
                       >        trap            ;failed not equal (non zero)
3e08 : 208574          >        jsr report_error
                       >
3e0b :                 >skip0599
                       >
3e0b : 28              >            plp         ;restore status
                        
3e0c : 88                       dey             ;ff
                                tst_y $ff,minus
3e0d : 08              >            php         ;save flags
3e0e : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
3e10 : f003            >        beq skip0602
                       >        trap            ;failed not equal (non zero)
3e12 : 208574          >        jsr report_error
                       >
3e15 :                 >skip0602
                       >
3e15 : 68              >            pla         ;load status
3e16 : 48              >            pha
                       >            cmp_flag minus
3e17 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3e19 : f003            >        beq skip0605
                       >        trap            ;failed not equal (non zero)
3e1b : 208574          >        jsr report_error
                       >
3e1e :                 >skip0605
                       >
3e1e : 28              >            plp         ;restore status
                        
                        
3e1f : a2ff                     ldx #$ff
                                set_stat $ff
                       >            load_flag $ff
3e21 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3e23 : 48              >            pha         ;use stack to load status
3e24 : 28              >            plp
                        
3e25 : 8a                       txa
                                tst_a $ff,$ff-zero
3e26 : 08              >            php         ;save flags
3e27 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
3e29 : f003            >        beq skip0610
                       >        trap            ;failed not equal (non zero)
3e2b : 208574          >        jsr report_error
                       >
3e2e :                 >skip0610
                       >
3e2e : 68              >            pla         ;load status
3e2f : 48              >            pha
                       >            cmp_flag $ff-zero
3e30 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3e32 : f003            >        beq skip0613
                       >        trap            ;failed not equal (non zero)
3e34 : 208574          >        jsr report_error
                       >
3e37 :                 >skip0613
                       >
3e37 : 28              >            plp         ;restore status
                        
3e38 : 08                       php
3e39 : e8                       inx             ;00
3e3a : 28                       plp
3e3b : 8a                       txa
                                tst_a 0,$ff-minus
3e3c : 08              >            php         ;save flags
3e3d : c900            >            cmp #0     ;test result
                       >            trap_ne
3e3f : f003            >        beq skip0616
                       >        trap            ;failed not equal (non zero)
3e41 : 208574          >        jsr report_error
                       >
3e44 :                 >skip0616
                       >
3e44 : 68              >            pla         ;load status
3e45 : 48              >            pha
                       >            cmp_flag $ff-minus
3e46 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3e48 : f003            >        beq skip0619
                       >        trap            ;failed not equal (non zero)
3e4a : 208574          >        jsr report_error
                       >
3e4d :                 >skip0619
                       >
3e4d : 28              >            plp         ;restore status
                        
3e4e : 08                       php
3e4f : e8                       inx             ;01
3e50 : 28                       plp
3e51 : 8a                       txa
                                tst_a 1,$ff-minus-zero
3e52 : 08              >            php         ;save flags
3e53 : c901            >            cmp #1     ;test result
                       >            trap_ne
3e55 : f003            >        beq skip0622
                       >        trap            ;failed not equal (non zero)
3e57 : 208574          >        jsr report_error
                       >
3e5a :                 >skip0622
                       >
3e5a : 68              >            pla         ;load status
3e5b : 48              >            pha
                       >            cmp_flag $ff-minus-zero
3e5c : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3e5e : f003            >        beq skip0625
                       >        trap            ;failed not equal (non zero)
3e60 : 208574          >        jsr report_error
                       >
3e63 :                 >skip0625
                       >
3e63 : 28              >            plp         ;restore status
                        
                                set_stat 0
                       >            load_flag 0
3e64 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3e66 : 48              >            pha         ;use stack to load status
3e67 : 28              >            plp
                        
3e68 : 8a                       txa
                                tst_a 1,0
3e69 : 08              >            php         ;save flags
3e6a : c901            >            cmp #1     ;test result
                       >            trap_ne
3e6c : f003            >        beq skip0630
                       >        trap            ;failed not equal (non zero)
3e6e : 208574          >        jsr report_error
                       >
3e71 :                 >skip0630
                       >
3e71 : 68              >            pla         ;load status
3e72 : 48              >            pha
                       >            cmp_flag 0
3e73 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3e75 : f003            >        beq skip0633
                       >        trap            ;failed not equal (non zero)
3e77 : 208574          >        jsr report_error
                       >
3e7a :                 >skip0633
                       >
3e7a : 28              >            plp         ;restore status
                        
3e7b : 08                       php
3e7c : ca                       dex             ;00
3e7d : 28                       plp
3e7e : 8a                       txa
                                tst_a 0,zero
3e7f : 08              >            php         ;save flags
3e80 : c900            >            cmp #0     ;test result
                       >            trap_ne
3e82 : f003            >        beq skip0636
                       >        trap            ;failed not equal (non zero)
3e84 : 208574          >        jsr report_error
                       >
3e87 :                 >skip0636
                       >
3e87 : 68              >            pla         ;load status
3e88 : 48              >            pha
                       >            cmp_flag zero
3e89 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3e8b : f003            >        beq skip0639
                       >        trap            ;failed not equal (non zero)
3e8d : 208574          >        jsr report_error
                       >
3e90 :                 >skip0639
                       >
3e90 : 28              >            plp         ;restore status
                        
3e91 : 08                       php
3e92 : ca                       dex             ;ff
3e93 : 28                       plp
3e94 : 8a                       txa
                                tst_a $ff,minus
3e95 : 08              >            php         ;save flags
3e96 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
3e98 : f003            >        beq skip0642
                       >        trap            ;failed not equal (non zero)
3e9a : 208574          >        jsr report_error
                       >
3e9d :                 >skip0642
                       >
3e9d : 68              >            pla         ;load status
3e9e : 48              >            pha
                       >            cmp_flag minus
3e9f : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3ea1 : f003            >        beq skip0645
                       >        trap            ;failed not equal (non zero)
3ea3 : 208574          >        jsr report_error
                       >
3ea6 :                 >skip0645
                       >
3ea6 : 28              >            plp         ;restore status
                        
                        
3ea7 : a0ff                     ldy #$ff
                                set_stat $ff
                       >            load_flag $ff
3ea9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3eab : 48              >            pha         ;use stack to load status
3eac : 28              >            plp
                        
3ead : 98                       tya
                                tst_a $ff,$ff-zero
3eae : 08              >            php         ;save flags
3eaf : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
3eb1 : f003            >        beq skip0650
                       >        trap            ;failed not equal (non zero)
3eb3 : 208574          >        jsr report_error
                       >
3eb6 :                 >skip0650
                       >
3eb6 : 68              >            pla         ;load status
3eb7 : 48              >            pha
                       >            cmp_flag $ff-zero
3eb8 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3eba : f003            >        beq skip0653
                       >        trap            ;failed not equal (non zero)
3ebc : 208574          >        jsr report_error
                       >
3ebf :                 >skip0653
                       >
3ebf : 28              >            plp         ;restore status
                        
3ec0 : 08                       php
3ec1 : c8                       iny             ;00
3ec2 : 28                       plp
3ec3 : 98                       tya
                                tst_a 0,$ff-minus
3ec4 : 08              >            php         ;save flags
3ec5 : c900            >            cmp #0     ;test result
                       >            trap_ne
3ec7 : f003            >        beq skip0656
                       >        trap            ;failed not equal (non zero)
3ec9 : 208574          >        jsr report_error
                       >
3ecc :                 >skip0656
                       >
3ecc : 68              >            pla         ;load status
3ecd : 48              >            pha
                       >            cmp_flag $ff-minus
3ece : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3ed0 : f003            >        beq skip0659
                       >        trap            ;failed not equal (non zero)
3ed2 : 208574          >        jsr report_error
                       >
3ed5 :                 >skip0659
                       >
3ed5 : 28              >            plp         ;restore status
                        
3ed6 : 08                       php
3ed7 : c8                       iny             ;01
3ed8 : 28                       plp
3ed9 : 98                       tya
                                tst_a 1,$ff-minus-zero
3eda : 08              >            php         ;save flags
3edb : c901            >            cmp #1     ;test result
                       >            trap_ne
3edd : f003            >        beq skip0662
                       >        trap            ;failed not equal (non zero)
3edf : 208574          >        jsr report_error
                       >
3ee2 :                 >skip0662
                       >
3ee2 : 68              >            pla         ;load status
3ee3 : 48              >            pha
                       >            cmp_flag $ff-minus-zero
3ee4 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3ee6 : f003            >        beq skip0665
                       >        trap            ;failed not equal (non zero)
3ee8 : 208574          >        jsr report_error
                       >
3eeb :                 >skip0665
                       >
3eeb : 28              >            plp         ;restore status
                        
                                set_stat 0
                       >            load_flag 0
3eec : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3eee : 48              >            pha         ;use stack to load status
3eef : 28              >            plp
                        
3ef0 : 98                       tya
                                tst_a 1,0
3ef1 : 08              >            php         ;save flags
3ef2 : c901            >            cmp #1     ;test result
                       >            trap_ne
3ef4 : f003            >        beq skip0670
                       >        trap            ;failed not equal (non zero)
3ef6 : 208574          >        jsr report_error
                       >
3ef9 :                 >skip0670
                       >
3ef9 : 68              >            pla         ;load status
3efa : 48              >            pha
                       >            cmp_flag 0
3efb : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3efd : f003            >        beq skip0673
                       >        trap            ;failed not equal (non zero)
3eff : 208574          >        jsr report_error
                       >
3f02 :                 >skip0673
                       >
3f02 : 28              >            plp         ;restore status
                        
3f03 : 08                       php
3f04 : 88                       dey             ;00
3f05 : 28                       plp
3f06 : 98                       tya
                                tst_a 0,zero
3f07 : 08              >            php         ;save flags
3f08 : c900            >            cmp #0     ;test result
                       >            trap_ne
3f0a : f003            >        beq skip0676
                       >        trap            ;failed not equal (non zero)
3f0c : 208574          >        jsr report_error
                       >
3f0f :                 >skip0676
                       >
3f0f : 68              >            pla         ;load status
3f10 : 48              >            pha
                       >            cmp_flag zero
3f11 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3f13 : f003            >        beq skip0679
                       >        trap            ;failed not equal (non zero)
3f15 : 208574          >        jsr report_error
                       >
3f18 :                 >skip0679
                       >
3f18 : 28              >            plp         ;restore status
                        
3f19 : 08                       php
3f1a : 88                       dey             ;ff
3f1b : 28                       plp
3f1c : 98                       tya
                                tst_a $ff,minus
3f1d : 08              >            php         ;save flags
3f1e : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
3f20 : f003            >        beq skip0682
                       >        trap            ;failed not equal (non zero)
3f22 : 208574          >        jsr report_error
                       >
3f25 :                 >skip0682
                       >
3f25 : 68              >            pla         ;load status
3f26 : 48              >            pha
                       >            cmp_flag minus
3f27 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3f29 : f003            >        beq skip0685
                       >        trap            ;failed not equal (non zero)
3f2b : 208574          >        jsr report_error
                       >
3f2e :                 >skip0685
                       >
3f2e : 28              >            plp         ;restore status
                        
                        
                                load_flag $ff
3f2f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                        
3f31 : 48                       pha
3f32 : a2ff                     ldx #$ff        ;ff
3f34 : 8a                       txa
3f35 : 28                       plp
3f36 : a8                       tay
                                tst_y $ff,$ff-zero
3f37 : 08              >            php         ;save flags
3f38 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
3f3a : f003            >        beq skip0689
                       >        trap            ;failed not equal (non zero)
3f3c : 208574          >        jsr report_error
                       >
3f3f :                 >skip0689
                       >
3f3f : 68              >            pla         ;load status
3f40 : 48              >            pha
                       >            cmp_flag $ff-zero
3f41 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3f43 : f003            >        beq skip0692
                       >        trap            ;failed not equal (non zero)
3f45 : 208574          >        jsr report_error
                       >
3f48 :                 >skip0692
                       >
3f48 : 28              >            plp         ;restore status
                        
3f49 : 08                       php
3f4a : e8                       inx             ;00
3f4b : 8a                       txa
3f4c : 28                       plp
3f4d : a8                       tay
                                tst_y 0,$ff-minus
3f4e : 08              >            php         ;save flags
3f4f : c000            >            cpy #0     ;test result
                       >            trap_ne
3f51 : f003            >        beq skip0695
                       >        trap            ;failed not equal (non zero)
3f53 : 208574          >        jsr report_error
                       >
3f56 :                 >skip0695
                       >
3f56 : 68              >            pla         ;load status
3f57 : 48              >            pha
                       >            cmp_flag $ff-minus
3f58 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3f5a : f003            >        beq skip0698
                       >        trap            ;failed not equal (non zero)
3f5c : 208574          >        jsr report_error
                       >
3f5f :                 >skip0698
                       >
3f5f : 28              >            plp         ;restore status
                        
3f60 : 08                       php
3f61 : e8                       inx             ;01
3f62 : 8a                       txa
3f63 : 28                       plp
3f64 : a8                       tay
                                tst_y 1,$ff-minus-zero
3f65 : 08              >            php         ;save flags
3f66 : c001            >            cpy #1     ;test result
                       >            trap_ne
3f68 : f003            >        beq skip0701
                       >        trap            ;failed not equal (non zero)
3f6a : 208574          >        jsr report_error
                       >
3f6d :                 >skip0701
                       >
3f6d : 68              >            pla         ;load status
3f6e : 48              >            pha
                       >            cmp_flag $ff-minus-zero
3f6f : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3f71 : f003            >        beq skip0704
                       >        trap            ;failed not equal (non zero)
3f73 : 208574          >        jsr report_error
                       >
3f76 :                 >skip0704
                       >
3f76 : 28              >            plp         ;restore status
                        
                                load_flag 0
3f77 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                        
3f79 : 48                       pha
3f7a : a900                     lda #0
3f7c : 8a                       txa
3f7d : 28                       plp
3f7e : a8                       tay
                                tst_y 1,0
3f7f : 08              >            php         ;save flags
3f80 : c001            >            cpy #1     ;test result
                       >            trap_ne
3f82 : f003            >        beq skip0708
                       >        trap            ;failed not equal (non zero)
3f84 : 208574          >        jsr report_error
                       >
3f87 :                 >skip0708
                       >
3f87 : 68              >            pla         ;load status
3f88 : 48              >            pha
                       >            cmp_flag 0
3f89 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3f8b : f003            >        beq skip0711
                       >        trap            ;failed not equal (non zero)
3f8d : 208574          >        jsr report_error
                       >
3f90 :                 >skip0711
                       >
3f90 : 28              >            plp         ;restore status
                        
3f91 : 08                       php
3f92 : ca                       dex             ;00
3f93 : 8a                       txa
3f94 : 28                       plp
3f95 : a8                       tay
                                tst_y 0,zero
3f96 : 08              >            php         ;save flags
3f97 : c000            >            cpy #0     ;test result
                       >            trap_ne
3f99 : f003            >        beq skip0714
                       >        trap            ;failed not equal (non zero)
3f9b : 208574          >        jsr report_error
                       >
3f9e :                 >skip0714
                       >
3f9e : 68              >            pla         ;load status
3f9f : 48              >            pha
                       >            cmp_flag zero
3fa0 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3fa2 : f003            >        beq skip0717
                       >        trap            ;failed not equal (non zero)
3fa4 : 208574          >        jsr report_error
                       >
3fa7 :                 >skip0717
                       >
3fa7 : 28              >            plp         ;restore status
                        
3fa8 : 08                       php
3fa9 : ca                       dex             ;ff
3faa : 8a                       txa
3fab : 28                       plp
3fac : a8                       tay
                                tst_y $ff,minus
3fad : 08              >            php         ;save flags
3fae : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
3fb0 : f003            >        beq skip0720
                       >        trap            ;failed not equal (non zero)
3fb2 : 208574          >        jsr report_error
                       >
3fb5 :                 >skip0720
                       >
3fb5 : 68              >            pla         ;load status
3fb6 : 48              >            pha
                       >            cmp_flag minus
3fb7 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3fb9 : f003            >        beq skip0723
                       >        trap            ;failed not equal (non zero)
3fbb : 208574          >        jsr report_error
                       >
3fbe :                 >skip0723
                       >
3fbe : 28              >            plp         ;restore status
                        
                        
                        
                                load_flag $ff
3fbf : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                        
3fc1 : 48                       pha
3fc2 : a0ff                     ldy #$ff        ;ff
3fc4 : 98                       tya
3fc5 : 28                       plp
3fc6 : aa                       tax
                                tst_x $ff,$ff-zero
3fc7 : 08              >            php         ;save flags
3fc8 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
3fca : f003            >        beq skip0727
                       >        trap            ;failed not equal (non zero)
3fcc : 208574          >        jsr report_error
                       >
3fcf :                 >skip0727
                       >
3fcf : 68              >            pla         ;load status
3fd0 : 48              >            pha
                       >            cmp_flag $ff-zero
3fd1 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3fd3 : f003            >        beq skip0730
                       >        trap            ;failed not equal (non zero)
3fd5 : 208574          >        jsr report_error
                       >
3fd8 :                 >skip0730
                       >
3fd8 : 28              >            plp         ;restore status
                        
3fd9 : 08                       php
3fda : c8                       iny             ;00
3fdb : 98                       tya
3fdc : 28                       plp
3fdd : aa                       tax
                                tst_x 0,$ff-minus
3fde : 08              >            php         ;save flags
3fdf : e000            >            cpx #0     ;test result
                       >            trap_ne
3fe1 : f003            >        beq skip0733
                       >        trap            ;failed not equal (non zero)
3fe3 : 208574          >        jsr report_error
                       >
3fe6 :                 >skip0733
                       >
3fe6 : 68              >            pla         ;load status
3fe7 : 48              >            pha
                       >            cmp_flag $ff-minus
3fe8 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3fea : f003            >        beq skip0736
                       >        trap            ;failed not equal (non zero)
3fec : 208574          >        jsr report_error
                       >
3fef :                 >skip0736
                       >
3fef : 28              >            plp         ;restore status
                        
3ff0 : 08                       php
3ff1 : c8                       iny             ;01
3ff2 : 98                       tya
3ff3 : 28                       plp
3ff4 : aa                       tax
                                tst_x 1,$ff-minus-zero
3ff5 : 08              >            php         ;save flags
3ff6 : e001            >            cpx #1     ;test result
                       >            trap_ne
3ff8 : f003            >        beq skip0739
                       >        trap            ;failed not equal (non zero)
3ffa : 208574          >        jsr report_error
                       >
3ffd :                 >skip0739
                       >
3ffd : 68              >            pla         ;load status
3ffe : 48              >            pha
                       >            cmp_flag $ff-minus-zero
3fff : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4001 : f003            >        beq skip0742
                       >        trap            ;failed not equal (non zero)
4003 : 208574          >        jsr report_error
                       >
4006 :                 >skip0742
                       >
4006 : 28              >            plp         ;restore status
                        
                                load_flag 0
4007 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                        
4009 : 48                       pha
400a : a900                     lda #0          ;preset status
400c : 98                       tya
400d : 28                       plp
400e : aa                       tax
                                tst_x 1,0
400f : 08              >            php         ;save flags
4010 : e001            >            cpx #1     ;test result
                       >            trap_ne
4012 : f003            >        beq skip0746
                       >        trap            ;failed not equal (non zero)
4014 : 208574          >        jsr report_error
                       >
4017 :                 >skip0746
                       >
4017 : 68              >            pla         ;load status
4018 : 48              >            pha
                       >            cmp_flag 0
4019 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
401b : f003            >        beq skip0749
                       >        trap            ;failed not equal (non zero)
401d : 208574          >        jsr report_error
                       >
4020 :                 >skip0749
                       >
4020 : 28              >            plp         ;restore status
                        
4021 : 08                       php
4022 : 88                       dey             ;00
4023 : 98                       tya
4024 : 28                       plp
4025 : aa                       tax
                                tst_x 0,zero
4026 : 08              >            php         ;save flags
4027 : e000            >            cpx #0     ;test result
                       >            trap_ne
4029 : f003            >        beq skip0752
                       >        trap            ;failed not equal (non zero)
402b : 208574          >        jsr report_error
                       >
402e :                 >skip0752
                       >
402e : 68              >            pla         ;load status
402f : 48              >            pha
                       >            cmp_flag zero
4030 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4032 : f003            >        beq skip0755
                       >        trap            ;failed not equal (non zero)
4034 : 208574          >        jsr report_error
                       >
4037 :                 >skip0755
                       >
4037 : 28              >            plp         ;restore status
                        
4038 : 08                       php
4039 : 88                       dey             ;ff
403a : 98                       tya
403b : 28                       plp
403c : aa                       tax
                                tst_x $ff,minus
403d : 08              >            php         ;save flags
403e : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
4040 : f003            >        beq skip0758
                       >        trap            ;failed not equal (non zero)
4042 : 208574          >        jsr report_error
                       >
4045 :                 >skip0758
                       >
4045 : 68              >            pla         ;load status
4046 : 48              >            pha
                       >            cmp_flag minus
4047 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4049 : f003            >        beq skip0761
                       >        trap            ;failed not equal (non zero)
404b : 208574          >        jsr report_error
                       >
404e :                 >skip0761
                       >
404e : 28              >            plp         ;restore status
                        
                                next_test
404f : ad0032          >            lda test_case   ;previous test
4052 : c90d            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4054 : f003            >        beq skip0764
                       >        trap            ;failed not equal (non zero)
4056 : 208574          >        jsr report_error
                       >
4059 :                 >skip0764
                       >
000e =                 >test_num = test_num + 1
4059 : a90e            >            lda #test_num   ;*** next tests' number
405b : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ;TSX sets NZ - TXS does not
                        ;  This section also tests for proper stack wrap around.
405e : a201                     ldx #1          ;01
                                set_stat $ff
                       >            load_flag $ff
4060 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4062 : 48              >            pha         ;use stack to load status
4063 : 28              >            plp
                        
4064 : 9a                       txs
4065 : 08                       php
4066 : ad0101                   lda $101
                                cmp_flag $ff
4069 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
406b : f003            >        beq skip0769
                       >        trap            ;failed not equal (non zero)
406d : 208574          >        jsr report_error
                       >
4070 :                 >skip0769
                        
                                set_stat 0
                       >            load_flag 0
4070 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4072 : 48              >            pha         ;use stack to load status
4073 : 28              >            plp
                        
4074 : 9a                       txs
4075 : 08                       php
4076 : ad0101                   lda $101
                                cmp_flag 0
4079 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
407b : f003            >        beq skip0774
                       >        trap            ;failed not equal (non zero)
407d : 208574          >        jsr report_error
                       >
4080 :                 >skip0774
                        
4080 : ca                       dex             ;00
                                set_stat $ff
                       >            load_flag $ff
4081 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4083 : 48              >            pha         ;use stack to load status
4084 : 28              >            plp
                        
4085 : 9a                       txs
4086 : 08                       php
4087 : ad0001                   lda $100
                                cmp_flag $ff
408a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
408c : f003            >        beq skip0779
                       >        trap            ;failed not equal (non zero)
408e : 208574          >        jsr report_error
                       >
4091 :                 >skip0779
                        
                                set_stat 0
                       >            load_flag 0
4091 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4093 : 48              >            pha         ;use stack to load status
4094 : 28              >            plp
                        
4095 : 9a                       txs
4096 : 08                       php
4097 : ad0001                   lda $100
                                cmp_flag 0
409a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
409c : f003            >        beq skip0784
                       >        trap            ;failed not equal (non zero)
409e : 208574          >        jsr report_error
                       >
40a1 :                 >skip0784
                        
40a1 : ca                       dex             ;ff
                                set_stat $ff
                       >            load_flag $ff
40a2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
40a4 : 48              >            pha         ;use stack to load status
40a5 : 28              >            plp
                        
40a6 : 9a                       txs
40a7 : 08                       php
40a8 : adff01                   lda $1ff
                                cmp_flag $ff
40ab : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
40ad : f003            >        beq skip0789
                       >        trap            ;failed not equal (non zero)
40af : 208574          >        jsr report_error
                       >
40b2 :                 >skip0789
                        
                                set_stat 0
                       >            load_flag 0
40b2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
40b4 : 48              >            pha         ;use stack to load status
40b5 : 28              >            plp
                        
40b6 : 9a                       txs
40b7 : 08                       php
40b8 : adff01                   lda $1ff
                                cmp_flag 0
40bb : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                        
                        
40bd : a201                     ldx #1
40bf : 9a                       txs             ;sp=01
                                set_stat $ff
                       >            load_flag $ff
40c0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
40c2 : 48              >            pha         ;use stack to load status
40c3 : 28              >            plp
                        
40c4 : ba                       tsx             ;clears Z, N
40c5 : 08                       php             ;sp=00
40c6 : e001                     cpx #1
                                trap_ne
40c8 : f003            >        beq skip0796
                       >        trap            ;failed not equal (non zero)
40ca : 208574          >        jsr report_error
                       >
40cd :                 >skip0796
                        
40cd : ad0101                   lda $101
                                cmp_flag $ff-minus-zero
40d0 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
40d2 : f003            >        beq skip0799
                       >        trap            ;failed not equal (non zero)
40d4 : 208574          >        jsr report_error
                       >
40d7 :                 >skip0799
                        
                                set_stat $ff
                       >            load_flag $ff
40d7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
40d9 : 48              >            pha         ;use stack to load status
40da : 28              >            plp
                        
40db : ba                       tsx             ;clears N, sets Z
40dc : 08                       php             ;sp=ff
40dd : e000                     cpx #0
                                trap_ne
40df : f003            >        beq skip0803
                       >        trap            ;failed not equal (non zero)
40e1 : 208574          >        jsr report_error
                       >
40e4 :                 >skip0803
                        
40e4 : ad0001                   lda $100
                                cmp_flag $ff-minus
40e7 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
40e9 : f003            >        beq skip0806
                       >        trap            ;failed not equal (non zero)
40eb : 208574          >        jsr report_error
                       >
40ee :                 >skip0806
                        
                                set_stat $ff
                       >            load_flag $ff
40ee : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
40f0 : 48              >            pha         ;use stack to load status
40f1 : 28              >            plp
                        
40f2 : ba                       tsx             ;clears N, sets Z
40f3 : 08                       php             ;sp=fe
40f4 : e0ff                     cpx #$ff
                                trap_ne
40f6 : f003            >        beq skip0810
                       >        trap            ;failed not equal (non zero)
40f8 : 208574          >        jsr report_error
                       >
40fb :                 >skip0810
                        
40fb : adff01                   lda $1ff
                                cmp_flag $ff-zero
40fe : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
4100 : f003            >        beq skip0813
                       >        trap            ;failed not equal (non zero)
4102 : 208574          >        jsr report_error
                       >
4105 :                 >skip0813
                        
                        
4105 : a201                     ldx #1
4107 : 9a                       txs             ;sp=01
                                set_stat 0
                       >            load_flag 0
4108 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
410a : 48              >            pha         ;use stack to load status
410b : 28              >            plp
                        
410c : ba                       tsx             ;clears Z, N
410d : 08                       php             ;sp=00
410e : e001                     cpx #1
                                trap_ne
4110 : f003            >        beq skip0817
                       >        trap            ;failed not equal (non zero)
4112 : 208574          >        jsr report_error
                       >
4115 :                 >skip0817
                        
4115 : ad0101                   lda $101
                                cmp_flag 0
4118 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
411a : f003            >        beq skip0820
                       >        trap            ;failed not equal (non zero)
411c : 208574          >        jsr report_error
                       >
411f :                 >skip0820
                        
                                set_stat 0
                       >            load_flag 0
411f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4121 : 48              >            pha         ;use stack to load status
4122 : 28              >            plp
                        
4123 : ba                       tsx             ;clears N, sets Z
4124 : 08                       php             ;sp=ff
4125 : e000                     cpx #0
                                trap_ne
4127 : f003            >        beq skip0824
                       >        trap            ;failed not equal (non zero)
4129 : 208574          >        jsr report_error
                       >
412c :                 >skip0824
                        
412c : ad0001                   lda $100
                                cmp_flag zero
412f : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
4131 : f003            >        beq skip0827
                       >        trap            ;failed not equal (non zero)
4133 : 208574          >        jsr report_error
                       >
4136 :                 >skip0827
                        
                                set_stat 0
                       >            load_flag 0
4136 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4138 : 48              >            pha         ;use stack to load status
4139 : 28              >            plp
                        
413a : ba                       tsx             ;clears N, sets Z
413b : 08                       php             ;sp=fe
413c : e0ff                     cpx #$ff
                                trap_ne
413e : f003            >        beq skip0831
                       >        trap            ;failed not equal (non zero)
4140 : 208574          >        jsr report_error
                       >
4143 :                 >skip0831
                        
4143 : adff01                   lda $1ff
                                cmp_flag minus
4146 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
4148 : f003            >        beq skip0834
                       >        trap            ;failed not equal (non zero)
414a : 208574          >        jsr report_error
                       >
414d :                 >skip0834
                        
414d : 68                       pla             ;sp=ff
                                next_test
414e : ad0032          >            lda test_case   ;previous test
4151 : c90e            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4153 : f003            >        beq skip0837
                       >        trap            ;failed not equal (non zero)
4155 : 208574          >        jsr report_error
                       >
4158 :                 >skip0837
                       >
000f =                 >test_num = test_num + 1
4158 : a90f            >            lda #test_num   ;*** next tests' number
415a : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing index register load & store LDY LDX STY STX all addressing modes
                        ; LDX / STX - zp,y / abs,y
415d : a003                     ldy #3
415f :                  tldx
                                set_stat 0
                       >            load_flag 0
415f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4161 : 48              >            pha         ;use stack to load status
4162 : 28              >            plp
                        
4163 : b65b                     ldx zp1,y
4165 : 08                       php         ;test stores do not alter flags
4166 : 8a                       txa
4167 : 49c3                     eor #$c3
4169 : 28                       plp
416a : 990332                   sta abst,y
416d : 08                       php         ;flags after load/store sequence
416e : 49c3                     eor #$c3
4170 : d91832                   cmp abs1,y  ;test result
                                trap_ne
4173 : f003            >        beq skip0841
                       >        trap            ;failed not equal (non zero)
4175 : 208574          >        jsr report_error
                       >
4178 :                 >skip0841
                        
4178 : 68                       pla         ;load status
                                eor_flag 0
4179 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
417b : d91d32                   cmp fLDx,y  ;test flags
                                trap_ne
417e : f003            >        beq skip0844
                       >        trap            ;failed not equal (non zero)
4180 : 208574          >        jsr report_error
                       >
4183 :                 >skip0844
                        
4183 : 88                       dey
4184 : 10d9                     bpl tldx
                        
4186 : a003                     ldy #3
4188 :                  tldx1
                                set_stat $ff
                       >            load_flag $ff
4188 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
418a : 48              >            pha         ;use stack to load status
418b : 28              >            plp
                        
418c : b65b                     ldx zp1,y
418e : 08                       php         ;test stores do not alter flags
418f : 8a                       txa
4190 : 49c3                     eor #$c3
4192 : 28                       plp
4193 : 990332                   sta abst,y
4196 : 08                       php         ;flags after load/store sequence
4197 : 49c3                     eor #$c3
4199 : d91832                   cmp abs1,y  ;test result
                                trap_ne
419c : f003            >        beq skip0848
                       >        trap            ;failed not equal (non zero)
419e : 208574          >        jsr report_error
                       >
41a1 :                 >skip0848
                        
41a1 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
41a2 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
41a4 : d91d32                   cmp fLDx,y  ;test flags
                                trap_ne
41a7 : f003            >        beq skip0851
                       >        trap            ;failed not equal (non zero)
41a9 : 208574          >        jsr report_error
                       >
41ac :                 >skip0851
                        
41ac : 88                       dey
41ad : 10d9                     bpl tldx1
                        
41af : a003                     ldy #3
41b1 :                  tldx2
                                set_stat 0
                       >            load_flag 0
41b1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
41b3 : 48              >            pha         ;use stack to load status
41b4 : 28              >            plp
                        
41b5 : be1832                   ldx abs1,y
41b8 : 08                       php         ;test stores do not alter flags
41b9 : 8a                       txa
41ba : 49c3                     eor #$c3
41bc : aa                       tax
41bd : 28                       plp
41be : 9652                     stx zpt,y
41c0 : 08                       php         ;flags after load/store sequence
41c1 : 49c3                     eor #$c3
41c3 : d95b00                   cmp zp1,y   ;test result
                                trap_ne
41c6 : f003            >        beq skip0855
                       >        trap            ;failed not equal (non zero)
41c8 : 208574          >        jsr report_error
                       >
41cb :                 >skip0855
                        
41cb : 68                       pla         ;load status
                                eor_flag 0
41cc : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
41ce : d91d32                   cmp fLDx,y  ;test flags
                                trap_ne
41d1 : f003            >        beq skip0858
                       >        trap            ;failed not equal (non zero)
41d3 : 208574          >        jsr report_error
                       >
41d6 :                 >skip0858
                        
41d6 : 88                       dey
41d7 : 10d8                     bpl tldx2
                        
41d9 : a003                     ldy #3
41db :                  tldx3
                                set_stat $ff
                       >            load_flag $ff
41db : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
41dd : 48              >            pha         ;use stack to load status
41de : 28              >            plp
                        
41df : be1832                   ldx abs1,y
41e2 : 08                       php         ;test stores do not alter flags
41e3 : 8a                       txa
41e4 : 49c3                     eor #$c3
41e6 : aa                       tax
41e7 : 28                       plp
41e8 : 9652                     stx zpt,y
41ea : 08                       php         ;flags after load/store sequence
41eb : 49c3                     eor #$c3
41ed : d95b00                   cmp zp1,y   ;test result
                                trap_ne
41f0 : f003            >        beq skip0862
                       >        trap            ;failed not equal (non zero)
41f2 : 208574          >        jsr report_error
                       >
41f5 :                 >skip0862
                        
41f5 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
41f6 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
41f8 : d91d32                   cmp fLDx,y  ;test flags
                                trap_ne
41fb : f003            >        beq skip0865
                       >        trap            ;failed not equal (non zero)
41fd : 208574          >        jsr report_error
                       >
4200 :                 >skip0865
                        
4200 : 88                       dey
4201 : 10d8                     bpl tldx3
                        
4203 : a003                     ldy #3      ;testing store result
4205 : a200                     ldx #0
4207 : b95200           tstx    lda zpt,y
420a : 49c3                     eor #$c3
420c : d95b00                   cmp zp1,y
                                trap_ne     ;store to zp data
420f : f003            >        beq skip0867
                       >        trap            ;failed not equal (non zero)
4211 : 208574          >        jsr report_error
                       >
4214 :                 >skip0867
                        
4214 : 9652                     stx zpt,y   ;clear
4216 : b90332                   lda abst,y
4219 : 49c3                     eor #$c3
421b : d91832                   cmp abs1,y
                                trap_ne     ;store to abs data
421e : f003            >        beq skip0869
                       >        trap            ;failed not equal (non zero)
4220 : 208574          >        jsr report_error
                       >
4223 :                 >skip0869
                        
4223 : 8a                       txa
4224 : 990332                   sta abst,y  ;clear
4227 : 88                       dey
4228 : 10dd                     bpl tstx
                                next_test
422a : ad0032          >            lda test_case   ;previous test
422d : c90f            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
422f : f003            >        beq skip0872
                       >        trap            ;failed not equal (non zero)
4231 : 208574          >        jsr report_error
                       >
4234 :                 >skip0872
                       >
0010 =                 >test_num = test_num + 1
4234 : a910            >            lda #test_num   ;*** next tests' number
4236 : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; indexed wraparound test (only zp should wrap)
4239 : a0fd                     ldy #3+$fa
423b : b661             tldx4   ldx zp1-$fa&$ff,y   ;wrap on indexed zp
423d : 8a                       txa
423e : 990931                   sta abst-$fa,y      ;no STX abs,y!
4241 : 88                       dey
4242 : c0fa                     cpy #$fa
4244 : b0f5                     bcs tldx4
4246 : a0fd                     ldy #3+$fa
4248 : be1e31           tldx5   ldx abs1-$fa,y      ;no wrap on indexed abs
424b : 9658                     stx zpt-$fa&$ff,y
424d : 88                       dey
424e : c0fa                     cpy #$fa
4250 : b0f6                     bcs tldx5
4252 : a003                     ldy #3      ;testing wraparound result
4254 : a200                     ldx #0
4256 : b95200           tstx1   lda zpt,y
4259 : d95b00                   cmp zp1,y
                                trap_ne     ;store to zp data
425c : f003            >        beq skip0874
                       >        trap            ;failed not equal (non zero)
425e : 208574          >        jsr report_error
                       >
4261 :                 >skip0874
                        
4261 : 9652                     stx zpt,y   ;clear
4263 : b90332                   lda abst,y
4266 : d91832                   cmp abs1,y
                                trap_ne     ;store to abs data
4269 : f003            >        beq skip0876
                       >        trap            ;failed not equal (non zero)
426b : 208574          >        jsr report_error
                       >
426e :                 >skip0876
                        
426e : 8a                       txa
426f : 990332                   sta abst,y  ;clear
4272 : 88                       dey
4273 : 10e1                     bpl tstx1
                                next_test
4275 : ad0032          >            lda test_case   ;previous test
4278 : c910            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
427a : f003            >        beq skip0879
                       >        trap            ;failed not equal (non zero)
427c : 208574          >        jsr report_error
                       >
427f :                 >skip0879
                       >
0011 =                 >test_num = test_num + 1
427f : a911            >            lda #test_num   ;*** next tests' number
4281 : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; LDY / STY - zp,x / abs,x
4284 : a203                     ldx #3
4286 :                  tldy
                                set_stat 0
                       >            load_flag 0
4286 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4288 : 48              >            pha         ;use stack to load status
4289 : 28              >            plp
                        
428a : b45b                     ldy zp1,x
428c : 08                       php         ;test stores do not alter flags
428d : 98                       tya
428e : 49c3                     eor #$c3
4290 : 28                       plp
4291 : 9d0332                   sta abst,x
4294 : 08                       php         ;flags after load/store sequence
4295 : 49c3                     eor #$c3
4297 : dd1832                   cmp abs1,x  ;test result
                                trap_ne
429a : f003            >        beq skip0883
                       >        trap            ;failed not equal (non zero)
429c : 208574          >        jsr report_error
                       >
429f :                 >skip0883
                        
429f : 68                       pla         ;load status
                                eor_flag 0
42a0 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
42a2 : dd1d32                   cmp fLDx,x  ;test flags
                                trap_ne
42a5 : f003            >        beq skip0886
                       >        trap            ;failed not equal (non zero)
42a7 : 208574          >        jsr report_error
                       >
42aa :                 >skip0886
                        
42aa : ca                       dex
42ab : 10d9                     bpl tldy
                        
42ad : a203                     ldx #3
42af :                  tldy1
                                set_stat $ff
                       >            load_flag $ff
42af : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
42b1 : 48              >            pha         ;use stack to load status
42b2 : 28              >            plp
                        
42b3 : b45b                     ldy zp1,x
42b5 : 08                       php         ;test stores do not alter flags
42b6 : 98                       tya
42b7 : 49c3                     eor #$c3
42b9 : 28                       plp
42ba : 9d0332                   sta abst,x
42bd : 08                       php         ;flags after load/store sequence
42be : 49c3                     eor #$c3
42c0 : dd1832                   cmp abs1,x  ;test result
                                trap_ne
42c3 : f003            >        beq skip0890
                       >        trap            ;failed not equal (non zero)
42c5 : 208574          >        jsr report_error
                       >
42c8 :                 >skip0890
                        
42c8 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
42c9 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
42cb : dd1d32                   cmp fLDx,x  ;test flags
                                trap_ne
42ce : f003            >        beq skip0893
                       >        trap            ;failed not equal (non zero)
42d0 : 208574          >        jsr report_error
                       >
42d3 :                 >skip0893
                        
42d3 : ca                       dex
42d4 : 10d9                     bpl tldy1
                        
42d6 : a203                     ldx #3
42d8 :                  tldy2
                                set_stat 0
                       >            load_flag 0
42d8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
42da : 48              >            pha         ;use stack to load status
42db : 28              >            plp
                        
42dc : bc1832                   ldy abs1,x
42df : 08                       php         ;test stores do not alter flags
42e0 : 98                       tya
42e1 : 49c3                     eor #$c3
42e3 : a8                       tay
42e4 : 28                       plp
42e5 : 9452                     sty zpt,x
42e7 : 08                       php         ;flags after load/store sequence
42e8 : 49c3                     eor #$c3
42ea : d55b                     cmp zp1,x   ;test result
                                trap_ne
42ec : f003            >        beq skip0897
                       >        trap            ;failed not equal (non zero)
42ee : 208574          >        jsr report_error
                       >
42f1 :                 >skip0897
                        
42f1 : 68                       pla         ;load status
                                eor_flag 0
42f2 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
42f4 : dd1d32                   cmp fLDx,x  ;test flags
                                trap_ne
42f7 : f003            >        beq skip0900
                       >        trap            ;failed not equal (non zero)
42f9 : 208574          >        jsr report_error
                       >
42fc :                 >skip0900
                        
42fc : ca                       dex
42fd : 10d9                     bpl tldy2
                        
42ff : a203                     ldx #3
4301 :                  tldy3
                                set_stat $ff
                       >            load_flag $ff
4301 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4303 : 48              >            pha         ;use stack to load status
4304 : 28              >            plp
                        
4305 : bc1832                   ldy abs1,x
4308 : 08                       php         ;test stores do not alter flags
4309 : 98                       tya
430a : 49c3                     eor #$c3
430c : a8                       tay
430d : 28                       plp
430e : 9452                     sty zpt,x
4310 : 08                       php         ;flags after load/store sequence
4311 : 49c3                     eor #$c3
4313 : d55b                     cmp zp1,x   ;test result
                                trap_ne
4315 : f003            >        beq skip0904
                       >        trap            ;failed not equal (non zero)
4317 : 208574          >        jsr report_error
                       >
431a :                 >skip0904
                        
431a : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
431b : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
431d : dd1d32                   cmp fLDx,x  ;test flags
                                trap_ne
4320 : f003            >        beq skip0907
                       >        trap            ;failed not equal (non zero)
4322 : 208574          >        jsr report_error
                       >
4325 :                 >skip0907
                        
4325 : ca                       dex
4326 : 10d9                     bpl tldy3
                        
4328 : a203                     ldx #3      ;testing store result
432a : a000                     ldy #0
432c : b552             tsty    lda zpt,x
432e : 49c3                     eor #$c3
4330 : d55b                     cmp zp1,x
                                trap_ne     ;store to zp,x data
4332 : f003            >        beq skip0909
                       >        trap            ;failed not equal (non zero)
4334 : 208574          >        jsr report_error
                       >
4337 :                 >skip0909
                        
4337 : 9452                     sty zpt,x   ;clear
4339 : bd0332                   lda abst,x
433c : 49c3                     eor #$c3
433e : dd1832                   cmp abs1,x
                                trap_ne     ;store to abs,x data
4341 : f003            >        beq skip0911
                       >        trap            ;failed not equal (non zero)
4343 : 208574          >        jsr report_error
                       >
4346 :                 >skip0911
                        
4346 : 8a                       txa
4347 : 9d0332                   sta abst,x  ;clear
434a : ca                       dex
434b : 10df                     bpl tsty
                                next_test
434d : ad0032          >            lda test_case   ;previous test
4350 : c911            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4352 : f003            >        beq skip0914
                       >        trap            ;failed not equal (non zero)
4354 : 208574          >        jsr report_error
                       >
4357 :                 >skip0914
                       >
0012 =                 >test_num = test_num + 1
4357 : a912            >            lda #test_num   ;*** next tests' number
4359 : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; indexed wraparound test (only zp should wrap)
435c : a2fd                     ldx #3+$fa
435e : b461             tldy4   ldy zp1-$fa&$ff,x   ;wrap on indexed zp
4360 : 98                       tya
4361 : 9d0931                   sta abst-$fa,x      ;no STX abs,x!
4364 : ca                       dex
4365 : e0fa                     cpx #$fa
4367 : b0f5                     bcs tldy4
4369 : a2fd                     ldx #3+$fa
436b : bc1e31           tldy5   ldy abs1-$fa,x      ;no wrap on indexed abs
436e : 9458                     sty zpt-$fa&$ff,x
4370 : ca                       dex
4371 : e0fa                     cpx #$fa
4373 : b0f6                     bcs tldy5
4375 : a203                     ldx #3      ;testing wraparound result
4377 : a000                     ldy #0
4379 : b552             tsty1   lda zpt,x
437b : d55b                     cmp zp1,x
                                trap_ne     ;store to zp,x data
437d : f003            >        beq skip0916
                       >        trap            ;failed not equal (non zero)
437f : 208574          >        jsr report_error
                       >
4382 :                 >skip0916
                        
4382 : 9452                     sty zpt,x   ;clear
4384 : bd0332                   lda abst,x
4387 : dd1832                   cmp abs1,x
                                trap_ne     ;store to abs,x data
438a : f003            >        beq skip0918
                       >        trap            ;failed not equal (non zero)
438c : 208574          >        jsr report_error
                       >
438f :                 >skip0918
                        
438f : 8a                       txa
4390 : 9d0332                   sta abst,x  ;clear
4393 : ca                       dex
4394 : 10e3                     bpl tsty1
                                next_test
4396 : ad0032          >            lda test_case   ;previous test
4399 : c912            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
439b : f003            >        beq skip0921
                       >        trap            ;failed not equal (non zero)
439d : 208574          >        jsr report_error
                       >
43a0 :                 >skip0921
                       >
0013 =                 >test_num = test_num + 1
43a0 : a913            >            lda #test_num   ;*** next tests' number
43a2 : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; LDX / STX - zp / abs / #
                                set_stat 0
                       >            load_flag 0
43a5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
43a7 : 48              >            pha         ;use stack to load status
43a8 : 28              >            plp
                        
43a9 : a65b                     ldx zp1
43ab : 08                       php         ;test stores do not alter flags
43ac : 8a                       txa
43ad : 49c3                     eor #$c3
43af : aa                       tax
43b0 : 28                       plp
43b1 : 8e0332                   stx abst
43b4 : 08                       php         ;flags after load/store sequence
43b5 : 49c3                     eor #$c3
43b7 : aa                       tax
43b8 : e0c3                     cpx #$c3    ;test result
                                trap_ne
43ba : f003            >        beq skip0925
                       >        trap            ;failed not equal (non zero)
43bc : 208574          >        jsr report_error
                       >
43bf :                 >skip0925
                        
43bf : 68                       pla         ;load status
                                eor_flag 0
43c0 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
43c2 : cd1d32                   cmp fLDx    ;test flags
                                trap_ne
43c5 : f003            >        beq skip0928
                       >        trap            ;failed not equal (non zero)
43c7 : 208574          >        jsr report_error
                       >
43ca :                 >skip0928
                        
                                set_stat 0
                       >            load_flag 0
43ca : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
43cc : 48              >            pha         ;use stack to load status
43cd : 28              >            plp
                        
43ce : a65c                     ldx zp1+1
43d0 : 08                       php         ;test stores do not alter flags
43d1 : 8a                       txa
43d2 : 49c3                     eor #$c3
43d4 : aa                       tax
43d5 : 28                       plp
43d6 : 8e0432                   stx abst+1
43d9 : 08                       php         ;flags after load/store sequence
43da : 49c3                     eor #$c3
43dc : aa                       tax
43dd : e082                     cpx #$82    ;test result
                                trap_ne
43df : f003            >        beq skip0932
                       >        trap            ;failed not equal (non zero)
43e1 : 208574          >        jsr report_error
                       >
43e4 :                 >skip0932
                        
43e4 : 68                       pla         ;load status
                                eor_flag 0
43e5 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
43e7 : cd1e32                   cmp fLDx+1  ;test flags
                                trap_ne
43ea : f003            >        beq skip0935
                       >        trap            ;failed not equal (non zero)
43ec : 208574          >        jsr report_error
                       >
43ef :                 >skip0935
                        
                                set_stat 0
                       >            load_flag 0
43ef : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
43f1 : 48              >            pha         ;use stack to load status
43f2 : 28              >            plp
                        
43f3 : a65d                     ldx zp1+2
43f5 : 08                       php         ;test stores do not alter flags
43f6 : 8a                       txa
43f7 : 49c3                     eor #$c3
43f9 : aa                       tax
43fa : 28                       plp
43fb : 8e0532                   stx abst+2
43fe : 08                       php         ;flags after load/store sequence
43ff : 49c3                     eor #$c3
4401 : aa                       tax
4402 : e041                     cpx #$41    ;test result
                                trap_ne
4404 : f003            >        beq skip0939
                       >        trap            ;failed not equal (non zero)
4406 : 208574          >        jsr report_error
                       >
4409 :                 >skip0939
                        
4409 : 68                       pla         ;load status
                                eor_flag 0
440a : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
440c : cd1f32                   cmp fLDx+2  ;test flags
                                trap_ne
440f : f003            >        beq skip0942
                       >        trap            ;failed not equal (non zero)
4411 : 208574          >        jsr report_error
                       >
4414 :                 >skip0942
                        
                                set_stat 0
                       >            load_flag 0
4414 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4416 : 48              >            pha         ;use stack to load status
4417 : 28              >            plp
                        
4418 : a65e                     ldx zp1+3
441a : 08                       php         ;test stores do not alter flags
441b : 8a                       txa
441c : 49c3                     eor #$c3
441e : aa                       tax
441f : 28                       plp
4420 : 8e0632                   stx abst+3
4423 : 08                       php         ;flags after load/store sequence
4424 : 49c3                     eor #$c3
4426 : aa                       tax
4427 : e000                     cpx #0      ;test result
                                trap_ne
4429 : f003            >        beq skip0946
                       >        trap            ;failed not equal (non zero)
442b : 208574          >        jsr report_error
                       >
442e :                 >skip0946
                        
442e : 68                       pla         ;load status
                                eor_flag 0
442f : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4431 : cd2032                   cmp fLDx+3  ;test flags
                                trap_ne
4434 : f003            >        beq skip0949
                       >        trap            ;failed not equal (non zero)
4436 : 208574          >        jsr report_error
                       >
4439 :                 >skip0949
                        
                        
                                set_stat $ff
                       >            load_flag $ff
4439 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
443b : 48              >            pha         ;use stack to load status
443c : 28              >            plp
                        
443d : a65b                     ldx zp1
443f : 08                       php         ;test stores do not alter flags
4440 : 8a                       txa
4441 : 49c3                     eor #$c3
4443 : aa                       tax
4444 : 28                       plp
4445 : 8e0332                   stx abst
4448 : 08                       php         ;flags after load/store sequence
4449 : 49c3                     eor #$c3
444b : aa                       tax
444c : e0c3                     cpx #$c3    ;test result
                                trap_ne     ;
444e : f003            >        beq skip0953
                       >        trap            ;failed not equal (non zero)
4450 : 208574          >        jsr report_error
                       >
4453 :                 >skip0953
                        
4453 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4454 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4456 : cd1d32                   cmp fLDx    ;test flags
                                trap_ne
4459 : f003            >        beq skip0956
                       >        trap            ;failed not equal (non zero)
445b : 208574          >        jsr report_error
                       >
445e :                 >skip0956
                        
                                set_stat $ff
                       >            load_flag $ff
445e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4460 : 48              >            pha         ;use stack to load status
4461 : 28              >            plp
                        
4462 : a65c                     ldx zp1+1
4464 : 08                       php         ;test stores do not alter flags
4465 : 8a                       txa
4466 : 49c3                     eor #$c3
4468 : aa                       tax
4469 : 28                       plp
446a : 8e0432                   stx abst+1
446d : 08                       php         ;flags after load/store sequence
446e : 49c3                     eor #$c3
4470 : aa                       tax
4471 : e082                     cpx #$82    ;test result
                                trap_ne
4473 : f003            >        beq skip0960
                       >        trap            ;failed not equal (non zero)
4475 : 208574          >        jsr report_error
                       >
4478 :                 >skip0960
                        
4478 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4479 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
447b : cd1e32                   cmp fLDx+1  ;test flags
                                trap_ne
447e : f003            >        beq skip0963
                       >        trap            ;failed not equal (non zero)
4480 : 208574          >        jsr report_error
                       >
4483 :                 >skip0963
                        
                                set_stat $ff
                       >            load_flag $ff
4483 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4485 : 48              >            pha         ;use stack to load status
4486 : 28              >            plp
                        
4487 : a65d                     ldx zp1+2
4489 : 08                       php         ;test stores do not alter flags
448a : 8a                       txa
448b : 49c3                     eor #$c3
448d : aa                       tax
448e : 28                       plp
448f : 8e0532                   stx abst+2
4492 : 08                       php         ;flags after load/store sequence
4493 : 49c3                     eor #$c3
4495 : aa                       tax
4496 : e041                     cpx #$41    ;test result
                                trap_ne     ;
4498 : f003            >        beq skip0967
                       >        trap            ;failed not equal (non zero)
449a : 208574          >        jsr report_error
                       >
449d :                 >skip0967
                        
449d : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
449e : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
44a0 : cd1f32                   cmp fLDx+2  ;test flags
                                trap_ne
44a3 : f003            >        beq skip0970
                       >        trap            ;failed not equal (non zero)
44a5 : 208574          >        jsr report_error
                       >
44a8 :                 >skip0970
                        
                                set_stat $ff
                       >            load_flag $ff
44a8 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
44aa : 48              >            pha         ;use stack to load status
44ab : 28              >            plp
                        
44ac : a65e                     ldx zp1+3
44ae : 08                       php         ;test stores do not alter flags
44af : 8a                       txa
44b0 : 49c3                     eor #$c3
44b2 : aa                       tax
44b3 : 28                       plp
44b4 : 8e0632                   stx abst+3
44b7 : 08                       php         ;flags after load/store sequence
44b8 : 49c3                     eor #$c3
44ba : aa                       tax
44bb : e000                     cpx #0      ;test result
                                trap_ne
44bd : f003            >        beq skip0974
                       >        trap            ;failed not equal (non zero)
44bf : 208574          >        jsr report_error
                       >
44c2 :                 >skip0974
                        
44c2 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
44c3 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
44c5 : cd2032                   cmp fLDx+3  ;test flags
                                trap_ne
44c8 : f003            >        beq skip0977
                       >        trap            ;failed not equal (non zero)
44ca : 208574          >        jsr report_error
                       >
44cd :                 >skip0977
                        
                        
                                set_stat 0
                       >            load_flag 0
44cd : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
44cf : 48              >            pha         ;use stack to load status
44d0 : 28              >            plp
                        
44d1 : ae1832                   ldx abs1
44d4 : 08                       php         ;test stores do not alter flags
44d5 : 8a                       txa
44d6 : 49c3                     eor #$c3
44d8 : aa                       tax
44d9 : 28                       plp
44da : 8652                     stx zpt
44dc : 08                       php         ;flags after load/store sequence
44dd : 49c3                     eor #$c3
44df : c55b                     cmp zp1     ;test result
                                trap_ne
44e1 : f003            >        beq skip0981
                       >        trap            ;failed not equal (non zero)
44e3 : 208574          >        jsr report_error
                       >
44e6 :                 >skip0981
                        
44e6 : 68                       pla         ;load status
                                eor_flag 0
44e7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
44e9 : cd1d32                   cmp fLDx    ;test flags
                                trap_ne
44ec : f003            >        beq skip0984
                       >        trap            ;failed not equal (non zero)
44ee : 208574          >        jsr report_error
                       >
44f1 :                 >skip0984
                        
                                set_stat 0
                       >            load_flag 0
44f1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
44f3 : 48              >            pha         ;use stack to load status
44f4 : 28              >            plp
                        
44f5 : ae1932                   ldx abs1+1
44f8 : 08                       php         ;test stores do not alter flags
44f9 : 8a                       txa
44fa : 49c3                     eor #$c3
44fc : aa                       tax
44fd : 28                       plp
44fe : 8653                     stx zpt+1
4500 : 08                       php         ;flags after load/store sequence
4501 : 49c3                     eor #$c3
4503 : c55c                     cmp zp1+1   ;test result
                                trap_ne
4505 : f003            >        beq skip0988
                       >        trap            ;failed not equal (non zero)
4507 : 208574          >        jsr report_error
                       >
450a :                 >skip0988
                        
450a : 68                       pla         ;load status
                                eor_flag 0
450b : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
450d : cd1e32                   cmp fLDx+1  ;test flags
                                trap_ne
4510 : f003            >        beq skip0991
                       >        trap            ;failed not equal (non zero)
4512 : 208574          >        jsr report_error
                       >
4515 :                 >skip0991
                        
                                set_stat 0
                       >            load_flag 0
4515 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4517 : 48              >            pha         ;use stack to load status
4518 : 28              >            plp
                        
4519 : ae1a32                   ldx abs1+2
451c : 08                       php         ;test stores do not alter flags
451d : 8a                       txa
451e : 49c3                     eor #$c3
4520 : aa                       tax
4521 : 28                       plp
4522 : 8654                     stx zpt+2
4524 : 08                       php         ;flags after load/store sequence
4525 : 49c3                     eor #$c3
4527 : c55d                     cmp zp1+2   ;test result
                                trap_ne
4529 : f003            >        beq skip0995
                       >        trap            ;failed not equal (non zero)
452b : 208574          >        jsr report_error
                       >
452e :                 >skip0995
                        
452e : 68                       pla         ;load status
                                eor_flag 0
452f : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4531 : cd1f32                   cmp fLDx+2  ;test flags
                                trap_ne
4534 : f003            >        beq skip0998
                       >        trap            ;failed not equal (non zero)
4536 : 208574          >        jsr report_error
                       >
4539 :                 >skip0998
                        
                                set_stat 0
                       >            load_flag 0
4539 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
453b : 48              >            pha         ;use stack to load status
453c : 28              >            plp
                        
453d : ae1b32                   ldx abs1+3
4540 : 08                       php         ;test stores do not alter flags
4541 : 8a                       txa
4542 : 49c3                     eor #$c3
4544 : aa                       tax
4545 : 28                       plp
4546 : 8655                     stx zpt+3
4548 : 08                       php         ;flags after load/store sequence
4549 : 49c3                     eor #$c3
454b : c55e                     cmp zp1+3   ;test result
                                trap_ne
454d : f003            >        beq skip1002
                       >        trap            ;failed not equal (non zero)
454f : 208574          >        jsr report_error
                       >
4552 :                 >skip1002
                        
4552 : 68                       pla         ;load status
                                eor_flag 0
4553 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4555 : cd2032                   cmp fLDx+3  ;test flags
                                trap_ne
4558 : f003            >        beq skip1005
                       >        trap            ;failed not equal (non zero)
455a : 208574          >        jsr report_error
                       >
455d :                 >skip1005
                        
                        
                                set_stat $ff
                       >            load_flag $ff
455d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
455f : 48              >            pha         ;use stack to load status
4560 : 28              >            plp
                        
4561 : ae1832                   ldx abs1
4564 : 08                       php         ;test stores do not alter flags
4565 : 8a                       txa
4566 : 49c3                     eor #$c3
4568 : aa                       tax
4569 : 28                       plp
456a : 8652                     stx zpt
456c : 08                       php         ;flags after load/store sequence
456d : 49c3                     eor #$c3
456f : aa                       tax
4570 : e45b                     cpx zp1     ;test result
                                trap_ne
4572 : f003            >        beq skip1009
                       >        trap            ;failed not equal (non zero)
4574 : 208574          >        jsr report_error
                       >
4577 :                 >skip1009
                        
4577 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4578 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
457a : cd1d32                   cmp fLDx    ;test flags
                                trap_ne
457d : f003            >        beq skip1012
                       >        trap            ;failed not equal (non zero)
457f : 208574          >        jsr report_error
                       >
4582 :                 >skip1012
                        
                                set_stat $ff
                       >            load_flag $ff
4582 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4584 : 48              >            pha         ;use stack to load status
4585 : 28              >            plp
                        
4586 : ae1932                   ldx abs1+1
4589 : 08                       php         ;test stores do not alter flags
458a : 8a                       txa
458b : 49c3                     eor #$c3
458d : aa                       tax
458e : 28                       plp
458f : 8653                     stx zpt+1
4591 : 08                       php         ;flags after load/store sequence
4592 : 49c3                     eor #$c3
4594 : aa                       tax
4595 : e45c                     cpx zp1+1   ;test result
                                trap_ne
4597 : f003            >        beq skip1016
                       >        trap            ;failed not equal (non zero)
4599 : 208574          >        jsr report_error
                       >
459c :                 >skip1016
                        
459c : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
459d : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
459f : cd1e32                   cmp fLDx+1  ;test flags
                                trap_ne
45a2 : f003            >        beq skip1019
                       >        trap            ;failed not equal (non zero)
45a4 : 208574          >        jsr report_error
                       >
45a7 :                 >skip1019
                        
                                set_stat $ff
                       >            load_flag $ff
45a7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
45a9 : 48              >            pha         ;use stack to load status
45aa : 28              >            plp
                        
45ab : ae1a32                   ldx abs1+2
45ae : 08                       php         ;test stores do not alter flags
45af : 8a                       txa
45b0 : 49c3                     eor #$c3
45b2 : aa                       tax
45b3 : 28                       plp
45b4 : 8654                     stx zpt+2
45b6 : 08                       php         ;flags after load/store sequence
45b7 : 49c3                     eor #$c3
45b9 : aa                       tax
45ba : e45d                     cpx zp1+2   ;test result
                                trap_ne
45bc : f003            >        beq skip1023
                       >        trap            ;failed not equal (non zero)
45be : 208574          >        jsr report_error
                       >
45c1 :                 >skip1023
                        
45c1 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
45c2 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
45c4 : cd1f32                   cmp fLDx+2  ;test flags
                                trap_ne
45c7 : f003            >        beq skip1026
                       >        trap            ;failed not equal (non zero)
45c9 : 208574          >        jsr report_error
                       >
45cc :                 >skip1026
                        
                                set_stat $ff
                       >            load_flag $ff
45cc : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
45ce : 48              >            pha         ;use stack to load status
45cf : 28              >            plp
                        
45d0 : ae1b32                   ldx abs1+3
45d3 : 08                       php         ;test stores do not alter flags
45d4 : 8a                       txa
45d5 : 49c3                     eor #$c3
45d7 : aa                       tax
45d8 : 28                       plp
45d9 : 8655                     stx zpt+3
45db : 08                       php         ;flags after load/store sequence
45dc : 49c3                     eor #$c3
45de : aa                       tax
45df : e45e                     cpx zp1+3   ;test result
                                trap_ne
45e1 : f003            >        beq skip1030
                       >        trap            ;failed not equal (non zero)
45e3 : 208574          >        jsr report_error
                       >
45e6 :                 >skip1030
                        
45e6 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
45e7 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
45e9 : cd2032                   cmp fLDx+3  ;test flags
                                trap_ne
45ec : f003            >        beq skip1033
                       >        trap            ;failed not equal (non zero)
45ee : 208574          >        jsr report_error
                       >
45f1 :                 >skip1033
                        
                        
                                set_stat 0
                       >            load_flag 0
45f1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
45f3 : 48              >            pha         ;use stack to load status
45f4 : 28              >            plp
                        
45f5 : a2c3                     ldx #$c3
45f7 : 08                       php
45f8 : ec1832                   cpx abs1    ;test result
                                trap_ne
45fb : f003            >        beq skip1037
                       >        trap            ;failed not equal (non zero)
45fd : 208574          >        jsr report_error
                       >
4600 :                 >skip1037
                        
4600 : 68                       pla         ;load status
                                eor_flag 0
4601 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4603 : cd1d32                   cmp fLDx    ;test flags
                                trap_ne
4606 : f003            >        beq skip1040
                       >        trap            ;failed not equal (non zero)
4608 : 208574          >        jsr report_error
                       >
460b :                 >skip1040
                        
                                set_stat 0
                       >            load_flag 0
460b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
460d : 48              >            pha         ;use stack to load status
460e : 28              >            plp
                        
460f : a282                     ldx #$82
4611 : 08                       php
4612 : ec1932                   cpx abs1+1  ;test result
                                trap_ne
4615 : f003            >        beq skip1044
                       >        trap            ;failed not equal (non zero)
4617 : 208574          >        jsr report_error
                       >
461a :                 >skip1044
                        
461a : 68                       pla         ;load status
                                eor_flag 0
461b : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
461d : cd1e32                   cmp fLDx+1  ;test flags
                                trap_ne
4620 : f003            >        beq skip1047
                       >        trap            ;failed not equal (non zero)
4622 : 208574          >        jsr report_error
                       >
4625 :                 >skip1047
                        
                                set_stat 0
                       >            load_flag 0
4625 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4627 : 48              >            pha         ;use stack to load status
4628 : 28              >            plp
                        
4629 : a241                     ldx #$41
462b : 08                       php
462c : ec1a32                   cpx abs1+2  ;test result
                                trap_ne
462f : f003            >        beq skip1051
                       >        trap            ;failed not equal (non zero)
4631 : 208574          >        jsr report_error
                       >
4634 :                 >skip1051
                        
4634 : 68                       pla         ;load status
                                eor_flag 0
4635 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4637 : cd1f32                   cmp fLDx+2  ;test flags
                                trap_ne
463a : f003            >        beq skip1054
                       >        trap            ;failed not equal (non zero)
463c : 208574          >        jsr report_error
                       >
463f :                 >skip1054
                        
                                set_stat 0
                       >            load_flag 0
463f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4641 : 48              >            pha         ;use stack to load status
4642 : 28              >            plp
                        
4643 : a200                     ldx #0
4645 : 08                       php
4646 : ec1b32                   cpx abs1+3  ;test result
                                trap_ne
4649 : f003            >        beq skip1058
                       >        trap            ;failed not equal (non zero)
464b : 208574          >        jsr report_error
                       >
464e :                 >skip1058
                        
464e : 68                       pla         ;load status
                                eor_flag 0
464f : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4651 : cd2032                   cmp fLDx+3  ;test flags
                                trap_ne
4654 : f003            >        beq skip1061
                       >        trap            ;failed not equal (non zero)
4656 : 208574          >        jsr report_error
                       >
4659 :                 >skip1061
                        
                        
                                set_stat $ff
                       >            load_flag $ff
4659 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
465b : 48              >            pha         ;use stack to load status
465c : 28              >            plp
                        
465d : a2c3                     ldx #$c3
465f : 08                       php
4660 : ec1832                   cpx abs1    ;test result
                                trap_ne
4663 : f003            >        beq skip1065
                       >        trap            ;failed not equal (non zero)
4665 : 208574          >        jsr report_error
                       >
4668 :                 >skip1065
                        
4668 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4669 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
466b : cd1d32                   cmp fLDx    ;test flags
                                trap_ne
466e : f003            >        beq skip1068
                       >        trap            ;failed not equal (non zero)
4670 : 208574          >        jsr report_error
                       >
4673 :                 >skip1068
                        
                                set_stat $ff
                       >            load_flag $ff
4673 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4675 : 48              >            pha         ;use stack to load status
4676 : 28              >            plp
                        
4677 : a282                     ldx #$82
4679 : 08                       php
467a : ec1932                   cpx abs1+1  ;test result
                                trap_ne
467d : f003            >        beq skip1072
                       >        trap            ;failed not equal (non zero)
467f : 208574          >        jsr report_error
                       >
4682 :                 >skip1072
                        
4682 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4683 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4685 : cd1e32                   cmp fLDx+1  ;test flags
                                trap_ne
4688 : f003            >        beq skip1075
                       >        trap            ;failed not equal (non zero)
468a : 208574          >        jsr report_error
                       >
468d :                 >skip1075
                        
                                set_stat $ff
                       >            load_flag $ff
468d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
468f : 48              >            pha         ;use stack to load status
4690 : 28              >            plp
                        
4691 : a241                     ldx #$41
4693 : 08                       php
4694 : ec1a32                   cpx abs1+2  ;test result
                                trap_ne
4697 : f003            >        beq skip1079
                       >        trap            ;failed not equal (non zero)
4699 : 208574          >        jsr report_error
                       >
469c :                 >skip1079
                        
469c : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
469d : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
469f : cd1f32                   cmp fLDx+2  ;test flags
                                trap_ne
46a2 : f003            >        beq skip1082
                       >        trap            ;failed not equal (non zero)
46a4 : 208574          >        jsr report_error
                       >
46a7 :                 >skip1082
                        
                                set_stat $ff
                       >            load_flag $ff
46a7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
46a9 : 48              >            pha         ;use stack to load status
46aa : 28              >            plp
                        
46ab : a200                     ldx #0
46ad : 08                       php
46ae : ec1b32                   cpx abs1+3  ;test result
                                trap_ne
46b1 : f003            >        beq skip1086
                       >        trap            ;failed not equal (non zero)
46b3 : 208574          >        jsr report_error
                       >
46b6 :                 >skip1086
                        
46b6 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
46b7 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
46b9 : cd2032                   cmp fLDx+3  ;test flags
                                trap_ne
46bc : f003            >        beq skip1089
                       >        trap            ;failed not equal (non zero)
46be : 208574          >        jsr report_error
                       >
46c1 :                 >skip1089
                        
                        
46c1 : a200                     ldx #0
46c3 : a552                     lda zpt
46c5 : 49c3                     eor #$c3
46c7 : c55b                     cmp zp1
                                trap_ne     ;store to zp data
46c9 : f003            >        beq skip1091
                       >        trap            ;failed not equal (non zero)
46cb : 208574          >        jsr report_error
                       >
46ce :                 >skip1091
                        
46ce : 8652                     stx zpt     ;clear
46d0 : ad0332                   lda abst
46d3 : 49c3                     eor #$c3
46d5 : cd1832                   cmp abs1
                                trap_ne     ;store to abs data
46d8 : f003            >        beq skip1093
                       >        trap            ;failed not equal (non zero)
46da : 208574          >        jsr report_error
                       >
46dd :                 >skip1093
                        
46dd : 8e0332                   stx abst    ;clear
46e0 : a553                     lda zpt+1
46e2 : 49c3                     eor #$c3
46e4 : c55c                     cmp zp1+1
                                trap_ne     ;store to zp data
46e6 : f003            >        beq skip1095
                       >        trap            ;failed not equal (non zero)
46e8 : 208574          >        jsr report_error
                       >
46eb :                 >skip1095
                        
46eb : 8653                     stx zpt+1   ;clear
46ed : ad0432                   lda abst+1
46f0 : 49c3                     eor #$c3
46f2 : cd1932                   cmp abs1+1
                                trap_ne     ;store to abs data
46f5 : f003            >        beq skip1097
                       >        trap            ;failed not equal (non zero)
46f7 : 208574          >        jsr report_error
                       >
46fa :                 >skip1097
                        
46fa : 8e0432                   stx abst+1  ;clear
46fd : a554                     lda zpt+2
46ff : 49c3                     eor #$c3
4701 : c55d                     cmp zp1+2
                                trap_ne     ;store to zp data
4703 : f003            >        beq skip1099
                       >        trap            ;failed not equal (non zero)
4705 : 208574          >        jsr report_error
                       >
4708 :                 >skip1099
                        
4708 : 8654                     stx zpt+2   ;clear
470a : ad0532                   lda abst+2
470d : 49c3                     eor #$c3
470f : cd1a32                   cmp abs1+2
                                trap_ne     ;store to abs data
4712 : f003            >        beq skip1101
                       >        trap            ;failed not equal (non zero)
4714 : 208574          >        jsr report_error
                       >
4717 :                 >skip1101
                        
4717 : 8e0532                   stx abst+2  ;clear
471a : a555                     lda zpt+3
471c : 49c3                     eor #$c3
471e : c55e                     cmp zp1+3
                                trap_ne     ;store to zp data
4720 : f003            >        beq skip1103
                       >        trap            ;failed not equal (non zero)
4722 : 208574          >        jsr report_error
                       >
4725 :                 >skip1103
                        
4725 : 8655                     stx zpt+3   ;clear
4727 : ad0632                   lda abst+3
472a : 49c3                     eor #$c3
472c : cd1b32                   cmp abs1+3
                                trap_ne     ;store to abs data
472f : f003            >        beq skip1105
                       >        trap            ;failed not equal (non zero)
4731 : 208574          >        jsr report_error
                       >
4734 :                 >skip1105
                        
4734 : 8e0632                   stx abst+3  ;clear
                                next_test
4737 : ad0032          >            lda test_case   ;previous test
473a : c913            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
473c : f003            >        beq skip1108
                       >        trap            ;failed not equal (non zero)
473e : 208574          >        jsr report_error
                       >
4741 :                 >skip1108
                       >
0014 =                 >test_num = test_num + 1
4741 : a914            >            lda #test_num   ;*** next tests' number
4743 : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; LDY / STY - zp / abs / #
                                set_stat 0
                       >            load_flag 0
4746 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4748 : 48              >            pha         ;use stack to load status
4749 : 28              >            plp
                        
474a : a45b                     ldy zp1
474c : 08                       php         ;test stores do not alter flags
474d : 98                       tya
474e : 49c3                     eor #$c3
4750 : a8                       tay
4751 : 28                       plp
4752 : 8c0332                   sty abst
4755 : 08                       php         ;flags after load/store sequence
4756 : 49c3                     eor #$c3
4758 : a8                       tay
4759 : c0c3                     cpy #$c3    ;test result
                                trap_ne
475b : f003            >        beq skip1112
                       >        trap            ;failed not equal (non zero)
475d : 208574          >        jsr report_error
                       >
4760 :                 >skip1112
                        
4760 : 68                       pla         ;load status
                                eor_flag 0
4761 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4763 : cd1d32                   cmp fLDx    ;test flags
                                trap_ne
4766 : f003            >        beq skip1115
                       >        trap            ;failed not equal (non zero)
4768 : 208574          >        jsr report_error
                       >
476b :                 >skip1115
                        
                                set_stat 0
                       >            load_flag 0
476b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
476d : 48              >            pha         ;use stack to load status
476e : 28              >            plp
                        
476f : a45c                     ldy zp1+1
4771 : 08                       php         ;test stores do not alter flags
4772 : 98                       tya
4773 : 49c3                     eor #$c3
4775 : a8                       tay
4776 : 28                       plp
4777 : 8c0432                   sty abst+1
477a : 08                       php         ;flags after load/store sequence
477b : 49c3                     eor #$c3
477d : a8                       tay
477e : c082                     cpy #$82    ;test result
                                trap_ne
4780 : f003            >        beq skip1119
                       >        trap            ;failed not equal (non zero)
4782 : 208574          >        jsr report_error
                       >
4785 :                 >skip1119
                        
4785 : 68                       pla         ;load status
                                eor_flag 0
4786 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4788 : cd1e32                   cmp fLDx+1  ;test flags
                                trap_ne
478b : f003            >        beq skip1122
                       >        trap            ;failed not equal (non zero)
478d : 208574          >        jsr report_error
                       >
4790 :                 >skip1122
                        
                                set_stat 0
                       >            load_flag 0
4790 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4792 : 48              >            pha         ;use stack to load status
4793 : 28              >            plp
                        
4794 : a45d                     ldy zp1+2
4796 : 08                       php         ;test stores do not alter flags
4797 : 98                       tya
4798 : 49c3                     eor #$c3
479a : a8                       tay
479b : 28                       plp
479c : 8c0532                   sty abst+2
479f : 08                       php         ;flags after load/store sequence
47a0 : 49c3                     eor #$c3
47a2 : a8                       tay
47a3 : c041                     cpy #$41    ;test result
                                trap_ne
47a5 : f003            >        beq skip1126
                       >        trap            ;failed not equal (non zero)
47a7 : 208574          >        jsr report_error
                       >
47aa :                 >skip1126
                        
47aa : 68                       pla         ;load status
                                eor_flag 0
47ab : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
47ad : cd1f32                   cmp fLDx+2  ;test flags
                                trap_ne
47b0 : f003            >        beq skip1129
                       >        trap            ;failed not equal (non zero)
47b2 : 208574          >        jsr report_error
                       >
47b5 :                 >skip1129
                        
                                set_stat 0
                       >            load_flag 0
47b5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
47b7 : 48              >            pha         ;use stack to load status
47b8 : 28              >            plp
                        
47b9 : a45e                     ldy zp1+3
47bb : 08                       php         ;test stores do not alter flags
47bc : 98                       tya
47bd : 49c3                     eor #$c3
47bf : a8                       tay
47c0 : 28                       plp
47c1 : 8c0632                   sty abst+3
47c4 : 08                       php         ;flags after load/store sequence
47c5 : 49c3                     eor #$c3
47c7 : a8                       tay
47c8 : c000                     cpy #0      ;test result
                                trap_ne
47ca : f003            >        beq skip1133
                       >        trap            ;failed not equal (non zero)
47cc : 208574          >        jsr report_error
                       >
47cf :                 >skip1133
                        
47cf : 68                       pla         ;load status
                                eor_flag 0
47d0 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
47d2 : cd2032                   cmp fLDx+3  ;test flags
                                trap_ne
47d5 : f003            >        beq skip1136
                       >        trap            ;failed not equal (non zero)
47d7 : 208574          >        jsr report_error
                       >
47da :                 >skip1136
                        
                        
                                set_stat $ff
                       >            load_flag $ff
47da : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
47dc : 48              >            pha         ;use stack to load status
47dd : 28              >            plp
                        
47de : a45b                     ldy zp1
47e0 : 08                       php         ;test stores do not alter flags
47e1 : 98                       tya
47e2 : 49c3                     eor #$c3
47e4 : a8                       tay
47e5 : 28                       plp
47e6 : 8c0332                   sty abst
47e9 : 08                       php         ;flags after load/store sequence
47ea : 49c3                     eor #$c3
47ec : a8                       tay
47ed : c0c3                     cpy #$c3    ;test result
                                trap_ne
47ef : f003            >        beq skip1140
                       >        trap            ;failed not equal (non zero)
47f1 : 208574          >        jsr report_error
                       >
47f4 :                 >skip1140
                        
47f4 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
47f5 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
47f7 : cd1d32                   cmp fLDx    ;test flags
                                trap_ne
47fa : f003            >        beq skip1143
                       >        trap            ;failed not equal (non zero)
47fc : 208574          >        jsr report_error
                       >
47ff :                 >skip1143
                        
                                set_stat $ff
                       >            load_flag $ff
47ff : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4801 : 48              >            pha         ;use stack to load status
4802 : 28              >            plp
                        
4803 : a45c                     ldy zp1+1
4805 : 08                       php         ;test stores do not alter flags
4806 : 98                       tya
4807 : 49c3                     eor #$c3
4809 : a8                       tay
480a : 28                       plp
480b : 8c0432                   sty abst+1
480e : 08                       php         ;flags after load/store sequence
480f : 49c3                     eor #$c3
4811 : a8                       tay
4812 : c082                     cpy #$82   ;test result
                                trap_ne
4814 : f003            >        beq skip1147
                       >        trap            ;failed not equal (non zero)
4816 : 208574          >        jsr report_error
                       >
4819 :                 >skip1147
                        
4819 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
481a : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
481c : cd1e32                   cmp fLDx+1  ;test flags
                                trap_ne
481f : f003            >        beq skip1150
                       >        trap            ;failed not equal (non zero)
4821 : 208574          >        jsr report_error
                       >
4824 :                 >skip1150
                        
                                set_stat $ff
                       >            load_flag $ff
4824 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4826 : 48              >            pha         ;use stack to load status
4827 : 28              >            plp
                        
4828 : a45d                     ldy zp1+2
482a : 08                       php         ;test stores do not alter flags
482b : 98                       tya
482c : 49c3                     eor #$c3
482e : a8                       tay
482f : 28                       plp
4830 : 8c0532                   sty abst+2
4833 : 08                       php         ;flags after load/store sequence
4834 : 49c3                     eor #$c3
4836 : a8                       tay
4837 : c041                     cpy #$41    ;test result
                                trap_ne
4839 : f003            >        beq skip1154
                       >        trap            ;failed not equal (non zero)
483b : 208574          >        jsr report_error
                       >
483e :                 >skip1154
                        
483e : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
483f : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4841 : cd1f32                   cmp fLDx+2  ;test flags
                                trap_ne
4844 : f003            >        beq skip1157
                       >        trap            ;failed not equal (non zero)
4846 : 208574          >        jsr report_error
                       >
4849 :                 >skip1157
                        
                                set_stat $ff
                       >            load_flag $ff
4849 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
484b : 48              >            pha         ;use stack to load status
484c : 28              >            plp
                        
484d : a45e                     ldy zp1+3
484f : 08                       php         ;test stores do not alter flags
4850 : 98                       tya
4851 : 49c3                     eor #$c3
4853 : a8                       tay
4854 : 28                       plp
4855 : 8c0632                   sty abst+3
4858 : 08                       php         ;flags after load/store sequence
4859 : 49c3                     eor #$c3
485b : a8                       tay
485c : c000                     cpy #0      ;test result
                                trap_ne
485e : f003            >        beq skip1161
                       >        trap            ;failed not equal (non zero)
4860 : 208574          >        jsr report_error
                       >
4863 :                 >skip1161
                        
4863 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4864 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4866 : cd2032                   cmp fLDx+3  ;test flags
                                trap_ne
4869 : f003            >        beq skip1164
                       >        trap            ;failed not equal (non zero)
486b : 208574          >        jsr report_error
                       >
486e :                 >skip1164
                        
                        
                                set_stat 0
                       >            load_flag 0
486e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4870 : 48              >            pha         ;use stack to load status
4871 : 28              >            plp
                        
4872 : ac1832                   ldy abs1
4875 : 08                       php         ;test stores do not alter flags
4876 : 98                       tya
4877 : 49c3                     eor #$c3
4879 : a8                       tay
487a : 28                       plp
487b : 8452                     sty zpt
487d : 08                       php         ;flags after load/store sequence
487e : 49c3                     eor #$c3
4880 : a8                       tay
4881 : c45b                     cpy zp1     ;test result
                                trap_ne
4883 : f003            >        beq skip1168
                       >        trap            ;failed not equal (non zero)
4885 : 208574          >        jsr report_error
                       >
4888 :                 >skip1168
                        
4888 : 68                       pla         ;load status
                                eor_flag 0
4889 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
488b : cd1d32                   cmp fLDx    ;test flags
                                trap_ne
488e : f003            >        beq skip1171
                       >        trap            ;failed not equal (non zero)
4890 : 208574          >        jsr report_error
                       >
4893 :                 >skip1171
                        
                                set_stat 0
                       >            load_flag 0
4893 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4895 : 48              >            pha         ;use stack to load status
4896 : 28              >            plp
                        
4897 : ac1932                   ldy abs1+1
489a : 08                       php         ;test stores do not alter flags
489b : 98                       tya
489c : 49c3                     eor #$c3
489e : a8                       tay
489f : 28                       plp
48a0 : 8453                     sty zpt+1
48a2 : 08                       php         ;flags after load/store sequence
48a3 : 49c3                     eor #$c3
48a5 : a8                       tay
48a6 : c45c                     cpy zp1+1   ;test result
                                trap_ne
48a8 : f003            >        beq skip1175
                       >        trap            ;failed not equal (non zero)
48aa : 208574          >        jsr report_error
                       >
48ad :                 >skip1175
                        
48ad : 68                       pla         ;load status
                                eor_flag 0
48ae : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
48b0 : cd1e32                   cmp fLDx+1  ;test flags
                                trap_ne
48b3 : f003            >        beq skip1178
                       >        trap            ;failed not equal (non zero)
48b5 : 208574          >        jsr report_error
                       >
48b8 :                 >skip1178
                        
                                set_stat 0
                       >            load_flag 0
48b8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
48ba : 48              >            pha         ;use stack to load status
48bb : 28              >            plp
                        
48bc : ac1a32                   ldy abs1+2
48bf : 08                       php         ;test stores do not alter flags
48c0 : 98                       tya
48c1 : 49c3                     eor #$c3
48c3 : a8                       tay
48c4 : 28                       plp
48c5 : 8454                     sty zpt+2
48c7 : 08                       php         ;flags after load/store sequence
48c8 : 49c3                     eor #$c3
48ca : a8                       tay
48cb : c45d                     cpy zp1+2   ;test result
                                trap_ne
48cd : f003            >        beq skip1182
                       >        trap            ;failed not equal (non zero)
48cf : 208574          >        jsr report_error
                       >
48d2 :                 >skip1182
                        
48d2 : 68                       pla         ;load status
                                eor_flag 0
48d3 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
48d5 : cd1f32                   cmp fLDx+2  ;test flags
                                trap_ne
48d8 : f003            >        beq skip1185
                       >        trap            ;failed not equal (non zero)
48da : 208574          >        jsr report_error
                       >
48dd :                 >skip1185
                        
                                set_stat 0
                       >            load_flag 0
48dd : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
48df : 48              >            pha         ;use stack to load status
48e0 : 28              >            plp
                        
48e1 : ac1b32                   ldy abs1+3
48e4 : 08                       php         ;test stores do not alter flags
48e5 : 98                       tya
48e6 : 49c3                     eor #$c3
48e8 : a8                       tay
48e9 : 28                       plp
48ea : 8455                     sty zpt+3
48ec : 08                       php         ;flags after load/store sequence
48ed : 49c3                     eor #$c3
48ef : a8                       tay
48f0 : c45e                     cpy zp1+3   ;test result
                                trap_ne
48f2 : f003            >        beq skip1189
                       >        trap            ;failed not equal (non zero)
48f4 : 208574          >        jsr report_error
                       >
48f7 :                 >skip1189
                        
48f7 : 68                       pla         ;load status
                                eor_flag 0
48f8 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
48fa : cd2032                   cmp fLDx+3  ;test flags
                                trap_ne
48fd : f003            >        beq skip1192
                       >        trap            ;failed not equal (non zero)
48ff : 208574          >        jsr report_error
                       >
4902 :                 >skip1192
                        
                        
                                set_stat $ff
                       >            load_flag $ff
4902 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4904 : 48              >            pha         ;use stack to load status
4905 : 28              >            plp
                        
4906 : ac1832                   ldy abs1
4909 : 08                       php         ;test stores do not alter flags
490a : 98                       tya
490b : 49c3                     eor #$c3
490d : a8                       tay
490e : 28                       plp
490f : 8452                     sty zpt
4911 : 08                       php         ;flags after load/store sequence
4912 : 49c3                     eor #$c3
4914 : a8                       tay
4915 : c55b                     cmp zp1     ;test result
                                trap_ne
4917 : f003            >        beq skip1196
                       >        trap            ;failed not equal (non zero)
4919 : 208574          >        jsr report_error
                       >
491c :                 >skip1196
                        
491c : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
491d : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
491f : cd1d32                   cmp fLDx    ;test flags
                                trap_ne
4922 : f003            >        beq skip1199
                       >        trap            ;failed not equal (non zero)
4924 : 208574          >        jsr report_error
                       >
4927 :                 >skip1199
                        
                                set_stat $ff
                       >            load_flag $ff
4927 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4929 : 48              >            pha         ;use stack to load status
492a : 28              >            plp
                        
492b : ac1932                   ldy abs1+1
492e : 08                       php         ;test stores do not alter flags
492f : 98                       tya
4930 : 49c3                     eor #$c3
4932 : a8                       tay
4933 : 28                       plp
4934 : 8453                     sty zpt+1
4936 : 08                       php         ;flags after load/store sequence
4937 : 49c3                     eor #$c3
4939 : a8                       tay
493a : c55c                     cmp zp1+1   ;test result
                                trap_ne
493c : f003            >        beq skip1203
                       >        trap            ;failed not equal (non zero)
493e : 208574          >        jsr report_error
                       >
4941 :                 >skip1203
                        
4941 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4942 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4944 : cd1e32                   cmp fLDx+1  ;test flags
                                trap_ne
4947 : f003            >        beq skip1206
                       >        trap            ;failed not equal (non zero)
4949 : 208574          >        jsr report_error
                       >
494c :                 >skip1206
                        
                                set_stat $ff
                       >            load_flag $ff
494c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
494e : 48              >            pha         ;use stack to load status
494f : 28              >            plp
                        
4950 : ac1a32                   ldy abs1+2
4953 : 08                       php         ;test stores do not alter flags
4954 : 98                       tya
4955 : 49c3                     eor #$c3
4957 : a8                       tay
4958 : 28                       plp
4959 : 8454                     sty zpt+2
495b : 08                       php         ;flags after load/store sequence
495c : 49c3                     eor #$c3
495e : a8                       tay
495f : c55d                     cmp zp1+2   ;test result
                                trap_ne
4961 : f003            >        beq skip1210
                       >        trap            ;failed not equal (non zero)
4963 : 208574          >        jsr report_error
                       >
4966 :                 >skip1210
                        
4966 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4967 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4969 : cd1f32                   cmp fLDx+2  ;test flags
                                trap_ne
496c : f003            >        beq skip1213
                       >        trap            ;failed not equal (non zero)
496e : 208574          >        jsr report_error
                       >
4971 :                 >skip1213
                        
                                set_stat $ff
                       >            load_flag $ff
4971 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4973 : 48              >            pha         ;use stack to load status
4974 : 28              >            plp
                        
4975 : ac1b32                   ldy abs1+3
4978 : 08                       php         ;test stores do not alter flags
4979 : 98                       tya
497a : 49c3                     eor #$c3
497c : a8                       tay
497d : 28                       plp
497e : 8455                     sty zpt+3
4980 : 08                       php         ;flags after load/store sequence
4981 : 49c3                     eor #$c3
4983 : a8                       tay
4984 : c55e                     cmp zp1+3   ;test result
                                trap_ne
4986 : f003            >        beq skip1217
                       >        trap            ;failed not equal (non zero)
4988 : 208574          >        jsr report_error
                       >
498b :                 >skip1217
                        
498b : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
498c : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
498e : cd2032                   cmp fLDx+3  ;test flags
                                trap_ne
4991 : f003            >        beq skip1220
                       >        trap            ;failed not equal (non zero)
4993 : 208574          >        jsr report_error
                       >
4996 :                 >skip1220
                        
                        
                        
                                set_stat 0
                       >            load_flag 0
4996 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4998 : 48              >            pha         ;use stack to load status
4999 : 28              >            plp
                        
499a : a0c3                     ldy #$c3
499c : 08                       php
499d : cc1832                   cpy abs1    ;test result
                                trap_ne
49a0 : f003            >        beq skip1224
                       >        trap            ;failed not equal (non zero)
49a2 : 208574          >        jsr report_error
                       >
49a5 :                 >skip1224
                        
49a5 : 68                       pla         ;load status
                                eor_flag 0
49a6 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
49a8 : cd1d32                   cmp fLDx    ;test flags
                                trap_ne
49ab : f003            >        beq skip1227
                       >        trap            ;failed not equal (non zero)
49ad : 208574          >        jsr report_error
                       >
49b0 :                 >skip1227
                        
                                set_stat 0
                       >            load_flag 0
49b0 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
49b2 : 48              >            pha         ;use stack to load status
49b3 : 28              >            plp
                        
49b4 : a082                     ldy #$82
49b6 : 08                       php
49b7 : cc1932                   cpy abs1+1  ;test result
                                trap_ne
49ba : f003            >        beq skip1231
                       >        trap            ;failed not equal (non zero)
49bc : 208574          >        jsr report_error
                       >
49bf :                 >skip1231
                        
49bf : 68                       pla         ;load status
                                eor_flag 0
49c0 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
49c2 : cd1e32                   cmp fLDx+1  ;test flags
                                trap_ne
49c5 : f003            >        beq skip1234
                       >        trap            ;failed not equal (non zero)
49c7 : 208574          >        jsr report_error
                       >
49ca :                 >skip1234
                        
                                set_stat 0
                       >            load_flag 0
49ca : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
49cc : 48              >            pha         ;use stack to load status
49cd : 28              >            plp
                        
49ce : a041                     ldy #$41
49d0 : 08                       php
49d1 : cc1a32                   cpy abs1+2  ;test result
                                trap_ne
49d4 : f003            >        beq skip1238
                       >        trap            ;failed not equal (non zero)
49d6 : 208574          >        jsr report_error
                       >
49d9 :                 >skip1238
                        
49d9 : 68                       pla         ;load status
                                eor_flag 0
49da : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
49dc : cd1f32                   cmp fLDx+2  ;test flags
                                trap_ne
49df : f003            >        beq skip1241
                       >        trap            ;failed not equal (non zero)
49e1 : 208574          >        jsr report_error
                       >
49e4 :                 >skip1241
                        
                                set_stat 0
                       >            load_flag 0
49e4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
49e6 : 48              >            pha         ;use stack to load status
49e7 : 28              >            plp
                        
49e8 : a000                     ldy #0
49ea : 08                       php
49eb : cc1b32                   cpy abs1+3  ;test result
                                trap_ne
49ee : f003            >        beq skip1245
                       >        trap            ;failed not equal (non zero)
49f0 : 208574          >        jsr report_error
                       >
49f3 :                 >skip1245
                        
49f3 : 68                       pla         ;load status
                                eor_flag 0
49f4 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
49f6 : cd2032                   cmp fLDx+3  ;test flags
                                trap_ne
49f9 : f003            >        beq skip1248
                       >        trap            ;failed not equal (non zero)
49fb : 208574          >        jsr report_error
                       >
49fe :                 >skip1248
                        
                        
                                set_stat $ff
                       >            load_flag $ff
49fe : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4a00 : 48              >            pha         ;use stack to load status
4a01 : 28              >            plp
                        
4a02 : a0c3                     ldy #$c3
4a04 : 08                       php
4a05 : cc1832                   cpy abs1    ;test result
                                trap_ne
4a08 : f003            >        beq skip1252
                       >        trap            ;failed not equal (non zero)
4a0a : 208574          >        jsr report_error
                       >
4a0d :                 >skip1252
                        
4a0d : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4a0e : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4a10 : cd1d32                   cmp fLDx    ;test flags
                                trap_ne
4a13 : f003            >        beq skip1255
                       >        trap            ;failed not equal (non zero)
4a15 : 208574          >        jsr report_error
                       >
4a18 :                 >skip1255
                        
                                set_stat $ff
                       >            load_flag $ff
4a18 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4a1a : 48              >            pha         ;use stack to load status
4a1b : 28              >            plp
                        
4a1c : a082                     ldy #$82
4a1e : 08                       php
4a1f : cc1932                   cpy abs1+1  ;test result
                                trap_ne
4a22 : f003            >        beq skip1259
                       >        trap            ;failed not equal (non zero)
4a24 : 208574          >        jsr report_error
                       >
4a27 :                 >skip1259
                        
4a27 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4a28 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4a2a : cd1e32                   cmp fLDx+1  ;test flags
                                trap_ne
4a2d : f003            >        beq skip1262
                       >        trap            ;failed not equal (non zero)
4a2f : 208574          >        jsr report_error
                       >
4a32 :                 >skip1262
                        
                                set_stat $ff
                       >            load_flag $ff
4a32 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4a34 : 48              >            pha         ;use stack to load status
4a35 : 28              >            plp
                        
4a36 : a041                     ldy #$41
4a38 : 08                       php
4a39 : cc1a32                   cpy abs1+2   ;test result
                                trap_ne
4a3c : f003            >        beq skip1266
                       >        trap            ;failed not equal (non zero)
4a3e : 208574          >        jsr report_error
                       >
4a41 :                 >skip1266
                        
4a41 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4a42 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4a44 : cd1f32                   cmp fLDx+2  ;test flags
                                trap_ne
4a47 : f003            >        beq skip1269
                       >        trap            ;failed not equal (non zero)
4a49 : 208574          >        jsr report_error
                       >
4a4c :                 >skip1269
                        
                                set_stat $ff
                       >            load_flag $ff
4a4c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4a4e : 48              >            pha         ;use stack to load status
4a4f : 28              >            plp
                        
4a50 : a000                     ldy #0
4a52 : 08                       php
4a53 : cc1b32                   cpy abs1+3  ;test result
                                trap_ne
4a56 : f003            >        beq skip1273
                       >        trap            ;failed not equal (non zero)
4a58 : 208574          >        jsr report_error
                       >
4a5b :                 >skip1273
                        
4a5b : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4a5c : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4a5e : cd2032                   cmp fLDx+3  ;test flags
                                trap_ne
4a61 : f003            >        beq skip1276
                       >        trap            ;failed not equal (non zero)
4a63 : 208574          >        jsr report_error
                       >
4a66 :                 >skip1276
                        
                        
4a66 : a000                     ldy #0
4a68 : a552                     lda zpt
4a6a : 49c3                     eor #$c3
4a6c : c55b                     cmp zp1
                                trap_ne     ;store to zp   data
4a6e : f003            >        beq skip1278
                       >        trap            ;failed not equal (non zero)
4a70 : 208574          >        jsr report_error
                       >
4a73 :                 >skip1278
                        
4a73 : 8452                     sty zpt     ;clear
4a75 : ad0332                   lda abst
4a78 : 49c3                     eor #$c3
4a7a : cd1832                   cmp abs1
                                trap_ne     ;store to abs   data
4a7d : f003            >        beq skip1280
                       >        trap            ;failed not equal (non zero)
4a7f : 208574          >        jsr report_error
                       >
4a82 :                 >skip1280
                        
4a82 : 8c0332                   sty abst    ;clear
4a85 : a553                     lda zpt+1
4a87 : 49c3                     eor #$c3
4a89 : c55c                     cmp zp1+1
                                trap_ne     ;store to zp+1 data
4a8b : f003            >        beq skip1282
                       >        trap            ;failed not equal (non zero)
4a8d : 208574          >        jsr report_error
                       >
4a90 :                 >skip1282
                        
4a90 : 8453                     sty zpt+1   ;clear
4a92 : ad0432                   lda abst+1
4a95 : 49c3                     eor #$c3
4a97 : cd1932                   cmp abs1+1
                                trap_ne     ;store to abs+1 data
4a9a : f003            >        beq skip1284
                       >        trap            ;failed not equal (non zero)
4a9c : 208574          >        jsr report_error
                       >
4a9f :                 >skip1284
                        
4a9f : 8c0432                   sty abst+1  ;clear
4aa2 : a554                     lda zpt+2
4aa4 : 49c3                     eor #$c3
4aa6 : c55d                     cmp zp1+2
                                trap_ne     ;store to zp+2 data
4aa8 : f003            >        beq skip1286
                       >        trap            ;failed not equal (non zero)
4aaa : 208574          >        jsr report_error
                       >
4aad :                 >skip1286
                        
4aad : 8454                     sty zpt+2   ;clear
4aaf : ad0532                   lda abst+2
4ab2 : 49c3                     eor #$c3
4ab4 : cd1a32                   cmp abs1+2
                                trap_ne     ;store to abs+2 data
4ab7 : f003            >        beq skip1288
                       >        trap            ;failed not equal (non zero)
4ab9 : 208574          >        jsr report_error
                       >
4abc :                 >skip1288
                        
4abc : 8c0532                   sty abst+2  ;clear
4abf : a555                     lda zpt+3
4ac1 : 49c3                     eor #$c3
4ac3 : c55e                     cmp zp1+3
                                trap_ne     ;store to zp+3 data
4ac5 : f003            >        beq skip1290
                       >        trap            ;failed not equal (non zero)
4ac7 : 208574          >        jsr report_error
                       >
4aca :                 >skip1290
                        
4aca : 8455                     sty zpt+3   ;clear
4acc : ad0632                   lda abst+3
4acf : 49c3                     eor #$c3
4ad1 : cd1b32                   cmp abs1+3
                                trap_ne     ;store to abs+3 data
4ad4 : f003            >        beq skip1292
                       >        trap            ;failed not equal (non zero)
4ad6 : 208574          >        jsr report_error
                       >
4ad9 :                 >skip1292
                        
4ad9 : 8c0632                   sty abst+3  ;clear
                                next_test
4adc : ad0032          >            lda test_case   ;previous test
4adf : c914            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4ae1 : f003            >        beq skip1295
                       >        trap            ;failed not equal (non zero)
4ae3 : 208574          >        jsr report_error
                       >
4ae6 :                 >skip1295
                       >
0015 =                 >test_num = test_num + 1
4ae6 : a915            >            lda #test_num   ;*** next tests' number
4ae8 : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing load / store accumulator LDA / STA all addressing modes
                        ; LDA / STA - zp,x / abs,x
4aeb : a203                     ldx #3
4aed :                  tldax
                                set_stat 0
                       >            load_flag 0
4aed : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4aef : 48              >            pha         ;use stack to load status
4af0 : 28              >            plp
                        
4af1 : b55b                     lda zp1,x
4af3 : 08                       php         ;test stores do not alter flags
4af4 : 49c3                     eor #$c3
4af6 : 28                       plp
4af7 : 9d0332                   sta abst,x
4afa : 08                       php         ;flags after load/store sequence
4afb : 49c3                     eor #$c3
4afd : dd1832                   cmp abs1,x  ;test result
                                trap_ne
4b00 : f003            >        beq skip1299
                       >        trap            ;failed not equal (non zero)
4b02 : 208574          >        jsr report_error
                       >
4b05 :                 >skip1299
                        
4b05 : 68                       pla         ;load status
                                eor_flag 0
4b06 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4b08 : dd1d32                   cmp fLDx,x  ;test flags
                                trap_ne
4b0b : f003            >        beq skip1302
                       >        trap            ;failed not equal (non zero)
4b0d : 208574          >        jsr report_error
                       >
4b10 :                 >skip1302
                        
4b10 : ca                       dex
4b11 : 10da                     bpl tldax
                        
4b13 : a203                     ldx #3
4b15 :                  tldax1
                                set_stat $ff
                       >            load_flag $ff
4b15 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4b17 : 48              >            pha         ;use stack to load status
4b18 : 28              >            plp
                        
4b19 : b55b                     lda zp1,x
4b1b : 08                       php         ;test stores do not alter flags
4b1c : 49c3                     eor #$c3
4b1e : 28                       plp
4b1f : 9d0332                   sta abst,x
4b22 : 08                       php         ;flags after load/store sequence
4b23 : 49c3                     eor #$c3
4b25 : dd1832                   cmp abs1,x   ;test result
                                trap_ne
4b28 : f003            >        beq skip1306
                       >        trap            ;failed not equal (non zero)
4b2a : 208574          >        jsr report_error
                       >
4b2d :                 >skip1306
                        
4b2d : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4b2e : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4b30 : dd1d32                   cmp fLDx,x  ;test flags
                                trap_ne
4b33 : f003            >        beq skip1309
                       >        trap            ;failed not equal (non zero)
4b35 : 208574          >        jsr report_error
                       >
4b38 :                 >skip1309
                        
4b38 : ca                       dex
4b39 : 10da                     bpl tldax1
                        
4b3b : a203                     ldx #3
4b3d :                  tldax2
                                set_stat 0
                       >            load_flag 0
4b3d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4b3f : 48              >            pha         ;use stack to load status
4b40 : 28              >            plp
                        
4b41 : bd1832                   lda abs1,x
4b44 : 08                       php         ;test stores do not alter flags
4b45 : 49c3                     eor #$c3
4b47 : 28                       plp
4b48 : 9552                     sta zpt,x
4b4a : 08                       php         ;flags after load/store sequence
4b4b : 49c3                     eor #$c3
4b4d : d55b                     cmp zp1,x   ;test result
                                trap_ne
4b4f : f003            >        beq skip1313
                       >        trap            ;failed not equal (non zero)
4b51 : 208574          >        jsr report_error
                       >
4b54 :                 >skip1313
                        
4b54 : 68                       pla         ;load status
                                eor_flag 0
4b55 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4b57 : dd1d32                   cmp fLDx,x  ;test flags
                                trap_ne
4b5a : f003            >        beq skip1316
                       >        trap            ;failed not equal (non zero)
4b5c : 208574          >        jsr report_error
                       >
4b5f :                 >skip1316
                        
4b5f : ca                       dex
4b60 : 10db                     bpl tldax2
                        
4b62 : a203                     ldx #3
4b64 :                  tldax3
                                set_stat $ff
                       >            load_flag $ff
4b64 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4b66 : 48              >            pha         ;use stack to load status
4b67 : 28              >            plp
                        
4b68 : bd1832                   lda abs1,x
4b6b : 08                       php         ;test stores do not alter flags
4b6c : 49c3                     eor #$c3
4b6e : 28                       plp
4b6f : 9552                     sta zpt,x
4b71 : 08                       php         ;flags after load/store sequence
4b72 : 49c3                     eor #$c3
4b74 : d55b                     cmp zp1,x   ;test result
                                trap_ne
4b76 : f003            >        beq skip1320
                       >        trap            ;failed not equal (non zero)
4b78 : 208574          >        jsr report_error
                       >
4b7b :                 >skip1320
                        
4b7b : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4b7c : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4b7e : dd1d32                   cmp fLDx,x  ;test flags
                                trap_ne
4b81 : f003            >        beq skip1323
                       >        trap            ;failed not equal (non zero)
4b83 : 208574          >        jsr report_error
                       >
4b86 :                 >skip1323
                        
4b86 : ca                       dex
4b87 : 10db                     bpl tldax3
                        
4b89 : a203                     ldx #3      ;testing store result
4b8b : a000                     ldy #0
4b8d : b552             tstax   lda zpt,x
4b8f : 49c3                     eor #$c3
4b91 : d55b                     cmp zp1,x
                                trap_ne     ;store to zp,x data
4b93 : f003            >        beq skip1325
                       >        trap            ;failed not equal (non zero)
4b95 : 208574          >        jsr report_error
                       >
4b98 :                 >skip1325
                        
4b98 : 9452                     sty zpt,x   ;clear
4b9a : bd0332                   lda abst,x
4b9d : 49c3                     eor #$c3
4b9f : dd1832                   cmp abs1,x
                                trap_ne     ;store to abs,x data
4ba2 : f003            >        beq skip1327
                       >        trap            ;failed not equal (non zero)
4ba4 : 208574          >        jsr report_error
                       >
4ba7 :                 >skip1327
                        
4ba7 : 8a                       txa
4ba8 : 9d0332                   sta abst,x  ;clear
4bab : ca                       dex
4bac : 10df                     bpl tstax
                                next_test
4bae : ad0032          >            lda test_case   ;previous test
4bb1 : c915            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4bb3 : f003            >        beq skip1330
                       >        trap            ;failed not equal (non zero)
4bb5 : 208574          >        jsr report_error
                       >
4bb8 :                 >skip1330
                       >
0016 =                 >test_num = test_num + 1
4bb8 : a916            >            lda #test_num   ;*** next tests' number
4bba : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; LDA / STA - (zp),y / abs,y / (zp,x)
4bbd : a003                     ldy #3
4bbf :                  tlday
                                set_stat 0
                       >            load_flag 0
4bbf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4bc1 : 48              >            pha         ;use stack to load status
4bc2 : 28              >            plp
                        
4bc3 : b16c                     lda (ind1),y
4bc5 : 08                       php         ;test stores do not alter flags
4bc6 : 49c3                     eor #$c3
4bc8 : 28                       plp
4bc9 : 990332                   sta abst,y
4bcc : 08                       php         ;flags after load/store sequence
4bcd : 49c3                     eor #$c3
4bcf : d91832                   cmp abs1,y  ;test result
                                trap_ne
4bd2 : f003            >        beq skip1334
                       >        trap            ;failed not equal (non zero)
4bd4 : 208574          >        jsr report_error
                       >
4bd7 :                 >skip1334
                        
4bd7 : 68                       pla         ;load status
                                eor_flag 0
4bd8 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4bda : d91d32                   cmp fLDx,y  ;test flags
                                trap_ne
4bdd : f003            >        beq skip1337
                       >        trap            ;failed not equal (non zero)
4bdf : 208574          >        jsr report_error
                       >
4be2 :                 >skip1337
                        
4be2 : 88                       dey
4be3 : 10da                     bpl tlday
                        
4be5 : a003                     ldy #3
4be7 :                  tlday1
                                set_stat $ff
                       >            load_flag $ff
4be7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4be9 : 48              >            pha         ;use stack to load status
4bea : 28              >            plp
                        
4beb : b16c                     lda (ind1),y
4bed : 08                       php         ;test stores do not alter flags
4bee : 49c3                     eor #$c3
4bf0 : 28                       plp
4bf1 : 990332                   sta abst,y
4bf4 : 08                       php         ;flags after load/store sequence
4bf5 : 49c3                     eor #$c3
4bf7 : d91832                   cmp abs1,y  ;test result
                                trap_ne
4bfa : f003            >        beq skip1341
                       >        trap            ;failed not equal (non zero)
4bfc : 208574          >        jsr report_error
                       >
4bff :                 >skip1341
                        
4bff : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4c00 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4c02 : d91d32                   cmp fLDx,y  ;test flags
                                trap_ne
4c05 : f003            >        beq skip1344
                       >        trap            ;failed not equal (non zero)
4c07 : 208574          >        jsr report_error
                       >
4c0a :                 >skip1344
                        
4c0a : 88                       dey
4c0b : 10da                     bpl tlday1
                        
4c0d : a003                     ldy #3      ;testing store result
4c0f : a200                     ldx #0
4c11 : b90332           tstay   lda abst,y
4c14 : 49c3                     eor #$c3
4c16 : d91832                   cmp abs1,y
                                trap_ne     ;store to abs data
4c19 : f003            >        beq skip1346
                       >        trap            ;failed not equal (non zero)
4c1b : 208574          >        jsr report_error
                       >
4c1e :                 >skip1346
                        
4c1e : 8a                       txa
4c1f : 990332                   sta abst,y  ;clear
4c22 : 88                       dey
4c23 : 10ec                     bpl tstay
                        
4c25 : a003                     ldy #3
4c27 :                  tlday2
                                set_stat 0
                       >            load_flag 0
4c27 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4c29 : 48              >            pha         ;use stack to load status
4c2a : 28              >            plp
                        
4c2b : b91832                   lda abs1,y
4c2e : 08                       php         ;test stores do not alter flags
4c2f : 49c3                     eor #$c3
4c31 : 28                       plp
4c32 : 9178                     sta (indt),y
4c34 : 08                       php         ;flags after load/store sequence
4c35 : 49c3                     eor #$c3
4c37 : d16c                     cmp (ind1),y    ;test result
                                trap_ne
4c39 : f003            >        beq skip1350
                       >        trap            ;failed not equal (non zero)
4c3b : 208574          >        jsr report_error
                       >
4c3e :                 >skip1350
                        
4c3e : 68                       pla         ;load status
                                eor_flag 0
4c3f : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4c41 : d91d32                   cmp fLDx,y  ;test flags
                                trap_ne
4c44 : f003            >        beq skip1353
                       >        trap            ;failed not equal (non zero)
4c46 : 208574          >        jsr report_error
                       >
4c49 :                 >skip1353
                        
4c49 : 88                       dey
4c4a : 10db                     bpl tlday2
                        
4c4c : a003                     ldy #3
4c4e :                  tlday3
                                set_stat $ff
                       >            load_flag $ff
4c4e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4c50 : 48              >            pha         ;use stack to load status
4c51 : 28              >            plp
                        
4c52 : b91832                   lda abs1,y
4c55 : 08                       php         ;test stores do not alter flags
4c56 : 49c3                     eor #$c3
4c58 : 28                       plp
4c59 : 9178                     sta (indt),y
4c5b : 08                       php         ;flags after load/store sequence
4c5c : 49c3                     eor #$c3
4c5e : d16c                     cmp (ind1),y   ;test result
                                trap_ne
4c60 : f003            >        beq skip1357
                       >        trap            ;failed not equal (non zero)
4c62 : 208574          >        jsr report_error
                       >
4c65 :                 >skip1357
                        
4c65 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4c66 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4c68 : d91d32                   cmp fLDx,y  ;test flags
                                trap_ne
4c6b : f003            >        beq skip1360
                       >        trap            ;failed not equal (non zero)
4c6d : 208574          >        jsr report_error
                       >
4c70 :                 >skip1360
                        
4c70 : 88                       dey
4c71 : 10db                     bpl tlday3
                        
4c73 : a003                     ldy #3      ;testing store result
4c75 : a200                     ldx #0
4c77 : b90332           tstay1  lda abst,y
4c7a : 49c3                     eor #$c3
4c7c : d91832                   cmp abs1,y
                                trap_ne     ;store to abs data
4c7f : f003            >        beq skip1362
                       >        trap            ;failed not equal (non zero)
4c81 : 208574          >        jsr report_error
                       >
4c84 :                 >skip1362
                        
4c84 : 8a                       txa
4c85 : 990332                   sta abst,y  ;clear
4c88 : 88                       dey
4c89 : 10ec                     bpl tstay1
                        
4c8b : a206                     ldx #6
4c8d : a003                     ldy #3
4c8f :                  tldax4
                                set_stat 0
                       >            load_flag 0
4c8f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4c91 : 48              >            pha         ;use stack to load status
4c92 : 28              >            plp
                        
4c93 : a16c                     lda (ind1,x)
4c95 : 08                       php         ;test stores do not alter flags
4c96 : 49c3                     eor #$c3
4c98 : 28                       plp
4c99 : 8178                     sta (indt,x)
4c9b : 08                       php         ;flags after load/store sequence
4c9c : 49c3                     eor #$c3
4c9e : d91832                   cmp abs1,y  ;test result
                                trap_ne
4ca1 : f003            >        beq skip1366
                       >        trap            ;failed not equal (non zero)
4ca3 : 208574          >        jsr report_error
                       >
4ca6 :                 >skip1366
                        
4ca6 : 68                       pla         ;load status
                                eor_flag 0
4ca7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4ca9 : d91d32                   cmp fLDx,y  ;test flags
                                trap_ne
4cac : f003            >        beq skip1369
                       >        trap            ;failed not equal (non zero)
4cae : 208574          >        jsr report_error
                       >
4cb1 :                 >skip1369
                        
4cb1 : ca                       dex
4cb2 : ca                       dex
4cb3 : 88                       dey
4cb4 : 10d9                     bpl tldax4
                        
4cb6 : a206                     ldx #6
4cb8 : a003                     ldy #3
4cba :                  tldax5
                                set_stat $ff
                       >            load_flag $ff
4cba : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4cbc : 48              >            pha         ;use stack to load status
4cbd : 28              >            plp
                        
4cbe : a16c                     lda (ind1,x)
4cc0 : 08                       php         ;test stores do not alter flags
4cc1 : 49c3                     eor #$c3
4cc3 : 28                       plp
4cc4 : 8178                     sta (indt,x)
4cc6 : 08                       php         ;flags after load/store sequence
4cc7 : 49c3                     eor #$c3
4cc9 : d91832                   cmp abs1,y  ;test result
                                trap_ne
4ccc : f003            >        beq skip1373
                       >        trap            ;failed not equal (non zero)
4cce : 208574          >        jsr report_error
                       >
4cd1 :                 >skip1373
                        
4cd1 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4cd2 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4cd4 : d91d32                   cmp fLDx,y  ;test flags
                                trap_ne
4cd7 : f003            >        beq skip1376
                       >        trap            ;failed not equal (non zero)
4cd9 : 208574          >        jsr report_error
                       >
4cdc :                 >skip1376
                        
4cdc : ca                       dex
4cdd : ca                       dex
4cde : 88                       dey
4cdf : 10d9                     bpl tldax5
                        
4ce1 : a003                     ldy #3      ;testing store result
4ce3 : a200                     ldx #0
4ce5 : b90332           tstay2  lda abst,y
4ce8 : 49c3                     eor #$c3
4cea : d91832                   cmp abs1,y
                                trap_ne     ;store to abs data
4ced : f003            >        beq skip1378
                       >        trap            ;failed not equal (non zero)
4cef : 208574          >        jsr report_error
                       >
4cf2 :                 >skip1378
                        
4cf2 : 8a                       txa
4cf3 : 990332                   sta abst,y  ;clear
4cf6 : 88                       dey
4cf7 : 10ec                     bpl tstay2
                                next_test
4cf9 : ad0032          >            lda test_case   ;previous test
4cfc : c916            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4cfe : f003            >        beq skip1381
                       >        trap            ;failed not equal (non zero)
4d00 : 208574          >        jsr report_error
                       >
4d03 :                 >skip1381
                       >
0017 =                 >test_num = test_num + 1
4d03 : a917            >            lda #test_num   ;*** next tests' number
4d05 : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; indexed wraparound test (only zp should wrap)
4d08 : a2fd                     ldx #3+$fa
4d0a : b561             tldax6  lda zp1-$fa&$ff,x   ;wrap on indexed zp
4d0c : 9d0931                   sta abst-$fa,x      ;no STX abs,x!
4d0f : ca                       dex
4d10 : e0fa                     cpx #$fa
4d12 : b0f6                     bcs tldax6
4d14 : a2fd                     ldx #3+$fa
4d16 : bd1e31           tldax7  lda abs1-$fa,x      ;no wrap on indexed abs
4d19 : 9558                     sta zpt-$fa&$ff,x
4d1b : ca                       dex
4d1c : e0fa                     cpx #$fa
4d1e : b0f6                     bcs tldax7
                        
4d20 : a203                     ldx #3      ;testing wraparound result
4d22 : a000                     ldy #0
4d24 : b552             tstax1  lda zpt,x
4d26 : d55b                     cmp zp1,x
                                trap_ne     ;store to zp,x data
4d28 : f003            >        beq skip1383
                       >        trap            ;failed not equal (non zero)
4d2a : 208574          >        jsr report_error
                       >
4d2d :                 >skip1383
                        
4d2d : 9452                     sty zpt,x   ;clear
4d2f : bd0332                   lda abst,x
4d32 : dd1832                   cmp abs1,x
                                trap_ne     ;store to abs,x data
4d35 : f003            >        beq skip1385
                       >        trap            ;failed not equal (non zero)
4d37 : 208574          >        jsr report_error
                       >
4d3a :                 >skip1385
                        
4d3a : 8a                       txa
4d3b : 9d0332                   sta abst,x  ;clear
4d3e : ca                       dex
4d3f : 10e3                     bpl tstax1
                        
4d41 : a0fb                     ldy #3+$f8
4d43 : a2fe                     ldx #6+$f8
4d45 : a174             tlday4  lda (ind1-$f8&$ff,x) ;wrap on indexed zp indirect
4d47 : 990b31                   sta abst-$f8,y
4d4a : ca                       dex
4d4b : ca                       dex
4d4c : 88                       dey
4d4d : c0f8                     cpy #$f8
4d4f : b0f4                     bcs tlday4
4d51 : a003                     ldy #3      ;testing wraparound result
4d53 : a200                     ldx #0
4d55 : b90332           tstay4  lda abst,y
4d58 : d91832                   cmp abs1,y
                                trap_ne     ;store to abs data
4d5b : f003            >        beq skip1387
                       >        trap            ;failed not equal (non zero)
4d5d : 208574          >        jsr report_error
                       >
4d60 :                 >skip1387
                        
4d60 : 8a                       txa
4d61 : 990332                   sta abst,y  ;clear
4d64 : 88                       dey
4d65 : 10ee                     bpl tstay4
                        
4d67 : a0fb                     ldy #3+$f8
4d69 : b92031           tlday5  lda abs1-$f8,y  ;no wrap on indexed abs
4d6c : 9180                     sta (inwt),y
4d6e : 88                       dey
4d6f : c0f8                     cpy #$f8
4d71 : b0f6                     bcs tlday5
4d73 : a003                     ldy #3      ;testing wraparound result
4d75 : a200                     ldx #0
4d77 : b90332           tstay5  lda abst,y
4d7a : d91832                   cmp abs1,y
                                trap_ne     ;store to abs data
4d7d : f003            >        beq skip1389
                       >        trap            ;failed not equal (non zero)
4d7f : 208574          >        jsr report_error
                       >
4d82 :                 >skip1389
                        
4d82 : 8a                       txa
4d83 : 990332                   sta abst,y  ;clear
4d86 : 88                       dey
4d87 : 10ee                     bpl tstay5
                        
4d89 : a0fb                     ldy #3+$f8
4d8b : a2fe                     ldx #6+$f8
4d8d : b176             tlday6  lda (inw1),y    ;no wrap on zp indirect indexed
4d8f : 8180                     sta (indt-$f8&$ff,x)
4d91 : ca                       dex
4d92 : ca                       dex
4d93 : 88                       dey
4d94 : c0f8                     cpy #$f8
4d96 : b0f5                     bcs tlday6
4d98 : a003                     ldy #3      ;testing wraparound result
4d9a : a200                     ldx #0
4d9c : b90332           tstay6  lda abst,y
4d9f : d91832                   cmp abs1,y
                                trap_ne     ;store to abs data
4da2 : f003            >        beq skip1391
                       >        trap            ;failed not equal (non zero)
4da4 : 208574          >        jsr report_error
                       >
4da7 :                 >skip1391
                        
4da7 : 8a                       txa
4da8 : 990332                   sta abst,y  ;clear
4dab : 88                       dey
4dac : 10ee                     bpl tstay6
                                next_test
4dae : ad0032          >            lda test_case   ;previous test
4db1 : c917            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4db3 : f003            >        beq skip1394
                       >        trap            ;failed not equal (non zero)
4db5 : 208574          >        jsr report_error
                       >
4db8 :                 >skip1394
                       >
0018 =                 >test_num = test_num + 1
4db8 : a918            >            lda #test_num   ;*** next tests' number
4dba : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; LDA / STA - zp / abs / #
                                set_stat 0
                       >            load_flag 0
4dbd : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4dbf : 48              >            pha         ;use stack to load status
4dc0 : 28              >            plp
                        
4dc1 : a55b                     lda zp1
4dc3 : 08                       php         ;test stores do not alter flags
4dc4 : 49c3                     eor #$c3
4dc6 : 28                       plp
4dc7 : 8d0332                   sta abst
4dca : 08                       php         ;flags after load/store sequence
4dcb : 49c3                     eor #$c3
4dcd : c9c3                     cmp #$c3    ;test result
                                trap_ne
4dcf : f003            >        beq skip1398
                       >        trap            ;failed not equal (non zero)
4dd1 : 208574          >        jsr report_error
                       >
4dd4 :                 >skip1398
                        
4dd4 : 68                       pla         ;load status
                                eor_flag 0
4dd5 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4dd7 : cd1d32                   cmp fLDx    ;test flags
                                trap_ne
4dda : f003            >        beq skip1401
                       >        trap            ;failed not equal (non zero)
4ddc : 208574          >        jsr report_error
                       >
4ddf :                 >skip1401
                        
                                set_stat 0
                       >            load_flag 0
4ddf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4de1 : 48              >            pha         ;use stack to load status
4de2 : 28              >            plp
                        
4de3 : a55c                     lda zp1+1
4de5 : 08                       php         ;test stores do not alter flags
4de6 : 49c3                     eor #$c3
4de8 : 28                       plp
4de9 : 8d0432                   sta abst+1
4dec : 08                       php         ;flags after load/store sequence
4ded : 49c3                     eor #$c3
4def : c982                     cmp #$82    ;test result
                                trap_ne
4df1 : f003            >        beq skip1405
                       >        trap            ;failed not equal (non zero)
4df3 : 208574          >        jsr report_error
                       >
4df6 :                 >skip1405
                        
4df6 : 68                       pla         ;load status
                                eor_flag 0
4df7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4df9 : cd1e32                   cmp fLDx+1  ;test flags
                                trap_ne
4dfc : f003            >        beq skip1408
                       >        trap            ;failed not equal (non zero)
4dfe : 208574          >        jsr report_error
                       >
4e01 :                 >skip1408
                        
                                set_stat 0
                       >            load_flag 0
4e01 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4e03 : 48              >            pha         ;use stack to load status
4e04 : 28              >            plp
                        
4e05 : a55d                     lda zp1+2
4e07 : 08                       php         ;test stores do not alter flags
4e08 : 49c3                     eor #$c3
4e0a : 28                       plp
4e0b : 8d0532                   sta abst+2
4e0e : 08                       php         ;flags after load/store sequence
4e0f : 49c3                     eor #$c3
4e11 : c941                     cmp #$41    ;test result
                                trap_ne
4e13 : f003            >        beq skip1412
                       >        trap            ;failed not equal (non zero)
4e15 : 208574          >        jsr report_error
                       >
4e18 :                 >skip1412
                        
4e18 : 68                       pla         ;load status
                                eor_flag 0
4e19 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4e1b : cd1f32                   cmp fLDx+2  ;test flags
                                trap_ne
4e1e : f003            >        beq skip1415
                       >        trap            ;failed not equal (non zero)
4e20 : 208574          >        jsr report_error
                       >
4e23 :                 >skip1415
                        
                                set_stat 0
                       >            load_flag 0
4e23 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4e25 : 48              >            pha         ;use stack to load status
4e26 : 28              >            plp
                        
4e27 : a55e                     lda zp1+3
4e29 : 08                       php         ;test stores do not alter flags
4e2a : 49c3                     eor #$c3
4e2c : 28                       plp
4e2d : 8d0632                   sta abst+3
4e30 : 08                       php         ;flags after load/store sequence
4e31 : 49c3                     eor #$c3
4e33 : c900                     cmp #0      ;test result
                                trap_ne
4e35 : f003            >        beq skip1419
                       >        trap            ;failed not equal (non zero)
4e37 : 208574          >        jsr report_error
                       >
4e3a :                 >skip1419
                        
4e3a : 68                       pla         ;load status
                                eor_flag 0
4e3b : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4e3d : cd2032                   cmp fLDx+3  ;test flags
                                trap_ne
4e40 : f003            >        beq skip1422
                       >        trap            ;failed not equal (non zero)
4e42 : 208574          >        jsr report_error
                       >
4e45 :                 >skip1422
                        
                                set_stat $ff
                       >            load_flag $ff
4e45 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4e47 : 48              >            pha         ;use stack to load status
4e48 : 28              >            plp
                        
4e49 : a55b                     lda zp1
4e4b : 08                       php         ;test stores do not alter flags
4e4c : 49c3                     eor #$c3
4e4e : 28                       plp
4e4f : 8d0332                   sta abst
4e52 : 08                       php         ;flags after load/store sequence
4e53 : 49c3                     eor #$c3
4e55 : c9c3                     cmp #$c3    ;test result
                                trap_ne
4e57 : f003            >        beq skip1426
                       >        trap            ;failed not equal (non zero)
4e59 : 208574          >        jsr report_error
                       >
4e5c :                 >skip1426
                        
4e5c : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4e5d : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4e5f : cd1d32                   cmp fLDx    ;test flags
                                trap_ne
4e62 : f003            >        beq skip1429
                       >        trap            ;failed not equal (non zero)
4e64 : 208574          >        jsr report_error
                       >
4e67 :                 >skip1429
                        
                                set_stat $ff
                       >            load_flag $ff
4e67 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4e69 : 48              >            pha         ;use stack to load status
4e6a : 28              >            plp
                        
4e6b : a55c                     lda zp1+1
4e6d : 08                       php         ;test stores do not alter flags
4e6e : 49c3                     eor #$c3
4e70 : 28                       plp
4e71 : 8d0432                   sta abst+1
4e74 : 08                       php         ;flags after load/store sequence
4e75 : 49c3                     eor #$c3
4e77 : c982                     cmp #$82    ;test result
                                trap_ne
4e79 : f003            >        beq skip1433
                       >        trap            ;failed not equal (non zero)
4e7b : 208574          >        jsr report_error
                       >
4e7e :                 >skip1433
                        
4e7e : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4e7f : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4e81 : cd1e32                   cmp fLDx+1  ;test flags
                                trap_ne
4e84 : f003            >        beq skip1436
                       >        trap            ;failed not equal (non zero)
4e86 : 208574          >        jsr report_error
                       >
4e89 :                 >skip1436
                        
                                set_stat $ff
                       >            load_flag $ff
4e89 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4e8b : 48              >            pha         ;use stack to load status
4e8c : 28              >            plp
                        
4e8d : a55d                     lda zp1+2
4e8f : 08                       php         ;test stores do not alter flags
4e90 : 49c3                     eor #$c3
4e92 : 28                       plp
4e93 : 8d0532                   sta abst+2
4e96 : 08                       php         ;flags after load/store sequence
4e97 : 49c3                     eor #$c3
4e99 : c941                     cmp #$41    ;test result
                                trap_ne
4e9b : f003            >        beq skip1440
                       >        trap            ;failed not equal (non zero)
4e9d : 208574          >        jsr report_error
                       >
4ea0 :                 >skip1440
                        
4ea0 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4ea1 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4ea3 : cd1f32                   cmp fLDx+2  ;test flags
                                trap_ne
4ea6 : f003            >        beq skip1443
                       >        trap            ;failed not equal (non zero)
4ea8 : 208574          >        jsr report_error
                       >
4eab :                 >skip1443
                        
                                set_stat $ff
                       >            load_flag $ff
4eab : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4ead : 48              >            pha         ;use stack to load status
4eae : 28              >            plp
                        
4eaf : a55e                     lda zp1+3
4eb1 : 08                       php         ;test stores do not alter flags
4eb2 : 49c3                     eor #$c3
4eb4 : 28                       plp
4eb5 : 8d0632                   sta abst+3
4eb8 : 08                       php         ;flags after load/store sequence
4eb9 : 49c3                     eor #$c3
4ebb : c900                     cmp #0      ;test result
                                trap_ne
4ebd : f003            >        beq skip1447
                       >        trap            ;failed not equal (non zero)
4ebf : 208574          >        jsr report_error
                       >
4ec2 :                 >skip1447
                        
4ec2 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4ec3 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4ec5 : cd2032                   cmp fLDx+3  ;test flags
                                trap_ne
4ec8 : f003            >        beq skip1450
                       >        trap            ;failed not equal (non zero)
4eca : 208574          >        jsr report_error
                       >
4ecd :                 >skip1450
                        
                                set_stat 0
                       >            load_flag 0
4ecd : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4ecf : 48              >            pha         ;use stack to load status
4ed0 : 28              >            plp
                        
4ed1 : ad1832                   lda abs1
4ed4 : 08                       php         ;test stores do not alter flags
4ed5 : 49c3                     eor #$c3
4ed7 : 28                       plp
4ed8 : 8552                     sta zpt
4eda : 08                       php         ;flags after load/store sequence
4edb : 49c3                     eor #$c3
4edd : c55b                     cmp zp1     ;test result
                                trap_ne
4edf : f003            >        beq skip1454
                       >        trap            ;failed not equal (non zero)
4ee1 : 208574          >        jsr report_error
                       >
4ee4 :                 >skip1454
                        
4ee4 : 68                       pla         ;load status
                                eor_flag 0
4ee5 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4ee7 : cd1d32                   cmp fLDx    ;test flags
                                trap_ne
4eea : f003            >        beq skip1457
                       >        trap            ;failed not equal (non zero)
4eec : 208574          >        jsr report_error
                       >
4eef :                 >skip1457
                        
                                set_stat 0
                       >            load_flag 0
4eef : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4ef1 : 48              >            pha         ;use stack to load status
4ef2 : 28              >            plp
                        
4ef3 : ad1932                   lda abs1+1
4ef6 : 08                       php         ;test stores do not alter flags
4ef7 : 49c3                     eor #$c3
4ef9 : 28                       plp
4efa : 8553                     sta zpt+1
4efc : 08                       php         ;flags after load/store sequence
4efd : 49c3                     eor #$c3
4eff : c55c                     cmp zp1+1   ;test result
                                trap_ne
4f01 : f003            >        beq skip1461
                       >        trap            ;failed not equal (non zero)
4f03 : 208574          >        jsr report_error
                       >
4f06 :                 >skip1461
                        
4f06 : 68                       pla         ;load status
                                eor_flag 0
4f07 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4f09 : cd1e32                   cmp fLDx+1  ;test flags
                                trap_ne
4f0c : f003            >        beq skip1464
                       >        trap            ;failed not equal (non zero)
4f0e : 208574          >        jsr report_error
                       >
4f11 :                 >skip1464
                        
                                set_stat 0
                       >            load_flag 0
4f11 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4f13 : 48              >            pha         ;use stack to load status
4f14 : 28              >            plp
                        
4f15 : ad1a32                   lda abs1+2
4f18 : 08                       php         ;test stores do not alter flags
4f19 : 49c3                     eor #$c3
4f1b : 28                       plp
4f1c : 8554                     sta zpt+2
4f1e : 08                       php         ;flags after load/store sequence
4f1f : 49c3                     eor #$c3
4f21 : c55d                     cmp zp1+2   ;test result
                                trap_ne
4f23 : f003            >        beq skip1468
                       >        trap            ;failed not equal (non zero)
4f25 : 208574          >        jsr report_error
                       >
4f28 :                 >skip1468
                        
4f28 : 68                       pla         ;load status
                                eor_flag 0
4f29 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4f2b : cd1f32                   cmp fLDx+2  ;test flags
                                trap_ne
4f2e : f003            >        beq skip1471
                       >        trap            ;failed not equal (non zero)
4f30 : 208574          >        jsr report_error
                       >
4f33 :                 >skip1471
                        
                                set_stat 0
                       >            load_flag 0
4f33 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4f35 : 48              >            pha         ;use stack to load status
4f36 : 28              >            plp
                        
4f37 : ad1b32                   lda abs1+3
4f3a : 08                       php         ;test stores do not alter flags
4f3b : 49c3                     eor #$c3
4f3d : 28                       plp
4f3e : 8555                     sta zpt+3
4f40 : 08                       php         ;flags after load/store sequence
4f41 : 49c3                     eor #$c3
4f43 : c55e                     cmp zp1+3   ;test result
                                trap_ne
4f45 : f003            >        beq skip1475
                       >        trap            ;failed not equal (non zero)
4f47 : 208574          >        jsr report_error
                       >
4f4a :                 >skip1475
                        
4f4a : 68                       pla         ;load status
                                eor_flag 0
4f4b : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4f4d : cd2032                   cmp fLDx+3  ;test flags
                                trap_ne
4f50 : f003            >        beq skip1478
                       >        trap            ;failed not equal (non zero)
4f52 : 208574          >        jsr report_error
                       >
4f55 :                 >skip1478
                        
                                set_stat $ff
                       >            load_flag $ff
4f55 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4f57 : 48              >            pha         ;use stack to load status
4f58 : 28              >            plp
                        
4f59 : ad1832                   lda abs1
4f5c : 08                       php         ;test stores do not alter flags
4f5d : 49c3                     eor #$c3
4f5f : 28                       plp
4f60 : 8552                     sta zpt
4f62 : 08                       php         ;flags after load/store sequence
4f63 : 49c3                     eor #$c3
4f65 : c55b                     cmp zp1     ;test result
                                trap_ne
4f67 : f003            >        beq skip1482
                       >        trap            ;failed not equal (non zero)
4f69 : 208574          >        jsr report_error
                       >
4f6c :                 >skip1482
                        
4f6c : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4f6d : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4f6f : cd1d32                   cmp fLDx    ;test flags
                                trap_ne
4f72 : f003            >        beq skip1485
                       >        trap            ;failed not equal (non zero)
4f74 : 208574          >        jsr report_error
                       >
4f77 :                 >skip1485
                        
                                set_stat $ff
                       >            load_flag $ff
4f77 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4f79 : 48              >            pha         ;use stack to load status
4f7a : 28              >            plp
                        
4f7b : ad1932                   lda abs1+1
4f7e : 08                       php         ;test stores do not alter flags
4f7f : 49c3                     eor #$c3
4f81 : 28                       plp
4f82 : 8553                     sta zpt+1
4f84 : 08                       php         ;flags after load/store sequence
4f85 : 49c3                     eor #$c3
4f87 : c55c                     cmp zp1+1   ;test result
                                trap_ne
4f89 : f003            >        beq skip1489
                       >        trap            ;failed not equal (non zero)
4f8b : 208574          >        jsr report_error
                       >
4f8e :                 >skip1489
                        
4f8e : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4f8f : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4f91 : cd1e32                   cmp fLDx+1  ;test flags
                                trap_ne
4f94 : f003            >        beq skip1492
                       >        trap            ;failed not equal (non zero)
4f96 : 208574          >        jsr report_error
                       >
4f99 :                 >skip1492
                        
                                set_stat $ff
                       >            load_flag $ff
4f99 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4f9b : 48              >            pha         ;use stack to load status
4f9c : 28              >            plp
                        
4f9d : ad1a32                   lda abs1+2
4fa0 : 08                       php         ;test stores do not alter flags
4fa1 : 49c3                     eor #$c3
4fa3 : 28                       plp
4fa4 : 8554                     sta zpt+2
4fa6 : 08                       php         ;flags after load/store sequence
4fa7 : 49c3                     eor #$c3
4fa9 : c55d                     cmp zp1+2   ;test result
                                trap_ne
4fab : f003            >        beq skip1496
                       >        trap            ;failed not equal (non zero)
4fad : 208574          >        jsr report_error
                       >
4fb0 :                 >skip1496
                        
4fb0 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4fb1 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4fb3 : cd1f32                   cmp fLDx+2  ;test flags
                                trap_ne
4fb6 : f003            >        beq skip1499
                       >        trap            ;failed not equal (non zero)
4fb8 : 208574          >        jsr report_error
                       >
4fbb :                 >skip1499
                        
                                set_stat $ff
                       >            load_flag $ff
4fbb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4fbd : 48              >            pha         ;use stack to load status
4fbe : 28              >            plp
                        
4fbf : ad1b32                   lda abs1+3
4fc2 : 08                       php         ;test stores do not alter flags
4fc3 : 49c3                     eor #$c3
4fc5 : 28                       plp
4fc6 : 8555                     sta zpt+3
4fc8 : 08                       php         ;flags after load/store sequence
4fc9 : 49c3                     eor #$c3
4fcb : c55e                     cmp zp1+3   ;test result
                                trap_ne
4fcd : f003            >        beq skip1503
                       >        trap            ;failed not equal (non zero)
4fcf : 208574          >        jsr report_error
                       >
4fd2 :                 >skip1503
                        
4fd2 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4fd3 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4fd5 : cd2032                   cmp fLDx+3  ;test flags
                                trap_ne
4fd8 : f003            >        beq skip1506
                       >        trap            ;failed not equal (non zero)
4fda : 208574          >        jsr report_error
                       >
4fdd :                 >skip1506
                        
                                set_stat 0
                       >            load_flag 0
4fdd : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4fdf : 48              >            pha         ;use stack to load status
4fe0 : 28              >            plp
                        
4fe1 : a9c3                     lda #$c3
4fe3 : 08                       php
4fe4 : cd1832                   cmp abs1    ;test result
                                trap_ne
4fe7 : f003            >        beq skip1510
                       >        trap            ;failed not equal (non zero)
4fe9 : 208574          >        jsr report_error
                       >
4fec :                 >skip1510
                        
4fec : 68                       pla         ;load status
                                eor_flag 0
4fed : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4fef : cd1d32                   cmp fLDx    ;test flags
                                trap_ne
4ff2 : f003            >        beq skip1513
                       >        trap            ;failed not equal (non zero)
4ff4 : 208574          >        jsr report_error
                       >
4ff7 :                 >skip1513
                        
                                set_stat 0
                       >            load_flag 0
4ff7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4ff9 : 48              >            pha         ;use stack to load status
4ffa : 28              >            plp
                        
4ffb : a982                     lda #$82
4ffd : 08                       php
4ffe : cd1932                   cmp abs1+1  ;test result
                                trap_ne
5001 : f003            >        beq skip1517
                       >        trap            ;failed not equal (non zero)
5003 : 208574          >        jsr report_error
                       >
5006 :                 >skip1517
                        
5006 : 68                       pla         ;load status
                                eor_flag 0
5007 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
5009 : cd1e32                   cmp fLDx+1  ;test flags
                                trap_ne
500c : f003            >        beq skip1520
                       >        trap            ;failed not equal (non zero)
500e : 208574          >        jsr report_error
                       >
5011 :                 >skip1520
                        
                                set_stat 0
                       >            load_flag 0
5011 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5013 : 48              >            pha         ;use stack to load status
5014 : 28              >            plp
                        
5015 : a941                     lda #$41
5017 : 08                       php
5018 : cd1a32                   cmp abs1+2  ;test result
                                trap_ne
501b : f003            >        beq skip1524
                       >        trap            ;failed not equal (non zero)
501d : 208574          >        jsr report_error
                       >
5020 :                 >skip1524
                        
5020 : 68                       pla         ;load status
                                eor_flag 0
5021 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
5023 : cd1f32                   cmp fLDx+2  ;test flags
                                trap_ne
5026 : f003            >        beq skip1527
                       >        trap            ;failed not equal (non zero)
5028 : 208574          >        jsr report_error
                       >
502b :                 >skip1527
                        
                                set_stat 0
                       >            load_flag 0
502b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
502d : 48              >            pha         ;use stack to load status
502e : 28              >            plp
                        
502f : a900                     lda #0
5031 : 08                       php
5032 : cd1b32                   cmp abs1+3  ;test result
                                trap_ne
5035 : f003            >        beq skip1531
                       >        trap            ;failed not equal (non zero)
5037 : 208574          >        jsr report_error
                       >
503a :                 >skip1531
                        
503a : 68                       pla         ;load status
                                eor_flag 0
503b : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
503d : cd2032                   cmp fLDx+3  ;test flags
                                trap_ne
5040 : f003            >        beq skip1534
                       >        trap            ;failed not equal (non zero)
5042 : 208574          >        jsr report_error
                       >
5045 :                 >skip1534
                        
                        
                                set_stat $ff
                       >            load_flag $ff
5045 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5047 : 48              >            pha         ;use stack to load status
5048 : 28              >            plp
                        
5049 : a9c3                     lda #$c3
504b : 08                       php
504c : cd1832                   cmp abs1    ;test result
                                trap_ne
504f : f003            >        beq skip1538
                       >        trap            ;failed not equal (non zero)
5051 : 208574          >        jsr report_error
                       >
5054 :                 >skip1538
                        
5054 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
5055 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
5057 : cd1d32                   cmp fLDx    ;test flags
                                trap_ne
505a : f003            >        beq skip1541
                       >        trap            ;failed not equal (non zero)
505c : 208574          >        jsr report_error
                       >
505f :                 >skip1541
                        
                                set_stat $ff
                       >            load_flag $ff
505f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5061 : 48              >            pha         ;use stack to load status
5062 : 28              >            plp
                        
5063 : a982                     lda #$82
5065 : 08                       php
5066 : cd1932                   cmp abs1+1  ;test result
                                trap_ne
5069 : f003            >        beq skip1545
                       >        trap            ;failed not equal (non zero)
506b : 208574          >        jsr report_error
                       >
506e :                 >skip1545
                        
506e : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
506f : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
5071 : cd1e32                   cmp fLDx+1  ;test flags
                                trap_ne
5074 : f003            >        beq skip1548
                       >        trap            ;failed not equal (non zero)
5076 : 208574          >        jsr report_error
                       >
5079 :                 >skip1548
                        
                                set_stat $ff
                       >            load_flag $ff
5079 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
507b : 48              >            pha         ;use stack to load status
507c : 28              >            plp
                        
507d : a941                     lda #$41
507f : 08                       php
5080 : cd1a32                   cmp abs1+2  ;test result
                                trap_ne
5083 : f003            >        beq skip1552
                       >        trap            ;failed not equal (non zero)
5085 : 208574          >        jsr report_error
                       >
5088 :                 >skip1552
                        
5088 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
5089 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
508b : cd1f32                   cmp fLDx+2  ;test flags
                                trap_ne
508e : f003            >        beq skip1555
                       >        trap            ;failed not equal (non zero)
5090 : 208574          >        jsr report_error
                       >
5093 :                 >skip1555
                        
                                set_stat $ff
                       >            load_flag $ff
5093 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5095 : 48              >            pha         ;use stack to load status
5096 : 28              >            plp
                        
5097 : a900                     lda #0
5099 : 08                       php
509a : cd1b32                   cmp abs1+3  ;test result
                                trap_ne
509d : f003            >        beq skip1559
                       >        trap            ;failed not equal (non zero)
509f : 208574          >        jsr report_error
                       >
50a2 :                 >skip1559
                        
50a2 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
50a3 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
50a5 : cd2032                   cmp fLDx+3  ;test flags
                                trap_ne
50a8 : f003            >        beq skip1562
                       >        trap            ;failed not equal (non zero)
50aa : 208574          >        jsr report_error
                       >
50ad :                 >skip1562
                        
                        
50ad : a200                     ldx #0
50af : a552                     lda zpt
50b1 : 49c3                     eor #$c3
50b3 : c55b                     cmp zp1
                                trap_ne     ;store to zp data
50b5 : f003            >        beq skip1564
                       >        trap            ;failed not equal (non zero)
50b7 : 208574          >        jsr report_error
                       >
50ba :                 >skip1564
                        
50ba : 8652                     stx zpt     ;clear
50bc : ad0332                   lda abst
50bf : 49c3                     eor #$c3
50c1 : cd1832                   cmp abs1
                                trap_ne     ;store to abs data
50c4 : f003            >        beq skip1566
                       >        trap            ;failed not equal (non zero)
50c6 : 208574          >        jsr report_error
                       >
50c9 :                 >skip1566
                        
50c9 : 8e0332                   stx abst    ;clear
50cc : a553                     lda zpt+1
50ce : 49c3                     eor #$c3
50d0 : c55c                     cmp zp1+1
                                trap_ne     ;store to zp data
50d2 : f003            >        beq skip1568
                       >        trap            ;failed not equal (non zero)
50d4 : 208574          >        jsr report_error
                       >
50d7 :                 >skip1568
                        
50d7 : 8653                     stx zpt+1   ;clear
50d9 : ad0432                   lda abst+1
50dc : 49c3                     eor #$c3
50de : cd1932                   cmp abs1+1
                                trap_ne     ;store to abs data
50e1 : f003            >        beq skip1570
                       >        trap            ;failed not equal (non zero)
50e3 : 208574          >        jsr report_error
                       >
50e6 :                 >skip1570
                        
50e6 : 8e0432                   stx abst+1  ;clear
50e9 : a554                     lda zpt+2
50eb : 49c3                     eor #$c3
50ed : c55d                     cmp zp1+2
                                trap_ne     ;store to zp data
50ef : f003            >        beq skip1572
                       >        trap            ;failed not equal (non zero)
50f1 : 208574          >        jsr report_error
                       >
50f4 :                 >skip1572
                        
50f4 : 8654                     stx zpt+2   ;clear
50f6 : ad0532                   lda abst+2
50f9 : 49c3                     eor #$c3
50fb : cd1a32                   cmp abs1+2
                                trap_ne     ;store to abs data
50fe : f003            >        beq skip1574
                       >        trap            ;failed not equal (non zero)
5100 : 208574          >        jsr report_error
                       >
5103 :                 >skip1574
                        
5103 : 8e0532                   stx abst+2  ;clear
5106 : a555                     lda zpt+3
5108 : 49c3                     eor #$c3
510a : c55e                     cmp zp1+3
                                trap_ne     ;store to zp data
510c : f003            >        beq skip1576
                       >        trap            ;failed not equal (non zero)
510e : 208574          >        jsr report_error
                       >
5111 :                 >skip1576
                        
5111 : 8655                     stx zpt+3   ;clear
5113 : ad0632                   lda abst+3
5116 : 49c3                     eor #$c3
5118 : cd1b32                   cmp abs1+3
                                trap_ne     ;store to abs data
511b : f003            >        beq skip1578
                       >        trap            ;failed not equal (non zero)
511d : 208574          >        jsr report_error
                       >
5120 :                 >skip1578
                        
5120 : 8e0632                   stx abst+3  ;clear
                                next_test
5123 : ad0032          >            lda test_case   ;previous test
5126 : c918            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
5128 : f003            >        beq skip1581
                       >        trap            ;failed not equal (non zero)
512a : 208574          >        jsr report_error
                       >
512d :                 >skip1581
                       >
0019 =                 >test_num = test_num + 1
512d : a919            >            lda #test_num   ;*** next tests' number
512f : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing bit test & compares BIT CPX CPY CMP all addressing modes
                        ; BIT - zp / abs
                                set_a $ff,0
                       >            load_flag 0
5132 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5134 : 48              >            pha         ;use stack to load status
5135 : a9ff            >            lda #$ff     ;precharge accu
5137 : 28              >            plp
                        
5138 : 245e                     bit zp1+3   ;00 - should set Z / clear  NV
                                tst_a $ff,fz
513a : 08              >            php         ;save flags
513b : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
513d : f003            >        beq skip1586
                       >        trap            ;failed not equal (non zero)
513f : 208574          >        jsr report_error
                       >
5142 :                 >skip1586
                       >
5142 : 68              >            pla         ;load status
5143 : 48              >            pha
                       >            cmp_flag fz
5144 : c932            >            cmp #(fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5146 : f003            >        beq skip1589
                       >        trap            ;failed not equal (non zero)
5148 : 208574          >        jsr report_error
                       >
514b :                 >skip1589
                       >
514b : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
514c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
514e : 48              >            pha         ;use stack to load status
514f : a901            >            lda #1     ;precharge accu
5151 : 28              >            plp
                        
5152 : 245d                     bit zp1+2   ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
5154 : 08              >            php         ;save flags
5155 : c901            >            cmp #1     ;test result
                       >            trap_ne
5157 : f003            >        beq skip1594
                       >        trap            ;failed not equal (non zero)
5159 : 208574          >        jsr report_error
                       >
515c :                 >skip1594
                       >
515c : 68              >            pla         ;load status
515d : 48              >            pha
                       >            cmp_flag fv
515e : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5160 : f003            >        beq skip1597
                       >        trap            ;failed not equal (non zero)
5162 : 208574          >        jsr report_error
                       >
5165 :                 >skip1597
                       >
5165 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
5166 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5168 : 48              >            pha         ;use stack to load status
5169 : a901            >            lda #1     ;precharge accu
516b : 28              >            plp
                        
516c : 245c                     bit zp1+1   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
516e : 08              >            php         ;save flags
516f : c901            >            cmp #1     ;test result
                       >            trap_ne
5171 : f003            >        beq skip1602
                       >        trap            ;failed not equal (non zero)
5173 : 208574          >        jsr report_error
                       >
5176 :                 >skip1602
                       >
5176 : 68              >            pla         ;load status
5177 : 48              >            pha
                       >            cmp_flag fnz
5178 : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
517a : f003            >        beq skip1605
                       >        trap            ;failed not equal (non zero)
517c : 208574          >        jsr report_error
                       >
517f :                 >skip1605
                       >
517f : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
5180 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5182 : 48              >            pha         ;use stack to load status
5183 : a901            >            lda #1     ;precharge accu
5185 : 28              >            plp
                        
5186 : 245b                     bit zp1     ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
5188 : 08              >            php         ;save flags
5189 : c901            >            cmp #1     ;test result
                       >            trap_ne
518b : f003            >        beq skip1610
                       >        trap            ;failed not equal (non zero)
518d : 208574          >        jsr report_error
                       >
5190 :                 >skip1610
                       >
5190 : 68              >            pla         ;load status
5191 : 48              >            pha
                       >            cmp_flag fnv
5192 : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5194 : f003            >        beq skip1613
                       >        trap            ;failed not equal (non zero)
5196 : 208574          >        jsr report_error
                       >
5199 :                 >skip1613
                       >
5199 : 28              >            plp         ;restore status
                        
                        
                                set_a $ff,$ff
                       >            load_flag $ff
519a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
519c : 48              >            pha         ;use stack to load status
519d : a9ff            >            lda #$ff     ;precharge accu
519f : 28              >            plp
                        
51a0 : 245e                     bit zp1+3   ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv
51a2 : 08              >            php         ;save flags
51a3 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
51a5 : f003            >        beq skip1618
                       >        trap            ;failed not equal (non zero)
51a7 : 208574          >        jsr report_error
                       >
51aa :                 >skip1618
                       >
51aa : 68              >            pla         ;load status
51ab : 48              >            pha
                       >            cmp_flag ~fnv
51ac : c93f            >            cmp #(~fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
51ae : f003            >        beq skip1621
                       >        trap            ;failed not equal (non zero)
51b0 : 208574          >        jsr report_error
                       >
51b3 :                 >skip1621
                       >
51b3 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
51b4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
51b6 : 48              >            pha         ;use stack to load status
51b7 : a901            >            lda #1     ;precharge accu
51b9 : 28              >            plp
                        
51ba : 245d                     bit zp1+2   ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
51bc : 08              >            php         ;save flags
51bd : c901            >            cmp #1     ;test result
                       >            trap_ne
51bf : f003            >        beq skip1626
                       >        trap            ;failed not equal (non zero)
51c1 : 208574          >        jsr report_error
                       >
51c4 :                 >skip1626
                       >
51c4 : 68              >            pla         ;load status
51c5 : 48              >            pha
                       >            cmp_flag ~fnz
51c6 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
51c8 : f003            >        beq skip1629
                       >        trap            ;failed not equal (non zero)
51ca : 208574          >        jsr report_error
                       >
51cd :                 >skip1629
                       >
51cd : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
51ce : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
51d0 : 48              >            pha         ;use stack to load status
51d1 : a901            >            lda #1     ;precharge accu
51d3 : 28              >            plp
                        
51d4 : 245c                     bit zp1+1   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
51d6 : 08              >            php         ;save flags
51d7 : c901            >            cmp #1     ;test result
                       >            trap_ne
51d9 : f003            >        beq skip1634
                       >        trap            ;failed not equal (non zero)
51db : 208574          >        jsr report_error
                       >
51de :                 >skip1634
                       >
51de : 68              >            pla         ;load status
51df : 48              >            pha
                       >            cmp_flag ~fv
51e0 : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
51e2 : f003            >        beq skip1637
                       >        trap            ;failed not equal (non zero)
51e4 : 208574          >        jsr report_error
                       >
51e7 :                 >skip1637
                       >
51e7 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
51e8 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
51ea : 48              >            pha         ;use stack to load status
51eb : a901            >            lda #1     ;precharge accu
51ed : 28              >            plp
                        
51ee : 245b                     bit zp1     ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
51f0 : 08              >            php         ;save flags
51f1 : c901            >            cmp #1     ;test result
                       >            trap_ne
51f3 : f003            >        beq skip1642
                       >        trap            ;failed not equal (non zero)
51f5 : 208574          >        jsr report_error
                       >
51f8 :                 >skip1642
                       >
51f8 : 68              >            pla         ;load status
51f9 : 48              >            pha
                       >            cmp_flag ~fz
51fa : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
51fc : f003            >        beq skip1645
                       >        trap            ;failed not equal (non zero)
51fe : 208574          >        jsr report_error
                       >
5201 :                 >skip1645
                       >
5201 : 28              >            plp         ;restore status
                        
                        
                                set_a $ff,0
                       >            load_flag 0
5202 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5204 : 48              >            pha         ;use stack to load status
5205 : a9ff            >            lda #$ff     ;precharge accu
5207 : 28              >            plp
                        
5208 : 2c1b32                   bit abs1+3  ;00 - should set Z / clear  NV
                                tst_a $ff,fz
520b : 08              >            php         ;save flags
520c : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
520e : f003            >        beq skip1650
                       >        trap            ;failed not equal (non zero)
5210 : 208574          >        jsr report_error
                       >
5213 :                 >skip1650
                       >
5213 : 68              >            pla         ;load status
5214 : 48              >            pha
                       >            cmp_flag fz
5215 : c932            >            cmp #(fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5217 : f003            >        beq skip1653
                       >        trap            ;failed not equal (non zero)
5219 : 208574          >        jsr report_error
                       >
521c :                 >skip1653
                       >
521c : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
521d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
521f : 48              >            pha         ;use stack to load status
5220 : a901            >            lda #1     ;precharge accu
5222 : 28              >            plp
                        
5223 : 2c1a32                   bit abs1+2  ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
5226 : 08              >            php         ;save flags
5227 : c901            >            cmp #1     ;test result
                       >            trap_ne
5229 : f003            >        beq skip1658
                       >        trap            ;failed not equal (non zero)
522b : 208574          >        jsr report_error
                       >
522e :                 >skip1658
                       >
522e : 68              >            pla         ;load status
522f : 48              >            pha
                       >            cmp_flag fv
5230 : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5232 : f003            >        beq skip1661
                       >        trap            ;failed not equal (non zero)
5234 : 208574          >        jsr report_error
                       >
5237 :                 >skip1661
                       >
5237 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
5238 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
523a : 48              >            pha         ;use stack to load status
523b : a901            >            lda #1     ;precharge accu
523d : 28              >            plp
                        
523e : 2c1932                   bit abs1+1  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
5241 : 08              >            php         ;save flags
5242 : c901            >            cmp #1     ;test result
                       >            trap_ne
5244 : f003            >        beq skip1666
                       >        trap            ;failed not equal (non zero)
5246 : 208574          >        jsr report_error
                       >
5249 :                 >skip1666
                       >
5249 : 68              >            pla         ;load status
524a : 48              >            pha
                       >            cmp_flag fnz
524b : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
524d : f003            >        beq skip1669
                       >        trap            ;failed not equal (non zero)
524f : 208574          >        jsr report_error
                       >
5252 :                 >skip1669
                       >
5252 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
5253 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5255 : 48              >            pha         ;use stack to load status
5256 : a901            >            lda #1     ;precharge accu
5258 : 28              >            plp
                        
5259 : 2c1832                   bit abs1    ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
525c : 08              >            php         ;save flags
525d : c901            >            cmp #1     ;test result
                       >            trap_ne
525f : f003            >        beq skip1674
                       >        trap            ;failed not equal (non zero)
5261 : 208574          >        jsr report_error
                       >
5264 :                 >skip1674
                       >
5264 : 68              >            pla         ;load status
5265 : 48              >            pha
                       >            cmp_flag fnv
5266 : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5268 : f003            >        beq skip1677
                       >        trap            ;failed not equal (non zero)
526a : 208574          >        jsr report_error
                       >
526d :                 >skip1677
                       >
526d : 28              >            plp         ;restore status
                        
                        
                                set_a $ff,$ff
                       >            load_flag $ff
526e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5270 : 48              >            pha         ;use stack to load status
5271 : a9ff            >            lda #$ff     ;precharge accu
5273 : 28              >            plp
                        
5274 : 2c1b32                   bit abs1+3  ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv
5277 : 08              >            php         ;save flags
5278 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
527a : f003            >        beq skip1682
                       >        trap            ;failed not equal (non zero)
527c : 208574          >        jsr report_error
                       >
527f :                 >skip1682
                       >
527f : 68              >            pla         ;load status
5280 : 48              >            pha
                       >            cmp_flag ~fnv
5281 : c93f            >            cmp #(~fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5283 : f003            >        beq skip1685
                       >        trap            ;failed not equal (non zero)
5285 : 208574          >        jsr report_error
                       >
5288 :                 >skip1685
                       >
5288 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
5289 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
528b : 48              >            pha         ;use stack to load status
528c : a901            >            lda #1     ;precharge accu
528e : 28              >            plp
                        
528f : 2c1a32                   bit abs1+2  ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
5292 : 08              >            php         ;save flags
5293 : c901            >            cmp #1     ;test result
                       >            trap_ne
5295 : f003            >        beq skip1690
                       >        trap            ;failed not equal (non zero)
5297 : 208574          >        jsr report_error
                       >
529a :                 >skip1690
                       >
529a : 68              >            pla         ;load status
529b : 48              >            pha
                       >            cmp_flag ~fnz
529c : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
529e : f003            >        beq skip1693
                       >        trap            ;failed not equal (non zero)
52a0 : 208574          >        jsr report_error
                       >
52a3 :                 >skip1693
                       >
52a3 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
52a4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
52a6 : 48              >            pha         ;use stack to load status
52a7 : a901            >            lda #1     ;precharge accu
52a9 : 28              >            plp
                        
52aa : 2c1932                   bit abs1+1  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
52ad : 08              >            php         ;save flags
52ae : c901            >            cmp #1     ;test result
                       >            trap_ne
52b0 : f003            >        beq skip1698
                       >        trap            ;failed not equal (non zero)
52b2 : 208574          >        jsr report_error
                       >
52b5 :                 >skip1698
                       >
52b5 : 68              >            pla         ;load status
52b6 : 48              >            pha
                       >            cmp_flag ~fv
52b7 : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
52b9 : f003            >        beq skip1701
                       >        trap            ;failed not equal (non zero)
52bb : 208574          >        jsr report_error
                       >
52be :                 >skip1701
                       >
52be : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
52bf : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
52c1 : 48              >            pha         ;use stack to load status
52c2 : a901            >            lda #1     ;precharge accu
52c4 : 28              >            plp
                        
52c5 : 2c1832                   bit abs1    ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
52c8 : 08              >            php         ;save flags
52c9 : c901            >            cmp #1     ;test result
                       >            trap_ne
52cb : f003            >        beq skip1706
                       >        trap            ;failed not equal (non zero)
52cd : 208574          >        jsr report_error
                       >
52d0 :                 >skip1706
                       >
52d0 : 68              >            pla         ;load status
52d1 : 48              >            pha
                       >            cmp_flag ~fz
52d2 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
52d4 : f003            >        beq skip1709
                       >        trap            ;failed not equal (non zero)
52d6 : 208574          >        jsr report_error
                       >
52d9 :                 >skip1709
                       >
52d9 : 28              >            plp         ;restore status
                        
                                next_test
52da : ad0032          >            lda test_case   ;previous test
52dd : c919            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
52df : f003            >        beq skip1712
                       >        trap            ;failed not equal (non zero)
52e1 : 208574          >        jsr report_error
                       >
52e4 :                 >skip1712
                       >
001a =                 >test_num = test_num + 1
52e4 : a91a            >            lda #test_num   ;*** next tests' number
52e6 : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; CPX - zp / abs / #
                                set_x $80,0
                       >            load_flag 0
52e9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
52eb : 48              >            pha         ;use stack to load status
52ec : a280            >            ldx #$80     ;precharge index x
52ee : 28              >            plp
                        
52ef : e45f                     cpx zp7f
                                tst_stat fc
52f1 : 08              >            php         ;save status
52f2 : 68              >            pla         ;use stack to retrieve status
52f3 : 48              >            pha
                       >            cmp_flag fc
52f4 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
52f6 : f003            >        beq skip1718
                       >        trap            ;failed not equal (non zero)
52f8 : 208574          >        jsr report_error
                       >
52fb :                 >skip1718
                       >
52fb : 28              >            plp         ;restore status
                        
52fc : ca                       dex
52fd : e45f                     cpx zp7f
                                tst_stat fzc
52ff : 08              >            php         ;save status
5300 : 68              >            pla         ;use stack to retrieve status
5301 : 48              >            pha
                       >            cmp_flag fzc
5302 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5304 : f003            >        beq skip1722
                       >        trap            ;failed not equal (non zero)
5306 : 208574          >        jsr report_error
                       >
5309 :                 >skip1722
                       >
5309 : 28              >            plp         ;restore status
                        
530a : ca                       dex
530b : e45f                     cpx zp7f
                                tst_x $7e,fn
530d : 08              >            php         ;save flags
530e : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
5310 : f003            >        beq skip1725
                       >        trap            ;failed not equal (non zero)
5312 : 208574          >        jsr report_error
                       >
5315 :                 >skip1725
                       >
5315 : 68              >            pla         ;load status
5316 : 48              >            pha
                       >            cmp_flag fn
5317 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5319 : f003            >        beq skip1728
                       >        trap            ;failed not equal (non zero)
531b : 208574          >        jsr report_error
                       >
531e :                 >skip1728
                       >
531e : 28              >            plp         ;restore status
                        
                                set_x $80,$ff
                       >            load_flag $ff
531f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5321 : 48              >            pha         ;use stack to load status
5322 : a280            >            ldx #$80     ;precharge index x
5324 : 28              >            plp
                        
5325 : e45f                     cpx zp7f
                                tst_stat ~fnz
5327 : 08              >            php         ;save status
5328 : 68              >            pla         ;use stack to retrieve status
5329 : 48              >            pha
                       >            cmp_flag ~fnz
532a : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
532c : f003            >        beq skip1734
                       >        trap            ;failed not equal (non zero)
532e : 208574          >        jsr report_error
                       >
5331 :                 >skip1734
                       >
5331 : 28              >            plp         ;restore status
                        
5332 : ca                       dex
5333 : e45f                     cpx zp7f
                                tst_stat ~fn
5335 : 08              >            php         ;save status
5336 : 68              >            pla         ;use stack to retrieve status
5337 : 48              >            pha
                       >            cmp_flag ~fn
5338 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
533a : f003            >        beq skip1738
                       >        trap            ;failed not equal (non zero)
533c : 208574          >        jsr report_error
                       >
533f :                 >skip1738
                       >
533f : 28              >            plp         ;restore status
                        
5340 : ca                       dex
5341 : e45f                     cpx zp7f
                                tst_x $7e,~fzc
5343 : 08              >            php         ;save flags
5344 : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
5346 : f003            >        beq skip1741
                       >        trap            ;failed not equal (non zero)
5348 : 208574          >        jsr report_error
                       >
534b :                 >skip1741
                       >
534b : 68              >            pla         ;load status
534c : 48              >            pha
                       >            cmp_flag ~fzc
534d : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
534f : f003            >        beq skip1744
                       >        trap            ;failed not equal (non zero)
5351 : 208574          >        jsr report_error
                       >
5354 :                 >skip1744
                       >
5354 : 28              >            plp         ;restore status
                        
                        
                                set_x $80,0
                       >            load_flag 0
5355 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5357 : 48              >            pha         ;use stack to load status
5358 : a280            >            ldx #$80     ;precharge index x
535a : 28              >            plp
                        
535b : ec1c32                   cpx abs7f
                                tst_stat fc
535e : 08              >            php         ;save status
535f : 68              >            pla         ;use stack to retrieve status
5360 : 48              >            pha
                       >            cmp_flag fc
5361 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5363 : f003            >        beq skip1750
                       >        trap            ;failed not equal (non zero)
5365 : 208574          >        jsr report_error
                       >
5368 :                 >skip1750
                       >
5368 : 28              >            plp         ;restore status
                        
5369 : ca                       dex
536a : ec1c32                   cpx abs7f
                                tst_stat fzc
536d : 08              >            php         ;save status
536e : 68              >            pla         ;use stack to retrieve status
536f : 48              >            pha
                       >            cmp_flag fzc
5370 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5372 : f003            >        beq skip1754
                       >        trap            ;failed not equal (non zero)
5374 : 208574          >        jsr report_error
                       >
5377 :                 >skip1754
                       >
5377 : 28              >            plp         ;restore status
                        
5378 : ca                       dex
5379 : ec1c32                   cpx abs7f
                                tst_x $7e,fn
537c : 08              >            php         ;save flags
537d : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
537f : f003            >        beq skip1757
                       >        trap            ;failed not equal (non zero)
5381 : 208574          >        jsr report_error
                       >
5384 :                 >skip1757
                       >
5384 : 68              >            pla         ;load status
5385 : 48              >            pha
                       >            cmp_flag fn
5386 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5388 : f003            >        beq skip1760
                       >        trap            ;failed not equal (non zero)
538a : 208574          >        jsr report_error
                       >
538d :                 >skip1760
                       >
538d : 28              >            plp         ;restore status
                        
                                set_x $80,$ff
                       >            load_flag $ff
538e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5390 : 48              >            pha         ;use stack to load status
5391 : a280            >            ldx #$80     ;precharge index x
5393 : 28              >            plp
                        
5394 : ec1c32                   cpx abs7f
                                tst_stat ~fnz
5397 : 08              >            php         ;save status
5398 : 68              >            pla         ;use stack to retrieve status
5399 : 48              >            pha
                       >            cmp_flag ~fnz
539a : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
539c : f003            >        beq skip1766
                       >        trap            ;failed not equal (non zero)
539e : 208574          >        jsr report_error
                       >
53a1 :                 >skip1766
                       >
53a1 : 28              >            plp         ;restore status
                        
53a2 : ca                       dex
53a3 : ec1c32                   cpx abs7f
                                tst_stat ~fn
53a6 : 08              >            php         ;save status
53a7 : 68              >            pla         ;use stack to retrieve status
53a8 : 48              >            pha
                       >            cmp_flag ~fn
53a9 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
53ab : f003            >        beq skip1770
                       >        trap            ;failed not equal (non zero)
53ad : 208574          >        jsr report_error
                       >
53b0 :                 >skip1770
                       >
53b0 : 28              >            plp         ;restore status
                        
53b1 : ca                       dex
53b2 : ec1c32                   cpx abs7f
                                tst_x $7e,~fzc
53b5 : 08              >            php         ;save flags
53b6 : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
53b8 : f003            >        beq skip1773
                       >        trap            ;failed not equal (non zero)
53ba : 208574          >        jsr report_error
                       >
53bd :                 >skip1773
                       >
53bd : 68              >            pla         ;load status
53be : 48              >            pha
                       >            cmp_flag ~fzc
53bf : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
53c1 : f003            >        beq skip1776
                       >        trap            ;failed not equal (non zero)
53c3 : 208574          >        jsr report_error
                       >
53c6 :                 >skip1776
                       >
53c6 : 28              >            plp         ;restore status
                        
                        
                                set_x $80,0
                       >            load_flag 0
53c7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
53c9 : 48              >            pha         ;use stack to load status
53ca : a280            >            ldx #$80     ;precharge index x
53cc : 28              >            plp
                        
53cd : e07f                     cpx #$7f
                                tst_stat fc
53cf : 08              >            php         ;save status
53d0 : 68              >            pla         ;use stack to retrieve status
53d1 : 48              >            pha
                       >            cmp_flag fc
53d2 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
53d4 : f003            >        beq skip1782
                       >        trap            ;failed not equal (non zero)
53d6 : 208574          >        jsr report_error
                       >
53d9 :                 >skip1782
                       >
53d9 : 28              >            plp         ;restore status
                        
53da : ca                       dex
53db : e07f                     cpx #$7f
                                tst_stat fzc
53dd : 08              >            php         ;save status
53de : 68              >            pla         ;use stack to retrieve status
53df : 48              >            pha
                       >            cmp_flag fzc
53e0 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
53e2 : f003            >        beq skip1786
                       >        trap            ;failed not equal (non zero)
53e4 : 208574          >        jsr report_error
                       >
53e7 :                 >skip1786
                       >
53e7 : 28              >            plp         ;restore status
                        
53e8 : ca                       dex
53e9 : e07f                     cpx #$7f
                                tst_x $7e,fn
53eb : 08              >            php         ;save flags
53ec : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
53ee : f003            >        beq skip1789
                       >        trap            ;failed not equal (non zero)
53f0 : 208574          >        jsr report_error
                       >
53f3 :                 >skip1789
                       >
53f3 : 68              >            pla         ;load status
53f4 : 48              >            pha
                       >            cmp_flag fn
53f5 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
53f7 : f003            >        beq skip1792
                       >        trap            ;failed not equal (non zero)
53f9 : 208574          >        jsr report_error
                       >
53fc :                 >skip1792
                       >
53fc : 28              >            plp         ;restore status
                        
                                set_x $80,$ff
                       >            load_flag $ff
53fd : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
53ff : 48              >            pha         ;use stack to load status
5400 : a280            >            ldx #$80     ;precharge index x
5402 : 28              >            plp
                        
5403 : e07f                     cpx #$7f
                                tst_stat ~fnz
5405 : 08              >            php         ;save status
5406 : 68              >            pla         ;use stack to retrieve status
5407 : 48              >            pha
                       >            cmp_flag ~fnz
5408 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
540a : f003            >        beq skip1798
                       >        trap            ;failed not equal (non zero)
540c : 208574          >        jsr report_error
                       >
540f :                 >skip1798
                       >
540f : 28              >            plp         ;restore status
                        
5410 : ca                       dex
5411 : e07f                     cpx #$7f
                                tst_stat ~fn
5413 : 08              >            php         ;save status
5414 : 68              >            pla         ;use stack to retrieve status
5415 : 48              >            pha
                       >            cmp_flag ~fn
5416 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5418 : f003            >        beq skip1802
                       >        trap            ;failed not equal (non zero)
541a : 208574          >        jsr report_error
                       >
541d :                 >skip1802
                       >
541d : 28              >            plp         ;restore status
                        
541e : ca                       dex
541f : e07f                     cpx #$7f
                                tst_x $7e,~fzc
5421 : 08              >            php         ;save flags
5422 : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
5424 : f003            >        beq skip1805
                       >        trap            ;failed not equal (non zero)
5426 : 208574          >        jsr report_error
                       >
5429 :                 >skip1805
                       >
5429 : 68              >            pla         ;load status
542a : 48              >            pha
                       >            cmp_flag ~fzc
542b : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
542d : f003            >        beq skip1808
                       >        trap            ;failed not equal (non zero)
542f : 208574          >        jsr report_error
                       >
5432 :                 >skip1808
                       >
5432 : 28              >            plp         ;restore status
                        
                                next_test
5433 : ad0032          >            lda test_case   ;previous test
5436 : c91a            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
5438 : f003            >        beq skip1811
                       >        trap            ;failed not equal (non zero)
543a : 208574          >        jsr report_error
                       >
543d :                 >skip1811
                       >
001b =                 >test_num = test_num + 1
543d : a91b            >            lda #test_num   ;*** next tests' number
543f : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; CPY - zp / abs / #
                                set_y $80,0
                       >            load_flag 0
5442 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5444 : 48              >            pha         ;use stack to load status
5445 : a080            >            ldy #$80     ;precharge index y
5447 : 28              >            plp
                        
5448 : c45f                     cpy zp7f
                                tst_stat fc
544a : 08              >            php         ;save status
544b : 68              >            pla         ;use stack to retrieve status
544c : 48              >            pha
                       >            cmp_flag fc
544d : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
544f : f003            >        beq skip1817
                       >        trap            ;failed not equal (non zero)
5451 : 208574          >        jsr report_error
                       >
5454 :                 >skip1817
                       >
5454 : 28              >            plp         ;restore status
                        
5455 : 88                       dey
5456 : c45f                     cpy zp7f
                                tst_stat fzc
5458 : 08              >            php         ;save status
5459 : 68              >            pla         ;use stack to retrieve status
545a : 48              >            pha
                       >            cmp_flag fzc
545b : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
545d : f003            >        beq skip1821
                       >        trap            ;failed not equal (non zero)
545f : 208574          >        jsr report_error
                       >
5462 :                 >skip1821
                       >
5462 : 28              >            plp         ;restore status
                        
5463 : 88                       dey
5464 : c45f                     cpy zp7f
                                tst_y $7e,fn
5466 : 08              >            php         ;save flags
5467 : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
5469 : f003            >        beq skip1824
                       >        trap            ;failed not equal (non zero)
546b : 208574          >        jsr report_error
                       >
546e :                 >skip1824
                       >
546e : 68              >            pla         ;load status
546f : 48              >            pha
                       >            cmp_flag fn
5470 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5472 : f003            >        beq skip1827
                       >        trap            ;failed not equal (non zero)
5474 : 208574          >        jsr report_error
                       >
5477 :                 >skip1827
                       >
5477 : 28              >            plp         ;restore status
                        
                                set_y $80,$ff
                       >            load_flag $ff
5478 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
547a : 48              >            pha         ;use stack to load status
547b : a080            >            ldy #$80     ;precharge index y
547d : 28              >            plp
                        
547e : c45f                     cpy zp7f
                                tst_stat ~fnz
5480 : 08              >            php         ;save status
5481 : 68              >            pla         ;use stack to retrieve status
5482 : 48              >            pha
                       >            cmp_flag ~fnz
5483 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5485 : f003            >        beq skip1833
                       >        trap            ;failed not equal (non zero)
5487 : 208574          >        jsr report_error
                       >
548a :                 >skip1833
                       >
548a : 28              >            plp         ;restore status
                        
548b : 88                       dey
548c : c45f                     cpy zp7f
                                tst_stat ~fn
548e : 08              >            php         ;save status
548f : 68              >            pla         ;use stack to retrieve status
5490 : 48              >            pha
                       >            cmp_flag ~fn
5491 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5493 : f003            >        beq skip1837
                       >        trap            ;failed not equal (non zero)
5495 : 208574          >        jsr report_error
                       >
5498 :                 >skip1837
                       >
5498 : 28              >            plp         ;restore status
                        
5499 : 88                       dey
549a : c45f                     cpy zp7f
                                tst_y $7e,~fzc
549c : 08              >            php         ;save flags
549d : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
549f : f003            >        beq skip1840
                       >        trap            ;failed not equal (non zero)
54a1 : 208574          >        jsr report_error
                       >
54a4 :                 >skip1840
                       >
54a4 : 68              >            pla         ;load status
54a5 : 48              >            pha
                       >            cmp_flag ~fzc
54a6 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
54a8 : f003            >        beq skip1843
                       >        trap            ;failed not equal (non zero)
54aa : 208574          >        jsr report_error
                       >
54ad :                 >skip1843
                       >
54ad : 28              >            plp         ;restore status
                        
                        
                                set_y $80,0
                       >            load_flag 0
54ae : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
54b0 : 48              >            pha         ;use stack to load status
54b1 : a080            >            ldy #$80     ;precharge index y
54b3 : 28              >            plp
                        
54b4 : cc1c32                   cpy abs7f
                                tst_stat fc
54b7 : 08              >            php         ;save status
54b8 : 68              >            pla         ;use stack to retrieve status
54b9 : 48              >            pha
                       >            cmp_flag fc
54ba : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
54bc : f003            >        beq skip1849
                       >        trap            ;failed not equal (non zero)
54be : 208574          >        jsr report_error
                       >
54c1 :                 >skip1849
                       >
54c1 : 28              >            plp         ;restore status
                        
54c2 : 88                       dey
54c3 : cc1c32                   cpy abs7f
                                tst_stat fzc
54c6 : 08              >            php         ;save status
54c7 : 68              >            pla         ;use stack to retrieve status
54c8 : 48              >            pha
                       >            cmp_flag fzc
54c9 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
54cb : f003            >        beq skip1853
                       >        trap            ;failed not equal (non zero)
54cd : 208574          >        jsr report_error
                       >
54d0 :                 >skip1853
                       >
54d0 : 28              >            plp         ;restore status
                        
54d1 : 88                       dey
54d2 : cc1c32                   cpy abs7f
                                tst_y $7e,fn
54d5 : 08              >            php         ;save flags
54d6 : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
54d8 : f003            >        beq skip1856
                       >        trap            ;failed not equal (non zero)
54da : 208574          >        jsr report_error
                       >
54dd :                 >skip1856
                       >
54dd : 68              >            pla         ;load status
54de : 48              >            pha
                       >            cmp_flag fn
54df : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
54e1 : f003            >        beq skip1859
                       >        trap            ;failed not equal (non zero)
54e3 : 208574          >        jsr report_error
                       >
54e6 :                 >skip1859
                       >
54e6 : 28              >            plp         ;restore status
                        
                                set_y $80,$ff
                       >            load_flag $ff
54e7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
54e9 : 48              >            pha         ;use stack to load status
54ea : a080            >            ldy #$80     ;precharge index y
54ec : 28              >            plp
                        
54ed : cc1c32                   cpy abs7f
                                tst_stat ~fnz
54f0 : 08              >            php         ;save status
54f1 : 68              >            pla         ;use stack to retrieve status
54f2 : 48              >            pha
                       >            cmp_flag ~fnz
54f3 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
54f5 : f003            >        beq skip1865
                       >        trap            ;failed not equal (non zero)
54f7 : 208574          >        jsr report_error
                       >
54fa :                 >skip1865
                       >
54fa : 28              >            plp         ;restore status
                        
54fb : 88                       dey
54fc : cc1c32                   cpy abs7f
                                tst_stat ~fn
54ff : 08              >            php         ;save status
5500 : 68              >            pla         ;use stack to retrieve status
5501 : 48              >            pha
                       >            cmp_flag ~fn
5502 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5504 : f003            >        beq skip1869
                       >        trap            ;failed not equal (non zero)
5506 : 208574          >        jsr report_error
                       >
5509 :                 >skip1869
                       >
5509 : 28              >            plp         ;restore status
                        
550a : 88                       dey
550b : cc1c32                   cpy abs7f
                                tst_y $7e,~fzc
550e : 08              >            php         ;save flags
550f : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
5511 : f003            >        beq skip1872
                       >        trap            ;failed not equal (non zero)
5513 : 208574          >        jsr report_error
                       >
5516 :                 >skip1872
                       >
5516 : 68              >            pla         ;load status
5517 : 48              >            pha
                       >            cmp_flag ~fzc
5518 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
551a : f003            >        beq skip1875
                       >        trap            ;failed not equal (non zero)
551c : 208574          >        jsr report_error
                       >
551f :                 >skip1875
                       >
551f : 28              >            plp         ;restore status
                        
                        
                                set_y $80,0
                       >            load_flag 0
5520 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5522 : 48              >            pha         ;use stack to load status
5523 : a080            >            ldy #$80     ;precharge index y
5525 : 28              >            plp
                        
5526 : c07f                     cpy #$7f
                                tst_stat fc
5528 : 08              >            php         ;save status
5529 : 68              >            pla         ;use stack to retrieve status
552a : 48              >            pha
                       >            cmp_flag fc
552b : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
552d : f003            >        beq skip1881
                       >        trap            ;failed not equal (non zero)
552f : 208574          >        jsr report_error
                       >
5532 :                 >skip1881
                       >
5532 : 28              >            plp         ;restore status
                        
5533 : 88                       dey
5534 : c07f                     cpy #$7f
                                tst_stat fzc
5536 : 08              >            php         ;save status
5537 : 68              >            pla         ;use stack to retrieve status
5538 : 48              >            pha
                       >            cmp_flag fzc
5539 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
553b : f003            >        beq skip1885
                       >        trap            ;failed not equal (non zero)
553d : 208574          >        jsr report_error
                       >
5540 :                 >skip1885
                       >
5540 : 28              >            plp         ;restore status
                        
5541 : 88                       dey
5542 : c07f                     cpy #$7f
                                tst_y $7e,fn
5544 : 08              >            php         ;save flags
5545 : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
5547 : f003            >        beq skip1888
                       >        trap            ;failed not equal (non zero)
5549 : 208574          >        jsr report_error
                       >
554c :                 >skip1888
                       >
554c : 68              >            pla         ;load status
554d : 48              >            pha
                       >            cmp_flag fn
554e : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5550 : f003            >        beq skip1891
                       >        trap            ;failed not equal (non zero)
5552 : 208574          >        jsr report_error
                       >
5555 :                 >skip1891
                       >
5555 : 28              >            plp         ;restore status
                        
                                set_y $80,$ff
                       >            load_flag $ff
5556 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5558 : 48              >            pha         ;use stack to load status
5559 : a080            >            ldy #$80     ;precharge index y
555b : 28              >            plp
                        
555c : c07f                     cpy #$7f
                                tst_stat ~fnz
555e : 08              >            php         ;save status
555f : 68              >            pla         ;use stack to retrieve status
5560 : 48              >            pha
                       >            cmp_flag ~fnz
5561 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5563 : f003            >        beq skip1897
                       >        trap            ;failed not equal (non zero)
5565 : 208574          >        jsr report_error
                       >
5568 :                 >skip1897
                       >
5568 : 28              >            plp         ;restore status
                        
5569 : 88                       dey
556a : c07f                     cpy #$7f
                                tst_stat ~fn
556c : 08              >            php         ;save status
556d : 68              >            pla         ;use stack to retrieve status
556e : 48              >            pha
                       >            cmp_flag ~fn
556f : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5571 : f003            >        beq skip1901
                       >        trap            ;failed not equal (non zero)
5573 : 208574          >        jsr report_error
                       >
5576 :                 >skip1901
                       >
5576 : 28              >            plp         ;restore status
                        
5577 : 88                       dey
5578 : c07f                     cpy #$7f
                                tst_y $7e,~fzc
557a : 08              >            php         ;save flags
557b : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
557d : f003            >        beq skip1904
                       >        trap            ;failed not equal (non zero)
557f : 208574          >        jsr report_error
                       >
5582 :                 >skip1904
                       >
5582 : 68              >            pla         ;load status
5583 : 48              >            pha
                       >            cmp_flag ~fzc
5584 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5586 : f003            >        beq skip1907
                       >        trap            ;failed not equal (non zero)
5588 : 208574          >        jsr report_error
                       >
558b :                 >skip1907
                       >
558b : 28              >            plp         ;restore status
                        
                                next_test
558c : ad0032          >            lda test_case   ;previous test
558f : c91b            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
5591 : f003            >        beq skip1910
                       >        trap            ;failed not equal (non zero)
5593 : 208574          >        jsr report_error
                       >
5596 :                 >skip1910
                       >
001c =                 >test_num = test_num + 1
5596 : a91c            >            lda #test_num   ;*** next tests' number
5598 : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; CMP - zp / abs / #
                                set_a $80,0
                       >            load_flag 0
559b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
559d : 48              >            pha         ;use stack to load status
559e : a980            >            lda #$80     ;precharge accu
55a0 : 28              >            plp
                        
55a1 : c55f                     cmp zp7f
                                tst_a $80,fc
55a3 : 08              >            php         ;save flags
55a4 : c980            >            cmp #$80     ;test result
                       >            trap_ne
55a6 : f003            >        beq skip1915
                       >        trap            ;failed not equal (non zero)
55a8 : 208574          >        jsr report_error
                       >
55ab :                 >skip1915
                       >
55ab : 68              >            pla         ;load status
55ac : 48              >            pha
                       >            cmp_flag fc
55ad : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
55af : f003            >        beq skip1918
                       >        trap            ;failed not equal (non zero)
55b1 : 208574          >        jsr report_error
                       >
55b4 :                 >skip1918
                       >
55b4 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
55b5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
55b7 : 48              >            pha         ;use stack to load status
55b8 : a97f            >            lda #$7f     ;precharge accu
55ba : 28              >            plp
                        
55bb : c55f                     cmp zp7f
                                tst_a $7f,fzc
55bd : 08              >            php         ;save flags
55be : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
55c0 : f003            >        beq skip1923
                       >        trap            ;failed not equal (non zero)
55c2 : 208574          >        jsr report_error
                       >
55c5 :                 >skip1923
                       >
55c5 : 68              >            pla         ;load status
55c6 : 48              >            pha
                       >            cmp_flag fzc
55c7 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
55c9 : f003            >        beq skip1926
                       >        trap            ;failed not equal (non zero)
55cb : 208574          >        jsr report_error
                       >
55ce :                 >skip1926
                       >
55ce : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
55cf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
55d1 : 48              >            pha         ;use stack to load status
55d2 : a97e            >            lda #$7e     ;precharge accu
55d4 : 28              >            plp
                        
55d5 : c55f                     cmp zp7f
                                tst_a $7e,fn
55d7 : 08              >            php         ;save flags
55d8 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
55da : f003            >        beq skip1931
                       >        trap            ;failed not equal (non zero)
55dc : 208574          >        jsr report_error
                       >
55df :                 >skip1931
                       >
55df : 68              >            pla         ;load status
55e0 : 48              >            pha
                       >            cmp_flag fn
55e1 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
55e3 : f003            >        beq skip1934
                       >        trap            ;failed not equal (non zero)
55e5 : 208574          >        jsr report_error
                       >
55e8 :                 >skip1934
                       >
55e8 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
55e9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
55eb : 48              >            pha         ;use stack to load status
55ec : a980            >            lda #$80     ;precharge accu
55ee : 28              >            plp
                        
55ef : c55f                     cmp zp7f
                                tst_a $80,~fnz
55f1 : 08              >            php         ;save flags
55f2 : c980            >            cmp #$80     ;test result
                       >            trap_ne
55f4 : f003            >        beq skip1939
                       >        trap            ;failed not equal (non zero)
55f6 : 208574          >        jsr report_error
                       >
55f9 :                 >skip1939
                       >
55f9 : 68              >            pla         ;load status
55fa : 48              >            pha
                       >            cmp_flag ~fnz
55fb : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
55fd : f003            >        beq skip1942
                       >        trap            ;failed not equal (non zero)
55ff : 208574          >        jsr report_error
                       >
5602 :                 >skip1942
                       >
5602 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
5603 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5605 : 48              >            pha         ;use stack to load status
5606 : a97f            >            lda #$7f     ;precharge accu
5608 : 28              >            plp
                        
5609 : c55f                     cmp zp7f
                                tst_a $7f,~fn
560b : 08              >            php         ;save flags
560c : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
560e : f003            >        beq skip1947
                       >        trap            ;failed not equal (non zero)
5610 : 208574          >        jsr report_error
                       >
5613 :                 >skip1947
                       >
5613 : 68              >            pla         ;load status
5614 : 48              >            pha
                       >            cmp_flag ~fn
5615 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5617 : f003            >        beq skip1950
                       >        trap            ;failed not equal (non zero)
5619 : 208574          >        jsr report_error
                       >
561c :                 >skip1950
                       >
561c : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
561d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
561f : 48              >            pha         ;use stack to load status
5620 : a97e            >            lda #$7e     ;precharge accu
5622 : 28              >            plp
                        
5623 : c55f                     cmp zp7f
                                tst_a $7e,~fzc
5625 : 08              >            php         ;save flags
5626 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
5628 : f003            >        beq skip1955
                       >        trap            ;failed not equal (non zero)
562a : 208574          >        jsr report_error
                       >
562d :                 >skip1955
                       >
562d : 68              >            pla         ;load status
562e : 48              >            pha
                       >            cmp_flag ~fzc
562f : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5631 : f003            >        beq skip1958
                       >        trap            ;failed not equal (non zero)
5633 : 208574          >        jsr report_error
                       >
5636 :                 >skip1958
                       >
5636 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
5637 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5639 : 48              >            pha         ;use stack to load status
563a : a980            >            lda #$80     ;precharge accu
563c : 28              >            plp
                        
563d : cd1c32                   cmp abs7f
                                tst_a $80,fc
5640 : 08              >            php         ;save flags
5641 : c980            >            cmp #$80     ;test result
                       >            trap_ne
5643 : f003            >        beq skip1963
                       >        trap            ;failed not equal (non zero)
5645 : 208574          >        jsr report_error
                       >
5648 :                 >skip1963
                       >
5648 : 68              >            pla         ;load status
5649 : 48              >            pha
                       >            cmp_flag fc
564a : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
564c : f003            >        beq skip1966
                       >        trap            ;failed not equal (non zero)
564e : 208574          >        jsr report_error
                       >
5651 :                 >skip1966
                       >
5651 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
5652 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5654 : 48              >            pha         ;use stack to load status
5655 : a97f            >            lda #$7f     ;precharge accu
5657 : 28              >            plp
                        
5658 : cd1c32                   cmp abs7f
                                tst_a $7f,fzc
565b : 08              >            php         ;save flags
565c : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
565e : f003            >        beq skip1971
                       >        trap            ;failed not equal (non zero)
5660 : 208574          >        jsr report_error
                       >
5663 :                 >skip1971
                       >
5663 : 68              >            pla         ;load status
5664 : 48              >            pha
                       >            cmp_flag fzc
5665 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5667 : f003            >        beq skip1974
                       >        trap            ;failed not equal (non zero)
5669 : 208574          >        jsr report_error
                       >
566c :                 >skip1974
                       >
566c : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
566d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
566f : 48              >            pha         ;use stack to load status
5670 : a97e            >            lda #$7e     ;precharge accu
5672 : 28              >            plp
                        
5673 : cd1c32                   cmp abs7f
                                tst_a $7e,fn
5676 : 08              >            php         ;save flags
5677 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
5679 : f003            >        beq skip1979
                       >        trap            ;failed not equal (non zero)
567b : 208574          >        jsr report_error
                       >
567e :                 >skip1979
                       >
567e : 68              >            pla         ;load status
567f : 48              >            pha
                       >            cmp_flag fn
5680 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5682 : f003            >        beq skip1982
                       >        trap            ;failed not equal (non zero)
5684 : 208574          >        jsr report_error
                       >
5687 :                 >skip1982
                       >
5687 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
5688 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
568a : 48              >            pha         ;use stack to load status
568b : a980            >            lda #$80     ;precharge accu
568d : 28              >            plp
                        
568e : cd1c32                   cmp abs7f
                                tst_a $80,~fnz
5691 : 08              >            php         ;save flags
5692 : c980            >            cmp #$80     ;test result
                       >            trap_ne
5694 : f003            >        beq skip1987
                       >        trap            ;failed not equal (non zero)
5696 : 208574          >        jsr report_error
                       >
5699 :                 >skip1987
                       >
5699 : 68              >            pla         ;load status
569a : 48              >            pha
                       >            cmp_flag ~fnz
569b : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
569d : f003            >        beq skip1990
                       >        trap            ;failed not equal (non zero)
569f : 208574          >        jsr report_error
                       >
56a2 :                 >skip1990
                       >
56a2 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
56a3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
56a5 : 48              >            pha         ;use stack to load status
56a6 : a97f            >            lda #$7f     ;precharge accu
56a8 : 28              >            plp
                        
56a9 : cd1c32                   cmp abs7f
                                tst_a $7f,~fn
56ac : 08              >            php         ;save flags
56ad : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
56af : f003            >        beq skip1995
                       >        trap            ;failed not equal (non zero)
56b1 : 208574          >        jsr report_error
                       >
56b4 :                 >skip1995
                       >
56b4 : 68              >            pla         ;load status
56b5 : 48              >            pha
                       >            cmp_flag ~fn
56b6 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
56b8 : f003            >        beq skip1998
                       >        trap            ;failed not equal (non zero)
56ba : 208574          >        jsr report_error
                       >
56bd :                 >skip1998
                       >
56bd : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
56be : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
56c0 : 48              >            pha         ;use stack to load status
56c1 : a97e            >            lda #$7e     ;precharge accu
56c3 : 28              >            plp
                        
56c4 : cd1c32                   cmp abs7f
                                tst_a $7e,~fzc
56c7 : 08              >            php         ;save flags
56c8 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
56ca : f003            >        beq skip2003
                       >        trap            ;failed not equal (non zero)
56cc : 208574          >        jsr report_error
                       >
56cf :                 >skip2003
                       >
56cf : 68              >            pla         ;load status
56d0 : 48              >            pha
                       >            cmp_flag ~fzc
56d1 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
56d3 : f003            >        beq skip2006
                       >        trap            ;failed not equal (non zero)
56d5 : 208574          >        jsr report_error
                       >
56d8 :                 >skip2006
                       >
56d8 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
56d9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
56db : 48              >            pha         ;use stack to load status
56dc : a980            >            lda #$80     ;precharge accu
56de : 28              >            plp
                        
56df : c97f                     cmp #$7f
                                tst_a $80,fc
56e1 : 08              >            php         ;save flags
56e2 : c980            >            cmp #$80     ;test result
                       >            trap_ne
56e4 : f003            >        beq skip2011
                       >        trap            ;failed not equal (non zero)
56e6 : 208574          >        jsr report_error
                       >
56e9 :                 >skip2011
                       >
56e9 : 68              >            pla         ;load status
56ea : 48              >            pha
                       >            cmp_flag fc
56eb : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
56ed : f003            >        beq skip2014
                       >        trap            ;failed not equal (non zero)
56ef : 208574          >        jsr report_error
                       >
56f2 :                 >skip2014
                       >
56f2 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
56f3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
56f5 : 48              >            pha         ;use stack to load status
56f6 : a97f            >            lda #$7f     ;precharge accu
56f8 : 28              >            plp
                        
56f9 : c97f                     cmp #$7f
                                tst_a $7f,fzc
56fb : 08              >            php         ;save flags
56fc : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
56fe : f003            >        beq skip2019
                       >        trap            ;failed not equal (non zero)
5700 : 208574          >        jsr report_error
                       >
5703 :                 >skip2019
                       >
5703 : 68              >            pla         ;load status
5704 : 48              >            pha
                       >            cmp_flag fzc
5705 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5707 : f003            >        beq skip2022
                       >        trap            ;failed not equal (non zero)
5709 : 208574          >        jsr report_error
                       >
570c :                 >skip2022
                       >
570c : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
570d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
570f : 48              >            pha         ;use stack to load status
5710 : a97e            >            lda #$7e     ;precharge accu
5712 : 28              >            plp
                        
5713 : c97f                     cmp #$7f
                                tst_a $7e,fn
5715 : 08              >            php         ;save flags
5716 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
5718 : f003            >        beq skip2027
                       >        trap            ;failed not equal (non zero)
571a : 208574          >        jsr report_error
                       >
571d :                 >skip2027
                       >
571d : 68              >            pla         ;load status
571e : 48              >            pha
                       >            cmp_flag fn
571f : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5721 : f003            >        beq skip2030
                       >        trap            ;failed not equal (non zero)
5723 : 208574          >        jsr report_error
                       >
5726 :                 >skip2030
                       >
5726 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
5727 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5729 : 48              >            pha         ;use stack to load status
572a : a980            >            lda #$80     ;precharge accu
572c : 28              >            plp
                        
572d : c97f                     cmp #$7f
                                tst_a $80,~fnz
572f : 08              >            php         ;save flags
5730 : c980            >            cmp #$80     ;test result
                       >            trap_ne
5732 : f003            >        beq skip2035
                       >        trap            ;failed not equal (non zero)
5734 : 208574          >        jsr report_error
                       >
5737 :                 >skip2035
                       >
5737 : 68              >            pla         ;load status
5738 : 48              >            pha
                       >            cmp_flag ~fnz
5739 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
573b : f003            >        beq skip2038
                       >        trap            ;failed not equal (non zero)
573d : 208574          >        jsr report_error
                       >
5740 :                 >skip2038
                       >
5740 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
5741 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5743 : 48              >            pha         ;use stack to load status
5744 : a97f            >            lda #$7f     ;precharge accu
5746 : 28              >            plp
                        
5747 : c97f                     cmp #$7f
                                tst_a $7f,~fn
5749 : 08              >            php         ;save flags
574a : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
574c : f003            >        beq skip2043
                       >        trap            ;failed not equal (non zero)
574e : 208574          >        jsr report_error
                       >
5751 :                 >skip2043
                       >
5751 : 68              >            pla         ;load status
5752 : 48              >            pha
                       >            cmp_flag ~fn
5753 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5755 : f003            >        beq skip2046
                       >        trap            ;failed not equal (non zero)
5757 : 208574          >        jsr report_error
                       >
575a :                 >skip2046
                       >
575a : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
575b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
575d : 48              >            pha         ;use stack to load status
575e : a97e            >            lda #$7e     ;precharge accu
5760 : 28              >            plp
                        
5761 : c97f                     cmp #$7f
                                tst_a $7e,~fzc
5763 : 08              >            php         ;save flags
5764 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
5766 : f003            >        beq skip2051
                       >        trap            ;failed not equal (non zero)
5768 : 208574          >        jsr report_error
                       >
576b :                 >skip2051
                       >
576b : 68              >            pla         ;load status
576c : 48              >            pha
                       >            cmp_flag ~fzc
576d : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
576f : f003            >        beq skip2054
                       >        trap            ;failed not equal (non zero)
5771 : 208574          >        jsr report_error
                       >
5774 :                 >skip2054
                       >
5774 : 28              >            plp         ;restore status
                        
                        
5775 : a204                     ldx #4          ;with indexing by X
                                set_a $80,0
                       >            load_flag 0
5777 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5779 : 48              >            pha         ;use stack to load status
577a : a980            >            lda #$80     ;precharge accu
577c : 28              >            plp
                        
577d : d55b                     cmp zp1,x
                                tst_a $80,fc
577f : 08              >            php         ;save flags
5780 : c980            >            cmp #$80     ;test result
                       >            trap_ne
5782 : f003            >        beq skip2059
                       >        trap            ;failed not equal (non zero)
5784 : 208574          >        jsr report_error
                       >
5787 :                 >skip2059
                       >
5787 : 68              >            pla         ;load status
5788 : 48              >            pha
                       >            cmp_flag fc
5789 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
578b : f003            >        beq skip2062
                       >        trap            ;failed not equal (non zero)
578d : 208574          >        jsr report_error
                       >
5790 :                 >skip2062
                       >
5790 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
5791 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5793 : 48              >            pha         ;use stack to load status
5794 : a97f            >            lda #$7f     ;precharge accu
5796 : 28              >            plp
                        
5797 : d55b                     cmp zp1,x
                                tst_a $7f,fzc
5799 : 08              >            php         ;save flags
579a : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
579c : f003            >        beq skip2067
                       >        trap            ;failed not equal (non zero)
579e : 208574          >        jsr report_error
                       >
57a1 :                 >skip2067
                       >
57a1 : 68              >            pla         ;load status
57a2 : 48              >            pha
                       >            cmp_flag fzc
57a3 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
57a5 : f003            >        beq skip2070
                       >        trap            ;failed not equal (non zero)
57a7 : 208574          >        jsr report_error
                       >
57aa :                 >skip2070
                       >
57aa : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
57ab : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
57ad : 48              >            pha         ;use stack to load status
57ae : a97e            >            lda #$7e     ;precharge accu
57b0 : 28              >            plp
                        
57b1 : d55b                     cmp zp1,x
                                tst_a $7e,fn
57b3 : 08              >            php         ;save flags
57b4 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
57b6 : f003            >        beq skip2075
                       >        trap            ;failed not equal (non zero)
57b8 : 208574          >        jsr report_error
                       >
57bb :                 >skip2075
                       >
57bb : 68              >            pla         ;load status
57bc : 48              >            pha
                       >            cmp_flag fn
57bd : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
57bf : f003            >        beq skip2078
                       >        trap            ;failed not equal (non zero)
57c1 : 208574          >        jsr report_error
                       >
57c4 :                 >skip2078
                       >
57c4 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
57c5 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
57c7 : 48              >            pha         ;use stack to load status
57c8 : a980            >            lda #$80     ;precharge accu
57ca : 28              >            plp
                        
57cb : d55b                     cmp zp1,x
                                tst_a $80,~fnz
57cd : 08              >            php         ;save flags
57ce : c980            >            cmp #$80     ;test result
                       >            trap_ne
57d0 : f003            >        beq skip2083
                       >        trap            ;failed not equal (non zero)
57d2 : 208574          >        jsr report_error
                       >
57d5 :                 >skip2083
                       >
57d5 : 68              >            pla         ;load status
57d6 : 48              >            pha
                       >            cmp_flag ~fnz
57d7 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
57d9 : f003            >        beq skip2086
                       >        trap            ;failed not equal (non zero)
57db : 208574          >        jsr report_error
                       >
57de :                 >skip2086
                       >
57de : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
57df : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
57e1 : 48              >            pha         ;use stack to load status
57e2 : a97f            >            lda #$7f     ;precharge accu
57e4 : 28              >            plp
                        
57e5 : d55b                     cmp zp1,x
                                tst_a $7f,~fn
57e7 : 08              >            php         ;save flags
57e8 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
57ea : f003            >        beq skip2091
                       >        trap            ;failed not equal (non zero)
57ec : 208574          >        jsr report_error
                       >
57ef :                 >skip2091
                       >
57ef : 68              >            pla         ;load status
57f0 : 48              >            pha
                       >            cmp_flag ~fn
57f1 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
57f3 : f003            >        beq skip2094
                       >        trap            ;failed not equal (non zero)
57f5 : 208574          >        jsr report_error
                       >
57f8 :                 >skip2094
                       >
57f8 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
57f9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
57fb : 48              >            pha         ;use stack to load status
57fc : a97e            >            lda #$7e     ;precharge accu
57fe : 28              >            plp
                        
57ff : d55b                     cmp zp1,x
                                tst_a $7e,~fzc
5801 : 08              >            php         ;save flags
5802 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
5804 : f003            >        beq skip2099
                       >        trap            ;failed not equal (non zero)
5806 : 208574          >        jsr report_error
                       >
5809 :                 >skip2099
                       >
5809 : 68              >            pla         ;load status
580a : 48              >            pha
                       >            cmp_flag ~fzc
580b : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
580d : f003            >        beq skip2102
                       >        trap            ;failed not equal (non zero)
580f : 208574          >        jsr report_error
                       >
5812 :                 >skip2102
                       >
5812 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
5813 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5815 : 48              >            pha         ;use stack to load status
5816 : a980            >            lda #$80     ;precharge accu
5818 : 28              >            plp
                        
5819 : dd1832                   cmp abs1,x
                                tst_a $80,fc
581c : 08              >            php         ;save flags
581d : c980            >            cmp #$80     ;test result
                       >            trap_ne
581f : f003            >        beq skip2107
                       >        trap            ;failed not equal (non zero)
5821 : 208574          >        jsr report_error
                       >
5824 :                 >skip2107
                       >
5824 : 68              >            pla         ;load status
5825 : 48              >            pha
                       >            cmp_flag fc
5826 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5828 : f003            >        beq skip2110
                       >        trap            ;failed not equal (non zero)
582a : 208574          >        jsr report_error
                       >
582d :                 >skip2110
                       >
582d : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
582e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5830 : 48              >            pha         ;use stack to load status
5831 : a97f            >            lda #$7f     ;precharge accu
5833 : 28              >            plp
                        
5834 : dd1832                   cmp abs1,x
                                tst_a $7f,fzc
5837 : 08              >            php         ;save flags
5838 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
583a : f003            >        beq skip2115
                       >        trap            ;failed not equal (non zero)
583c : 208574          >        jsr report_error
                       >
583f :                 >skip2115
                       >
583f : 68              >            pla         ;load status
5840 : 48              >            pha
                       >            cmp_flag fzc
5841 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5843 : f003            >        beq skip2118
                       >        trap            ;failed not equal (non zero)
5845 : 208574          >        jsr report_error
                       >
5848 :                 >skip2118
                       >
5848 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
5849 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
584b : 48              >            pha         ;use stack to load status
584c : a97e            >            lda #$7e     ;precharge accu
584e : 28              >            plp
                        
584f : dd1832                   cmp abs1,x
                                tst_a $7e,fn
5852 : 08              >            php         ;save flags
5853 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
5855 : f003            >        beq skip2123
                       >        trap            ;failed not equal (non zero)
5857 : 208574          >        jsr report_error
                       >
585a :                 >skip2123
                       >
585a : 68              >            pla         ;load status
585b : 48              >            pha
                       >            cmp_flag fn
585c : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
585e : f003            >        beq skip2126
                       >        trap            ;failed not equal (non zero)
5860 : 208574          >        jsr report_error
                       >
5863 :                 >skip2126
                       >
5863 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
5864 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5866 : 48              >            pha         ;use stack to load status
5867 : a980            >            lda #$80     ;precharge accu
5869 : 28              >            plp
                        
586a : dd1832                   cmp abs1,x
                                tst_a $80,~fnz
586d : 08              >            php         ;save flags
586e : c980            >            cmp #$80     ;test result
                       >            trap_ne
5870 : f003            >        beq skip2131
                       >        trap            ;failed not equal (non zero)
5872 : 208574          >        jsr report_error
                       >
5875 :                 >skip2131
                       >
5875 : 68              >            pla         ;load status
5876 : 48              >            pha
                       >            cmp_flag ~fnz
5877 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5879 : f003            >        beq skip2134
                       >        trap            ;failed not equal (non zero)
587b : 208574          >        jsr report_error
                       >
587e :                 >skip2134
                       >
587e : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
587f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5881 : 48              >            pha         ;use stack to load status
5882 : a97f            >            lda #$7f     ;precharge accu
5884 : 28              >            plp
                        
5885 : dd1832                   cmp abs1,x
                                tst_a $7f,~fn
5888 : 08              >            php         ;save flags
5889 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
588b : f003            >        beq skip2139
                       >        trap            ;failed not equal (non zero)
588d : 208574          >        jsr report_error
                       >
5890 :                 >skip2139
                       >
5890 : 68              >            pla         ;load status
5891 : 48              >            pha
                       >            cmp_flag ~fn
5892 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5894 : f003            >        beq skip2142
                       >        trap            ;failed not equal (non zero)
5896 : 208574          >        jsr report_error
                       >
5899 :                 >skip2142
                       >
5899 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
589a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
589c : 48              >            pha         ;use stack to load status
589d : a97e            >            lda #$7e     ;precharge accu
589f : 28              >            plp
                        
58a0 : dd1832                   cmp abs1,x
                                tst_a $7e,~fzc
58a3 : 08              >            php         ;save flags
58a4 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
58a6 : f003            >        beq skip2147
                       >        trap            ;failed not equal (non zero)
58a8 : 208574          >        jsr report_error
                       >
58ab :                 >skip2147
                       >
58ab : 68              >            pla         ;load status
58ac : 48              >            pha
                       >            cmp_flag ~fzc
58ad : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
58af : f003            >        beq skip2150
                       >        trap            ;failed not equal (non zero)
58b1 : 208574          >        jsr report_error
                       >
58b4 :                 >skip2150
                       >
58b4 : 28              >            plp         ;restore status
                        
                        
58b5 : a004                     ldy #4          ;with indexing by Y
58b7 : a208                     ldx #8          ;with indexed indirect
                                set_a $80,0
                       >            load_flag 0
58b9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
58bb : 48              >            pha         ;use stack to load status
58bc : a980            >            lda #$80     ;precharge accu
58be : 28              >            plp
                        
58bf : d91832                   cmp abs1,y
                                tst_a $80,fc
58c2 : 08              >            php         ;save flags
58c3 : c980            >            cmp #$80     ;test result
                       >            trap_ne
58c5 : f003            >        beq skip2155
                       >        trap            ;failed not equal (non zero)
58c7 : 208574          >        jsr report_error
                       >
58ca :                 >skip2155
                       >
58ca : 68              >            pla         ;load status
58cb : 48              >            pha
                       >            cmp_flag fc
58cc : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
58ce : f003            >        beq skip2158
                       >        trap            ;failed not equal (non zero)
58d0 : 208574          >        jsr report_error
                       >
58d3 :                 >skip2158
                       >
58d3 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
58d4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
58d6 : 48              >            pha         ;use stack to load status
58d7 : a97f            >            lda #$7f     ;precharge accu
58d9 : 28              >            plp
                        
58da : d91832                   cmp abs1,y
                                tst_a $7f,fzc
58dd : 08              >            php         ;save flags
58de : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
58e0 : f003            >        beq skip2163
                       >        trap            ;failed not equal (non zero)
58e2 : 208574          >        jsr report_error
                       >
58e5 :                 >skip2163
                       >
58e5 : 68              >            pla         ;load status
58e6 : 48              >            pha
                       >            cmp_flag fzc
58e7 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
58e9 : f003            >        beq skip2166
                       >        trap            ;failed not equal (non zero)
58eb : 208574          >        jsr report_error
                       >
58ee :                 >skip2166
                       >
58ee : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
58ef : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
58f1 : 48              >            pha         ;use stack to load status
58f2 : a97e            >            lda #$7e     ;precharge accu
58f4 : 28              >            plp
                        
58f5 : d91832                   cmp abs1,y
                                tst_a $7e,fn
58f8 : 08              >            php         ;save flags
58f9 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
58fb : f003            >        beq skip2171
                       >        trap            ;failed not equal (non zero)
58fd : 208574          >        jsr report_error
                       >
5900 :                 >skip2171
                       >
5900 : 68              >            pla         ;load status
5901 : 48              >            pha
                       >            cmp_flag fn
5902 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5904 : f003            >        beq skip2174
                       >        trap            ;failed not equal (non zero)
5906 : 208574          >        jsr report_error
                       >
5909 :                 >skip2174
                       >
5909 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
590a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
590c : 48              >            pha         ;use stack to load status
590d : a980            >            lda #$80     ;precharge accu
590f : 28              >            plp
                        
5910 : d91832                   cmp abs1,y
                                tst_a $80,~fnz
5913 : 08              >            php         ;save flags
5914 : c980            >            cmp #$80     ;test result
                       >            trap_ne
5916 : f003            >        beq skip2179
                       >        trap            ;failed not equal (non zero)
5918 : 208574          >        jsr report_error
                       >
591b :                 >skip2179
                       >
591b : 68              >            pla         ;load status
591c : 48              >            pha
                       >            cmp_flag ~fnz
591d : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
591f : f003            >        beq skip2182
                       >        trap            ;failed not equal (non zero)
5921 : 208574          >        jsr report_error
                       >
5924 :                 >skip2182
                       >
5924 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
5925 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5927 : 48              >            pha         ;use stack to load status
5928 : a97f            >            lda #$7f     ;precharge accu
592a : 28              >            plp
                        
592b : d91832                   cmp abs1,y
                                tst_a $7f,~fn
592e : 08              >            php         ;save flags
592f : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
5931 : f003            >        beq skip2187
                       >        trap            ;failed not equal (non zero)
5933 : 208574          >        jsr report_error
                       >
5936 :                 >skip2187
                       >
5936 : 68              >            pla         ;load status
5937 : 48              >            pha
                       >            cmp_flag ~fn
5938 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
593a : f003            >        beq skip2190
                       >        trap            ;failed not equal (non zero)
593c : 208574          >        jsr report_error
                       >
593f :                 >skip2190
                       >
593f : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
5940 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5942 : 48              >            pha         ;use stack to load status
5943 : a97e            >            lda #$7e     ;precharge accu
5945 : 28              >            plp
                        
5946 : d91832                   cmp abs1,y
                                tst_a $7e,~fzc
5949 : 08              >            php         ;save flags
594a : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
594c : f003            >        beq skip2195
                       >        trap            ;failed not equal (non zero)
594e : 208574          >        jsr report_error
                       >
5951 :                 >skip2195
                       >
5951 : 68              >            pla         ;load status
5952 : 48              >            pha
                       >            cmp_flag ~fzc
5953 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5955 : f003            >        beq skip2198
                       >        trap            ;failed not equal (non zero)
5957 : 208574          >        jsr report_error
                       >
595a :                 >skip2198
                       >
595a : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
595b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
595d : 48              >            pha         ;use stack to load status
595e : a980            >            lda #$80     ;precharge accu
5960 : 28              >            plp
                        
5961 : c16c                     cmp (ind1,x)
                                tst_a $80,fc
5963 : 08              >            php         ;save flags
5964 : c980            >            cmp #$80     ;test result
                       >            trap_ne
5966 : f003            >        beq skip2203
                       >        trap            ;failed not equal (non zero)
5968 : 208574          >        jsr report_error
                       >
596b :                 >skip2203
                       >
596b : 68              >            pla         ;load status
596c : 48              >            pha
                       >            cmp_flag fc
596d : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
596f : f003            >        beq skip2206
                       >        trap            ;failed not equal (non zero)
5971 : 208574          >        jsr report_error
                       >
5974 :                 >skip2206
                       >
5974 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
5975 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5977 : 48              >            pha         ;use stack to load status
5978 : a97f            >            lda #$7f     ;precharge accu
597a : 28              >            plp
                        
597b : c16c                     cmp (ind1,x)
                                tst_a $7f,fzc
597d : 08              >            php         ;save flags
597e : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
5980 : f003            >        beq skip2211
                       >        trap            ;failed not equal (non zero)
5982 : 208574          >        jsr report_error
                       >
5985 :                 >skip2211
                       >
5985 : 68              >            pla         ;load status
5986 : 48              >            pha
                       >            cmp_flag fzc
5987 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5989 : f003            >        beq skip2214
                       >        trap            ;failed not equal (non zero)
598b : 208574          >        jsr report_error
                       >
598e :                 >skip2214
                       >
598e : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
598f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5991 : 48              >            pha         ;use stack to load status
5992 : a97e            >            lda #$7e     ;precharge accu
5994 : 28              >            plp
                        
5995 : c16c                     cmp (ind1,x)
                                tst_a $7e,fn
5997 : 08              >            php         ;save flags
5998 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
599a : f003            >        beq skip2219
                       >        trap            ;failed not equal (non zero)
599c : 208574          >        jsr report_error
                       >
599f :                 >skip2219
                       >
599f : 68              >            pla         ;load status
59a0 : 48              >            pha
                       >            cmp_flag fn
59a1 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
59a3 : f003            >        beq skip2222
                       >        trap            ;failed not equal (non zero)
59a5 : 208574          >        jsr report_error
                       >
59a8 :                 >skip2222
                       >
59a8 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
59a9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
59ab : 48              >            pha         ;use stack to load status
59ac : a980            >            lda #$80     ;precharge accu
59ae : 28              >            plp
                        
59af : c16c                     cmp (ind1,x)
                                tst_a $80,~fnz
59b1 : 08              >            php         ;save flags
59b2 : c980            >            cmp #$80     ;test result
                       >            trap_ne
59b4 : f003            >        beq skip2227
                       >        trap            ;failed not equal (non zero)
59b6 : 208574          >        jsr report_error
                       >
59b9 :                 >skip2227
                       >
59b9 : 68              >            pla         ;load status
59ba : 48              >            pha
                       >            cmp_flag ~fnz
59bb : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
59bd : f003            >        beq skip2230
                       >        trap            ;failed not equal (non zero)
59bf : 208574          >        jsr report_error
                       >
59c2 :                 >skip2230
                       >
59c2 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
59c3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
59c5 : 48              >            pha         ;use stack to load status
59c6 : a97f            >            lda #$7f     ;precharge accu
59c8 : 28              >            plp
                        
59c9 : c16c                     cmp (ind1,x)
                                tst_a $7f,~fn
59cb : 08              >            php         ;save flags
59cc : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
59ce : f003            >        beq skip2235
                       >        trap            ;failed not equal (non zero)
59d0 : 208574          >        jsr report_error
                       >
59d3 :                 >skip2235
                       >
59d3 : 68              >            pla         ;load status
59d4 : 48              >            pha
                       >            cmp_flag ~fn
59d5 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
59d7 : f003            >        beq skip2238
                       >        trap            ;failed not equal (non zero)
59d9 : 208574          >        jsr report_error
                       >
59dc :                 >skip2238
                       >
59dc : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
59dd : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
59df : 48              >            pha         ;use stack to load status
59e0 : a97e            >            lda #$7e     ;precharge accu
59e2 : 28              >            plp
                        
59e3 : c16c                     cmp (ind1,x)
                                tst_a $7e,~fzc
59e5 : 08              >            php         ;save flags
59e6 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
59e8 : f003            >        beq skip2243
                       >        trap            ;failed not equal (non zero)
59ea : 208574          >        jsr report_error
                       >
59ed :                 >skip2243
                       >
59ed : 68              >            pla         ;load status
59ee : 48              >            pha
                       >            cmp_flag ~fzc
59ef : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
59f1 : f003            >        beq skip2246
                       >        trap            ;failed not equal (non zero)
59f3 : 208574          >        jsr report_error
                       >
59f6 :                 >skip2246
                       >
59f6 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
59f7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
59f9 : 48              >            pha         ;use stack to load status
59fa : a980            >            lda #$80     ;precharge accu
59fc : 28              >            plp
                        
59fd : d16c                     cmp (ind1),y
                                tst_a $80,fc
59ff : 08              >            php         ;save flags
5a00 : c980            >            cmp #$80     ;test result
                       >            trap_ne
5a02 : f003            >        beq skip2251
                       >        trap            ;failed not equal (non zero)
5a04 : 208574          >        jsr report_error
                       >
5a07 :                 >skip2251
                       >
5a07 : 68              >            pla         ;load status
5a08 : 48              >            pha
                       >            cmp_flag fc
5a09 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5a0b : f003            >        beq skip2254
                       >        trap            ;failed not equal (non zero)
5a0d : 208574          >        jsr report_error
                       >
5a10 :                 >skip2254
                       >
5a10 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
5a11 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5a13 : 48              >            pha         ;use stack to load status
5a14 : a97f            >            lda #$7f     ;precharge accu
5a16 : 28              >            plp
                        
5a17 : d16c                     cmp (ind1),y
                                tst_a $7f,fzc
5a19 : 08              >            php         ;save flags
5a1a : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
5a1c : f003            >        beq skip2259
                       >        trap            ;failed not equal (non zero)
5a1e : 208574          >        jsr report_error
                       >
5a21 :                 >skip2259
                       >
5a21 : 68              >            pla         ;load status
5a22 : 48              >            pha
                       >            cmp_flag fzc
5a23 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5a25 : f003            >        beq skip2262
                       >        trap            ;failed not equal (non zero)
5a27 : 208574          >        jsr report_error
                       >
5a2a :                 >skip2262
                       >
5a2a : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
5a2b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5a2d : 48              >            pha         ;use stack to load status
5a2e : a97e            >            lda #$7e     ;precharge accu
5a30 : 28              >            plp
                        
5a31 : d16c                     cmp (ind1),y
                                tst_a $7e,fn
5a33 : 08              >            php         ;save flags
5a34 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
5a36 : f003            >        beq skip2267
                       >        trap            ;failed not equal (non zero)
5a38 : 208574          >        jsr report_error
                       >
5a3b :                 >skip2267
                       >
5a3b : 68              >            pla         ;load status
5a3c : 48              >            pha
                       >            cmp_flag fn
5a3d : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5a3f : f003            >        beq skip2270
                       >        trap            ;failed not equal (non zero)
5a41 : 208574          >        jsr report_error
                       >
5a44 :                 >skip2270
                       >
5a44 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
5a45 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5a47 : 48              >            pha         ;use stack to load status
5a48 : a980            >            lda #$80     ;precharge accu
5a4a : 28              >            plp
                        
5a4b : d16c                     cmp (ind1),y
                                tst_a $80,~fnz
5a4d : 08              >            php         ;save flags
5a4e : c980            >            cmp #$80     ;test result
                       >            trap_ne
5a50 : f003            >        beq skip2275
                       >        trap            ;failed not equal (non zero)
5a52 : 208574          >        jsr report_error
                       >
5a55 :                 >skip2275
                       >
5a55 : 68              >            pla         ;load status
5a56 : 48              >            pha
                       >            cmp_flag ~fnz
5a57 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5a59 : f003            >        beq skip2278
                       >        trap            ;failed not equal (non zero)
5a5b : 208574          >        jsr report_error
                       >
5a5e :                 >skip2278
                       >
5a5e : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
5a5f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5a61 : 48              >            pha         ;use stack to load status
5a62 : a97f            >            lda #$7f     ;precharge accu
5a64 : 28              >            plp
                        
5a65 : d16c                     cmp (ind1),y
                                tst_a $7f,~fn
5a67 : 08              >            php         ;save flags
5a68 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
5a6a : f003            >        beq skip2283
                       >        trap            ;failed not equal (non zero)
5a6c : 208574          >        jsr report_error
                       >
5a6f :                 >skip2283
                       >
5a6f : 68              >            pla         ;load status
5a70 : 48              >            pha
                       >            cmp_flag ~fn
5a71 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5a73 : f003            >        beq skip2286
                       >        trap            ;failed not equal (non zero)
5a75 : 208574          >        jsr report_error
                       >
5a78 :                 >skip2286
                       >
5a78 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
5a79 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5a7b : 48              >            pha         ;use stack to load status
5a7c : a97e            >            lda #$7e     ;precharge accu
5a7e : 28              >            plp
                        
5a7f : d16c                     cmp (ind1),y
                                tst_a $7e,~fzc
5a81 : 08              >            php         ;save flags
5a82 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
5a84 : f003            >        beq skip2291
                       >        trap            ;failed not equal (non zero)
5a86 : 208574          >        jsr report_error
                       >
5a89 :                 >skip2291
                       >
5a89 : 68              >            pla         ;load status
5a8a : 48              >            pha
                       >            cmp_flag ~fzc
5a8b : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5a8d : f003            >        beq skip2294
                       >        trap            ;failed not equal (non zero)
5a8f : 208574          >        jsr report_error
                       >
5a92 :                 >skip2294
                       >
5a92 : 28              >            plp         ;restore status
                        
                                next_test
5a93 : ad0032          >            lda test_case   ;previous test
5a96 : c91c            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
5a98 : f003            >        beq skip2297
                       >        trap            ;failed not equal (non zero)
5a9a : 208574          >        jsr report_error
                       >
5a9d :                 >skip2297
                       >
001d =                 >test_num = test_num + 1
5a9d : a91d            >            lda #test_num   ;*** next tests' number
5a9f : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing shifts - ASL LSR ROL ROR all addressing modes
                        ; shifts - accumulator
5aa2 : a205                     ldx #5
5aa4 :                  tasl
                                set_ax zps,0
                       >            load_flag 0
5aa4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5aa6 : 48              >            pha         ;use stack to load status
5aa7 : b559            >            lda zps,x    ;precharge accu
5aa9 : 28              >            plp
                        
5aaa : 0a                       asl a
                                tst_ax rASL,fASL,0
5aab : 08              >            php         ;save flags
5aac : dd2132          >            cmp rASL,x    ;test result
                       >            trap_ne
5aaf : f003            >        beq skip2302
                       >        trap            ;failed not equal (non zero)
5ab1 : 208574          >        jsr report_error
                       >
5ab4 :                 >skip2302
                       >
5ab4 : 68              >            pla         ;load status
                       >            eor_flag 0
5ab5 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
5ab7 : dd3932          >            cmp fASL,x    ;test flags
                       >            trap_ne     ;
5aba : f003            >        beq skip2305
                       >        trap            ;failed not equal (non zero)
5abc : 208574          >        jsr report_error
                       >
5abf :                 >skip2305
                       >
                        
5abf : ca                       dex
5ac0 : 10e2                     bpl tasl
5ac2 : a205                     ldx #5
5ac4 :                  tasl1
                                set_ax zps,$ff
                       >            load_flag $ff
5ac4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5ac6 : 48              >            pha         ;use stack to load status
5ac7 : b559            >            lda zps,x    ;precharge accu
5ac9 : 28              >            plp
                        
5aca : 0a                       asl a
                                tst_ax rASL,fASL,$ff-fnzc
5acb : 08              >            php         ;save flags
5acc : dd2132          >            cmp rASL,x    ;test result
                       >            trap_ne
5acf : f003            >        beq skip2310
                       >        trap            ;failed not equal (non zero)
5ad1 : 208574          >        jsr report_error
                       >
5ad4 :                 >skip2310
                       >
5ad4 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
5ad5 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
5ad7 : dd3932          >            cmp fASL,x    ;test flags
                       >            trap_ne     ;
5ada : f003            >        beq skip2313
                       >        trap            ;failed not equal (non zero)
5adc : 208574          >        jsr report_error
                       >
5adf :                 >skip2313
                       >
                        
5adf : ca                       dex
5ae0 : 10e2                     bpl tasl1
                        
5ae2 : a205                     ldx #5
5ae4 :                  tlsr
                                set_ax zps,0
                       >            load_flag 0
5ae4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5ae6 : 48              >            pha         ;use stack to load status
5ae7 : b559            >            lda zps,x    ;precharge accu
5ae9 : 28              >            plp
                        
5aea : 4a                       lsr a
                                tst_ax rLSR,fLSR,0
5aeb : 08              >            php         ;save flags
5aec : dd2d32          >            cmp rLSR,x    ;test result
                       >            trap_ne
5aef : f003            >        beq skip2318
                       >        trap            ;failed not equal (non zero)
5af1 : 208574          >        jsr report_error
                       >
5af4 :                 >skip2318
                       >
5af4 : 68              >            pla         ;load status
                       >            eor_flag 0
5af5 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
5af7 : dd4532          >            cmp fLSR,x    ;test flags
                       >            trap_ne     ;
5afa : f003            >        beq skip2321
                       >        trap            ;failed not equal (non zero)
5afc : 208574          >        jsr report_error
                       >
5aff :                 >skip2321
                       >
                        
5aff : ca                       dex
5b00 : 10e2                     bpl tlsr
5b02 : a205                     ldx #5
5b04 :                  tlsr1
                                set_ax zps,$ff
                       >            load_flag $ff
5b04 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5b06 : 48              >            pha         ;use stack to load status
5b07 : b559            >            lda zps,x    ;precharge accu
5b09 : 28              >            plp
                        
5b0a : 4a                       lsr a
                                tst_ax rLSR,fLSR,$ff-fnzc
5b0b : 08              >            php         ;save flags
5b0c : dd2d32          >            cmp rLSR,x    ;test result
                       >            trap_ne
5b0f : f003            >        beq skip2326
                       >        trap            ;failed not equal (non zero)
5b11 : 208574          >        jsr report_error
                       >
5b14 :                 >skip2326
                       >
5b14 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
5b15 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
5b17 : dd4532          >            cmp fLSR,x    ;test flags
                       >            trap_ne     ;
5b1a : f003            >        beq skip2329
                       >        trap            ;failed not equal (non zero)
5b1c : 208574          >        jsr report_error
                       >
5b1f :                 >skip2329
                       >
                        
5b1f : ca                       dex
5b20 : 10e2                     bpl tlsr1
                        
5b22 : a205                     ldx #5
5b24 :                  trol
                                set_ax zps,0
                       >            load_flag 0
5b24 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5b26 : 48              >            pha         ;use stack to load status
5b27 : b559            >            lda zps,x    ;precharge accu
5b29 : 28              >            plp
                        
5b2a : 2a                       rol a
                                tst_ax rROL,fROL,0
5b2b : 08              >            php         ;save flags
5b2c : dd2132          >            cmp rROL,x    ;test result
                       >            trap_ne
5b2f : f003            >        beq skip2334
                       >        trap            ;failed not equal (non zero)
5b31 : 208574          >        jsr report_error
                       >
5b34 :                 >skip2334
                       >
5b34 : 68              >            pla         ;load status
                       >            eor_flag 0
5b35 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
5b37 : dd3932          >            cmp fROL,x    ;test flags
                       >            trap_ne     ;
5b3a : f003            >        beq skip2337
                       >        trap            ;failed not equal (non zero)
5b3c : 208574          >        jsr report_error
                       >
5b3f :                 >skip2337
                       >
                        
5b3f : ca                       dex
5b40 : 10e2                     bpl trol
5b42 : a205                     ldx #5
5b44 :                  trol1
                                set_ax zps,$ff-fc
                       >            load_flag $ff-fc
5b44 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
5b46 : 48              >            pha         ;use stack to load status
5b47 : b559            >            lda zps,x    ;precharge accu
5b49 : 28              >            plp
                        
5b4a : 2a                       rol a
                                tst_ax rROL,fROL,$ff-fnzc
5b4b : 08              >            php         ;save flags
5b4c : dd2132          >            cmp rROL,x    ;test result
                       >            trap_ne
5b4f : f003            >        beq skip2342
                       >        trap            ;failed not equal (non zero)
5b51 : 208574          >        jsr report_error
                       >
5b54 :                 >skip2342
                       >
5b54 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
5b55 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
5b57 : dd3932          >            cmp fROL,x    ;test flags
                       >            trap_ne     ;
5b5a : f003            >        beq skip2345
                       >        trap            ;failed not equal (non zero)
5b5c : 208574          >        jsr report_error
                       >
5b5f :                 >skip2345
                       >
                        
5b5f : ca                       dex
5b60 : 10e2                     bpl trol1
                        
5b62 : a205                     ldx #5
5b64 :                  trolc
                                set_ax zps,fc
                       >            load_flag fc
5b64 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
5b66 : 48              >            pha         ;use stack to load status
5b67 : b559            >            lda zps,x    ;precharge accu
5b69 : 28              >            plp
                        
5b6a : 2a                       rol a
                                tst_ax rROLc,fROLc,0
5b6b : 08              >            php         ;save flags
5b6c : dd2732          >            cmp rROLc,x    ;test result
                       >            trap_ne
5b6f : f003            >        beq skip2350
                       >        trap            ;failed not equal (non zero)
5b71 : 208574          >        jsr report_error
                       >
5b74 :                 >skip2350
                       >
5b74 : 68              >            pla         ;load status
                       >            eor_flag 0
5b75 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
5b77 : dd3f32          >            cmp fROLc,x    ;test flags
                       >            trap_ne     ;
5b7a : f003            >        beq skip2353
                       >        trap            ;failed not equal (non zero)
5b7c : 208574          >        jsr report_error
                       >
5b7f :                 >skip2353
                       >
                        
5b7f : ca                       dex
5b80 : 10e2                     bpl trolc
5b82 : a205                     ldx #5
5b84 :                  trolc1
                                set_ax zps,$ff
                       >            load_flag $ff
5b84 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5b86 : 48              >            pha         ;use stack to load status
5b87 : b559            >            lda zps,x    ;precharge accu
5b89 : 28              >            plp
                        
5b8a : 2a                       rol a
                                tst_ax rROLc,fROLc,$ff-fnzc
5b8b : 08              >            php         ;save flags
5b8c : dd2732          >            cmp rROLc,x    ;test result
                       >            trap_ne
5b8f : f003            >        beq skip2358
                       >        trap            ;failed not equal (non zero)
5b91 : 208574          >        jsr report_error
                       >
5b94 :                 >skip2358
                       >
5b94 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
5b95 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
5b97 : dd3f32          >            cmp fROLc,x    ;test flags
                       >            trap_ne     ;
5b9a : f003            >        beq skip2361
                       >        trap            ;failed not equal (non zero)
5b9c : 208574          >        jsr report_error
                       >
5b9f :                 >skip2361
                       >
                        
5b9f : ca                       dex
5ba0 : 10e2                     bpl trolc1
                        
5ba2 : a205                     ldx #5
5ba4 :                  tror
                                set_ax zps,0
                       >            load_flag 0
5ba4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5ba6 : 48              >            pha         ;use stack to load status
5ba7 : b559            >            lda zps,x    ;precharge accu
5ba9 : 28              >            plp
                        
5baa : 6a                       ror a
                                tst_ax rROR,fROR,0
5bab : 08              >            php         ;save flags
5bac : dd2d32          >            cmp rROR,x    ;test result
                       >            trap_ne
5baf : f003            >        beq skip2366
                       >        trap            ;failed not equal (non zero)
5bb1 : 208574          >        jsr report_error
                       >
5bb4 :                 >skip2366
                       >
5bb4 : 68              >            pla         ;load status
                       >            eor_flag 0
5bb5 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
5bb7 : dd4532          >            cmp fROR,x    ;test flags
                       >            trap_ne     ;
5bba : f003            >        beq skip2369
                       >        trap            ;failed not equal (non zero)
5bbc : 208574          >        jsr report_error
                       >
5bbf :                 >skip2369
                       >
                        
5bbf : ca                       dex
5bc0 : 10e2                     bpl tror
5bc2 : a205                     ldx #5
5bc4 :                  tror1
                                set_ax zps,$ff-fc
                       >            load_flag $ff-fc
5bc4 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
5bc6 : 48              >            pha         ;use stack to load status
5bc7 : b559            >            lda zps,x    ;precharge accu
5bc9 : 28              >            plp
                        
5bca : 6a                       ror a
                                tst_ax rROR,fROR,$ff-fnzc
5bcb : 08              >            php         ;save flags
5bcc : dd2d32          >            cmp rROR,x    ;test result
                       >            trap_ne
5bcf : f003            >        beq skip2374
                       >        trap            ;failed not equal (non zero)
5bd1 : 208574          >        jsr report_error
                       >
5bd4 :                 >skip2374
                       >
5bd4 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
5bd5 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
5bd7 : dd4532          >            cmp fROR,x    ;test flags
                       >            trap_ne     ;
5bda : f003            >        beq skip2377
                       >        trap            ;failed not equal (non zero)
5bdc : 208574          >        jsr report_error
                       >
5bdf :                 >skip2377
                       >
                        
5bdf : ca                       dex
5be0 : 10e2                     bpl tror1
                        
5be2 : a205                     ldx #5
5be4 :                  trorc
                                set_ax zps,fc
                       >            load_flag fc
5be4 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
5be6 : 48              >            pha         ;use stack to load status
5be7 : b559            >            lda zps,x    ;precharge accu
5be9 : 28              >            plp
                        
5bea : 6a                       ror a
                                tst_ax rRORc,fRORc,0
5beb : 08              >            php         ;save flags
5bec : dd3332          >            cmp rRORc,x    ;test result
                       >            trap_ne
5bef : f003            >        beq skip2382
                       >        trap            ;failed not equal (non zero)
5bf1 : 208574          >        jsr report_error
                       >
5bf4 :                 >skip2382
                       >
5bf4 : 68              >            pla         ;load status
                       >            eor_flag 0
5bf5 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
5bf7 : dd4b32          >            cmp fRORc,x    ;test flags
                       >            trap_ne     ;
5bfa : f003            >        beq skip2385
                       >        trap            ;failed not equal (non zero)
5bfc : 208574          >        jsr report_error
                       >
5bff :                 >skip2385
                       >
                        
5bff : ca                       dex
5c00 : 10e2                     bpl trorc
5c02 : a205                     ldx #5
5c04 :                  trorc1
                                set_ax zps,$ff
                       >            load_flag $ff
5c04 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5c06 : 48              >            pha         ;use stack to load status
5c07 : b559            >            lda zps,x    ;precharge accu
5c09 : 28              >            plp
                        
5c0a : 6a                       ror a
                                tst_ax rRORc,fRORc,$ff-fnzc
5c0b : 08              >            php         ;save flags
5c0c : dd3332          >            cmp rRORc,x    ;test result
                       >            trap_ne
5c0f : f003            >        beq skip2390
                       >        trap            ;failed not equal (non zero)
5c11 : 208574          >        jsr report_error
                       >
5c14 :                 >skip2390
                       >
5c14 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
5c15 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
5c17 : dd4b32          >            cmp fRORc,x    ;test flags
                       >            trap_ne     ;
5c1a : f003            >        beq skip2393
                       >        trap            ;failed not equal (non zero)
5c1c : 208574          >        jsr report_error
                       >
5c1f :                 >skip2393
                       >
                        
5c1f : ca                       dex
5c20 : 10e2                     bpl trorc1
                                next_test
5c22 : ad0032          >            lda test_case   ;previous test
5c25 : c91d            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
5c27 : f003            >        beq skip2396
                       >        trap            ;failed not equal (non zero)
5c29 : 208574          >        jsr report_error
                       >
5c2c :                 >skip2396
                       >
001e =                 >test_num = test_num + 1
5c2c : a91e            >            lda #test_num   ;*** next tests' number
5c2e : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; shifts - zeropage
5c31 : a205                     ldx #5
5c33 :                  tasl2
                                set_z zps,0
                       >            load_flag 0
5c33 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5c35 : 48              >            pha         ;use stack to load status
5c36 : b559            >            lda zps,x    ;load to zeropage
5c38 : 8552            >            sta zpt
5c3a : 28              >            plp
                        
5c3b : 0652                     asl zpt
                                tst_z rASL,fASL,0
5c3d : 08              >            php         ;save flags
5c3e : a552            >            lda zpt
5c40 : dd2132          >            cmp rASL,x    ;test result
                       >            trap_ne
5c43 : f003            >        beq skip2401
                       >        trap            ;failed not equal (non zero)
5c45 : 208574          >        jsr report_error
                       >
5c48 :                 >skip2401
                       >
5c48 : 68              >            pla         ;load status
                       >            eor_flag 0
5c49 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
5c4b : dd3932          >            cmp fASL,x    ;test flags
                       >            trap_ne
5c4e : f003            >        beq skip2404
                       >        trap            ;failed not equal (non zero)
5c50 : 208574          >        jsr report_error
                       >
5c53 :                 >skip2404
                       >
                        
5c53 : ca                       dex
5c54 : 10dd                     bpl tasl2
5c56 : a205                     ldx #5
5c58 :                  tasl3
                                set_z zps,$ff
                       >            load_flag $ff
5c58 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5c5a : 48              >            pha         ;use stack to load status
5c5b : b559            >            lda zps,x    ;load to zeropage
5c5d : 8552            >            sta zpt
5c5f : 28              >            plp
                        
5c60 : 0652                     asl zpt
                                tst_z rASL,fASL,$ff-fnzc
5c62 : 08              >            php         ;save flags
5c63 : a552            >            lda zpt
5c65 : dd2132          >            cmp rASL,x    ;test result
                       >            trap_ne
5c68 : f003            >        beq skip2409
                       >        trap            ;failed not equal (non zero)
5c6a : 208574          >        jsr report_error
                       >
5c6d :                 >skip2409
                       >
5c6d : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
5c6e : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
5c70 : dd3932          >            cmp fASL,x    ;test flags
                       >            trap_ne
5c73 : f003            >        beq skip2412
                       >        trap            ;failed not equal (non zero)
5c75 : 208574          >        jsr report_error
                       >
5c78 :                 >skip2412
                       >
                        
5c78 : ca                       dex
5c79 : 10dd                     bpl tasl3
                        
5c7b : a205                     ldx #5
5c7d :                  tlsr2
                                set_z zps,0
                       >            load_flag 0
5c7d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5c7f : 48              >            pha         ;use stack to load status
5c80 : b559            >            lda zps,x    ;load to zeropage
5c82 : 8552            >            sta zpt
5c84 : 28              >            plp
                        
5c85 : 4652                     lsr zpt
                                tst_z rLSR,fLSR,0
5c87 : 08              >            php         ;save flags
5c88 : a552            >            lda zpt
5c8a : dd2d32          >            cmp rLSR,x    ;test result
                       >            trap_ne
5c8d : f003            >        beq skip2417
                       >        trap            ;failed not equal (non zero)
5c8f : 208574          >        jsr report_error
                       >
5c92 :                 >skip2417
                       >
5c92 : 68              >            pla         ;load status
                       >            eor_flag 0
5c93 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
5c95 : dd4532          >            cmp fLSR,x    ;test flags
                       >            trap_ne
5c98 : f003            >        beq skip2420
                       >        trap            ;failed not equal (non zero)
5c9a : 208574          >        jsr report_error
                       >
5c9d :                 >skip2420
                       >
                        
5c9d : ca                       dex
5c9e : 10dd                     bpl tlsr2
5ca0 : a205                     ldx #5
5ca2 :                  tlsr3
                                set_z zps,$ff
                       >            load_flag $ff
5ca2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5ca4 : 48              >            pha         ;use stack to load status
5ca5 : b559            >            lda zps,x    ;load to zeropage
5ca7 : 8552            >            sta zpt
5ca9 : 28              >            plp
                        
5caa : 4652                     lsr zpt
                                tst_z rLSR,fLSR,$ff-fnzc
5cac : 08              >            php         ;save flags
5cad : a552            >            lda zpt
5caf : dd2d32          >            cmp rLSR,x    ;test result
                       >            trap_ne
5cb2 : f003            >        beq skip2425
                       >        trap            ;failed not equal (non zero)
5cb4 : 208574          >        jsr report_error
                       >
5cb7 :                 >skip2425
                       >
5cb7 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
5cb8 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
5cba : dd4532          >            cmp fLSR,x    ;test flags
                       >            trap_ne
5cbd : f003            >        beq skip2428
                       >        trap            ;failed not equal (non zero)
5cbf : 208574          >        jsr report_error
                       >
5cc2 :                 >skip2428
                       >
                        
5cc2 : ca                       dex
5cc3 : 10dd                     bpl tlsr3
                        
5cc5 : a205                     ldx #5
5cc7 :                  trol2
                                set_z zps,0
                       >            load_flag 0
5cc7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5cc9 : 48              >            pha         ;use stack to load status
5cca : b559            >            lda zps,x    ;load to zeropage
5ccc : 8552            >            sta zpt
5cce : 28              >            plp
                        
5ccf : 2652                     rol zpt
                                tst_z rROL,fROL,0
5cd1 : 08              >            php         ;save flags
5cd2 : a552            >            lda zpt
5cd4 : dd2132          >            cmp rROL,x    ;test result
                       >            trap_ne
5cd7 : f003            >        beq skip2433
                       >        trap            ;failed not equal (non zero)
5cd9 : 208574          >        jsr report_error
                       >
5cdc :                 >skip2433
                       >
5cdc : 68              >            pla         ;load status
                       >            eor_flag 0
5cdd : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
5cdf : dd3932          >            cmp fROL,x    ;test flags
                       >            trap_ne
5ce2 : f003            >        beq skip2436
                       >        trap            ;failed not equal (non zero)
5ce4 : 208574          >        jsr report_error
                       >
5ce7 :                 >skip2436
                       >
                        
5ce7 : ca                       dex
5ce8 : 10dd                     bpl trol2
5cea : a205                     ldx #5
5cec :                  trol3
                                set_z zps,$ff-fc
                       >            load_flag $ff-fc
5cec : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
5cee : 48              >            pha         ;use stack to load status
5cef : b559            >            lda zps,x    ;load to zeropage
5cf1 : 8552            >            sta zpt
5cf3 : 28              >            plp
                        
5cf4 : 2652                     rol zpt
                                tst_z rROL,fROL,$ff-fnzc
5cf6 : 08              >            php         ;save flags
5cf7 : a552            >            lda zpt
5cf9 : dd2132          >            cmp rROL,x    ;test result
                       >            trap_ne
5cfc : f003            >        beq skip2441
                       >        trap            ;failed not equal (non zero)
5cfe : 208574          >        jsr report_error
                       >
5d01 :                 >skip2441
                       >
5d01 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
5d02 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
5d04 : dd3932          >            cmp fROL,x    ;test flags
                       >            trap_ne
5d07 : f003            >        beq skip2444
                       >        trap            ;failed not equal (non zero)
5d09 : 208574          >        jsr report_error
                       >
5d0c :                 >skip2444
                       >
                        
5d0c : ca                       dex
5d0d : 10dd                     bpl trol3
                        
5d0f : a205                     ldx #5
5d11 :                  trolc2
                                set_z zps,fc
                       >            load_flag fc
5d11 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
5d13 : 48              >            pha         ;use stack to load status
5d14 : b559            >            lda zps,x    ;load to zeropage
5d16 : 8552            >            sta zpt
5d18 : 28              >            plp
                        
5d19 : 2652                     rol zpt
                                tst_z rROLc,fROLc,0
5d1b : 08              >            php         ;save flags
5d1c : a552            >            lda zpt
5d1e : dd2732          >            cmp rROLc,x    ;test result
                       >            trap_ne
5d21 : f003            >        beq skip2449
                       >        trap            ;failed not equal (non zero)
5d23 : 208574          >        jsr report_error
                       >
5d26 :                 >skip2449
                       >
5d26 : 68              >            pla         ;load status
                       >            eor_flag 0
5d27 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
5d29 : dd3f32          >            cmp fROLc,x    ;test flags
                       >            trap_ne
5d2c : f003            >        beq skip2452
                       >        trap            ;failed not equal (non zero)
5d2e : 208574          >        jsr report_error
                       >
5d31 :                 >skip2452
                       >
                        
5d31 : ca                       dex
5d32 : 10dd                     bpl trolc2
5d34 : a205                     ldx #5
5d36 :                  trolc3
                                set_z zps,$ff
                       >            load_flag $ff
5d36 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5d38 : 48              >            pha         ;use stack to load status
5d39 : b559            >            lda zps,x    ;load to zeropage
5d3b : 8552            >            sta zpt
5d3d : 28              >            plp
                        
5d3e : 2652                     rol zpt
                                tst_z rROLc,fROLc,$ff-fnzc
5d40 : 08              >            php         ;save flags
5d41 : a552            >            lda zpt
5d43 : dd2732          >            cmp rROLc,x    ;test result
                       >            trap_ne
5d46 : f003            >        beq skip2457
                       >        trap            ;failed not equal (non zero)
5d48 : 208574          >        jsr report_error
                       >
5d4b :                 >skip2457
                       >
5d4b : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
5d4c : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
5d4e : dd3f32          >            cmp fROLc,x    ;test flags
                       >            trap_ne
5d51 : f003            >        beq skip2460
                       >        trap            ;failed not equal (non zero)
5d53 : 208574          >        jsr report_error
                       >
5d56 :                 >skip2460
                       >
                        
5d56 : ca                       dex
5d57 : 10dd                     bpl trolc3
                        
5d59 : a205                     ldx #5
5d5b :                  tror2
                                set_z zps,0
                       >            load_flag 0
5d5b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5d5d : 48              >            pha         ;use stack to load status
5d5e : b559            >            lda zps,x    ;load to zeropage
5d60 : 8552            >            sta zpt
5d62 : 28              >            plp
                        
5d63 : 6652                     ror zpt
                                tst_z rROR,fROR,0
5d65 : 08              >            php         ;save flags
5d66 : a552            >            lda zpt
5d68 : dd2d32          >            cmp rROR,x    ;test result
                       >            trap_ne
5d6b : f003            >        beq skip2465
                       >        trap            ;failed not equal (non zero)
5d6d : 208574          >        jsr report_error
                       >
5d70 :                 >skip2465
                       >
5d70 : 68              >            pla         ;load status
                       >            eor_flag 0
5d71 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
5d73 : dd4532          >            cmp fROR,x    ;test flags
                       >            trap_ne
5d76 : f003            >        beq skip2468
                       >        trap            ;failed not equal (non zero)
5d78 : 208574          >        jsr report_error
                       >
5d7b :                 >skip2468
                       >
                        
5d7b : ca                       dex
5d7c : 10dd                     bpl tror2
5d7e : a205                     ldx #5
5d80 :                  tror3
                                set_z zps,$ff-fc
                       >            load_flag $ff-fc
5d80 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
5d82 : 48              >            pha         ;use stack to load status
5d83 : b559            >            lda zps,x    ;load to zeropage
5d85 : 8552            >            sta zpt
5d87 : 28              >            plp
                        
5d88 : 6652                     ror zpt
                                tst_z rROR,fROR,$ff-fnzc
5d8a : 08              >            php         ;save flags
5d8b : a552            >            lda zpt
5d8d : dd2d32          >            cmp rROR,x    ;test result
                       >            trap_ne
5d90 : f003            >        beq skip2473
                       >        trap            ;failed not equal (non zero)
5d92 : 208574          >        jsr report_error
                       >
5d95 :                 >skip2473
                       >
5d95 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
5d96 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
5d98 : dd4532          >            cmp fROR,x    ;test flags
                       >            trap_ne
5d9b : f003            >        beq skip2476
                       >        trap            ;failed not equal (non zero)
5d9d : 208574          >        jsr report_error
                       >
5da0 :                 >skip2476
                       >
                        
5da0 : ca                       dex
5da1 : 10dd                     bpl tror3
                        
5da3 : a205                     ldx #5
5da5 :                  trorc2
                                set_z zps,fc
                       >            load_flag fc
5da5 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
5da7 : 48              >            pha         ;use stack to load status
5da8 : b559            >            lda zps,x    ;load to zeropage
5daa : 8552            >            sta zpt
5dac : 28              >            plp
                        
5dad : 6652                     ror zpt
                                tst_z rRORc,fRORc,0
5daf : 08              >            php         ;save flags
5db0 : a552            >            lda zpt
5db2 : dd3332          >            cmp rRORc,x    ;test result
                       >            trap_ne
5db5 : f003            >        beq skip2481
                       >        trap            ;failed not equal (non zero)
5db7 : 208574          >        jsr report_error
                       >
5dba :                 >skip2481
                       >
5dba : 68              >            pla         ;load status
                       >            eor_flag 0
5dbb : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
5dbd : dd4b32          >            cmp fRORc,x    ;test flags
                       >            trap_ne
5dc0 : f003            >        beq skip2484
                       >        trap            ;failed not equal (non zero)
5dc2 : 208574          >        jsr report_error
                       >
5dc5 :                 >skip2484
                       >
                        
5dc5 : ca                       dex
5dc6 : 10dd                     bpl trorc2
5dc8 : a205                     ldx #5
5dca :                  trorc3
                                set_z zps,$ff
                       >            load_flag $ff
5dca : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5dcc : 48              >            pha         ;use stack to load status
5dcd : b559            >            lda zps,x    ;load to zeropage
5dcf : 8552            >            sta zpt
5dd1 : 28              >            plp
                        
5dd2 : 6652                     ror zpt
                                tst_z rRORc,fRORc,$ff-fnzc
5dd4 : 08              >            php         ;save flags
5dd5 : a552            >            lda zpt
5dd7 : dd3332          >            cmp rRORc,x    ;test result
                       >            trap_ne
5dda : f003            >        beq skip2489
                       >        trap            ;failed not equal (non zero)
5ddc : 208574          >        jsr report_error
                       >
5ddf :                 >skip2489
                       >
5ddf : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
5de0 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
5de2 : dd4b32          >            cmp fRORc,x    ;test flags
                       >            trap_ne
5de5 : f003            >        beq skip2492
                       >        trap            ;failed not equal (non zero)
5de7 : 208574          >        jsr report_error
                       >
5dea :                 >skip2492
                       >
                        
5dea : ca                       dex
5deb : 10dd                     bpl trorc3
                                next_test
5ded : ad0032          >            lda test_case   ;previous test
5df0 : c91e            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
5df2 : f003            >        beq skip2495
                       >        trap            ;failed not equal (non zero)
5df4 : 208574          >        jsr report_error
                       >
5df7 :                 >skip2495
                       >
001f =                 >test_num = test_num + 1
5df7 : a91f            >            lda #test_num   ;*** next tests' number
5df9 : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; shifts - absolute
5dfc : a205                     ldx #5
5dfe :                  tasl4
                                set_abs zps,0
                       >            load_flag 0
5dfe : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5e00 : 48              >            pha         ;use stack to load status
5e01 : b559            >            lda zps,x    ;load to memory
5e03 : 8d0332          >            sta abst
5e06 : 28              >            plp
                        
5e07 : 0e0332                   asl abst
                                tst_abs rASL,fASL,0
5e0a : 08              >            php         ;save flags
5e0b : ad0332          >            lda abst
5e0e : dd2132          >            cmp rASL,x    ;test result
                       >            trap_ne
5e11 : f003            >        beq skip2500
                       >        trap            ;failed not equal (non zero)
5e13 : 208574          >        jsr report_error
                       >
5e16 :                 >skip2500
                       >
5e16 : 68              >            pla         ;load status
                       >            eor_flag 0
5e17 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
5e19 : dd3932          >            cmp fASL,x    ;test flags
                       >            trap_ne
5e1c : f003            >        beq skip2503
                       >        trap            ;failed not equal (non zero)
5e1e : 208574          >        jsr report_error
                       >
5e21 :                 >skip2503
                       >
                        
5e21 : ca                       dex
5e22 : 10da                     bpl tasl4
5e24 : a205                     ldx #5
5e26 :                  tasl5
                                set_abs zps,$ff
                       >            load_flag $ff
5e26 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5e28 : 48              >            pha         ;use stack to load status
5e29 : b559            >            lda zps,x    ;load to memory
5e2b : 8d0332          >            sta abst
5e2e : 28              >            plp
                        
5e2f : 0e0332                   asl abst
                                tst_abs rASL,fASL,$ff-fnzc
5e32 : 08              >            php         ;save flags
5e33 : ad0332          >            lda abst
5e36 : dd2132          >            cmp rASL,x    ;test result
                       >            trap_ne
5e39 : f003            >        beq skip2508
                       >        trap            ;failed not equal (non zero)
5e3b : 208574          >        jsr report_error
                       >
5e3e :                 >skip2508
                       >
5e3e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
5e3f : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
5e41 : dd3932          >            cmp fASL,x    ;test flags
                       >            trap_ne
5e44 : f003            >        beq skip2511
                       >        trap            ;failed not equal (non zero)
5e46 : 208574          >        jsr report_error
                       >
5e49 :                 >skip2511
                       >
                        
5e49 : ca                       dex
5e4a : 10da                     bpl tasl5
                        
5e4c : a205                     ldx #5
5e4e :                  tlsr4
                                set_abs zps,0
                       >            load_flag 0
5e4e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5e50 : 48              >            pha         ;use stack to load status
5e51 : b559            >            lda zps,x    ;load to memory
5e53 : 8d0332          >            sta abst
5e56 : 28              >            plp
                        
5e57 : 4e0332                   lsr abst
                                tst_abs rLSR,fLSR,0
5e5a : 08              >            php         ;save flags
5e5b : ad0332          >            lda abst
5e5e : dd2d32          >            cmp rLSR,x    ;test result
                       >            trap_ne
5e61 : f003            >        beq skip2516
                       >        trap            ;failed not equal (non zero)
5e63 : 208574          >        jsr report_error
                       >
5e66 :                 >skip2516
                       >
5e66 : 68              >            pla         ;load status
                       >            eor_flag 0
5e67 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
5e69 : dd4532          >            cmp fLSR,x    ;test flags
                       >            trap_ne
5e6c : f003            >        beq skip2519
                       >        trap            ;failed not equal (non zero)
5e6e : 208574          >        jsr report_error
                       >
5e71 :                 >skip2519
                       >
                        
5e71 : ca                       dex
5e72 : 10da                     bpl tlsr4
5e74 : a205                     ldx #5
5e76 :                  tlsr5
                                set_abs zps,$ff
                       >            load_flag $ff
5e76 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5e78 : 48              >            pha         ;use stack to load status
5e79 : b559            >            lda zps,x    ;load to memory
5e7b : 8d0332          >            sta abst
5e7e : 28              >            plp
                        
5e7f : 4e0332                   lsr abst
                                tst_abs rLSR,fLSR,$ff-fnzc
5e82 : 08              >            php         ;save flags
5e83 : ad0332          >            lda abst
5e86 : dd2d32          >            cmp rLSR,x    ;test result
                       >            trap_ne
5e89 : f003            >        beq skip2524
                       >        trap            ;failed not equal (non zero)
5e8b : 208574          >        jsr report_error
                       >
5e8e :                 >skip2524
                       >
5e8e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
5e8f : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
5e91 : dd4532          >            cmp fLSR,x    ;test flags
                       >            trap_ne
5e94 : f003            >        beq skip2527
                       >        trap            ;failed not equal (non zero)
5e96 : 208574          >        jsr report_error
                       >
5e99 :                 >skip2527
                       >
                        
5e99 : ca                       dex
5e9a : 10da                     bpl tlsr5
                        
5e9c : a205                     ldx #5
5e9e :                  trol4
                                set_abs zps,0
                       >            load_flag 0
5e9e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5ea0 : 48              >            pha         ;use stack to load status
5ea1 : b559            >            lda zps,x    ;load to memory
5ea3 : 8d0332          >            sta abst
5ea6 : 28              >            plp
                        
5ea7 : 2e0332                   rol abst
                                tst_abs rROL,fROL,0
5eaa : 08              >            php         ;save flags
5eab : ad0332          >            lda abst
5eae : dd2132          >            cmp rROL,x    ;test result
                       >            trap_ne
5eb1 : f003            >        beq skip2532
                       >        trap            ;failed not equal (non zero)
5eb3 : 208574          >        jsr report_error
                       >
5eb6 :                 >skip2532
                       >
5eb6 : 68              >            pla         ;load status
                       >            eor_flag 0
5eb7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
5eb9 : dd3932          >            cmp fROL,x    ;test flags
                       >            trap_ne
5ebc : f003            >        beq skip2535
                       >        trap            ;failed not equal (non zero)
5ebe : 208574          >        jsr report_error
                       >
5ec1 :                 >skip2535
                       >
                        
5ec1 : ca                       dex
5ec2 : 10da                     bpl trol4
5ec4 : a205                     ldx #5
5ec6 :                  trol5
                                set_abs zps,$ff-fc
                       >            load_flag $ff-fc
5ec6 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
5ec8 : 48              >            pha         ;use stack to load status
5ec9 : b559            >            lda zps,x    ;load to memory
5ecb : 8d0332          >            sta abst
5ece : 28              >            plp
                        
5ecf : 2e0332                   rol abst
                                tst_abs rROL,fROL,$ff-fnzc
5ed2 : 08              >            php         ;save flags
5ed3 : ad0332          >            lda abst
5ed6 : dd2132          >            cmp rROL,x    ;test result
                       >            trap_ne
5ed9 : f003            >        beq skip2540
                       >        trap            ;failed not equal (non zero)
5edb : 208574          >        jsr report_error
                       >
5ede :                 >skip2540
                       >
5ede : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
5edf : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
5ee1 : dd3932          >            cmp fROL,x    ;test flags
                       >            trap_ne
5ee4 : f003            >        beq skip2543
                       >        trap            ;failed not equal (non zero)
5ee6 : 208574          >        jsr report_error
                       >
5ee9 :                 >skip2543
                       >
                        
5ee9 : ca                       dex
5eea : 10da                     bpl trol5
                        
5eec : a205                     ldx #5
5eee :                  trolc4
                                set_abs zps,fc
                       >            load_flag fc
5eee : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
5ef0 : 48              >            pha         ;use stack to load status
5ef1 : b559            >            lda zps,x    ;load to memory
5ef3 : 8d0332          >            sta abst
5ef6 : 28              >            plp
                        
5ef7 : 2e0332                   rol abst
                                tst_abs rROLc,fROLc,0
5efa : 08              >            php         ;save flags
5efb : ad0332          >            lda abst
5efe : dd2732          >            cmp rROLc,x    ;test result
                       >            trap_ne
5f01 : f003            >        beq skip2548
                       >        trap            ;failed not equal (non zero)
5f03 : 208574          >        jsr report_error
                       >
5f06 :                 >skip2548
                       >
5f06 : 68              >            pla         ;load status
                       >            eor_flag 0
5f07 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
5f09 : dd3f32          >            cmp fROLc,x    ;test flags
                       >            trap_ne
5f0c : f003            >        beq skip2551
                       >        trap            ;failed not equal (non zero)
5f0e : 208574          >        jsr report_error
                       >
5f11 :                 >skip2551
                       >
                        
5f11 : ca                       dex
5f12 : 10da                     bpl trolc4
5f14 : a205                     ldx #5
5f16 :                  trolc5
                                set_abs zps,$ff
                       >            load_flag $ff
5f16 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5f18 : 48              >            pha         ;use stack to load status
5f19 : b559            >            lda zps,x    ;load to memory
5f1b : 8d0332          >            sta abst
5f1e : 28              >            plp
                        
5f1f : 2e0332                   rol abst
                                tst_abs rROLc,fROLc,$ff-fnzc
5f22 : 08              >            php         ;save flags
5f23 : ad0332          >            lda abst
5f26 : dd2732          >            cmp rROLc,x    ;test result
                       >            trap_ne
5f29 : f003            >        beq skip2556
                       >        trap            ;failed not equal (non zero)
5f2b : 208574          >        jsr report_error
                       >
5f2e :                 >skip2556
                       >
5f2e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
5f2f : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
5f31 : dd3f32          >            cmp fROLc,x    ;test flags
                       >            trap_ne
5f34 : f003            >        beq skip2559
                       >        trap            ;failed not equal (non zero)
5f36 : 208574          >        jsr report_error
                       >
5f39 :                 >skip2559
                       >
                        
5f39 : ca                       dex
5f3a : 10da                     bpl trolc5
                        
5f3c : a205                     ldx #5
5f3e :                  tror4
                                set_abs zps,0
                       >            load_flag 0
5f3e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5f40 : 48              >            pha         ;use stack to load status
5f41 : b559            >            lda zps,x    ;load to memory
5f43 : 8d0332          >            sta abst
5f46 : 28              >            plp
                        
5f47 : 6e0332                   ror abst
                                tst_abs rROR,fROR,0
5f4a : 08              >            php         ;save flags
5f4b : ad0332          >            lda abst
5f4e : dd2d32          >            cmp rROR,x    ;test result
                       >            trap_ne
5f51 : f003            >        beq skip2564
                       >        trap            ;failed not equal (non zero)
5f53 : 208574          >        jsr report_error
                       >
5f56 :                 >skip2564
                       >
5f56 : 68              >            pla         ;load status
                       >            eor_flag 0
5f57 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
5f59 : dd4532          >            cmp fROR,x    ;test flags
                       >            trap_ne
5f5c : f003            >        beq skip2567
                       >        trap            ;failed not equal (non zero)
5f5e : 208574          >        jsr report_error
                       >
5f61 :                 >skip2567
                       >
                        
5f61 : ca                       dex
5f62 : 10da                     bpl tror4
5f64 : a205                     ldx #5
5f66 :                  tror5
                                set_abs zps,$ff-fc
                       >            load_flag $ff-fc
5f66 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
5f68 : 48              >            pha         ;use stack to load status
5f69 : b559            >            lda zps,x    ;load to memory
5f6b : 8d0332          >            sta abst
5f6e : 28              >            plp
                        
5f6f : 6e0332                   ror abst
                                tst_abs rROR,fROR,$ff-fnzc
5f72 : 08              >            php         ;save flags
5f73 : ad0332          >            lda abst
5f76 : dd2d32          >            cmp rROR,x    ;test result
                       >            trap_ne
5f79 : f003            >        beq skip2572
                       >        trap            ;failed not equal (non zero)
5f7b : 208574          >        jsr report_error
                       >
5f7e :                 >skip2572
                       >
5f7e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
5f7f : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
5f81 : dd4532          >            cmp fROR,x    ;test flags
                       >            trap_ne
5f84 : f003            >        beq skip2575
                       >        trap            ;failed not equal (non zero)
5f86 : 208574          >        jsr report_error
                       >
5f89 :                 >skip2575
                       >
                        
5f89 : ca                       dex
5f8a : 10da                     bpl tror5
                        
5f8c : a205                     ldx #5
5f8e :                  trorc4
                                set_abs zps,fc
                       >            load_flag fc
5f8e : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
5f90 : 48              >            pha         ;use stack to load status
5f91 : b559            >            lda zps,x    ;load to memory
5f93 : 8d0332          >            sta abst
5f96 : 28              >            plp
                        
5f97 : 6e0332                   ror abst
                                tst_abs rRORc,fRORc,0
5f9a : 08              >            php         ;save flags
5f9b : ad0332          >            lda abst
5f9e : dd3332          >            cmp rRORc,x    ;test result
                       >            trap_ne
5fa1 : f003            >        beq skip2580
                       >        trap            ;failed not equal (non zero)
5fa3 : 208574          >        jsr report_error
                       >
5fa6 :                 >skip2580
                       >
5fa6 : 68              >            pla         ;load status
                       >            eor_flag 0
5fa7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
5fa9 : dd4b32          >            cmp fRORc,x    ;test flags
                       >            trap_ne
5fac : f003            >        beq skip2583
                       >        trap            ;failed not equal (non zero)
5fae : 208574          >        jsr report_error
                       >
5fb1 :                 >skip2583
                       >
                        
5fb1 : ca                       dex
5fb2 : 10da                     bpl trorc4
5fb4 : a205                     ldx #5
5fb6 :                  trorc5
                                set_abs zps,$ff
                       >            load_flag $ff
5fb6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5fb8 : 48              >            pha         ;use stack to load status
5fb9 : b559            >            lda zps,x    ;load to memory
5fbb : 8d0332          >            sta abst
5fbe : 28              >            plp
                        
5fbf : 6e0332                   ror abst
                                tst_abs rRORc,fRORc,$ff-fnzc
5fc2 : 08              >            php         ;save flags
5fc3 : ad0332          >            lda abst
5fc6 : dd3332          >            cmp rRORc,x    ;test result
                       >            trap_ne
5fc9 : f003            >        beq skip2588
                       >        trap            ;failed not equal (non zero)
5fcb : 208574          >        jsr report_error
                       >
5fce :                 >skip2588
                       >
5fce : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
5fcf : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
5fd1 : dd4b32          >            cmp fRORc,x    ;test flags
                       >            trap_ne
5fd4 : f003            >        beq skip2591
                       >        trap            ;failed not equal (non zero)
5fd6 : 208574          >        jsr report_error
                       >
5fd9 :                 >skip2591
                       >
                        
5fd9 : ca                       dex
5fda : 10da                     bpl trorc5
                                next_test
5fdc : ad0032          >            lda test_case   ;previous test
5fdf : c91f            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
5fe1 : f003            >        beq skip2594
                       >        trap            ;failed not equal (non zero)
5fe3 : 208574          >        jsr report_error
                       >
5fe6 :                 >skip2594
                       >
0020 =                 >test_num = test_num + 1
5fe6 : a920            >            lda #test_num   ;*** next tests' number
5fe8 : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; shifts - zp indexed
5feb : a205                     ldx #5
5fed :                  tasl6
                                set_zx zps,0
                       >            load_flag 0
5fed : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5fef : 48              >            pha         ;use stack to load status
5ff0 : b559            >            lda zps,x    ;load to indexed zeropage
5ff2 : 9552            >            sta zpt,x
5ff4 : 28              >            plp
                        
5ff5 : 1652                     asl zpt,x
                                tst_zx rASL,fASL,0
5ff7 : 08              >            php         ;save flags
5ff8 : b552            >            lda zpt,x
5ffa : dd2132          >            cmp rASL,x    ;test result
                       >            trap_ne
5ffd : f003            >        beq skip2599
                       >        trap            ;failed not equal (non zero)
5fff : 208574          >        jsr report_error
                       >
6002 :                 >skip2599
                       >
6002 : 68              >            pla         ;load status
                       >            eor_flag 0
6003 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
6005 : dd3932          >            cmp fASL,x    ;test flags
                       >            trap_ne
6008 : f003            >        beq skip2602
                       >        trap            ;failed not equal (non zero)
600a : 208574          >        jsr report_error
                       >
600d :                 >skip2602
                       >
                        
600d : ca                       dex
600e : 10dd                     bpl tasl6
6010 : a205                     ldx #5
6012 :                  tasl7
                                set_zx zps,$ff
                       >            load_flag $ff
6012 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
6014 : 48              >            pha         ;use stack to load status
6015 : b559            >            lda zps,x    ;load to indexed zeropage
6017 : 9552            >            sta zpt,x
6019 : 28              >            plp
                        
601a : 1652                     asl zpt,x
                                tst_zx rASL,fASL,$ff-fnzc
601c : 08              >            php         ;save flags
601d : b552            >            lda zpt,x
601f : dd2132          >            cmp rASL,x    ;test result
                       >            trap_ne
6022 : f003            >        beq skip2607
                       >        trap            ;failed not equal (non zero)
6024 : 208574          >        jsr report_error
                       >
6027 :                 >skip2607
                       >
6027 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
6028 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
602a : dd3932          >            cmp fASL,x    ;test flags
                       >            trap_ne
602d : f003            >        beq skip2610
                       >        trap            ;failed not equal (non zero)
602f : 208574          >        jsr report_error
                       >
6032 :                 >skip2610
                       >
                        
6032 : ca                       dex
6033 : 10dd                     bpl tasl7
                        
6035 : a205                     ldx #5
6037 :                  tlsr6
                                set_zx zps,0
                       >            load_flag 0
6037 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
6039 : 48              >            pha         ;use stack to load status
603a : b559            >            lda zps,x    ;load to indexed zeropage
603c : 9552            >            sta zpt,x
603e : 28              >            plp
                        
603f : 5652                     lsr zpt,x
                                tst_zx rLSR,fLSR,0
6041 : 08              >            php         ;save flags
6042 : b552            >            lda zpt,x
6044 : dd2d32          >            cmp rLSR,x    ;test result
                       >            trap_ne
6047 : f003            >        beq skip2615
                       >        trap            ;failed not equal (non zero)
6049 : 208574          >        jsr report_error
                       >
604c :                 >skip2615
                       >
604c : 68              >            pla         ;load status
                       >            eor_flag 0
604d : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
604f : dd4532          >            cmp fLSR,x    ;test flags
                       >            trap_ne
6052 : f003            >        beq skip2618
                       >        trap            ;failed not equal (non zero)
6054 : 208574          >        jsr report_error
                       >
6057 :                 >skip2618
                       >
                        
6057 : ca                       dex
6058 : 10dd                     bpl tlsr6
605a : a205                     ldx #5
605c :                  tlsr7
                                set_zx zps,$ff
                       >            load_flag $ff
605c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
605e : 48              >            pha         ;use stack to load status
605f : b559            >            lda zps,x    ;load to indexed zeropage
6061 : 9552            >            sta zpt,x
6063 : 28              >            plp
                        
6064 : 5652                     lsr zpt,x
                                tst_zx rLSR,fLSR,$ff-fnzc
6066 : 08              >            php         ;save flags
6067 : b552            >            lda zpt,x
6069 : dd2d32          >            cmp rLSR,x    ;test result
                       >            trap_ne
606c : f003            >        beq skip2623
                       >        trap            ;failed not equal (non zero)
606e : 208574          >        jsr report_error
                       >
6071 :                 >skip2623
                       >
6071 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
6072 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
6074 : dd4532          >            cmp fLSR,x    ;test flags
                       >            trap_ne
6077 : f003            >        beq skip2626
                       >        trap            ;failed not equal (non zero)
6079 : 208574          >        jsr report_error
                       >
607c :                 >skip2626
                       >
                        
607c : ca                       dex
607d : 10dd                     bpl tlsr7
                        
607f : a205                     ldx #5
6081 :                  trol6
                                set_zx zps,0
                       >            load_flag 0
6081 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
6083 : 48              >            pha         ;use stack to load status
6084 : b559            >            lda zps,x    ;load to indexed zeropage
6086 : 9552            >            sta zpt,x
6088 : 28              >            plp
                        
6089 : 3652                     rol zpt,x
                                tst_zx rROL,fROL,0
608b : 08              >            php         ;save flags
608c : b552            >            lda zpt,x
608e : dd2132          >            cmp rROL,x    ;test result
                       >            trap_ne
6091 : f003            >        beq skip2631
                       >        trap            ;failed not equal (non zero)
6093 : 208574          >        jsr report_error
                       >
6096 :                 >skip2631
                       >
6096 : 68              >            pla         ;load status
                       >            eor_flag 0
6097 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
6099 : dd3932          >            cmp fROL,x    ;test flags
                       >            trap_ne
609c : f003            >        beq skip2634
                       >        trap            ;failed not equal (non zero)
609e : 208574          >        jsr report_error
                       >
60a1 :                 >skip2634
                       >
                        
60a1 : ca                       dex
60a2 : 10dd                     bpl trol6
60a4 : a205                     ldx #5
60a6 :                  trol7
                                set_zx zps,$ff-fc
                       >            load_flag $ff-fc
60a6 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
60a8 : 48              >            pha         ;use stack to load status
60a9 : b559            >            lda zps,x    ;load to indexed zeropage
60ab : 9552            >            sta zpt,x
60ad : 28              >            plp
                        
60ae : 3652                     rol zpt,x
                                tst_zx rROL,fROL,$ff-fnzc
60b0 : 08              >            php         ;save flags
60b1 : b552            >            lda zpt,x
60b3 : dd2132          >            cmp rROL,x    ;test result
                       >            trap_ne
60b6 : f003            >        beq skip2639
                       >        trap            ;failed not equal (non zero)
60b8 : 208574          >        jsr report_error
                       >
60bb :                 >skip2639
                       >
60bb : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
60bc : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
60be : dd3932          >            cmp fROL,x    ;test flags
                       >            trap_ne
60c1 : f003            >        beq skip2642
                       >        trap            ;failed not equal (non zero)
60c3 : 208574          >        jsr report_error
                       >
60c6 :                 >skip2642
                       >
                        
60c6 : ca                       dex
60c7 : 10dd                     bpl trol7
                        
60c9 : a205                     ldx #5
60cb :                  trolc6
                                set_zx zps,fc
                       >            load_flag fc
60cb : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
60cd : 48              >            pha         ;use stack to load status
60ce : b559            >            lda zps,x    ;load to indexed zeropage
60d0 : 9552            >            sta zpt,x
60d2 : 28              >            plp
                        
60d3 : 3652                     rol zpt,x
                                tst_zx rROLc,fROLc,0
60d5 : 08              >            php         ;save flags
60d6 : b552            >            lda zpt,x
60d8 : dd2732          >            cmp rROLc,x    ;test result
                       >            trap_ne
60db : f003            >        beq skip2647
                       >        trap            ;failed not equal (non zero)
60dd : 208574          >        jsr report_error
                       >
60e0 :                 >skip2647
                       >
60e0 : 68              >            pla         ;load status
                       >            eor_flag 0
60e1 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
60e3 : dd3f32          >            cmp fROLc,x    ;test flags
                       >            trap_ne
60e6 : f003            >        beq skip2650
                       >        trap            ;failed not equal (non zero)
60e8 : 208574          >        jsr report_error
                       >
60eb :                 >skip2650
                       >
                        
60eb : ca                       dex
60ec : 10dd                     bpl trolc6
60ee : a205                     ldx #5
60f0 :                  trolc7
                                set_zx zps,$ff
                       >            load_flag $ff
60f0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
60f2 : 48              >            pha         ;use stack to load status
60f3 : b559            >            lda zps,x    ;load to indexed zeropage
60f5 : 9552            >            sta zpt,x
60f7 : 28              >            plp
                        
60f8 : 3652                     rol zpt,x
                                tst_zx rROLc,fROLc,$ff-fnzc
60fa : 08              >            php         ;save flags
60fb : b552            >            lda zpt,x
60fd : dd2732          >            cmp rROLc,x    ;test result
                       >            trap_ne
6100 : f003            >        beq skip2655
                       >        trap            ;failed not equal (non zero)
6102 : 208574          >        jsr report_error
                       >
6105 :                 >skip2655
                       >
6105 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
6106 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
6108 : dd3f32          >            cmp fROLc,x    ;test flags
                       >            trap_ne
610b : f003            >        beq skip2658
                       >        trap            ;failed not equal (non zero)
610d : 208574          >        jsr report_error
                       >
6110 :                 >skip2658
                       >
                        
6110 : ca                       dex
6111 : 10dd                     bpl trolc7
                        
6113 : a205                     ldx #5
6115 :                  tror6
                                set_zx zps,0
                       >            load_flag 0
6115 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
6117 : 48              >            pha         ;use stack to load status
6118 : b559            >            lda zps,x    ;load to indexed zeropage
611a : 9552            >            sta zpt,x
611c : 28              >            plp
                        
611d : 7652                     ror zpt,x
                                tst_zx rROR,fROR,0
611f : 08              >            php         ;save flags
6120 : b552            >            lda zpt,x
6122 : dd2d32          >            cmp rROR,x    ;test result
                       >            trap_ne
6125 : f003            >        beq skip2663
                       >        trap            ;failed not equal (non zero)
6127 : 208574          >        jsr report_error
                       >
612a :                 >skip2663
                       >
612a : 68              >            pla         ;load status
                       >            eor_flag 0
612b : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
612d : dd4532          >            cmp fROR,x    ;test flags
                       >            trap_ne
6130 : f003            >        beq skip2666
                       >        trap            ;failed not equal (non zero)
6132 : 208574          >        jsr report_error
                       >
6135 :                 >skip2666
                       >
                        
6135 : ca                       dex
6136 : 10dd                     bpl tror6
6138 : a205                     ldx #5
613a :                  tror7
                                set_zx zps,$ff-fc
                       >            load_flag $ff-fc
613a : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
613c : 48              >            pha         ;use stack to load status
613d : b559            >            lda zps,x    ;load to indexed zeropage
613f : 9552            >            sta zpt,x
6141 : 28              >            plp
                        
6142 : 7652                     ror zpt,x
                                tst_zx rROR,fROR,$ff-fnzc
6144 : 08              >            php         ;save flags
6145 : b552            >            lda zpt,x
6147 : dd2d32          >            cmp rROR,x    ;test result
                       >            trap_ne
614a : f003            >        beq skip2671
                       >        trap            ;failed not equal (non zero)
614c : 208574          >        jsr report_error
                       >
614f :                 >skip2671
                       >
614f : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
6150 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
6152 : dd4532          >            cmp fROR,x    ;test flags
                       >            trap_ne
6155 : f003            >        beq skip2674
                       >        trap            ;failed not equal (non zero)
6157 : 208574          >        jsr report_error
                       >
615a :                 >skip2674
                       >
                        
615a : ca                       dex
615b : 10dd                     bpl tror7
                        
615d : a205                     ldx #5
615f :                  trorc6
                                set_zx zps,fc
                       >            load_flag fc
615f : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
6161 : 48              >            pha         ;use stack to load status
6162 : b559            >            lda zps,x    ;load to indexed zeropage
6164 : 9552            >            sta zpt,x
6166 : 28              >            plp
                        
6167 : 7652                     ror zpt,x
                                tst_zx rRORc,fRORc,0
6169 : 08              >            php         ;save flags
616a : b552            >            lda zpt,x
616c : dd3332          >            cmp rRORc,x    ;test result
                       >            trap_ne
616f : f003            >        beq skip2679
                       >        trap            ;failed not equal (non zero)
6171 : 208574          >        jsr report_error
                       >
6174 :                 >skip2679
                       >
6174 : 68              >            pla         ;load status
                       >            eor_flag 0
6175 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
6177 : dd4b32          >            cmp fRORc,x    ;test flags
                       >            trap_ne
617a : f003            >        beq skip2682
                       >        trap            ;failed not equal (non zero)
617c : 208574          >        jsr report_error
                       >
617f :                 >skip2682
                       >
                        
617f : ca                       dex
6180 : 10dd                     bpl trorc6
6182 : a205                     ldx #5
6184 :                  trorc7
                                set_zx zps,$ff
                       >            load_flag $ff
6184 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
6186 : 48              >            pha         ;use stack to load status
6187 : b559            >            lda zps,x    ;load to indexed zeropage
6189 : 9552            >            sta zpt,x
618b : 28              >            plp
                        
618c : 7652                     ror zpt,x
                                tst_zx rRORc,fRORc,$ff-fnzc
618e : 08              >            php         ;save flags
618f : b552            >            lda zpt,x
6191 : dd3332          >            cmp rRORc,x    ;test result
                       >            trap_ne
6194 : f003            >        beq skip2687
                       >        trap            ;failed not equal (non zero)
6196 : 208574          >        jsr report_error
                       >
6199 :                 >skip2687
                       >
6199 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
619a : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
619c : dd4b32          >            cmp fRORc,x    ;test flags
                       >            trap_ne
619f : f003            >        beq skip2690
                       >        trap            ;failed not equal (non zero)
61a1 : 208574          >        jsr report_error
                       >
61a4 :                 >skip2690
                       >
                        
61a4 : ca                       dex
61a5 : 10dd                     bpl trorc7
                                next_test
61a7 : ad0032          >            lda test_case   ;previous test
61aa : c920            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
61ac : f003            >        beq skip2693
                       >        trap            ;failed not equal (non zero)
61ae : 208574          >        jsr report_error
                       >
61b1 :                 >skip2693
                       >
0021 =                 >test_num = test_num + 1
61b1 : a921            >            lda #test_num   ;*** next tests' number
61b3 : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; shifts - abs indexed
61b6 : a205                     ldx #5
61b8 :                  tasl8
                                set_absx zps,0
                       >            load_flag 0
61b8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
61ba : 48              >            pha         ;use stack to load status
61bb : b559            >            lda zps,x    ;load to indexed memory
61bd : 9d0332          >            sta abst,x
61c0 : 28              >            plp
                        
61c1 : 1e0332                   asl abst,x
                                tst_absx rASL,fASL,0
61c4 : 08              >            php         ;save flags
61c5 : bd0332          >            lda abst,x
61c8 : dd2132          >            cmp rASL,x    ;test result
                       >            trap_ne
61cb : f003            >        beq skip2698
                       >        trap            ;failed not equal (non zero)
61cd : 208574          >        jsr report_error
                       >
61d0 :                 >skip2698
                       >
61d0 : 68              >            pla         ;load status
                       >            eor_flag 0
61d1 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
61d3 : dd3932          >            cmp fASL,x    ;test flags
                       >            trap_ne
61d6 : f003            >        beq skip2701
                       >        trap            ;failed not equal (non zero)
61d8 : 208574          >        jsr report_error
                       >
61db :                 >skip2701
                       >
                        
61db : ca                       dex
61dc : 10da                     bpl tasl8
61de : a205                     ldx #5
61e0 :                  tasl9
                                set_absx zps,$ff
                       >            load_flag $ff
61e0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
61e2 : 48              >            pha         ;use stack to load status
61e3 : b559            >            lda zps,x    ;load to indexed memory
61e5 : 9d0332          >            sta abst,x
61e8 : 28              >            plp
                        
61e9 : 1e0332                   asl abst,x
                                tst_absx rASL,fASL,$ff-fnzc
61ec : 08              >            php         ;save flags
61ed : bd0332          >            lda abst,x
61f0 : dd2132          >            cmp rASL,x    ;test result
                       >            trap_ne
61f3 : f003            >        beq skip2706
                       >        trap            ;failed not equal (non zero)
61f5 : 208574          >        jsr report_error
                       >
61f8 :                 >skip2706
                       >
61f8 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
61f9 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
61fb : dd3932          >            cmp fASL,x    ;test flags
                       >            trap_ne
61fe : f003            >        beq skip2709
                       >        trap            ;failed not equal (non zero)
6200 : 208574          >        jsr report_error
                       >
6203 :                 >skip2709
                       >
                        
6203 : ca                       dex
6204 : 10da                     bpl tasl9
                        
6206 : a205                     ldx #5
6208 :                  tlsr8
                                set_absx zps,0
                       >            load_flag 0
6208 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
620a : 48              >            pha         ;use stack to load status
620b : b559            >            lda zps,x    ;load to indexed memory
620d : 9d0332          >            sta abst,x
6210 : 28              >            plp
                        
6211 : 5e0332                   lsr abst,x
                                tst_absx rLSR,fLSR,0
6214 : 08              >            php         ;save flags
6215 : bd0332          >            lda abst,x
6218 : dd2d32          >            cmp rLSR,x    ;test result
                       >            trap_ne
621b : f003            >        beq skip2714
                       >        trap            ;failed not equal (non zero)
621d : 208574          >        jsr report_error
                       >
6220 :                 >skip2714
                       >
6220 : 68              >            pla         ;load status
                       >            eor_flag 0
6221 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
6223 : dd4532          >            cmp fLSR,x    ;test flags
                       >            trap_ne
6226 : f003            >        beq skip2717
                       >        trap            ;failed not equal (non zero)
6228 : 208574          >        jsr report_error
                       >
622b :                 >skip2717
                       >
                        
622b : ca                       dex
622c : 10da                     bpl tlsr8
622e : a205                     ldx #5
6230 :                  tlsr9
                                set_absx zps,$ff
                       >            load_flag $ff
6230 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
6232 : 48              >            pha         ;use stack to load status
6233 : b559            >            lda zps,x    ;load to indexed memory
6235 : 9d0332          >            sta abst,x
6238 : 28              >            plp
                        
6239 : 5e0332                   lsr abst,x
                                tst_absx rLSR,fLSR,$ff-fnzc
623c : 08              >            php         ;save flags
623d : bd0332          >            lda abst,x
6240 : dd2d32          >            cmp rLSR,x    ;test result
                       >            trap_ne
6243 : f003            >        beq skip2722
                       >        trap            ;failed not equal (non zero)
6245 : 208574          >        jsr report_error
                       >
6248 :                 >skip2722
                       >
6248 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
6249 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
624b : dd4532          >            cmp fLSR,x    ;test flags
                       >            trap_ne
624e : f003            >        beq skip2725
                       >        trap            ;failed not equal (non zero)
6250 : 208574          >        jsr report_error
                       >
6253 :                 >skip2725
                       >
                        
6253 : ca                       dex
6254 : 10da                     bpl tlsr9
                        
6256 : a205                     ldx #5
6258 :                  trol8
                                set_absx zps,0
                       >            load_flag 0
6258 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
625a : 48              >            pha         ;use stack to load status
625b : b559            >            lda zps,x    ;load to indexed memory
625d : 9d0332          >            sta abst,x
6260 : 28              >            plp
                        
6261 : 3e0332                   rol abst,x
                                tst_absx rROL,fROL,0
6264 : 08              >            php         ;save flags
6265 : bd0332          >            lda abst,x
6268 : dd2132          >            cmp rROL,x    ;test result
                       >            trap_ne
626b : f003            >        beq skip2730
                       >        trap            ;failed not equal (non zero)
626d : 208574          >        jsr report_error
                       >
6270 :                 >skip2730
                       >
6270 : 68              >            pla         ;load status
                       >            eor_flag 0
6271 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
6273 : dd3932          >            cmp fROL,x    ;test flags
                       >            trap_ne
6276 : f003            >        beq skip2733
                       >        trap            ;failed not equal (non zero)
6278 : 208574          >        jsr report_error
                       >
627b :                 >skip2733
                       >
                        
627b : ca                       dex
627c : 10da                     bpl trol8
627e : a205                     ldx #5
6280 :                  trol9
                                set_absx zps,$ff-fc
                       >            load_flag $ff-fc
6280 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
6282 : 48              >            pha         ;use stack to load status
6283 : b559            >            lda zps,x    ;load to indexed memory
6285 : 9d0332          >            sta abst,x
6288 : 28              >            plp
                        
6289 : 3e0332                   rol abst,x
                                tst_absx rROL,fROL,$ff-fnzc
628c : 08              >            php         ;save flags
628d : bd0332          >            lda abst,x
6290 : dd2132          >            cmp rROL,x    ;test result
                       >            trap_ne
6293 : f003            >        beq skip2738
                       >        trap            ;failed not equal (non zero)
6295 : 208574          >        jsr report_error
                       >
6298 :                 >skip2738
                       >
6298 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
6299 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
629b : dd3932          >            cmp fROL,x    ;test flags
                       >            trap_ne
629e : f003            >        beq skip2741
                       >        trap            ;failed not equal (non zero)
62a0 : 208574          >        jsr report_error
                       >
62a3 :                 >skip2741
                       >
                        
62a3 : ca                       dex
62a4 : 10da                     bpl trol9
                        
62a6 : a205                     ldx #5
62a8 :                  trolc8
                                set_absx zps,fc
                       >            load_flag fc
62a8 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
62aa : 48              >            pha         ;use stack to load status
62ab : b559            >            lda zps,x    ;load to indexed memory
62ad : 9d0332          >            sta abst,x
62b0 : 28              >            plp
                        
62b1 : 3e0332                   rol abst,x
                                tst_absx rROLc,fROLc,0
62b4 : 08              >            php         ;save flags
62b5 : bd0332          >            lda abst,x
62b8 : dd2732          >            cmp rROLc,x    ;test result
                       >            trap_ne
62bb : f003            >        beq skip2746
                       >        trap            ;failed not equal (non zero)
62bd : 208574          >        jsr report_error
                       >
62c0 :                 >skip2746
                       >
62c0 : 68              >            pla         ;load status
                       >            eor_flag 0
62c1 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
62c3 : dd3f32          >            cmp fROLc,x    ;test flags
                       >            trap_ne
62c6 : f003            >        beq skip2749
                       >        trap            ;failed not equal (non zero)
62c8 : 208574          >        jsr report_error
                       >
62cb :                 >skip2749
                       >
                        
62cb : ca                       dex
62cc : 10da                     bpl trolc8
62ce : a205                     ldx #5
62d0 :                  trolc9
                                set_absx zps,$ff
                       >            load_flag $ff
62d0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
62d2 : 48              >            pha         ;use stack to load status
62d3 : b559            >            lda zps,x    ;load to indexed memory
62d5 : 9d0332          >            sta abst,x
62d8 : 28              >            plp
                        
62d9 : 3e0332                   rol abst,x
                                tst_absx rROLc,fROLc,$ff-fnzc
62dc : 08              >            php         ;save flags
62dd : bd0332          >            lda abst,x
62e0 : dd2732          >            cmp rROLc,x    ;test result
                       >            trap_ne
62e3 : f003            >        beq skip2754
                       >        trap            ;failed not equal (non zero)
62e5 : 208574          >        jsr report_error
                       >
62e8 :                 >skip2754
                       >
62e8 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
62e9 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
62eb : dd3f32          >            cmp fROLc,x    ;test flags
                       >            trap_ne
62ee : f003            >        beq skip2757
                       >        trap            ;failed not equal (non zero)
62f0 : 208574          >        jsr report_error
                       >
62f3 :                 >skip2757
                       >
                        
62f3 : ca                       dex
62f4 : 10da                     bpl trolc9
                        
62f6 : a205                     ldx #5
62f8 :                  tror8
                                set_absx zps,0
                       >            load_flag 0
62f8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
62fa : 48              >            pha         ;use stack to load status
62fb : b559            >            lda zps,x    ;load to indexed memory
62fd : 9d0332          >            sta abst,x
6300 : 28              >            plp
                        
6301 : 7e0332                   ror abst,x
                                tst_absx rROR,fROR,0
6304 : 08              >            php         ;save flags
6305 : bd0332          >            lda abst,x
6308 : dd2d32          >            cmp rROR,x    ;test result
                       >            trap_ne
630b : f003            >        beq skip2762
                       >        trap            ;failed not equal (non zero)
630d : 208574          >        jsr report_error
                       >
6310 :                 >skip2762
                       >
6310 : 68              >            pla         ;load status
                       >            eor_flag 0
6311 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
6313 : dd4532          >            cmp fROR,x    ;test flags
                       >            trap_ne
6316 : f003            >        beq skip2765
                       >        trap            ;failed not equal (non zero)
6318 : 208574          >        jsr report_error
                       >
631b :                 >skip2765
                       >
                        
631b : ca                       dex
631c : 10da                     bpl tror8
631e : a205                     ldx #5
6320 :                  tror9
                                set_absx zps,$ff-fc
                       >            load_flag $ff-fc
6320 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
6322 : 48              >            pha         ;use stack to load status
6323 : b559            >            lda zps,x    ;load to indexed memory
6325 : 9d0332          >            sta abst,x
6328 : 28              >            plp
                        
6329 : 7e0332                   ror abst,x
                                tst_absx rROR,fROR,$ff-fnzc
632c : 08              >            php         ;save flags
632d : bd0332          >            lda abst,x
6330 : dd2d32          >            cmp rROR,x    ;test result
                       >            trap_ne
6333 : f003            >        beq skip2770
                       >        trap            ;failed not equal (non zero)
6335 : 208574          >        jsr report_error
                       >
6338 :                 >skip2770
                       >
6338 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
6339 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
633b : dd4532          >            cmp fROR,x    ;test flags
                       >            trap_ne
633e : f003            >        beq skip2773
                       >        trap            ;failed not equal (non zero)
6340 : 208574          >        jsr report_error
                       >
6343 :                 >skip2773
                       >
                        
6343 : ca                       dex
6344 : 10da                     bpl tror9
                        
6346 : a205                     ldx #5
6348 :                  trorc8
                                set_absx zps,fc
                       >            load_flag fc
6348 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
634a : 48              >            pha         ;use stack to load status
634b : b559            >            lda zps,x    ;load to indexed memory
634d : 9d0332          >            sta abst,x
6350 : 28              >            plp
                        
6351 : 7e0332                   ror abst,x
                                tst_absx rRORc,fRORc,0
6354 : 08              >            php         ;save flags
6355 : bd0332          >            lda abst,x
6358 : dd3332          >            cmp rRORc,x    ;test result
                       >            trap_ne
635b : f003            >        beq skip2778
                       >        trap            ;failed not equal (non zero)
635d : 208574          >        jsr report_error
                       >
6360 :                 >skip2778
                       >
6360 : 68              >            pla         ;load status
                       >            eor_flag 0
6361 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
6363 : dd4b32          >            cmp fRORc,x    ;test flags
                       >            trap_ne
6366 : f003            >        beq skip2781
                       >        trap            ;failed not equal (non zero)
6368 : 208574          >        jsr report_error
                       >
636b :                 >skip2781
                       >
                        
636b : ca                       dex
636c : 10da                     bpl trorc8
636e : a205                     ldx #5
6370 :                  trorc9
                                set_absx zps,$ff
                       >            load_flag $ff
6370 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
6372 : 48              >            pha         ;use stack to load status
6373 : b559            >            lda zps,x    ;load to indexed memory
6375 : 9d0332          >            sta abst,x
6378 : 28              >            plp
                        
6379 : 7e0332                   ror abst,x
                                tst_absx rRORc,fRORc,$ff-fnzc
637c : 08              >            php         ;save flags
637d : bd0332          >            lda abst,x
6380 : dd3332          >            cmp rRORc,x    ;test result
                       >            trap_ne
6383 : f003            >        beq skip2786
                       >        trap            ;failed not equal (non zero)
6385 : 208574          >        jsr report_error
                       >
6388 :                 >skip2786
                       >
6388 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
6389 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
638b : dd4b32          >            cmp fRORc,x    ;test flags
                       >            trap_ne
638e : f003            >        beq skip2789
                       >        trap            ;failed not equal (non zero)
6390 : 208574          >        jsr report_error
                       >
6393 :                 >skip2789
                       >
                        
6393 : ca                       dex
6394 : 10da                     bpl trorc9
                                next_test
6396 : ad0032          >            lda test_case   ;previous test
6399 : c921            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
639b : f003            >        beq skip2792
                       >        trap            ;failed not equal (non zero)
639d : 208574          >        jsr report_error
                       >
63a0 :                 >skip2792
                       >
0022 =                 >test_num = test_num + 1
63a0 : a922            >            lda #test_num   ;*** next tests' number
63a2 : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing memory increment/decrement - INC DEC all addressing modes
                        ; zeropage
63a5 : a200                     ldx #0
63a7 : a97e                     lda #$7e
63a9 : 8552                     sta zpt
63ab :                  tinc
                                set_stat 0
                       >            load_flag 0
63ab : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
63ad : 48              >            pha         ;use stack to load status
63ae : 28              >            plp
                        
63af : e652                     inc zpt
                                tst_z rINC,fINC,0
63b1 : 08              >            php         ;save flags
63b2 : a552            >            lda zpt
63b4 : dd5132          >            cmp rINC,x    ;test result
                       >            trap_ne
63b7 : f003            >        beq skip2797
                       >        trap            ;failed not equal (non zero)
63b9 : 208574          >        jsr report_error
                       >
63bc :                 >skip2797
                       >
63bc : 68              >            pla         ;load status
                       >            eor_flag 0
63bd : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
63bf : dd5632          >            cmp fINC,x    ;test flags
                       >            trap_ne
63c2 : f003            >        beq skip2800
                       >        trap            ;failed not equal (non zero)
63c4 : 208574          >        jsr report_error
                       >
63c7 :                 >skip2800
                       >
                        
63c7 : e8                       inx
63c8 : e002                     cpx #2
63ca : d004                     bne tinc1
63cc : a9fe                     lda #$fe
63ce : 8552                     sta zpt
63d0 : e005             tinc1   cpx #5
63d2 : d0d7                     bne tinc
63d4 : ca                       dex
63d5 : e652                     inc zpt
63d7 :                  tdec
                                set_stat 0
                       >            load_flag 0
63d7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
63d9 : 48              >            pha         ;use stack to load status
63da : 28              >            plp
                        
63db : c652                     dec zpt
                                tst_z rINC,fINC,0
63dd : 08              >            php         ;save flags
63de : a552            >            lda zpt
63e0 : dd5132          >            cmp rINC,x    ;test result
                       >            trap_ne
63e3 : f003            >        beq skip2805
                       >        trap            ;failed not equal (non zero)
63e5 : 208574          >        jsr report_error
                       >
63e8 :                 >skip2805
                       >
63e8 : 68              >            pla         ;load status
                       >            eor_flag 0
63e9 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
63eb : dd5632          >            cmp fINC,x    ;test flags
                       >            trap_ne
63ee : f003            >        beq skip2808
                       >        trap            ;failed not equal (non zero)
63f0 : 208574          >        jsr report_error
                       >
63f3 :                 >skip2808
                       >
                        
63f3 : ca                       dex
63f4 : 300a                     bmi tdec1
63f6 : e001                     cpx #1
63f8 : d0dd                     bne tdec
63fa : a981                     lda #$81
63fc : 8552                     sta zpt
63fe : d0d7                     bne tdec
6400 :                  tdec1
6400 : a200                     ldx #0
6402 : a97e                     lda #$7e
6404 : 8552                     sta zpt
6406 :                  tinc10
                                set_stat $ff
                       >            load_flag $ff
6406 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
6408 : 48              >            pha         ;use stack to load status
6409 : 28              >            plp
                        
640a : e652                     inc zpt
                                tst_z rINC,fINC,$ff-fnz
640c : 08              >            php         ;save flags
640d : a552            >            lda zpt
640f : dd5132          >            cmp rINC,x    ;test result
                       >            trap_ne
6412 : f003            >        beq skip2813
                       >        trap            ;failed not equal (non zero)
6414 : 208574          >        jsr report_error
                       >
6417 :                 >skip2813
                       >
6417 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
6418 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
641a : dd5632          >            cmp fINC,x    ;test flags
                       >            trap_ne
641d : f003            >        beq skip2816
                       >        trap            ;failed not equal (non zero)
641f : 208574          >        jsr report_error
                       >
6422 :                 >skip2816
                       >
                        
6422 : e8                       inx
6423 : e002                     cpx #2
6425 : d004                     bne tinc11
6427 : a9fe                     lda #$fe
6429 : 8552                     sta zpt
642b : e005             tinc11  cpx #5
642d : d0d7                     bne tinc10
642f : ca                       dex
6430 : e652                     inc zpt
6432 :                  tdec10
                                set_stat $ff
                       >            load_flag $ff
6432 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
6434 : 48              >            pha         ;use stack to load status
6435 : 28              >            plp
                        
6436 : c652                     dec zpt
                                tst_z rINC,fINC,$ff-fnz
6438 : 08              >            php         ;save flags
6439 : a552            >            lda zpt
643b : dd5132          >            cmp rINC,x    ;test result
                       >            trap_ne
643e : f003            >        beq skip2821
                       >        trap            ;failed not equal (non zero)
6440 : 208574          >        jsr report_error
                       >
6443 :                 >skip2821
                       >
6443 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
6444 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
6446 : dd5632          >            cmp fINC,x    ;test flags
                       >            trap_ne
6449 : f003            >        beq skip2824
                       >        trap            ;failed not equal (non zero)
644b : 208574          >        jsr report_error
                       >
644e :                 >skip2824
                       >
                        
644e : ca                       dex
644f : 300a                     bmi tdec11
6451 : e001                     cpx #1
6453 : d0dd                     bne tdec10
6455 : a981                     lda #$81
6457 : 8552                     sta zpt
6459 : d0d7                     bne tdec10
645b :                  tdec11
                                next_test
645b : ad0032          >            lda test_case   ;previous test
645e : c922            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
6460 : f003            >        beq skip2827
                       >        trap            ;failed not equal (non zero)
6462 : 208574          >        jsr report_error
                       >
6465 :                 >skip2827
                       >
0023 =                 >test_num = test_num + 1
6465 : a923            >            lda #test_num   ;*** next tests' number
6467 : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; absolute memory
646a : a200                     ldx #0
646c : a97e                     lda #$7e
646e : 8d0332                   sta abst
6471 :                  tinc2
                                set_stat 0
                       >            load_flag 0
6471 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
6473 : 48              >            pha         ;use stack to load status
6474 : 28              >            plp
                        
6475 : ee0332                   inc abst
                                tst_abs rINC,fINC,0
6478 : 08              >            php         ;save flags
6479 : ad0332          >            lda abst
647c : dd5132          >            cmp rINC,x    ;test result
                       >            trap_ne
647f : f003            >        beq skip2832
                       >        trap            ;failed not equal (non zero)
6481 : 208574          >        jsr report_error
                       >
6484 :                 >skip2832
                       >
6484 : 68              >            pla         ;load status
                       >            eor_flag 0
6485 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
6487 : dd5632          >            cmp fINC,x    ;test flags
                       >            trap_ne
648a : f003            >        beq skip2835
                       >        trap            ;failed not equal (non zero)
648c : 208574          >        jsr report_error
                       >
648f :                 >skip2835
                       >
                        
648f : e8                       inx
6490 : e002                     cpx #2
6492 : d005                     bne tinc3
6494 : a9fe                     lda #$fe
6496 : 8d0332                   sta abst
6499 : e005             tinc3   cpx #5
649b : d0d4                     bne tinc2
649d : ca                       dex
649e : ee0332                   inc abst
64a1 :                  tdec2
                                set_stat 0
                       >            load_flag 0
64a1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
64a3 : 48              >            pha         ;use stack to load status
64a4 : 28              >            plp
                        
64a5 : ce0332                   dec abst
                                tst_abs rINC,fINC,0
64a8 : 08              >            php         ;save flags
64a9 : ad0332          >            lda abst
64ac : dd5132          >            cmp rINC,x    ;test result
                       >            trap_ne
64af : f003            >        beq skip2840
                       >        trap            ;failed not equal (non zero)
64b1 : 208574          >        jsr report_error
                       >
64b4 :                 >skip2840
                       >
64b4 : 68              >            pla         ;load status
                       >            eor_flag 0
64b5 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
64b7 : dd5632          >            cmp fINC,x    ;test flags
                       >            trap_ne
64ba : f003            >        beq skip2843
                       >        trap            ;failed not equal (non zero)
64bc : 208574          >        jsr report_error
                       >
64bf :                 >skip2843
                       >
                        
64bf : ca                       dex
64c0 : 300b                     bmi tdec3
64c2 : e001                     cpx #1
64c4 : d0db                     bne tdec2
64c6 : a981                     lda #$81
64c8 : 8d0332                   sta abst
64cb : d0d4                     bne tdec2
64cd :                  tdec3
64cd : a200                     ldx #0
64cf : a97e                     lda #$7e
64d1 : 8d0332                   sta abst
64d4 :                  tinc12
                                set_stat $ff
                       >            load_flag $ff
64d4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
64d6 : 48              >            pha         ;use stack to load status
64d7 : 28              >            plp
                        
64d8 : ee0332                   inc abst
                                tst_abs rINC,fINC,$ff-fnz
64db : 08              >            php         ;save flags
64dc : ad0332          >            lda abst
64df : dd5132          >            cmp rINC,x    ;test result
                       >            trap_ne
64e2 : f003            >        beq skip2848
                       >        trap            ;failed not equal (non zero)
64e4 : 208574          >        jsr report_error
                       >
64e7 :                 >skip2848
                       >
64e7 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
64e8 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
64ea : dd5632          >            cmp fINC,x    ;test flags
                       >            trap_ne
64ed : f003            >        beq skip2851
                       >        trap            ;failed not equal (non zero)
64ef : 208574          >        jsr report_error
                       >
64f2 :                 >skip2851
                       >
                        
64f2 : e8                       inx
64f3 : e002                     cpx #2
64f5 : d005                     bne tinc13
64f7 : a9fe                     lda #$fe
64f9 : 8d0332                   sta abst
64fc : e005             tinc13   cpx #5
64fe : d0d4                     bne tinc12
6500 : ca                       dex
6501 : ee0332                   inc abst
6504 :                  tdec12
                                set_stat $ff
                       >            load_flag $ff
6504 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
6506 : 48              >            pha         ;use stack to load status
6507 : 28              >            plp
                        
6508 : ce0332                   dec abst
                                tst_abs rINC,fINC,$ff-fnz
650b : 08              >            php         ;save flags
650c : ad0332          >            lda abst
650f : dd5132          >            cmp rINC,x    ;test result
                       >            trap_ne
6512 : f003            >        beq skip2856
                       >        trap            ;failed not equal (non zero)
6514 : 208574          >        jsr report_error
                       >
6517 :                 >skip2856
                       >
6517 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
6518 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
651a : dd5632          >            cmp fINC,x    ;test flags
                       >            trap_ne
651d : f003            >        beq skip2859
                       >        trap            ;failed not equal (non zero)
651f : 208574          >        jsr report_error
                       >
6522 :                 >skip2859
                       >
                        
6522 : ca                       dex
6523 : 300b                     bmi tdec13
6525 : e001                     cpx #1
6527 : d0db                     bne tdec12
6529 : a981                     lda #$81
652b : 8d0332                   sta abst
652e : d0d4                     bne tdec12
6530 :                  tdec13
                                next_test
6530 : ad0032          >            lda test_case   ;previous test
6533 : c923            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
6535 : f003            >        beq skip2862
                       >        trap            ;failed not equal (non zero)
6537 : 208574          >        jsr report_error
                       >
653a :                 >skip2862
                       >
0024 =                 >test_num = test_num + 1
653a : a924            >            lda #test_num   ;*** next tests' number
653c : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; zeropage indexed
653f : a200                     ldx #0
6541 : a97e                     lda #$7e
6543 : 9552             tinc4   sta zpt,x
                                set_stat 0
                       >            load_flag 0
6545 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
6547 : 48              >            pha         ;use stack to load status
6548 : 28              >            plp
                        
6549 : f652                     inc zpt,x
                                tst_zx rINC,fINC,0
654b : 08              >            php         ;save flags
654c : b552            >            lda zpt,x
654e : dd5132          >            cmp rINC,x    ;test result
                       >            trap_ne
6551 : f003            >        beq skip2867
                       >        trap            ;failed not equal (non zero)
6553 : 208574          >        jsr report_error
                       >
6556 :                 >skip2867
                       >
6556 : 68              >            pla         ;load status
                       >            eor_flag 0
6557 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
6559 : dd5632          >            cmp fINC,x    ;test flags
                       >            trap_ne
655c : f003            >        beq skip2870
                       >        trap            ;failed not equal (non zero)
655e : 208574          >        jsr report_error
                       >
6561 :                 >skip2870
                       >
                        
6561 : b552                     lda zpt,x
6563 : e8                       inx
6564 : e002                     cpx #2
6566 : d002                     bne tinc5
6568 : a9fe                     lda #$fe
656a : e005             tinc5   cpx #5
656c : d0d5                     bne tinc4
656e : ca                       dex
656f : a902                     lda #2
6571 : 9552             tdec4   sta zpt,x
                                set_stat 0
                       >            load_flag 0
6573 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
6575 : 48              >            pha         ;use stack to load status
6576 : 28              >            plp
                        
6577 : d652                     dec zpt,x
                                tst_zx rINC,fINC,0
6579 : 08              >            php         ;save flags
657a : b552            >            lda zpt,x
657c : dd5132          >            cmp rINC,x    ;test result
                       >            trap_ne
657f : f003            >        beq skip2875
                       >        trap            ;failed not equal (non zero)
6581 : 208574          >        jsr report_error
                       >
6584 :                 >skip2875
                       >
6584 : 68              >            pla         ;load status
                       >            eor_flag 0
6585 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
6587 : dd5632          >            cmp fINC,x    ;test flags
                       >            trap_ne
658a : f003            >        beq skip2878
                       >        trap            ;failed not equal (non zero)
658c : 208574          >        jsr report_error
                       >
658f :                 >skip2878
                       >
                        
658f : b552                     lda zpt,x
6591 : ca                       dex
6592 : 3008                     bmi tdec5
6594 : e001                     cpx #1
6596 : d0d9                     bne tdec4
6598 : a981                     lda #$81
659a : d0d5                     bne tdec4
659c :                  tdec5
659c : a200                     ldx #0
659e : a97e                     lda #$7e
65a0 : 9552             tinc14  sta zpt,x
                                set_stat $ff
                       >            load_flag $ff
65a2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
65a4 : 48              >            pha         ;use stack to load status
65a5 : 28              >            plp
                        
65a6 : f652                     inc zpt,x
                                tst_zx rINC,fINC,$ff-fnz
65a8 : 08              >            php         ;save flags
65a9 : b552            >            lda zpt,x
65ab : dd5132          >            cmp rINC,x    ;test result
                       >            trap_ne
65ae : f003            >        beq skip2883
                       >        trap            ;failed not equal (non zero)
65b0 : 208574          >        jsr report_error
                       >
65b3 :                 >skip2883
                       >
65b3 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
65b4 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
65b6 : dd5632          >            cmp fINC,x    ;test flags
                       >            trap_ne
65b9 : f003            >        beq skip2886
                       >        trap            ;failed not equal (non zero)
65bb : 208574          >        jsr report_error
                       >
65be :                 >skip2886
                       >
                        
65be : b552                     lda zpt,x
65c0 : e8                       inx
65c1 : e002                     cpx #2
65c3 : d002                     bne tinc15
65c5 : a9fe                     lda #$fe
65c7 : e005             tinc15  cpx #5
65c9 : d0d5                     bne tinc14
65cb : ca                       dex
65cc : a902                     lda #2
65ce : 9552             tdec14  sta zpt,x
                                set_stat $ff
                       >            load_flag $ff
65d0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
65d2 : 48              >            pha         ;use stack to load status
65d3 : 28              >            plp
                        
65d4 : d652                     dec zpt,x
                                tst_zx rINC,fINC,$ff-fnz
65d6 : 08              >            php         ;save flags
65d7 : b552            >            lda zpt,x
65d9 : dd5132          >            cmp rINC,x    ;test result
                       >            trap_ne
65dc : f003            >        beq skip2891
                       >        trap            ;failed not equal (non zero)
65de : 208574          >        jsr report_error
                       >
65e1 :                 >skip2891
                       >
65e1 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
65e2 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
65e4 : dd5632          >            cmp fINC,x    ;test flags
                       >            trap_ne
65e7 : f003            >        beq skip2894
                       >        trap            ;failed not equal (non zero)
65e9 : 208574          >        jsr report_error
                       >
65ec :                 >skip2894
                       >
                        
65ec : b552                     lda zpt,x
65ee : ca                       dex
65ef : 3008                     bmi tdec15
65f1 : e001                     cpx #1
65f3 : d0d9                     bne tdec14
65f5 : a981                     lda #$81
65f7 : d0d5                     bne tdec14
65f9 :                  tdec15
                                next_test
65f9 : ad0032          >            lda test_case   ;previous test
65fc : c924            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
65fe : f003            >        beq skip2897
                       >        trap            ;failed not equal (non zero)
6600 : 208574          >        jsr report_error
                       >
6603 :                 >skip2897
                       >
0025 =                 >test_num = test_num + 1
6603 : a925            >            lda #test_num   ;*** next tests' number
6605 : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; memory indexed
6608 : a200                     ldx #0
660a : a97e                     lda #$7e
660c : 9d0332           tinc6   sta abst,x
                                set_stat 0
                       >            load_flag 0
660f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
6611 : 48              >            pha         ;use stack to load status
6612 : 28              >            plp
                        
6613 : fe0332                   inc abst,x
                                tst_absx rINC,fINC,0
6616 : 08              >            php         ;save flags
6617 : bd0332          >            lda abst,x
661a : dd5132          >            cmp rINC,x    ;test result
                       >            trap_ne
661d : f003            >        beq skip2902
                       >        trap            ;failed not equal (non zero)
661f : 208574          >        jsr report_error
                       >
6622 :                 >skip2902
                       >
6622 : 68              >            pla         ;load status
                       >            eor_flag 0
6623 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
6625 : dd5632          >            cmp fINC,x    ;test flags
                       >            trap_ne
6628 : f003            >        beq skip2905
                       >        trap            ;failed not equal (non zero)
662a : 208574          >        jsr report_error
                       >
662d :                 >skip2905
                       >
                        
662d : bd0332                   lda abst,x
6630 : e8                       inx
6631 : e002                     cpx #2
6633 : d002                     bne tinc7
6635 : a9fe                     lda #$fe
6637 : e005             tinc7   cpx #5
6639 : d0d1                     bne tinc6
663b : ca                       dex
663c : a902                     lda #2
663e : 9d0332           tdec6   sta abst,x
                                set_stat 0
                       >            load_flag 0
6641 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
6643 : 48              >            pha         ;use stack to load status
6644 : 28              >            plp
                        
6645 : de0332                   dec abst,x
                                tst_absx rINC,fINC,0
6648 : 08              >            php         ;save flags
6649 : bd0332          >            lda abst,x
664c : dd5132          >            cmp rINC,x    ;test result
                       >            trap_ne
664f : f003            >        beq skip2910
                       >        trap            ;failed not equal (non zero)
6651 : 208574          >        jsr report_error
                       >
6654 :                 >skip2910
                       >
6654 : 68              >            pla         ;load status
                       >            eor_flag 0
6655 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
6657 : dd5632          >            cmp fINC,x    ;test flags
                       >            trap_ne
665a : f003            >        beq skip2913
                       >        trap            ;failed not equal (non zero)
665c : 208574          >        jsr report_error
                       >
665f :                 >skip2913
                       >
                        
665f : bd0332                   lda abst,x
6662 : ca                       dex
6663 : 3008                     bmi tdec7
6665 : e001                     cpx #1
6667 : d0d5                     bne tdec6
6669 : a981                     lda #$81
666b : d0d1                     bne tdec6
666d :                  tdec7
666d : a200                     ldx #0
666f : a97e                     lda #$7e
6671 : 9d0332           tinc16  sta abst,x
                                set_stat $ff
                       >            load_flag $ff
6674 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
6676 : 48              >            pha         ;use stack to load status
6677 : 28              >            plp
                        
6678 : fe0332                   inc abst,x
                                tst_absx rINC,fINC,$ff-fnz
667b : 08              >            php         ;save flags
667c : bd0332          >            lda abst,x
667f : dd5132          >            cmp rINC,x    ;test result
                       >            trap_ne
6682 : f003            >        beq skip2918
                       >        trap            ;failed not equal (non zero)
6684 : 208574          >        jsr report_error
                       >
6687 :                 >skip2918
                       >
6687 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
6688 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
668a : dd5632          >            cmp fINC,x    ;test flags
                       >            trap_ne
668d : f003            >        beq skip2921
                       >        trap            ;failed not equal (non zero)
668f : 208574          >        jsr report_error
                       >
6692 :                 >skip2921
                       >
                        
6692 : bd0332                   lda abst,x
6695 : e8                       inx
6696 : e002                     cpx #2
6698 : d002                     bne tinc17
669a : a9fe                     lda #$fe
669c : e005             tinc17  cpx #5
669e : d0d1                     bne tinc16
66a0 : ca                       dex
66a1 : a902                     lda #2
66a3 : 9d0332           tdec16  sta abst,x
                                set_stat $ff
                       >            load_flag $ff
66a6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
66a8 : 48              >            pha         ;use stack to load status
66a9 : 28              >            plp
                        
66aa : de0332                   dec abst,x
                                tst_absx rINC,fINC,$ff-fnz
66ad : 08              >            php         ;save flags
66ae : bd0332          >            lda abst,x
66b1 : dd5132          >            cmp rINC,x    ;test result
                       >            trap_ne
66b4 : f003            >        beq skip2926
                       >        trap            ;failed not equal (non zero)
66b6 : 208574          >        jsr report_error
                       >
66b9 :                 >skip2926
                       >
66b9 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
66ba : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
66bc : dd5632          >            cmp fINC,x    ;test flags
                       >            trap_ne
66bf : f003            >        beq skip2929
                       >        trap            ;failed not equal (non zero)
66c1 : 208574          >        jsr report_error
                       >
66c4 :                 >skip2929
                       >
                        
66c4 : bd0332                   lda abst,x
66c7 : ca                       dex
66c8 : 3008                     bmi tdec17
66ca : e001                     cpx #1
66cc : d0d5                     bne tdec16
66ce : a981                     lda #$81
66d0 : d0d1                     bne tdec16
66d2 :                  tdec17
                                next_test
66d2 : ad0032          >            lda test_case   ;previous test
66d5 : c925            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
66d7 : f003            >        beq skip2932
                       >        trap            ;failed not equal (non zero)
66d9 : 208574          >        jsr report_error
                       >
66dc :                 >skip2932
                       >
0026 =                 >test_num = test_num + 1
66dc : a926            >            lda #test_num   ;*** next tests' number
66de : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing logical instructions - AND EOR ORA all addressing modes
                        ; AND
66e1 : a203                     ldx #3          ;immediate
66e3 : b564             tand    lda zpAN,x
66e5 : 8d0a32                   sta ex_andi+1   ;set AND # operand
                                set_ax  absANa,0
                       >            load_flag 0
66e8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
66ea : 48              >            pha         ;use stack to load status
66eb : bd6b32          >            lda absANa,x    ;precharge accu
66ee : 28              >            plp
                        
66ef : 200932                   jsr ex_andi     ;execute AND # in RAM
                                tst_ax  absrlo,absflo,0
66f2 : 08              >            php         ;save flags
66f3 : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
66f6 : f003            >        beq skip2937
                       >        trap            ;failed not equal (non zero)
66f8 : 208574          >        jsr report_error
                       >
66fb :                 >skip2937
                       >
66fb : 68              >            pla         ;load status
                       >            eor_flag 0
66fc : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
66fe : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
6701 : f003            >        beq skip2940
                       >        trap            ;failed not equal (non zero)
6703 : 208574          >        jsr report_error
                       >
6706 :                 >skip2940
                       >
                        
6706 : ca                       dex
6707 : 10da                     bpl tand
6709 : a203                     ldx #3
670b : b564             tand1   lda zpAN,x
670d : 8d0a32                   sta ex_andi+1   ;set AND # operand
                                set_ax  absANa,$ff
                       >            load_flag $ff
6710 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
6712 : 48              >            pha         ;use stack to load status
6713 : bd6b32          >            lda absANa,x    ;precharge accu
6716 : 28              >            plp
                        
6717 : 200932                   jsr ex_andi     ;execute AND # in RAM
                                tst_ax  absrlo,absflo,$ff-fnz
671a : 08              >            php         ;save flags
671b : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
671e : f003            >        beq skip2945
                       >        trap            ;failed not equal (non zero)
6720 : 208574          >        jsr report_error
                       >
6723 :                 >skip2945
                       >
6723 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
6724 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
6726 : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
6729 : f003            >        beq skip2948
                       >        trap            ;failed not equal (non zero)
672b : 208574          >        jsr report_error
                       >
672e :                 >skip2948
                       >
                        
672e : ca                       dex
672f : 10da                     bpl tand1
                        
6731 : a203                     ldx #3      ;zp
6733 : b564             tand2   lda zpAN,x
6735 : 8552                     sta zpt
                                set_ax  absANa,0
                       >            load_flag 0
6737 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
6739 : 48              >            pha         ;use stack to load status
673a : bd6b32          >            lda absANa,x    ;precharge accu
673d : 28              >            plp
                        
673e : 2552                     and zpt
                                tst_ax  absrlo,absflo,0
6740 : 08              >            php         ;save flags
6741 : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
6744 : f003            >        beq skip2953
                       >        trap            ;failed not equal (non zero)
6746 : 208574          >        jsr report_error
                       >
6749 :                 >skip2953
                       >
6749 : 68              >            pla         ;load status
                       >            eor_flag 0
674a : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
674c : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
674f : f003            >        beq skip2956
                       >        trap            ;failed not equal (non zero)
6751 : 208574          >        jsr report_error
                       >
6754 :                 >skip2956
                       >
                        
6754 : ca                       dex
6755 : 10dc                     bpl tand2
6757 : a203                     ldx #3
6759 : b564             tand3   lda zpAN,x
675b : 8552                     sta zpt
                                set_ax  absANa,$ff
                       >            load_flag $ff
675d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
675f : 48              >            pha         ;use stack to load status
6760 : bd6b32          >            lda absANa,x    ;precharge accu
6763 : 28              >            plp
                        
6764 : 2552                     and zpt
                                tst_ax  absrlo,absflo,$ff-fnz
6766 : 08              >            php         ;save flags
6767 : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
676a : f003            >        beq skip2961
                       >        trap            ;failed not equal (non zero)
676c : 208574          >        jsr report_error
                       >
676f :                 >skip2961
                       >
676f : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
6770 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
6772 : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
6775 : f003            >        beq skip2964
                       >        trap            ;failed not equal (non zero)
6777 : 208574          >        jsr report_error
                       >
677a :                 >skip2964
                       >
                        
677a : ca                       dex
677b : 10dc                     bpl tand3
                        
677d : a203                     ldx #3      ;abs
677f : b564             tand4   lda zpAN,x
6781 : 8d0332                   sta abst
                                set_ax  absANa,0
                       >            load_flag 0
6784 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
6786 : 48              >            pha         ;use stack to load status
6787 : bd6b32          >            lda absANa,x    ;precharge accu
678a : 28              >            plp
                        
678b : 2d0332                   and abst
                                tst_ax  absrlo,absflo,0
678e : 08              >            php         ;save flags
678f : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
6792 : f003            >        beq skip2969
                       >        trap            ;failed not equal (non zero)
6794 : 208574          >        jsr report_error
                       >
6797 :                 >skip2969
                       >
6797 : 68              >            pla         ;load status
                       >            eor_flag 0
6798 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
679a : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
679d : f003            >        beq skip2972
                       >        trap            ;failed not equal (non zero)
679f : 208574          >        jsr report_error
                       >
67a2 :                 >skip2972
                       >
                        
67a2 : ca                       dex
67a3 : 10da                     bpl tand4
67a5 : a203                     ldx #3
67a7 : b564             tand5   lda zpAN,x
67a9 : 8d0332                   sta abst
                                set_ax  absANa,$ff
                       >            load_flag $ff
67ac : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
67ae : 48              >            pha         ;use stack to load status
67af : bd6b32          >            lda absANa,x    ;precharge accu
67b2 : 28              >            plp
                        
67b3 : 2d0332                   and abst
                                tst_ax  absrlo,absflo,$ff-fnz
67b6 : 08              >            php         ;save flags
67b7 : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
67ba : f003            >        beq skip2977
                       >        trap            ;failed not equal (non zero)
67bc : 208574          >        jsr report_error
                       >
67bf :                 >skip2977
                       >
67bf : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
67c0 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
67c2 : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
67c5 : f003            >        beq skip2980
                       >        trap            ;failed not equal (non zero)
67c7 : 208574          >        jsr report_error
                       >
67ca :                 >skip2980
                       >
                        
67ca : ca                       dex
67cb : 1002                     bpl tand6
                        
67cd : a203                     ldx #3      ;zp,x
67cf :                  tand6
                                set_ax  absANa,0
                       >            load_flag 0
67cf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
67d1 : 48              >            pha         ;use stack to load status
67d2 : bd6b32          >            lda absANa,x    ;precharge accu
67d5 : 28              >            plp
                        
67d6 : 3564                     and zpAN,x
                                tst_ax  absrlo,absflo,0
67d8 : 08              >            php         ;save flags
67d9 : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
67dc : f003            >        beq skip2985
                       >        trap            ;failed not equal (non zero)
67de : 208574          >        jsr report_error
                       >
67e1 :                 >skip2985
                       >
67e1 : 68              >            pla         ;load status
                       >            eor_flag 0
67e2 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
67e4 : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
67e7 : f003            >        beq skip2988
                       >        trap            ;failed not equal (non zero)
67e9 : 208574          >        jsr report_error
                       >
67ec :                 >skip2988
                       >
                        
67ec : ca                       dex
67ed : 10e0                     bpl tand6
67ef : a203                     ldx #3
67f1 :                  tand7
                                set_ax  absANa,$ff
                       >            load_flag $ff
67f1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
67f3 : 48              >            pha         ;use stack to load status
67f4 : bd6b32          >            lda absANa,x    ;precharge accu
67f7 : 28              >            plp
                        
67f8 : 3564                     and zpAN,x
                                tst_ax  absrlo,absflo,$ff-fnz
67fa : 08              >            php         ;save flags
67fb : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
67fe : f003            >        beq skip2993
                       >        trap            ;failed not equal (non zero)
6800 : 208574          >        jsr report_error
                       >
6803 :                 >skip2993
                       >
6803 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
6804 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
6806 : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
6809 : f003            >        beq skip2996
                       >        trap            ;failed not equal (non zero)
680b : 208574          >        jsr report_error
                       >
680e :                 >skip2996
                       >
                        
680e : ca                       dex
680f : 10e0                     bpl tand7
                        
6811 : a203                     ldx #3      ;abs,x
6813 :                  tand8
                                set_ax  absANa,0
                       >            load_flag 0
6813 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
6815 : 48              >            pha         ;use stack to load status
6816 : bd6b32          >            lda absANa,x    ;precharge accu
6819 : 28              >            plp
                        
681a : 3d5f32                   and absAN,x
                                tst_ax  absrlo,absflo,0
681d : 08              >            php         ;save flags
681e : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
6821 : f003            >        beq skip3001
                       >        trap            ;failed not equal (non zero)
6823 : 208574          >        jsr report_error
                       >
6826 :                 >skip3001
                       >
6826 : 68              >            pla         ;load status
                       >            eor_flag 0
6827 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
6829 : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
682c : f003            >        beq skip3004
                       >        trap            ;failed not equal (non zero)
682e : 208574          >        jsr report_error
                       >
6831 :                 >skip3004
                       >
                        
6831 : ca                       dex
6832 : 10df                     bpl tand8
6834 : a203                     ldx #3
6836 :                  tand9
                                set_ax  absANa,$ff
                       >            load_flag $ff
6836 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
6838 : 48              >            pha         ;use stack to load status
6839 : bd6b32          >            lda absANa,x    ;precharge accu
683c : 28              >            plp
                        
683d : 3d5f32                   and absAN,x
                                tst_ax  absrlo,absflo,$ff-fnz
6840 : 08              >            php         ;save flags
6841 : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
6844 : f003            >        beq skip3009
                       >        trap            ;failed not equal (non zero)
6846 : 208574          >        jsr report_error
                       >
6849 :                 >skip3009
                       >
6849 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
684a : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
684c : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
684f : f003            >        beq skip3012
                       >        trap            ;failed not equal (non zero)
6851 : 208574          >        jsr report_error
                       >
6854 :                 >skip3012
                       >
                        
6854 : ca                       dex
6855 : 10df                     bpl tand9
                        
6857 : a003                     ldy #3      ;abs,y
6859 :                  tand10
                                set_ay  absANa,0
                       >            load_flag 0
6859 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
685b : 48              >            pha         ;use stack to load status
685c : b96b32          >            lda absANa,y    ;precharge accu
685f : 28              >            plp
                        
6860 : 395f32                   and absAN,y
                                tst_ay  absrlo,absflo,0
6863 : 08              >            php         ;save flags
6864 : d97332          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
6867 : f003            >        beq skip3017
                       >        trap            ;failed not equal (non zero)
6869 : 208574          >        jsr report_error
                       >
686c :                 >skip3017
                       >
686c : 68              >            pla         ;load status
                       >            eor_flag 0
686d : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
686f : d97732          >            cmp absflo,y    ;test flags
                       >            trap_ne
6872 : f003            >        beq skip3020
                       >        trap            ;failed not equal (non zero)
6874 : 208574          >        jsr report_error
                       >
6877 :                 >skip3020
                       >
                        
6877 : 88                       dey
6878 : 10df                     bpl tand10
687a : a003                     ldy #3
687c :                  tand11
                                set_ay  absANa,$ff
                       >            load_flag $ff
687c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
687e : 48              >            pha         ;use stack to load status
687f : b96b32          >            lda absANa,y    ;precharge accu
6882 : 28              >            plp
                        
6883 : 395f32                   and absAN,y
                                tst_ay  absrlo,absflo,$ff-fnz
6886 : 08              >            php         ;save flags
6887 : d97332          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
688a : f003            >        beq skip3025
                       >        trap            ;failed not equal (non zero)
688c : 208574          >        jsr report_error
                       >
688f :                 >skip3025
                       >
688f : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
6890 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
6892 : d97732          >            cmp absflo,y    ;test flags
                       >            trap_ne
6895 : f003            >        beq skip3028
                       >        trap            ;failed not equal (non zero)
6897 : 208574          >        jsr report_error
                       >
689a :                 >skip3028
                       >
                        
689a : 88                       dey
689b : 10df                     bpl tand11
                        
689d : a206                     ldx #6      ;(zp,x)
689f : a003                     ldy #3
68a1 :                  tand12
                                set_ay  absANa,0
                       >            load_flag 0
68a1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
68a3 : 48              >            pha         ;use stack to load status
68a4 : b96b32          >            lda absANa,y    ;precharge accu
68a7 : 28              >            plp
                        
68a8 : 2182                     and (indAN,x)
                                tst_ay  absrlo,absflo,0
68aa : 08              >            php         ;save flags
68ab : d97332          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
68ae : f003            >        beq skip3033
                       >        trap            ;failed not equal (non zero)
68b0 : 208574          >        jsr report_error
                       >
68b3 :                 >skip3033
                       >
68b3 : 68              >            pla         ;load status
                       >            eor_flag 0
68b4 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
68b6 : d97732          >            cmp absflo,y    ;test flags
                       >            trap_ne
68b9 : f003            >        beq skip3036
                       >        trap            ;failed not equal (non zero)
68bb : 208574          >        jsr report_error
                       >
68be :                 >skip3036
                       >
                        
68be : ca                       dex
68bf : ca                       dex
68c0 : 88                       dey
68c1 : 10de                     bpl tand12
68c3 : a206                     ldx #6
68c5 : a003                     ldy #3
68c7 :                  tand13
                                set_ay  absANa,$ff
                       >            load_flag $ff
68c7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
68c9 : 48              >            pha         ;use stack to load status
68ca : b96b32          >            lda absANa,y    ;precharge accu
68cd : 28              >            plp
                        
68ce : 2182                     and (indAN,x)
                                tst_ay  absrlo,absflo,$ff-fnz
68d0 : 08              >            php         ;save flags
68d1 : d97332          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
68d4 : f003            >        beq skip3041
                       >        trap            ;failed not equal (non zero)
68d6 : 208574          >        jsr report_error
                       >
68d9 :                 >skip3041
                       >
68d9 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
68da : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
68dc : d97732          >            cmp absflo,y    ;test flags
                       >            trap_ne
68df : f003            >        beq skip3044
                       >        trap            ;failed not equal (non zero)
68e1 : 208574          >        jsr report_error
                       >
68e4 :                 >skip3044
                       >
                        
68e4 : ca                       dex
68e5 : ca                       dex
68e6 : 88                       dey
68e7 : 10de                     bpl tand13
                        
68e9 : a003                     ldy #3      ;(zp),y
68eb :                  tand14
                                set_ay  absANa,0
                       >            load_flag 0
68eb : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
68ed : 48              >            pha         ;use stack to load status
68ee : b96b32          >            lda absANa,y    ;precharge accu
68f1 : 28              >            plp
                        
68f2 : 3182                     and (indAN),y
                                tst_ay  absrlo,absflo,0
68f4 : 08              >            php         ;save flags
68f5 : d97332          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
68f8 : f003            >        beq skip3049
                       >        trap            ;failed not equal (non zero)
68fa : 208574          >        jsr report_error
                       >
68fd :                 >skip3049
                       >
68fd : 68              >            pla         ;load status
                       >            eor_flag 0
68fe : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
6900 : d97732          >            cmp absflo,y    ;test flags
                       >            trap_ne
6903 : f003            >        beq skip3052
                       >        trap            ;failed not equal (non zero)
6905 : 208574          >        jsr report_error
                       >
6908 :                 >skip3052
                       >
                        
6908 : 88                       dey
6909 : 10e0                     bpl tand14
690b : a003                     ldy #3
690d :                  tand15
                                set_ay  absANa,$ff
                       >            load_flag $ff
690d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
690f : 48              >            pha         ;use stack to load status
6910 : b96b32          >            lda absANa,y    ;precharge accu
6913 : 28              >            plp
                        
6914 : 3182                     and (indAN),y
                                tst_ay  absrlo,absflo,$ff-fnz
6916 : 08              >            php         ;save flags
6917 : d97332          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
691a : f003            >        beq skip3057
                       >        trap            ;failed not equal (non zero)
691c : 208574          >        jsr report_error
                       >
691f :                 >skip3057
                       >
691f : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
6920 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
6922 : d97732          >            cmp absflo,y    ;test flags
                       >            trap_ne
6925 : f003            >        beq skip3060
                       >        trap            ;failed not equal (non zero)
6927 : 208574          >        jsr report_error
                       >
692a :                 >skip3060
                       >
                        
692a : 88                       dey
692b : 10e0                     bpl tand15
                                next_test
692d : ad0032          >            lda test_case   ;previous test
6930 : c926            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
6932 : f003            >        beq skip3063
                       >        trap            ;failed not equal (non zero)
6934 : 208574          >        jsr report_error
                       >
6937 :                 >skip3063
                       >
0027 =                 >test_num = test_num + 1
6937 : a927            >            lda #test_num   ;*** next tests' number
6939 : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; EOR
693c : a203                     ldx #3          ;immediate - self modifying code
693e : b568             teor    lda zpEO,x
6940 : 8d0d32                   sta ex_eori+1   ;set EOR # operand
                                set_ax  absEOa,0
                       >            load_flag 0
6943 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
6945 : 48              >            pha         ;use stack to load status
6946 : bd6f32          >            lda absEOa,x    ;precharge accu
6949 : 28              >            plp
                        
694a : 200c32                   jsr ex_eori     ;execute EOR # in RAM
                                tst_ax  absrlo,absflo,0
694d : 08              >            php         ;save flags
694e : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
6951 : f003            >        beq skip3068
                       >        trap            ;failed not equal (non zero)
6953 : 208574          >        jsr report_error
                       >
6956 :                 >skip3068
                       >
6956 : 68              >            pla         ;load status
                       >            eor_flag 0
6957 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
6959 : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
695c : f003            >        beq skip3071
                       >        trap            ;failed not equal (non zero)
695e : 208574          >        jsr report_error
                       >
6961 :                 >skip3071
                       >
                        
6961 : ca                       dex
6962 : 10da                     bpl teor
6964 : a203                     ldx #3
6966 : b568             teor1   lda zpEO,x
6968 : 8d0d32                   sta ex_eori+1   ;set EOR # operand
                                set_ax  absEOa,$ff
                       >            load_flag $ff
696b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
696d : 48              >            pha         ;use stack to load status
696e : bd6f32          >            lda absEOa,x    ;precharge accu
6971 : 28              >            plp
                        
6972 : 200c32                   jsr ex_eori     ;execute EOR # in RAM
                                tst_ax  absrlo,absflo,$ff-fnz
6975 : 08              >            php         ;save flags
6976 : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
6979 : f003            >        beq skip3076
                       >        trap            ;failed not equal (non zero)
697b : 208574          >        jsr report_error
                       >
697e :                 >skip3076
                       >
697e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
697f : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
6981 : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
6984 : f003            >        beq skip3079
                       >        trap            ;failed not equal (non zero)
6986 : 208574          >        jsr report_error
                       >
6989 :                 >skip3079
                       >
                        
6989 : ca                       dex
698a : 10da                     bpl teor1
                        
698c : a203                     ldx #3      ;zp
698e : b568             teor2    lda zpEO,x
6990 : 8552                     sta zpt
                                set_ax  absEOa,0
                       >            load_flag 0
6992 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
6994 : 48              >            pha         ;use stack to load status
6995 : bd6f32          >            lda absEOa,x    ;precharge accu
6998 : 28              >            plp
                        
6999 : 4552                     eor zpt
                                tst_ax  absrlo,absflo,0
699b : 08              >            php         ;save flags
699c : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
699f : f003            >        beq skip3084
                       >        trap            ;failed not equal (non zero)
69a1 : 208574          >        jsr report_error
                       >
69a4 :                 >skip3084
                       >
69a4 : 68              >            pla         ;load status
                       >            eor_flag 0
69a5 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
69a7 : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
69aa : f003            >        beq skip3087
                       >        trap            ;failed not equal (non zero)
69ac : 208574          >        jsr report_error
                       >
69af :                 >skip3087
                       >
                        
69af : ca                       dex
69b0 : 10dc                     bpl teor2
69b2 : a203                     ldx #3
69b4 : b568             teor3   lda zpEO,x
69b6 : 8552                     sta zpt
                                set_ax  absEOa,$ff
                       >            load_flag $ff
69b8 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
69ba : 48              >            pha         ;use stack to load status
69bb : bd6f32          >            lda absEOa,x    ;precharge accu
69be : 28              >            plp
                        
69bf : 4552                     eor zpt
                                tst_ax  absrlo,absflo,$ff-fnz
69c1 : 08              >            php         ;save flags
69c2 : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
69c5 : f003            >        beq skip3092
                       >        trap            ;failed not equal (non zero)
69c7 : 208574          >        jsr report_error
                       >
69ca :                 >skip3092
                       >
69ca : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
69cb : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
69cd : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
69d0 : f003            >        beq skip3095
                       >        trap            ;failed not equal (non zero)
69d2 : 208574          >        jsr report_error
                       >
69d5 :                 >skip3095
                       >
                        
69d5 : ca                       dex
69d6 : 10dc                     bpl teor3
                        
69d8 : a203                     ldx #3      ;abs
69da : b568             teor4   lda zpEO,x
69dc : 8d0332                   sta abst
                                set_ax  absEOa,0
                       >            load_flag 0
69df : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
69e1 : 48              >            pha         ;use stack to load status
69e2 : bd6f32          >            lda absEOa,x    ;precharge accu
69e5 : 28              >            plp
                        
69e6 : 4d0332                   eor abst
                                tst_ax  absrlo,absflo,0
69e9 : 08              >            php         ;save flags
69ea : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
69ed : f003            >        beq skip3100
                       >        trap            ;failed not equal (non zero)
69ef : 208574          >        jsr report_error
                       >
69f2 :                 >skip3100
                       >
69f2 : 68              >            pla         ;load status
                       >            eor_flag 0
69f3 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
69f5 : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
69f8 : f003            >        beq skip3103
                       >        trap            ;failed not equal (non zero)
69fa : 208574          >        jsr report_error
                       >
69fd :                 >skip3103
                       >
                        
69fd : ca                       dex
69fe : 10da                     bpl teor4
6a00 : a203                     ldx #3
6a02 : b568             teor5   lda zpEO,x
6a04 : 8d0332                   sta abst
                                set_ax  absEOa,$ff
                       >            load_flag $ff
6a07 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
6a09 : 48              >            pha         ;use stack to load status
6a0a : bd6f32          >            lda absEOa,x    ;precharge accu
6a0d : 28              >            plp
                        
6a0e : 4d0332                   eor abst
                                tst_ax  absrlo,absflo,$ff-fnz
6a11 : 08              >            php         ;save flags
6a12 : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
6a15 : f003            >        beq skip3108
                       >        trap            ;failed not equal (non zero)
6a17 : 208574          >        jsr report_error
                       >
6a1a :                 >skip3108
                       >
6a1a : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
6a1b : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
6a1d : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
6a20 : f003            >        beq skip3111
                       >        trap            ;failed not equal (non zero)
6a22 : 208574          >        jsr report_error
                       >
6a25 :                 >skip3111
                       >
                        
6a25 : ca                       dex
6a26 : 10da                     bpl teor5
                        
6a28 : a203                     ldx #3      ;zp,x
6a2a :                  teor6
                                set_ax  absEOa,0
                       >            load_flag 0
6a2a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
6a2c : 48              >            pha         ;use stack to load status
6a2d : bd6f32          >            lda absEOa,x    ;precharge accu
6a30 : 28              >            plp
                        
6a31 : 5568                     eor zpEO,x
                                tst_ax  absrlo,absflo,0
6a33 : 08              >            php         ;save flags
6a34 : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
6a37 : f003            >        beq skip3116
                       >        trap            ;failed not equal (non zero)
6a39 : 208574          >        jsr report_error
                       >
6a3c :                 >skip3116
                       >
6a3c : 68              >            pla         ;load status
                       >            eor_flag 0
6a3d : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
6a3f : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
6a42 : f003            >        beq skip3119
                       >        trap            ;failed not equal (non zero)
6a44 : 208574          >        jsr report_error
                       >
6a47 :                 >skip3119
                       >
                        
6a47 : ca                       dex
6a48 : 10e0                     bpl teor6
6a4a : a203                     ldx #3
6a4c :                  teor7
                                set_ax  absEOa,$ff
                       >            load_flag $ff
6a4c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
6a4e : 48              >            pha         ;use stack to load status
6a4f : bd6f32          >            lda absEOa,x    ;precharge accu
6a52 : 28              >            plp
                        
6a53 : 5568                     eor zpEO,x
                                tst_ax  absrlo,absflo,$ff-fnz
6a55 : 08              >            php         ;save flags
6a56 : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
6a59 : f003            >        beq skip3124
                       >        trap            ;failed not equal (non zero)
6a5b : 208574          >        jsr report_error
                       >
6a5e :                 >skip3124
                       >
6a5e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
6a5f : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
6a61 : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
6a64 : f003            >        beq skip3127
                       >        trap            ;failed not equal (non zero)
6a66 : 208574          >        jsr report_error
                       >
6a69 :                 >skip3127
                       >
                        
6a69 : ca                       dex
6a6a : 10e0                     bpl teor7
                        
6a6c : a203                     ldx #3      ;abs,x
6a6e :                  teor8
                                set_ax  absEOa,0
                       >            load_flag 0
6a6e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
6a70 : 48              >            pha         ;use stack to load status
6a71 : bd6f32          >            lda absEOa,x    ;precharge accu
6a74 : 28              >            plp
                        
6a75 : 5d6332                   eor absEO,x
                                tst_ax  absrlo,absflo,0
6a78 : 08              >            php         ;save flags
6a79 : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
6a7c : f003            >        beq skip3132
                       >        trap            ;failed not equal (non zero)
6a7e : 208574          >        jsr report_error
                       >
6a81 :                 >skip3132
                       >
6a81 : 68              >            pla         ;load status
                       >            eor_flag 0
6a82 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
6a84 : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
6a87 : f003            >        beq skip3135
                       >        trap            ;failed not equal (non zero)
6a89 : 208574          >        jsr report_error
                       >
6a8c :                 >skip3135
                       >
                        
6a8c : ca                       dex
6a8d : 10df                     bpl teor8
6a8f : a203                     ldx #3
6a91 :                  teor9
                                set_ax  absEOa,$ff
                       >            load_flag $ff
6a91 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
6a93 : 48              >            pha         ;use stack to load status
6a94 : bd6f32          >            lda absEOa,x    ;precharge accu
6a97 : 28              >            plp
                        
6a98 : 5d6332                   eor absEO,x
                                tst_ax  absrlo,absflo,$ff-fnz
6a9b : 08              >            php         ;save flags
6a9c : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
6a9f : f003            >        beq skip3140
                       >        trap            ;failed not equal (non zero)
6aa1 : 208574          >        jsr report_error
                       >
6aa4 :                 >skip3140
                       >
6aa4 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
6aa5 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
6aa7 : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
6aaa : f003            >        beq skip3143
                       >        trap            ;failed not equal (non zero)
6aac : 208574          >        jsr report_error
                       >
6aaf :                 >skip3143
                       >
                        
6aaf : ca                       dex
6ab0 : 10df                     bpl teor9
                        
6ab2 : a003                     ldy #3      ;abs,y
6ab4 :                  teor10
                                set_ay  absEOa,0
                       >            load_flag 0
6ab4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
6ab6 : 48              >            pha         ;use stack to load status
6ab7 : b96f32          >            lda absEOa,y    ;precharge accu
6aba : 28              >            plp
                        
6abb : 596332                   eor absEO,y
                                tst_ay  absrlo,absflo,0
6abe : 08              >            php         ;save flags
6abf : d97332          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
6ac2 : f003            >        beq skip3148
                       >        trap            ;failed not equal (non zero)
6ac4 : 208574          >        jsr report_error
                       >
6ac7 :                 >skip3148
                       >
6ac7 : 68              >            pla         ;load status
                       >            eor_flag 0
6ac8 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
6aca : d97732          >            cmp absflo,y    ;test flags
                       >            trap_ne
6acd : f003            >        beq skip3151
                       >        trap            ;failed not equal (non zero)
6acf : 208574          >        jsr report_error
                       >
6ad2 :                 >skip3151
                       >
                        
6ad2 : 88                       dey
6ad3 : 10df                     bpl teor10
6ad5 : a003                     ldy #3
6ad7 :                  teor11
                                set_ay  absEOa,$ff
                       >            load_flag $ff
6ad7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
6ad9 : 48              >            pha         ;use stack to load status
6ada : b96f32          >            lda absEOa,y    ;precharge accu
6add : 28              >            plp
                        
6ade : 596332                   eor absEO,y
                                tst_ay  absrlo,absflo,$ff-fnz
6ae1 : 08              >            php         ;save flags
6ae2 : d97332          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
6ae5 : f003            >        beq skip3156
                       >        trap            ;failed not equal (non zero)
6ae7 : 208574          >        jsr report_error
                       >
6aea :                 >skip3156
                       >
6aea : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
6aeb : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
6aed : d97732          >            cmp absflo,y    ;test flags
                       >            trap_ne
6af0 : f003            >        beq skip3159
                       >        trap            ;failed not equal (non zero)
6af2 : 208574          >        jsr report_error
                       >
6af5 :                 >skip3159
                       >
                        
6af5 : 88                       dey
6af6 : 10df                     bpl teor11
                        
6af8 : a206                     ldx #6      ;(zp,x)
6afa : a003                     ldy #3
6afc :                  teor12
                                set_ay  absEOa,0
                       >            load_flag 0
6afc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
6afe : 48              >            pha         ;use stack to load status
6aff : b96f32          >            lda absEOa,y    ;precharge accu
6b02 : 28              >            plp
                        
6b03 : 418a                     eor (indEO,x)
                                tst_ay  absrlo,absflo,0
6b05 : 08              >            php         ;save flags
6b06 : d97332          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
6b09 : f003            >        beq skip3164
                       >        trap            ;failed not equal (non zero)
6b0b : 208574          >        jsr report_error
                       >
6b0e :                 >skip3164
                       >
6b0e : 68              >            pla         ;load status
                       >            eor_flag 0
6b0f : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
6b11 : d97732          >            cmp absflo,y    ;test flags
                       >            trap_ne
6b14 : f003            >        beq skip3167
                       >        trap            ;failed not equal (non zero)
6b16 : 208574          >        jsr report_error
                       >
6b19 :                 >skip3167
                       >
                        
6b19 : ca                       dex
6b1a : ca                       dex
6b1b : 88                       dey
6b1c : 10de                     bpl teor12
6b1e : a206                     ldx #6
6b20 : a003                     ldy #3
6b22 :                  teor13
                                set_ay  absEOa,$ff
                       >            load_flag $ff
6b22 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
6b24 : 48              >            pha         ;use stack to load status
6b25 : b96f32          >            lda absEOa,y    ;precharge accu
6b28 : 28              >            plp
                        
6b29 : 418a                     eor (indEO,x)
                                tst_ay  absrlo,absflo,$ff-fnz
6b2b : 08              >            php         ;save flags
6b2c : d97332          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
6b2f : f003            >        beq skip3172
                       >        trap            ;failed not equal (non zero)
6b31 : 208574          >        jsr report_error
                       >
6b34 :                 >skip3172
                       >
6b34 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
6b35 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
6b37 : d97732          >            cmp absflo,y    ;test flags
                       >            trap_ne
6b3a : f003            >        beq skip3175
                       >        trap            ;failed not equal (non zero)
6b3c : 208574          >        jsr report_error
                       >
6b3f :                 >skip3175
                       >
                        
6b3f : ca                       dex
6b40 : ca                       dex
6b41 : 88                       dey
6b42 : 10de                     bpl teor13
                        
6b44 : a003                     ldy #3      ;(zp),y
6b46 :                  teor14
                                set_ay  absEOa,0
                       >            load_flag 0
6b46 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
6b48 : 48              >            pha         ;use stack to load status
6b49 : b96f32          >            lda absEOa,y    ;precharge accu
6b4c : 28              >            plp
                        
6b4d : 518a                     eor (indEO),y
                                tst_ay  absrlo,absflo,0
6b4f : 08              >            php         ;save flags
6b50 : d97332          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
6b53 : f003            >        beq skip3180
                       >        trap            ;failed not equal (non zero)
6b55 : 208574          >        jsr report_error
                       >
6b58 :                 >skip3180
                       >
6b58 : 68              >            pla         ;load status
                       >            eor_flag 0
6b59 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
6b5b : d97732          >            cmp absflo,y    ;test flags
                       >            trap_ne
6b5e : f003            >        beq skip3183
                       >        trap            ;failed not equal (non zero)
6b60 : 208574          >        jsr report_error
                       >
6b63 :                 >skip3183
                       >
                        
6b63 : 88                       dey
6b64 : 10e0                     bpl teor14
6b66 : a003                     ldy #3
6b68 :                  teor15
                                set_ay  absEOa,$ff
                       >            load_flag $ff
6b68 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
6b6a : 48              >            pha         ;use stack to load status
6b6b : b96f32          >            lda absEOa,y    ;precharge accu
6b6e : 28              >            plp
                        
6b6f : 518a                     eor (indEO),y
                                tst_ay  absrlo,absflo,$ff-fnz
6b71 : 08              >            php         ;save flags
6b72 : d97332          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
6b75 : f003            >        beq skip3188
                       >        trap            ;failed not equal (non zero)
6b77 : 208574          >        jsr report_error
                       >
6b7a :                 >skip3188
                       >
6b7a : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
6b7b : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
6b7d : d97732          >            cmp absflo,y    ;test flags
                       >            trap_ne
6b80 : f003            >        beq skip3191
                       >        trap            ;failed not equal (non zero)
6b82 : 208574          >        jsr report_error
                       >
6b85 :                 >skip3191
                       >
                        
6b85 : 88                       dey
6b86 : 10e0                     bpl teor15
                                next_test
6b88 : ad0032          >            lda test_case   ;previous test
6b8b : c927            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
6b8d : f003            >        beq skip3194
                       >        trap            ;failed not equal (non zero)
6b8f : 208574          >        jsr report_error
                       >
6b92 :                 >skip3194
                       >
0028 =                 >test_num = test_num + 1
6b92 : a928            >            lda #test_num   ;*** next tests' number
6b94 : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; OR
6b97 : a203                     ldx #3          ;immediate - self modifying code
6b99 : b560             tora    lda zpOR,x
6b9b : 8d1032                   sta ex_orai+1   ;set ORA # operand
                                set_ax  absORa,0
                       >            load_flag 0
6b9e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
6ba0 : 48              >            pha         ;use stack to load status
6ba1 : bd6732          >            lda absORa,x    ;precharge accu
6ba4 : 28              >            plp
                        
6ba5 : 200f32                   jsr ex_orai     ;execute ORA # in RAM
                                tst_ax  absrlo,absflo,0
6ba8 : 08              >            php         ;save flags
6ba9 : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
6bac : f003            >        beq skip3199
                       >        trap            ;failed not equal (non zero)
6bae : 208574          >        jsr report_error
                       >
6bb1 :                 >skip3199
                       >
6bb1 : 68              >            pla         ;load status
                       >            eor_flag 0
6bb2 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
6bb4 : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
6bb7 : f003            >        beq skip3202
                       >        trap            ;failed not equal (non zero)
6bb9 : 208574          >        jsr report_error
                       >
6bbc :                 >skip3202
                       >
                        
6bbc : ca                       dex
6bbd : 10da                     bpl tora
6bbf : a203                     ldx #3
6bc1 : b560             tora1   lda zpOR,x
6bc3 : 8d1032                   sta ex_orai+1   ;set ORA # operand
                                set_ax  absORa,$ff
                       >            load_flag $ff
6bc6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
6bc8 : 48              >            pha         ;use stack to load status
6bc9 : bd6732          >            lda absORa,x    ;precharge accu
6bcc : 28              >            plp
                        
6bcd : 200f32                   jsr ex_orai     ;execute ORA # in RAM
                                tst_ax  absrlo,absflo,$ff-fnz
6bd0 : 08              >            php         ;save flags
6bd1 : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
6bd4 : f003            >        beq skip3207
                       >        trap            ;failed not equal (non zero)
6bd6 : 208574          >        jsr report_error
                       >
6bd9 :                 >skip3207
                       >
6bd9 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
6bda : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
6bdc : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
6bdf : f003            >        beq skip3210
                       >        trap            ;failed not equal (non zero)
6be1 : 208574          >        jsr report_error
                       >
6be4 :                 >skip3210
                       >
                        
6be4 : ca                       dex
6be5 : 10da                     bpl tora1
                        
6be7 : a203                     ldx #3      ;zp
6be9 : b560             tora2   lda zpOR,x
6beb : 8552                     sta zpt
                                set_ax  absORa,0
                       >            load_flag 0
6bed : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
6bef : 48              >            pha         ;use stack to load status
6bf0 : bd6732          >            lda absORa,x    ;precharge accu
6bf3 : 28              >            plp
                        
6bf4 : 0552                     ora zpt
                                tst_ax  absrlo,absflo,0
6bf6 : 08              >            php         ;save flags
6bf7 : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
6bfa : f003            >        beq skip3215
                       >        trap            ;failed not equal (non zero)
6bfc : 208574          >        jsr report_error
                       >
6bff :                 >skip3215
                       >
6bff : 68              >            pla         ;load status
                       >            eor_flag 0
6c00 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
6c02 : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
6c05 : f003            >        beq skip3218
                       >        trap            ;failed not equal (non zero)
6c07 : 208574          >        jsr report_error
                       >
6c0a :                 >skip3218
                       >
                        
6c0a : ca                       dex
6c0b : 10dc                     bpl tora2
6c0d : a203                     ldx #3
6c0f : b560             tora3   lda zpOR,x
6c11 : 8552                     sta zpt
                                set_ax  absORa,$ff
                       >            load_flag $ff
6c13 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
6c15 : 48              >            pha         ;use stack to load status
6c16 : bd6732          >            lda absORa,x    ;precharge accu
6c19 : 28              >            plp
                        
6c1a : 0552                     ora zpt
                                tst_ax  absrlo,absflo,$ff-fnz
6c1c : 08              >            php         ;save flags
6c1d : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
6c20 : f003            >        beq skip3223
                       >        trap            ;failed not equal (non zero)
6c22 : 208574          >        jsr report_error
                       >
6c25 :                 >skip3223
                       >
6c25 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
6c26 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
6c28 : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
6c2b : f003            >        beq skip3226
                       >        trap            ;failed not equal (non zero)
6c2d : 208574          >        jsr report_error
                       >
6c30 :                 >skip3226
                       >
                        
6c30 : ca                       dex
6c31 : 10dc                     bpl tora3
                        
6c33 : a203                     ldx #3      ;abs
6c35 : b560             tora4   lda zpOR,x
6c37 : 8d0332                   sta abst
                                set_ax  absORa,0
                       >            load_flag 0
6c3a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
6c3c : 48              >            pha         ;use stack to load status
6c3d : bd6732          >            lda absORa,x    ;precharge accu
6c40 : 28              >            plp
                        
6c41 : 0d0332                   ora abst
                                tst_ax  absrlo,absflo,0
6c44 : 08              >            php         ;save flags
6c45 : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
6c48 : f003            >        beq skip3231
                       >        trap            ;failed not equal (non zero)
6c4a : 208574          >        jsr report_error
                       >
6c4d :                 >skip3231
                       >
6c4d : 68              >            pla         ;load status
                       >            eor_flag 0
6c4e : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
6c50 : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
6c53 : f003            >        beq skip3234
                       >        trap            ;failed not equal (non zero)
6c55 : 208574          >        jsr report_error
                       >
6c58 :                 >skip3234
                       >
                        
6c58 : ca                       dex
6c59 : 10da                     bpl tora4
6c5b : a203                     ldx #3
6c5d : b560             tora5   lda zpOR,x
6c5f : 8d0332                   sta abst
                                set_ax  absORa,$ff
                       >            load_flag $ff
6c62 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
6c64 : 48              >            pha         ;use stack to load status
6c65 : bd6732          >            lda absORa,x    ;precharge accu
6c68 : 28              >            plp
                        
6c69 : 0d0332                   ora abst
                                tst_ax  absrlo,absflo,$ff-fnz
6c6c : 08              >            php         ;save flags
6c6d : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
6c70 : f003            >        beq skip3239
                       >        trap            ;failed not equal (non zero)
6c72 : 208574          >        jsr report_error
                       >
6c75 :                 >skip3239
                       >
6c75 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
6c76 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
6c78 : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
6c7b : f003            >        beq skip3242
                       >        trap            ;failed not equal (non zero)
6c7d : 208574          >        jsr report_error
                       >
6c80 :                 >skip3242
                       >
                        
6c80 : ca                       dex
6c81 : 1002                     bpl tora6
                        
6c83 : a203                     ldx #3      ;zp,x
6c85 :                  tora6
                                set_ax  absORa,0
                       >            load_flag 0
6c85 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
6c87 : 48              >            pha         ;use stack to load status
6c88 : bd6732          >            lda absORa,x    ;precharge accu
6c8b : 28              >            plp
                        
6c8c : 1560                     ora zpOR,x
                                tst_ax  absrlo,absflo,0
6c8e : 08              >            php         ;save flags
6c8f : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
6c92 : f003            >        beq skip3247
                       >        trap            ;failed not equal (non zero)
6c94 : 208574          >        jsr report_error
                       >
6c97 :                 >skip3247
                       >
6c97 : 68              >            pla         ;load status
                       >            eor_flag 0
6c98 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
6c9a : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
6c9d : f003            >        beq skip3250
                       >        trap            ;failed not equal (non zero)
6c9f : 208574          >        jsr report_error
                       >
6ca2 :                 >skip3250
                       >
                        
6ca2 : ca                       dex
6ca3 : 10e0                     bpl tora6
6ca5 : a203                     ldx #3
6ca7 :                  tora7
                                set_ax  absORa,$ff
                       >            load_flag $ff
6ca7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
6ca9 : 48              >            pha         ;use stack to load status
6caa : bd6732          >            lda absORa,x    ;precharge accu
6cad : 28              >            plp
                        
6cae : 1560                     ora zpOR,x
                                tst_ax  absrlo,absflo,$ff-fnz
6cb0 : 08              >            php         ;save flags
6cb1 : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
6cb4 : f003            >        beq skip3255
                       >        trap            ;failed not equal (non zero)
6cb6 : 208574          >        jsr report_error
                       >
6cb9 :                 >skip3255
                       >
6cb9 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
6cba : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
6cbc : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
6cbf : f003            >        beq skip3258
                       >        trap            ;failed not equal (non zero)
6cc1 : 208574          >        jsr report_error
                       >
6cc4 :                 >skip3258
                       >
                        
6cc4 : ca                       dex
6cc5 : 10e0                     bpl tora7
                        
6cc7 : a203                     ldx #3      ;abs,x
6cc9 :                  tora8
                                set_ax  absORa,0
                       >            load_flag 0
6cc9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
6ccb : 48              >            pha         ;use stack to load status
6ccc : bd6732          >            lda absORa,x    ;precharge accu
6ccf : 28              >            plp
                        
6cd0 : 1d5b32                   ora absOR,x
                                tst_ax  absrlo,absflo,0
6cd3 : 08              >            php         ;save flags
6cd4 : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
6cd7 : f003            >        beq skip3263
                       >        trap            ;failed not equal (non zero)
6cd9 : 208574          >        jsr report_error
                       >
6cdc :                 >skip3263
                       >
6cdc : 68              >            pla         ;load status
                       >            eor_flag 0
6cdd : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
6cdf : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
6ce2 : f003            >        beq skip3266
                       >        trap            ;failed not equal (non zero)
6ce4 : 208574          >        jsr report_error
                       >
6ce7 :                 >skip3266
                       >
                        
6ce7 : ca                       dex
6ce8 : 10df                     bpl tora8
6cea : a203                     ldx #3
6cec :                  tora9
                                set_ax  absORa,$ff
                       >            load_flag $ff
6cec : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
6cee : 48              >            pha         ;use stack to load status
6cef : bd6732          >            lda absORa,x    ;precharge accu
6cf2 : 28              >            plp
                        
6cf3 : 1d5b32                   ora absOR,x
                                tst_ax  absrlo,absflo,$ff-fnz
6cf6 : 08              >            php         ;save flags
6cf7 : dd7332          >            cmp absrlo,x    ;test result
                       >            trap_ne
6cfa : f003            >        beq skip3271
                       >        trap            ;failed not equal (non zero)
6cfc : 208574          >        jsr report_error
                       >
6cff :                 >skip3271
                       >
6cff : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
6d00 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
6d02 : dd7732          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
6d05 : f003            >        beq skip3274
                       >        trap            ;failed not equal (non zero)
6d07 : 208574          >        jsr report_error
                       >
6d0a :                 >skip3274
                       >
                        
6d0a : ca                       dex
6d0b : 10df                     bpl tora9
                        
6d0d : a003                     ldy #3      ;abs,y
6d0f :                  tora10
                                set_ay  absORa,0
                       >            load_flag 0
6d0f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
6d11 : 48              >            pha         ;use stack to load status
6d12 : b96732          >            lda absORa,y    ;precharge accu
6d15 : 28              >            plp
                        
6d16 : 195b32                   ora absOR,y
                                tst_ay  absrlo,absflo,0
6d19 : 08              >            php         ;save flags
6d1a : d97332          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
6d1d : f003            >        beq skip3279
                       >        trap            ;failed not equal (non zero)
6d1f : 208574          >        jsr report_error
                       >
6d22 :                 >skip3279
                       >
6d22 : 68              >            pla         ;load status
                       >            eor_flag 0
6d23 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
6d25 : d97732          >            cmp absflo,y    ;test flags
                       >            trap_ne
6d28 : f003            >        beq skip3282
                       >        trap            ;failed not equal (non zero)
6d2a : 208574          >        jsr report_error
                       >
6d2d :                 >skip3282
                       >
                        
6d2d : 88                       dey
6d2e : 10df                     bpl tora10
6d30 : a003                     ldy #3
6d32 :                  tora11
                                set_ay  absORa,$ff
                       >            load_flag $ff
6d32 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
6d34 : 48              >            pha         ;use stack to load status
6d35 : b96732          >            lda absORa,y    ;precharge accu
6d38 : 28              >            plp
                        
6d39 : 195b32                   ora absOR,y
                                tst_ay  absrlo,absflo,$ff-fnz
6d3c : 08              >            php         ;save flags
6d3d : d97332          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
6d40 : f003            >        beq skip3287
                       >        trap            ;failed not equal (non zero)
6d42 : 208574          >        jsr report_error
                       >
6d45 :                 >skip3287
                       >
6d45 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
6d46 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
6d48 : d97732          >            cmp absflo,y    ;test flags
                       >            trap_ne
6d4b : f003            >        beq skip3290
                       >        trap            ;failed not equal (non zero)
6d4d : 208574          >        jsr report_error
                       >
6d50 :                 >skip3290
                       >
                        
6d50 : 88                       dey
6d51 : 10df                     bpl tora11
                        
6d53 : a206                     ldx #6      ;(zp,x)
6d55 : a003                     ldy #3
6d57 :                  tora12
                                set_ay  absORa,0
                       >            load_flag 0
6d57 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
6d59 : 48              >            pha         ;use stack to load status
6d5a : b96732          >            lda absORa,y    ;precharge accu
6d5d : 28              >            plp
                        
6d5e : 0192                     ora (indOR,x)
                                tst_ay  absrlo,absflo,0
6d60 : 08              >            php         ;save flags
6d61 : d97332          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
6d64 : f003            >        beq skip3295
                       >        trap            ;failed not equal (non zero)
6d66 : 208574          >        jsr report_error
                       >
6d69 :                 >skip3295
                       >
6d69 : 68              >            pla         ;load status
                       >            eor_flag 0
6d6a : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
6d6c : d97732          >            cmp absflo,y    ;test flags
                       >            trap_ne
6d6f : f003            >        beq skip3298
                       >        trap            ;failed not equal (non zero)
6d71 : 208574          >        jsr report_error
                       >
6d74 :                 >skip3298
                       >
                        
6d74 : ca                       dex
6d75 : ca                       dex
6d76 : 88                       dey
6d77 : 10de                     bpl tora12
6d79 : a206                     ldx #6
6d7b : a003                     ldy #3
6d7d :                  tora13
                                set_ay  absORa,$ff
                       >            load_flag $ff
6d7d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
6d7f : 48              >            pha         ;use stack to load status
6d80 : b96732          >            lda absORa,y    ;precharge accu
6d83 : 28              >            plp
                        
6d84 : 0192                     ora (indOR,x)
                                tst_ay  absrlo,absflo,$ff-fnz
6d86 : 08              >            php         ;save flags
6d87 : d97332          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
6d8a : f003            >        beq skip3303
                       >        trap            ;failed not equal (non zero)
6d8c : 208574          >        jsr report_error
                       >
6d8f :                 >skip3303
                       >
6d8f : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
6d90 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
6d92 : d97732          >            cmp absflo,y    ;test flags
                       >            trap_ne
6d95 : f003            >        beq skip3306
                       >        trap            ;failed not equal (non zero)
6d97 : 208574          >        jsr report_error
                       >
6d9a :                 >skip3306
                       >
                        
6d9a : ca                       dex
6d9b : ca                       dex
6d9c : 88                       dey
6d9d : 10de                     bpl tora13
                        
6d9f : a003                     ldy #3      ;(zp),y
6da1 :                  tora14
                                set_ay  absORa,0
                       >            load_flag 0
6da1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
6da3 : 48              >            pha         ;use stack to load status
6da4 : b96732          >            lda absORa,y    ;precharge accu
6da7 : 28              >            plp
                        
6da8 : 1192                     ora (indOR),y
                                tst_ay  absrlo,absflo,0
6daa : 08              >            php         ;save flags
6dab : d97332          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
6dae : f003            >        beq skip3311
                       >        trap            ;failed not equal (non zero)
6db0 : 208574          >        jsr report_error
                       >
6db3 :                 >skip3311
                       >
6db3 : 68              >            pla         ;load status
                       >            eor_flag 0
6db4 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
6db6 : d97732          >            cmp absflo,y    ;test flags
                       >            trap_ne
6db9 : f003            >        beq skip3314
                       >        trap            ;failed not equal (non zero)
6dbb : 208574          >        jsr report_error
                       >
6dbe :                 >skip3314
                       >
                        
6dbe : 88                       dey
6dbf : 10e0                     bpl tora14
6dc1 : a003                     ldy #3
6dc3 :                  tora15
                                set_ay  absORa,$ff
                       >            load_flag $ff
6dc3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
6dc5 : 48              >            pha         ;use stack to load status
6dc6 : b96732          >            lda absORa,y    ;precharge accu
6dc9 : 28              >            plp
                        
6dca : 1192                     ora (indOR),y
                                tst_ay  absrlo,absflo,$ff-fnz
6dcc : 08              >            php         ;save flags
6dcd : d97332          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
6dd0 : f003            >        beq skip3319
                       >        trap            ;failed not equal (non zero)
6dd2 : 208574          >        jsr report_error
                       >
6dd5 :                 >skip3319
                       >
6dd5 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
6dd6 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
6dd8 : d97732          >            cmp absflo,y    ;test flags
                       >            trap_ne
6ddb : f003            >        beq skip3322
                       >        trap            ;failed not equal (non zero)
6ddd : 208574          >        jsr report_error
                       >
6de0 :                 >skip3322
                       >
                        
6de0 : 88                       dey
6de1 : 10e0                     bpl tora15
                            if I_flag = 3
6de3 : 58                       cli
                            endif
                                next_test
6de4 : ad0032          >            lda test_case   ;previous test
6de7 : c928            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
6de9 : f003            >        beq skip3325
                       >        trap            ;failed not equal (non zero)
6deb : 208574          >        jsr report_error
                       >
6dee :                 >skip3325
                       >
0029 =                 >test_num = test_num + 1
6dee : a929            >            lda #test_num   ;*** next tests' number
6df0 : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; full binary add/subtract test
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
6df3 : d8                       cld
6df4 : a254                     ldx #ad2        ;for indexed test
6df6 : a0ff                     ldy #$ff        ;max range
6df8 : a900                     lda #0          ;start with adding zeroes & no carry
6dfa : 8552                     sta adfc        ;carry in - for diag
6dfc : 8553                     sta ad1         ;operand 1 - accumulator
6dfe : 8554                     sta ad2         ;operand 2 - memory or immediate
6e00 : 8d0332                   sta ada2        ;non zp
6e03 : 8555                     sta adrl        ;expected result bits 0-7
6e05 : 8556                     sta adrh        ;expected result bit 8 (carry out)
6e07 : a9ff                     lda #$ff        ;complemented operand 2 for subtract
6e09 : 8558                     sta sb2
6e0b : 8d0432                   sta sba2        ;non zp
6e0e : a902                     lda #2          ;expected Z-flag
6e10 : 8557                     sta adrf
6e12 : 18               tadd    clc             ;test with carry clear
6e13 : 200871                   jsr chkadd
6e16 : e652                     inc adfc        ;now with carry
6e18 : e655                     inc adrl        ;result +1
6e1a : 08                       php             ;save N & Z from low result
6e1b : 08                       php
6e1c : 68                       pla             ;accu holds expected flags
6e1d : 2982                     and #$82        ;mask N & Z
6e1f : 28                       plp
6e20 : d002                     bne tadd1
6e22 : e656                     inc adrh        ;result bit 8 - carry
6e24 : 0556             tadd1   ora adrh        ;merge C to expected flags
6e26 : 8557                     sta adrf        ;save expected flags except overflow
6e28 : 38                       sec             ;test with carry set
6e29 : 200871                   jsr chkadd
6e2c : c652                     dec adfc        ;same for operand +1 but no carry
6e2e : e653                     inc ad1
6e30 : d0e0                     bne tadd        ;iterate op1
6e32 : a900                     lda #0          ;preset result to op2 when op1 = 0
6e34 : 8556                     sta adrh
6e36 : ee0332                   inc ada2
6e39 : e654                     inc ad2
6e3b : 08                       php             ;save NZ as operand 2 becomes the new result
6e3c : 68                       pla
6e3d : 2982                     and #$82        ;mask N00000Z0
6e3f : 8557                     sta adrf        ;no need to check carry as we are adding to 0
6e41 : c658                     dec sb2         ;complement subtract operand 2
6e43 : ce0432                   dec sba2
6e46 : a554                     lda ad2
6e48 : 8555                     sta adrl
6e4a : d0c6                     bne tadd        ;iterate op2
                            if disable_decimal < 1
                                next_test
6e4c : ad0032          >            lda test_case   ;previous test
6e4f : c929            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
6e51 : f003            >        beq skip3328
                       >        trap            ;failed not equal (non zero)
6e53 : 208574          >        jsr report_error
                       >
6e56 :                 >skip3328
                       >
002a =                 >test_num = test_num + 1
6e56 : a92a            >            lda #test_num   ;*** next tests' number
6e58 : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, N V Z flags are ignored
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
6e5b : f8                       sed
6e5c : a254                     ldx #ad2        ;for indexed test
6e5e : a0ff                     ldy #$ff        ;max range
6e60 : a999                     lda #$99        ;start with adding 99 to 99 with carry
6e62 : 8553                     sta ad1         ;operand 1 - accumulator
6e64 : 8554                     sta ad2         ;operand 2 - memory or immediate
6e66 : 8d0332                   sta ada2        ;non zp
6e69 : 8555                     sta adrl        ;expected result bits 0-7
6e6b : a901                     lda #1          ;set carry in & out
6e6d : 8552                     sta adfc        ;carry in - for diag
6e6f : 8556                     sta adrh        ;expected result bit 8 (carry out)
6e71 : a900                     lda #0          ;complemented operand 2 for subtract
6e73 : 8558                     sta sb2
6e75 : 8d0432                   sta sba2        ;non zp
6e78 : 38               tdad    sec             ;test with carry set
6e79 : 20756f                   jsr chkdad
6e7c : c652                     dec adfc        ;now with carry clear
6e7e : a555                     lda adrl        ;decimal adjust result
6e80 : d008                     bne tdad1       ;skip clear carry & preset result 99 (9A-1)
6e82 : c656                     dec adrh
6e84 : a999                     lda #$99
6e86 : 8555                     sta adrl
6e88 : d012                     bne tdad3
6e8a : 290f             tdad1   and #$f         ;lower nibble mask
6e8c : d00c                     bne tdad2       ;no decimal adjust needed
6e8e : c655                     dec adrl        ;decimal adjust (?0-6)
6e90 : c655                     dec adrl
6e92 : c655                     dec adrl
6e94 : c655                     dec adrl
6e96 : c655                     dec adrl
6e98 : c655                     dec adrl
6e9a : c655             tdad2   dec adrl        ;result -1
6e9c : 18               tdad3   clc             ;test with carry clear
6e9d : 20756f                   jsr chkdad
6ea0 : e652                     inc adfc        ;same for operand -1 but with carry
6ea2 : a553                     lda ad1         ;decimal adjust operand 1
6ea4 : f015                     beq tdad5       ;iterate operand 2
6ea6 : 290f                     and #$f         ;lower nibble mask
6ea8 : d00c                     bne tdad4       ;skip decimal adjust
6eaa : c653                     dec ad1         ;decimal adjust (?0-6)
6eac : c653                     dec ad1
6eae : c653                     dec ad1
6eb0 : c653                     dec ad1
6eb2 : c653                     dec ad1
6eb4 : c653                     dec ad1
6eb6 : c653             tdad4   dec ad1         ;operand 1 -1
6eb8 : 4c786e                   jmp tdad        ;iterate op1
                        
6ebb : a999             tdad5   lda #$99        ;precharge op1 max
6ebd : 8553                     sta ad1
6ebf : a554                     lda ad2         ;decimal adjust operand 2
6ec1 : f030                     beq tdad7       ;end of iteration
6ec3 : 290f                     and #$f         ;lower nibble mask
6ec5 : d018                     bne tdad6       ;skip decimal adjust
6ec7 : c654                     dec ad2         ;decimal adjust (?0-6)
6ec9 : c654                     dec ad2
6ecb : c654                     dec ad2
6ecd : c654                     dec ad2
6ecf : c654                     dec ad2
6ed1 : c654                     dec ad2
6ed3 : e658                     inc sb2         ;complemented decimal adjust for subtract (?9+6)
6ed5 : e658                     inc sb2
6ed7 : e658                     inc sb2
6ed9 : e658                     inc sb2
6edb : e658                     inc sb2
6edd : e658                     inc sb2
6edf : c654             tdad6   dec ad2         ;operand 2 -1
6ee1 : e658                     inc sb2         ;complemented operand for subtract
6ee3 : a558                     lda sb2
6ee5 : 8d0432                   sta sba2        ;copy as non zp operand
6ee8 : a554                     lda ad2
6eea : 8d0332                   sta ada2        ;copy as non zp operand
6eed : 8555                     sta adrl        ;new result since op1+carry=00+carry +op2=op2
6eef : e656                     inc adrh        ;result carry
6ef1 : d085                     bne tdad        ;iterate op2
6ef3 :                  tdad7
                                next_test
6ef3 : ad0032          >            lda test_case   ;previous test
6ef6 : c92a            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
6ef8 : f003            >        beq skip3331
                       >        trap            ;failed not equal (non zero)
6efa : 208574          >        jsr report_error
                       >
6efd :                 >skip3331
                       >
002b =                 >test_num = test_num + 1
6efd : a92b            >            lda #test_num   ;*** next tests' number
6eff : 8d0032          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; decimal/binary switch test
                        ; tests CLD, SED, PLP, RTI to properly switch between decimal & binary opcode
                        ;   tables
6f02 : 18                       clc
6f03 : d8                       cld
6f04 : 08                       php
6f05 : a955                     lda #$55
6f07 : 6955                     adc #$55
6f09 : c9aa                     cmp #$aa
                                trap_ne         ;expected binary result after cld
6f0b : f003            >        beq skip3333
                       >        trap            ;failed not equal (non zero)
6f0d : 208574          >        jsr report_error
                       >
6f10 :                 >skip3333
                        
6f10 : 18                       clc
6f11 : f8                       sed
6f12 : 08                       php
6f13 : a955                     lda #$55
6f15 : 6955                     adc #$55
6f17 : c910                     cmp #$10
                                trap_ne         ;expected decimal result after sed
6f19 : f003            >        beq skip3335
                       >        trap            ;failed not equal (non zero)
6f1b : 208574          >        jsr report_error
                       >
6f1e :                 >skip3335
                        
6f1e : d8                       cld
6f1f : 28                       plp
6f20 : a955                     lda #$55
6f22 : 6955                     adc #$55
6f24 : c910                     cmp #$10
                                trap_ne         ;expected decimal result after plp D=1
6f26 : f003            >        beq skip3337
                       >        trap            ;failed not equal (non zero)
6f28 : 208574          >        jsr report_error
                       >
6f2b :                 >skip3337
                        
6f2b : 28                       plp
6f2c : a955                     lda #$55
6f2e : 6955                     adc #$55
6f30 : c9aa                     cmp #$aa
                                trap_ne         ;expected binary result after plp D=0
6f32 : f003            >        beq skip3339
                       >        trap            ;failed not equal (non zero)
6f34 : 208574          >        jsr report_error
                       >
6f37 :                 >skip3339
                        
6f37 : 18                       clc
6f38 : a96f                     lda #hi bin_rti_ret ;emulated interrupt for rti
6f3a : 48                       pha
6f3b : a955                     lda #lo bin_rti_ret
6f3d : 48                       pha
6f3e : 08                       php
6f3f : f8                       sed
6f40 : a96f                     lda #hi dec_rti_ret ;emulated interrupt for rti
6f42 : 48                       pha
6f43 : a949                     lda #lo dec_rti_ret
6f45 : 48                       pha
6f46 : 08                       php
6f47 : d8                       cld
6f48 : 40                       rti
6f49 :                  dec_rti_ret
6f49 : a955                     lda #$55
6f4b : 6955                     adc #$55
6f4d : c910                     cmp #$10
                                trap_ne         ;expected decimal result after rti D=1
6f4f : f003            >        beq skip3341
                       >        trap            ;failed not equal (non zero)
6f51 : 208574          >        jsr report_error
                       >
6f54 :                 >skip3341
                        
6f54 : 40                       rti
6f55 :                  bin_rti_ret
6f55 : a955                     lda #$55
6f57 : 6955                     adc #$55
6f59 : c9aa                     cmp #$aa
                                trap_ne         ;expected binary result after rti D=0
6f5b : f003            >        beq skip3343
                       >        trap            ;failed not equal (non zero)
6f5d : 208574          >        jsr report_error
                       >
6f60 :                 >skip3343
                        
                            endif
                        
6f60 : ad0032                   lda test_case
6f63 : c92b                     cmp #test_num
                                trap_ne         ;previous test is out of sequence
6f65 : f003            >        beq skip3345
                       >        trap            ;failed not equal (non zero)
6f67 : 208574          >        jsr report_error
                       >
6f6a :                 >skip3345
                        
6f6a : a9f0                     lda #$f0        ;mark opcode testing complete
6f6c : 8d0032                   sta test_case
                        
                        ; final RAM integrity test
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                                check_ram
                       >            ;RAM check disabled - RAM size not set
                        
                        ; *** DEBUG INFO ***
                        ; to debug checksum errors uncomment check_ram in the next_test macro to
                        ; narrow down the responsible opcode.
                        ; may give false errors when monitor, OS or other background activity is
                        ; allowed during previous tests.
                        
                        
                        ; S U C C E S S ************************************************
                        ; -------------
                                success         ;if you get here everything went well
6f6f : 204e75          >        jsr report_success
                        
                        ; -------------
                        ; S U C C E S S ************************************************
6f72 : 4c0034                   jmp start       ;run again
                        
                            if disable_decimal < 1
                        ; core subroutine of the decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, N V Z flags are ignored
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
6f75 :                  chkdad
                        ; decimal ADC / SBC zp
6f75 : 08                       php             ;save carry for subtract
6f76 : a553                     lda ad1
6f78 : 6554                     adc ad2         ;perform add
6f7a : 08                       php
6f7b : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
6f7d : f003            >        beq skip3349
                       >        trap            ;failed not equal (non zero)
6f7f : 208574          >        jsr report_error
                       >
6f82 :                 >skip3349
                        
6f82 : 68                       pla             ;check flags
6f83 : 2901                     and #1          ;mask carry
6f85 : c556                     cmp adrh
                                trap_ne         ;bad carry
6f87 : f003            >        beq skip3351
                       >        trap            ;failed not equal (non zero)
6f89 : 208574          >        jsr report_error
                       >
6f8c :                 >skip3351
                        
6f8c : 28                       plp
6f8d : 08                       php             ;save carry for next add
6f8e : a553                     lda ad1
6f90 : e558                     sbc sb2         ;perform subtract
6f92 : 08                       php
6f93 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
6f95 : f003            >        beq skip3353
                       >        trap            ;failed not equal (non zero)
6f97 : 208574          >        jsr report_error
                       >
6f9a :                 >skip3353
                        
6f9a : 68                       pla             ;check flags
6f9b : 2901                     and #1          ;mask carry
6f9d : c556                     cmp adrh
                                trap_ne         ;bad flags
6f9f : f003            >        beq skip3355
                       >        trap            ;failed not equal (non zero)
6fa1 : 208574          >        jsr report_error
                       >
6fa4 :                 >skip3355
                        
6fa4 : 28                       plp
                        ; decimal ADC / SBC abs
6fa5 : 08                       php             ;save carry for subtract
6fa6 : a553                     lda ad1
6fa8 : 6d0332                   adc ada2        ;perform add
6fab : 08                       php
6fac : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
6fae : f003            >        beq skip3357
                       >        trap            ;failed not equal (non zero)
6fb0 : 208574          >        jsr report_error
                       >
6fb3 :                 >skip3357
                        
6fb3 : 68                       pla             ;check flags
6fb4 : 2901                     and #1          ;mask carry
6fb6 : c556                     cmp adrh
                                trap_ne         ;bad carry
6fb8 : f003            >        beq skip3359
                       >        trap            ;failed not equal (non zero)
6fba : 208574          >        jsr report_error
                       >
6fbd :                 >skip3359
                        
6fbd : 28                       plp
6fbe : 08                       php             ;save carry for next add
6fbf : a553                     lda ad1
6fc1 : ed0432                   sbc sba2        ;perform subtract
6fc4 : 08                       php
6fc5 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
6fc7 : f003            >        beq skip3361
                       >        trap            ;failed not equal (non zero)
6fc9 : 208574          >        jsr report_error
                       >
6fcc :                 >skip3361
                        
6fcc : 68                       pla             ;check flags
6fcd : 2901                     and #1          ;mask carry
6fcf : c556                     cmp adrh
                                trap_ne         ;bad carry
6fd1 : f003            >        beq skip3363
                       >        trap            ;failed not equal (non zero)
6fd3 : 208574          >        jsr report_error
                       >
6fd6 :                 >skip3363
                        
6fd6 : 28                       plp
                        ; decimal ADC / SBC #
6fd7 : 08                       php             ;save carry for subtract
6fd8 : a554                     lda ad2
6fda : 8d1332                   sta ex_adci+1   ;set ADC # operand
6fdd : a553                     lda ad1
6fdf : 201232                   jsr ex_adci     ;execute ADC # in RAM
6fe2 : 08                       php
6fe3 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
6fe5 : f003            >        beq skip3365
                       >        trap            ;failed not equal (non zero)
6fe7 : 208574          >        jsr report_error
                       >
6fea :                 >skip3365
                        
6fea : 68                       pla             ;check flags
6feb : 2901                     and #1          ;mask carry
6fed : c556                     cmp adrh
                                trap_ne         ;bad carry
6fef : f003            >        beq skip3367
                       >        trap            ;failed not equal (non zero)
6ff1 : 208574          >        jsr report_error
                       >
6ff4 :                 >skip3367
                        
6ff4 : 28                       plp
6ff5 : 08                       php             ;save carry for next add
6ff6 : a558                     lda sb2
6ff8 : 8d1632                   sta ex_sbci+1   ;set SBC # operand
6ffb : a553                     lda ad1
6ffd : 201532                   jsr ex_sbci     ;execute SBC # in RAM
7000 : 08                       php
7001 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
7003 : f003            >        beq skip3369
                       >        trap            ;failed not equal (non zero)
7005 : 208574          >        jsr report_error
                       >
7008 :                 >skip3369
                        
7008 : 68                       pla             ;check flags
7009 : 2901                     and #1          ;mask carry
700b : c556                     cmp adrh
                                trap_ne         ;bad carry
700d : f003            >        beq skip3371
                       >        trap            ;failed not equal (non zero)
700f : 208574          >        jsr report_error
                       >
7012 :                 >skip3371
                        
7012 : 28                       plp
                        ; decimal ADC / SBC zp,x
7013 : 08                       php             ;save carry for subtract
7014 : a553                     lda ad1
7016 : 7500                     adc 0,x         ;perform add
7018 : 08                       php
7019 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
701b : f003            >        beq skip3373
                       >        trap            ;failed not equal (non zero)
701d : 208574          >        jsr report_error
                       >
7020 :                 >skip3373
                        
7020 : 68                       pla             ;check flags
7021 : 2901                     and #1          ;mask carry
7023 : c556                     cmp adrh
                                trap_ne         ;bad carry
7025 : f003            >        beq skip3375
                       >        trap            ;failed not equal (non zero)
7027 : 208574          >        jsr report_error
                       >
702a :                 >skip3375
                        
702a : 28                       plp
702b : 08                       php             ;save carry for next add
702c : a553                     lda ad1
702e : f504                     sbc sb2-ad2,x   ;perform subtract
7030 : 08                       php
7031 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
7033 : f003            >        beq skip3377
                       >        trap            ;failed not equal (non zero)
7035 : 208574          >        jsr report_error
                       >
7038 :                 >skip3377
                        
7038 : 68                       pla             ;check flags
7039 : 2901                     and #1          ;mask carry
703b : c556                     cmp adrh
                                trap_ne         ;bad carry
703d : f003            >        beq skip3379
                       >        trap            ;failed not equal (non zero)
703f : 208574          >        jsr report_error
                       >
7042 :                 >skip3379
                        
7042 : 28                       plp
                        ; decimal ADC / SBC abs,x
7043 : 08                       php             ;save carry for subtract
7044 : a553                     lda ad1
7046 : 7daf31                   adc ada2-ad2,x  ;perform add
7049 : 08                       php
704a : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
704c : f003            >        beq skip3381
                       >        trap            ;failed not equal (non zero)
704e : 208574          >        jsr report_error
                       >
7051 :                 >skip3381
                        
7051 : 68                       pla             ;check flags
7052 : 2901                     and #1          ;mask carry
7054 : c556                     cmp adrh
                                trap_ne         ;bad carry
7056 : f003            >        beq skip3383
                       >        trap            ;failed not equal (non zero)
7058 : 208574          >        jsr report_error
                       >
705b :                 >skip3383
                        
705b : 28                       plp
705c : 08                       php             ;save carry for next add
705d : a553                     lda ad1
705f : fdb031                   sbc sba2-ad2,x  ;perform subtract
7062 : 08                       php
7063 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
7065 : f003            >        beq skip3385
                       >        trap            ;failed not equal (non zero)
7067 : 208574          >        jsr report_error
                       >
706a :                 >skip3385
                        
706a : 68                       pla             ;check flags
706b : 2901                     and #1          ;mask carry
706d : c556                     cmp adrh
                                trap_ne         ;bad carry
706f : f003            >        beq skip3387
                       >        trap            ;failed not equal (non zero)
7071 : 208574          >        jsr report_error
                       >
7074 :                 >skip3387
                        
7074 : 28                       plp
                        ; decimal ADC / SBC abs,y
7075 : 08                       php             ;save carry for subtract
7076 : a553                     lda ad1
7078 : 790431                   adc ada2-$ff,y  ;perform add
707b : 08                       php
707c : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
707e : f003            >        beq skip3389
                       >        trap            ;failed not equal (non zero)
7080 : 208574          >        jsr report_error
                       >
7083 :                 >skip3389
                        
7083 : 68                       pla             ;check flags
7084 : 2901                     and #1          ;mask carry
7086 : c556                     cmp adrh
                                trap_ne         ;bad carry
7088 : f003            >        beq skip3391
                       >        trap            ;failed not equal (non zero)
708a : 208574          >        jsr report_error
                       >
708d :                 >skip3391
                        
708d : 28                       plp
708e : 08                       php             ;save carry for next add
708f : a553                     lda ad1
7091 : f90531                   sbc sba2-$ff,y  ;perform subtract
7094 : 08                       php
7095 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
7097 : f003            >        beq skip3393
                       >        trap            ;failed not equal (non zero)
7099 : 208574          >        jsr report_error
                       >
709c :                 >skip3393
                        
709c : 68                       pla             ;check flags
709d : 2901                     and #1          ;mask carry
709f : c556                     cmp adrh
                                trap_ne         ;bad carry
70a1 : f003            >        beq skip3395
                       >        trap            ;failed not equal (non zero)
70a3 : 208574          >        jsr report_error
                       >
70a6 :                 >skip3395
                        
70a6 : 28                       plp
                        ; decimal ADC / SBC (zp,x)
70a7 : 08                       php             ;save carry for subtract
70a8 : a553                     lda ad1
70aa : 6146                     adc (lo adi2-ad2,x) ;perform add
70ac : 08                       php
70ad : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
70af : f003            >        beq skip3397
                       >        trap            ;failed not equal (non zero)
70b1 : 208574          >        jsr report_error
                       >
70b4 :                 >skip3397
                        
70b4 : 68                       pla             ;check flags
70b5 : 2901                     and #1          ;mask carry
70b7 : c556                     cmp adrh
                                trap_ne         ;bad carry
70b9 : f003            >        beq skip3399
                       >        trap            ;failed not equal (non zero)
70bb : 208574          >        jsr report_error
                       >
70be :                 >skip3399
                        
70be : 28                       plp
70bf : 08                       php             ;save carry for next add
70c0 : a553                     lda ad1
70c2 : e148                     sbc (lo sbi2-ad2,x) ;perform subtract
70c4 : 08                       php
70c5 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
70c7 : f003            >        beq skip3401
                       >        trap            ;failed not equal (non zero)
70c9 : 208574          >        jsr report_error
                       >
70cc :                 >skip3401
                        
70cc : 68                       pla             ;check flags
70cd : 2901                     and #1          ;mask carry
70cf : c556                     cmp adrh
                                trap_ne         ;bad carry
70d1 : f003            >        beq skip3403
                       >        trap            ;failed not equal (non zero)
70d3 : 208574          >        jsr report_error
                       >
70d6 :                 >skip3403
                        
70d6 : 28                       plp
                        ; decimal ADC / SBC (abs),y
70d7 : 08                       php             ;save carry for subtract
70d8 : a553                     lda ad1
70da : 719e                     adc (adiy2),y   ;perform add
70dc : 08                       php
70dd : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
70df : f003            >        beq skip3405
                       >        trap            ;failed not equal (non zero)
70e1 : 208574          >        jsr report_error
                       >
70e4 :                 >skip3405
                        
70e4 : 68                       pla             ;check flags
70e5 : 2901                     and #1          ;mask carry
70e7 : c556                     cmp adrh
                                trap_ne         ;bad carry
70e9 : f003            >        beq skip3407
                       >        trap            ;failed not equal (non zero)
70eb : 208574          >        jsr report_error
                       >
70ee :                 >skip3407
                        
70ee : 28                       plp
70ef : 08                       php             ;save carry for next add
70f0 : a553                     lda ad1
70f2 : f1a0                     sbc (sbiy2),y   ;perform subtract
70f4 : 08                       php
70f5 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
70f7 : f003            >        beq skip3409
                       >        trap            ;failed not equal (non zero)
70f9 : 208574          >        jsr report_error
                       >
70fc :                 >skip3409
                        
70fc : 68                       pla             ;check flags
70fd : 2901                     and #1          ;mask carry
70ff : c556                     cmp adrh
                                trap_ne         ;bad carry
7101 : f003            >        beq skip3411
                       >        trap            ;failed not equal (non zero)
7103 : 208574          >        jsr report_error
                       >
7106 :                 >skip3411
                        
7106 : 28                       plp
7107 : 60                       rts
                            endif
                        
                        ; core subroutine of the full binary add/subtract test
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
7108 : a557             chkadd  lda adrf        ;add V-flag if overflow
710a : 2983                     and #$83        ;keep N-----ZC / clear V
710c : 48                       pha
710d : a553                     lda ad1         ;test sign unequal between operands
710f : 4554                     eor ad2
7111 : 300a                     bmi ckad1       ;no overflow possible - operands have different sign
7113 : a553                     lda ad1         ;test sign equal between operands and result
7115 : 4555                     eor adrl
7117 : 1004                     bpl ckad1       ;no overflow occured - operand and result have same sign
7119 : 68                       pla
711a : 0940                     ora #$40        ;set V
711c : 48                       pha
711d : 68               ckad1   pla
711e : 8557                     sta adrf        ;save expected flags
                        ; binary ADC / SBC zp
7120 : 08                       php             ;save carry for subtract
7121 : a553                     lda ad1
7123 : 6554                     adc ad2         ;perform add
7125 : 08                       php
7126 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
7128 : f003            >        beq skip3413
                       >        trap            ;failed not equal (non zero)
712a : 208574          >        jsr report_error
                       >
712d :                 >skip3413
                        
712d : 68                       pla             ;check flags
712e : 29c3                     and #$c3        ;mask NV----ZC
7130 : c557                     cmp adrf
                                trap_ne         ;bad flags
7132 : f003            >        beq skip3415
                       >        trap            ;failed not equal (non zero)
7134 : 208574          >        jsr report_error
                       >
7137 :                 >skip3415
                        
7137 : 28                       plp
7138 : 08                       php             ;save carry for next add
7139 : a553                     lda ad1
713b : e558                     sbc sb2         ;perform subtract
713d : 08                       php
713e : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
7140 : f003            >        beq skip3417
                       >        trap            ;failed not equal (non zero)
7142 : 208574          >        jsr report_error
                       >
7145 :                 >skip3417
                        
7145 : 68                       pla             ;check flags
7146 : 29c3                     and #$c3        ;mask NV----ZC
7148 : c557                     cmp adrf
                                trap_ne         ;bad flags
714a : f003            >        beq skip3419
                       >        trap            ;failed not equal (non zero)
714c : 208574          >        jsr report_error
                       >
714f :                 >skip3419
                        
714f : 28                       plp
                        ; binary ADC / SBC abs
7150 : 08                       php             ;save carry for subtract
7151 : a553                     lda ad1
7153 : 6d0332                   adc ada2        ;perform add
7156 : 08                       php
7157 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
7159 : f003            >        beq skip3421
                       >        trap            ;failed not equal (non zero)
715b : 208574          >        jsr report_error
                       >
715e :                 >skip3421
                        
715e : 68                       pla             ;check flags
715f : 29c3                     and #$c3        ;mask NV----ZC
7161 : c557                     cmp adrf
                                trap_ne         ;bad flags
7163 : f003            >        beq skip3423
                       >        trap            ;failed not equal (non zero)
7165 : 208574          >        jsr report_error
                       >
7168 :                 >skip3423
                        
7168 : 28                       plp
7169 : 08                       php             ;save carry for next add
716a : a553                     lda ad1
716c : ed0432                   sbc sba2        ;perform subtract
716f : 08                       php
7170 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
7172 : f003            >        beq skip3425
                       >        trap            ;failed not equal (non zero)
7174 : 208574          >        jsr report_error
                       >
7177 :                 >skip3425
                        
7177 : 68                       pla             ;check flags
7178 : 29c3                     and #$c3        ;mask NV----ZC
717a : c557                     cmp adrf
                                trap_ne         ;bad flags
717c : f003            >        beq skip3427
                       >        trap            ;failed not equal (non zero)
717e : 208574          >        jsr report_error
                       >
7181 :                 >skip3427
                        
7181 : 28                       plp
                        ; binary ADC / SBC #
7182 : 08                       php             ;save carry for subtract
7183 : a554                     lda ad2
7185 : 8d1332                   sta ex_adci+1   ;set ADC # operand
7188 : a553                     lda ad1
718a : 201232                   jsr ex_adci     ;execute ADC # in RAM
718d : 08                       php
718e : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
7190 : f003            >        beq skip3429
                       >        trap            ;failed not equal (non zero)
7192 : 208574          >        jsr report_error
                       >
7195 :                 >skip3429
                        
7195 : 68                       pla             ;check flags
7196 : 29c3                     and #$c3        ;mask NV----ZC
7198 : c557                     cmp adrf
                                trap_ne         ;bad flags
719a : f003            >        beq skip3431
                       >        trap            ;failed not equal (non zero)
719c : 208574          >        jsr report_error
                       >
719f :                 >skip3431
                        
719f : 28                       plp
71a0 : 08                       php             ;save carry for next add
71a1 : a558                     lda sb2
71a3 : 8d1632                   sta ex_sbci+1   ;set SBC # operand
71a6 : a553                     lda ad1
71a8 : 201532                   jsr ex_sbci     ;execute SBC # in RAM
71ab : 08                       php
71ac : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
71ae : f003            >        beq skip3433
                       >        trap            ;failed not equal (non zero)
71b0 : 208574          >        jsr report_error
                       >
71b3 :                 >skip3433
                        
71b3 : 68                       pla             ;check flags
71b4 : 29c3                     and #$c3        ;mask NV----ZC
71b6 : c557                     cmp adrf
                                trap_ne         ;bad flags
71b8 : f003            >        beq skip3435
                       >        trap            ;failed not equal (non zero)
71ba : 208574          >        jsr report_error
                       >
71bd :                 >skip3435
                        
71bd : 28                       plp
                        ; binary ADC / SBC zp,x
71be : 08                       php             ;save carry for subtract
71bf : a553                     lda ad1
71c1 : 7500                     adc 0,x         ;perform add
71c3 : 08                       php
71c4 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
71c6 : f003            >        beq skip3437
                       >        trap            ;failed not equal (non zero)
71c8 : 208574          >        jsr report_error
                       >
71cb :                 >skip3437
                        
71cb : 68                       pla             ;check flags
71cc : 29c3                     and #$c3        ;mask NV----ZC
71ce : c557                     cmp adrf
                                trap_ne         ;bad flags
71d0 : f003            >        beq skip3439
                       >        trap            ;failed not equal (non zero)
71d2 : 208574          >        jsr report_error
                       >
71d5 :                 >skip3439
                        
71d5 : 28                       plp
71d6 : 08                       php             ;save carry for next add
71d7 : a553                     lda ad1
71d9 : f504                     sbc sb2-ad2,x   ;perform subtract
71db : 08                       php
71dc : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
71de : f003            >        beq skip3441
                       >        trap            ;failed not equal (non zero)
71e0 : 208574          >        jsr report_error
                       >
71e3 :                 >skip3441
                        
71e3 : 68                       pla             ;check flags
71e4 : 29c3                     and #$c3        ;mask NV----ZC
71e6 : c557                     cmp adrf
                                trap_ne         ;bad flags
71e8 : f003            >        beq skip3443
                       >        trap            ;failed not equal (non zero)
71ea : 208574          >        jsr report_error
                       >
71ed :                 >skip3443
                        
71ed : 28                       plp
                        ; binary ADC / SBC abs,x
71ee : 08                       php             ;save carry for subtract
71ef : a553                     lda ad1
71f1 : 7daf31                   adc ada2-ad2,x  ;perform add
71f4 : 08                       php
71f5 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
71f7 : f003            >        beq skip3445
                       >        trap            ;failed not equal (non zero)
71f9 : 208574          >        jsr report_error
                       >
71fc :                 >skip3445
                        
71fc : 68                       pla             ;check flags
71fd : 29c3                     and #$c3        ;mask NV----ZC
71ff : c557                     cmp adrf
                                trap_ne         ;bad flags
7201 : f003            >        beq skip3447
                       >        trap            ;failed not equal (non zero)
7203 : 208574          >        jsr report_error
                       >
7206 :                 >skip3447
                        
7206 : 28                       plp
7207 : 08                       php             ;save carry for next add
7208 : a553                     lda ad1
720a : fdb031                   sbc sba2-ad2,x  ;perform subtract
720d : 08                       php
720e : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
7210 : f003            >        beq skip3449
                       >        trap            ;failed not equal (non zero)
7212 : 208574          >        jsr report_error
                       >
7215 :                 >skip3449
                        
7215 : 68                       pla             ;check flags
7216 : 29c3                     and #$c3        ;mask NV----ZC
7218 : c557                     cmp adrf
                                trap_ne         ;bad flags
721a : f003            >        beq skip3451
                       >        trap            ;failed not equal (non zero)
721c : 208574          >        jsr report_error
                       >
721f :                 >skip3451
                        
721f : 28                       plp
                        ; binary ADC / SBC abs,y
7220 : 08                       php             ;save carry for subtract
7221 : a553                     lda ad1
7223 : 790431                   adc ada2-$ff,y  ;perform add
7226 : 08                       php
7227 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
7229 : f003            >        beq skip3453
                       >        trap            ;failed not equal (non zero)
722b : 208574          >        jsr report_error
                       >
722e :                 >skip3453
                        
722e : 68                       pla             ;check flags
722f : 29c3                     and #$c3        ;mask NV----ZC
7231 : c557                     cmp adrf
                                trap_ne         ;bad flags
7233 : f003            >        beq skip3455
                       >        trap            ;failed not equal (non zero)
7235 : 208574          >        jsr report_error
                       >
7238 :                 >skip3455
                        
7238 : 28                       plp
7239 : 08                       php             ;save carry for next add
723a : a553                     lda ad1
723c : f90531                   sbc sba2-$ff,y  ;perform subtract
723f : 08                       php
7240 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
7242 : f003            >        beq skip3457
                       >        trap            ;failed not equal (non zero)
7244 : 208574          >        jsr report_error
                       >
7247 :                 >skip3457
                        
7247 : 68                       pla             ;check flags
7248 : 29c3                     and #$c3        ;mask NV----ZC
724a : c557                     cmp adrf
                                trap_ne         ;bad flags
724c : f003            >        beq skip3459
                       >        trap            ;failed not equal (non zero)
724e : 208574          >        jsr report_error
                       >
7251 :                 >skip3459
                        
7251 : 28                       plp
                        ; binary ADC / SBC (zp,x)
7252 : 08                       php             ;save carry for subtract
7253 : a553                     lda ad1
7255 : 6146                     adc (lo adi2-ad2,x) ;perform add
7257 : 08                       php
7258 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
725a : f003            >        beq skip3461
                       >        trap            ;failed not equal (non zero)
725c : 208574          >        jsr report_error
                       >
725f :                 >skip3461
                        
725f : 68                       pla             ;check flags
7260 : 29c3                     and #$c3        ;mask NV----ZC
7262 : c557                     cmp adrf
                                trap_ne         ;bad flags
7264 : f003            >        beq skip3463
                       >        trap            ;failed not equal (non zero)
7266 : 208574          >        jsr report_error
                       >
7269 :                 >skip3463
                        
7269 : 28                       plp
726a : 08                       php             ;save carry for next add
726b : a553                     lda ad1
726d : e148                     sbc (lo sbi2-ad2,x) ;perform subtract
726f : 08                       php
7270 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
7272 : f003            >        beq skip3465
                       >        trap            ;failed not equal (non zero)
7274 : 208574          >        jsr report_error
                       >
7277 :                 >skip3465
                        
7277 : 68                       pla             ;check flags
7278 : 29c3                     and #$c3        ;mask NV----ZC
727a : c557                     cmp adrf
                                trap_ne         ;bad flags
727c : f003            >        beq skip3467
                       >        trap            ;failed not equal (non zero)
727e : 208574          >        jsr report_error
                       >
7281 :                 >skip3467
                        
7281 : 28                       plp
                        ; binary ADC / SBC (abs),y
7282 : 08                       php             ;save carry for subtract
7283 : a553                     lda ad1
7285 : 719e                     adc (adiy2),y   ;perform add
7287 : 08                       php
7288 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
728a : f003            >        beq skip3469
                       >        trap            ;failed not equal (non zero)
728c : 208574          >        jsr report_error
                       >
728f :                 >skip3469
                        
728f : 68                       pla             ;check flags
7290 : 29c3                     and #$c3        ;mask NV----ZC
7292 : c557                     cmp adrf
                                trap_ne         ;bad flags
7294 : f003            >        beq skip3471
                       >        trap            ;failed not equal (non zero)
7296 : 208574          >        jsr report_error
                       >
7299 :                 >skip3471
                        
7299 : 28                       plp
729a : 08                       php             ;save carry for next add
729b : a553                     lda ad1
729d : f1a0                     sbc (sbiy2),y   ;perform subtract
729f : 08                       php
72a0 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
72a2 : f003            >        beq skip3473
                       >        trap            ;failed not equal (non zero)
72a4 : 208574          >        jsr report_error
                       >
72a7 :                 >skip3473
                        
72a7 : 68                       pla             ;check flags
72a8 : 29c3                     and #$c3        ;mask NV----ZC
72aa : c557                     cmp adrf
                                trap_ne         ;bad flags
72ac : f003            >        beq skip3475
                       >        trap            ;failed not equal (non zero)
72ae : 208574          >        jsr report_error
                       >
72b1 :                 >skip3475
                        
72b1 : 28                       plp
72b2 : 60                       rts
                        
                        ; target for the jump absolute test
72b3 : 88                       dey
72b4 : 88                       dey
72b5 :                  test_far
72b5 : 08                       php             ;either SP or Y count will fail, if we do not hit
72b6 : 88                       dey
72b7 : 88                       dey
72b8 : 88                       dey
72b9 : 28                       plp
                                trap_cs         ;flags loaded?
72ba : 9003            >        bcc skip3477
                       >        trap            ;failed carry set
72bc : 208574          >        jsr report_error
                       >
72bf :                 >skip3477
                        
                                trap_vs
72bf : 5003            >        bvc skip3479
                       >        trap            ;failed overflow set
72c1 : 208574          >        jsr report_error
                       >
72c4 :                 >skip3479
                        
                                trap_mi
72c4 : 1003            >        bpl skip3481
                       >        trap            ;failed minus (bit 7 set)
72c6 : 208574          >        jsr report_error
                       >
72c9 :                 >skip3481
                        
                                trap_eq
72c9 : d003            >        bne skip3483
                       >        trap           ;failed equal (zero)
72cb : 208574          >        jsr report_error
                       >
72ce :                 >skip3483
                        
72ce : c946                     cmp #'F'        ;registers loaded?
                                trap_ne
72d0 : f003            >        beq skip3485
                       >        trap            ;failed not equal (non zero)
72d2 : 208574          >        jsr report_error
                       >
72d5 :                 >skip3485
                        
72d5 : e041                     cpx #'A'
                                trap_ne
72d7 : f003            >        beq skip3487
                       >        trap            ;failed not equal (non zero)
72d9 : 208574          >        jsr report_error
                       >
72dc :                 >skip3487
                        
72dc : c04f                     cpy #('R'-3)
                                trap_ne
72de : f003            >        beq skip3489
                       >        trap            ;failed not equal (non zero)
72e0 : 208574          >        jsr report_error
                       >
72e3 :                 >skip3489
                        
72e3 : 48                       pha             ;save a,x
72e4 : 8a                       txa
72e5 : 48                       pha
72e6 : ba                       tsx
72e7 : e0fd                     cpx #$fd        ;check SP
                                trap_ne
72e9 : f003            >        beq skip3491
                       >        trap            ;failed not equal (non zero)
72eb : 208574          >        jsr report_error
                       >
72ee :                 >skip3491
                        
72ee : 68                       pla             ;restore x
72ef : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
72f0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
72f2 : 48              >            pha         ;use stack to load status
72f3 : 28              >            plp
                        
72f4 : 68                       pla             ;restore a
72f5 : e8                       inx             ;return registers with modifications
72f6 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
72f8 : 4c083a                   jmp far_ret
                        
                        ; target for the jump indirect test
72fb : 00                       align
72fc : 0573             ptr_tst_ind dw test_ind
72fe : 903a             ptr_ind_ret dw ind_ret
                                trap            ;runover protection
7300 : 208574          >        jsr report_error
                        
7303 : 88                       dey
7304 : 88                       dey
7305 :                  test_ind
7305 : 08                       php             ;either SP or Y count will fail, if we do not hit
7306 : 88                       dey
7307 : 88                       dey
7308 : 88                       dey
7309 : 28                       plp
                                trap_cs         ;flags loaded?
730a : 9003            >        bcc skip3496
                       >        trap            ;failed carry set
730c : 208574          >        jsr report_error
                       >
730f :                 >skip3496
                        
                                trap_vs
730f : 5003            >        bvc skip3498
                       >        trap            ;failed overflow set
7311 : 208574          >        jsr report_error
                       >
7314 :                 >skip3498
                        
                                trap_mi
7314 : 1003            >        bpl skip3500
                       >        trap            ;failed minus (bit 7 set)
7316 : 208574          >        jsr report_error
                       >
7319 :                 >skip3500
                        
                                trap_eq
7319 : d003            >        bne skip3502
                       >        trap           ;failed equal (zero)
731b : 208574          >        jsr report_error
                       >
731e :                 >skip3502
                        
731e : c949                     cmp #'I'        ;registers loaded?
                                trap_ne
7320 : f003            >        beq skip3504
                       >        trap            ;failed not equal (non zero)
7322 : 208574          >        jsr report_error
                       >
7325 :                 >skip3504
                        
7325 : e04e                     cpx #'N'
                                trap_ne
7327 : f003            >        beq skip3506
                       >        trap            ;failed not equal (non zero)
7329 : 208574          >        jsr report_error
                       >
732c :                 >skip3506
                        
732c : c041                     cpy #('D'-3)
                                trap_ne
732e : f003            >        beq skip3508
                       >        trap            ;failed not equal (non zero)
7330 : 208574          >        jsr report_error
                       >
7333 :                 >skip3508
                        
7333 : 48                       pha             ;save a,x
7334 : 8a                       txa
7335 : 48                       pha
7336 : ba                       tsx
7337 : e0fd                     cpx #$fd        ;check SP
                                trap_ne
7339 : f003            >        beq skip3510
                       >        trap            ;failed not equal (non zero)
733b : 208574          >        jsr report_error
                       >
733e :                 >skip3510
                        
733e : 68                       pla             ;restore x
733f : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
7340 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
7342 : 48              >            pha         ;use stack to load status
7343 : 28              >            plp
                        
7344 : 68                       pla             ;restore a
7345 : e8                       inx             ;return registers with modifications
7346 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
7348 : 6cfe72                   jmp (ptr_ind_ret)
                                trap            ;runover protection
734b : 208574          >        jsr report_error
                        
734e : 4c0034                   jmp start       ;catastrophic error - cannot continue
                        
                        ; target for the jump subroutine test
7351 : 88                       dey
7352 : 88                       dey
7353 :                  test_jsr
7353 : 08                       php             ;either SP or Y count will fail, if we do not hit
7354 : 88                       dey
7355 : 88                       dey
7356 : 88                       dey
7357 : 28                       plp
                                trap_cs         ;flags loaded?
7358 : 9003            >        bcc skip3515
                       >        trap            ;failed carry set
735a : 208574          >        jsr report_error
                       >
735d :                 >skip3515
                        
                                trap_vs
735d : 5003            >        bvc skip3517
                       >        trap            ;failed overflow set
735f : 208574          >        jsr report_error
                       >
7362 :                 >skip3517
                        
                                trap_mi
7362 : 1003            >        bpl skip3519
                       >        trap            ;failed minus (bit 7 set)
7364 : 208574          >        jsr report_error
                       >
7367 :                 >skip3519
                        
                                trap_eq
7367 : d003            >        bne skip3521
                       >        trap           ;failed equal (zero)
7369 : 208574          >        jsr report_error
                       >
736c :                 >skip3521
                        
736c : c94a                     cmp #'J'        ;registers loaded?
                                trap_ne
736e : f003            >        beq skip3523
                       >        trap            ;failed not equal (non zero)
7370 : 208574          >        jsr report_error
                       >
7373 :                 >skip3523
                        
7373 : e053                     cpx #'S'
                                trap_ne
7375 : f003            >        beq skip3525
                       >        trap            ;failed not equal (non zero)
7377 : 208574          >        jsr report_error
                       >
737a :                 >skip3525
                        
737a : c04f                     cpy #('R'-3)
                                trap_ne
737c : f003            >        beq skip3527
                       >        trap            ;failed not equal (non zero)
737e : 208574          >        jsr report_error
                       >
7381 :                 >skip3527
                        
7381 : 48                       pha             ;save a,x
7382 : 8a                       txa
7383 : 48                       pha
7384 : ba                       tsx             ;sp -4? (return addr,a,x)
7385 : e0fb                     cpx #$fb
                                trap_ne
7387 : f003            >        beq skip3529
                       >        trap            ;failed not equal (non zero)
7389 : 208574          >        jsr report_error
                       >
738c :                 >skip3529
                        
738c : adff01                   lda $1ff        ;propper return on stack
738f : c93a                     cmp #hi(jsr_ret)
                                trap_ne
7391 : f003            >        beq skip3531
                       >        trap            ;failed not equal (non zero)
7393 : 208574          >        jsr report_error
                       >
7396 :                 >skip3531
                        
7396 : adfe01                   lda $1fe
7399 : c9e1                     cmp #lo(jsr_ret)
                                trap_ne
739b : f003            >        beq skip3533
                       >        trap            ;failed not equal (non zero)
739d : 208574          >        jsr report_error
                       >
73a0 :                 >skip3533
                        
                                set_stat $ff
                       >            load_flag $ff
73a0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
73a2 : 48              >            pha         ;use stack to load status
73a3 : 28              >            plp
                        
73a4 : 68                       pla             ;pull x,a
73a5 : aa                       tax
73a6 : 68                       pla
73a7 : e8                       inx             ;return registers with modifications
73a8 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
73aa : 60                       rts
                                trap            ;runover protection
73ab : 208574          >        jsr report_error
                        
73ae : 4c0034                   jmp start       ;catastrophic error - cannot continue
                        
                        ;trap in case of unexpected IRQ, NMI, BRK, RESET - BRK test target
73b1 :                  nmi_trap
                                trap            ;check stack for conditions at NMI
73b1 : 208574          >        jsr report_error
                        
73b4 : 4c0034                   jmp start       ;catastrophic error - cannot continue
73b7 :                  res_trap
                                trap            ;unexpected RESET
73b7 : 208574          >        jsr report_error
                        
73ba : 4c0034                   jmp start       ;catastrophic error - cannot continue
                        
73bd : 88                       dey
73be : 88                       dey
73bf :                  irq_trap                ;BRK test or unextpected BRK or IRQ
73bf : 08                       php             ;either SP or Y count will fail, if we do not hit
73c0 : 88                       dey
73c1 : 88                       dey
73c2 : 88                       dey
                                ;next traps could be caused by unexpected BRK or IRQ
                                ;check stack for BREAK and originating location
                                ;possible jump/branch into weeds (uninitialized space)
73c3 : c9bd                     cmp #$ff-'B'    ;BRK pass 2 registers loaded?
73c5 : f05a                     beq break2
73c7 : c942                     cmp #'B'        ;BRK pass 1 registers loaded?
                                trap_ne
73c9 : f003            >        beq skip3540
                       >        trap            ;failed not equal (non zero)
73cb : 208574          >        jsr report_error
                       >
73ce :                 >skip3540
                        
73ce : e052                     cpx #'R'
                                trap_ne
73d0 : f003            >        beq skip3542
                       >        trap            ;failed not equal (non zero)
73d2 : 208574          >        jsr report_error
                       >
73d5 :                 >skip3542
                        
73d5 : c048                     cpy #'K'-3
                                trap_ne
73d7 : f003            >        beq skip3544
                       >        trap            ;failed not equal (non zero)
73d9 : 208574          >        jsr report_error
                       >
73dc :                 >skip3544
                        
73dc : 8550                     sta irq_a       ;save registers during break test
73de : 8651                     stx irq_x
73e0 : ba                       tsx             ;test break on stack
73e1 : bd0201                   lda $102,x
                                cmp_flag 0      ;break test should have B=1 & unused=1 on stack
73e4 : c930            >            cmp #(0      |fao)&m8    ;expected flags + always on bits
                        
                                trap_ne         ; - no break flag on stack
73e6 : f003            >        beq skip3547
                       >        trap            ;failed not equal (non zero)
73e8 : 208574          >        jsr report_error
                       >
73eb :                 >skip3547
                        
73eb : 68                       pla
                                cmp_flag intdis ;should have added interrupt disable
73ec : c934            >            cmp #(intdis |fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
73ee : f003            >        beq skip3550
                       >        trap            ;failed not equal (non zero)
73f0 : 208574          >        jsr report_error
                       >
73f3 :                 >skip3550
                        
73f3 : ba                       tsx
73f4 : e0fc                     cpx #$fc        ;sp -3? (return addr, flags)
                                trap_ne
73f6 : f003            >        beq skip3552
                       >        trap            ;failed not equal (non zero)
73f8 : 208574          >        jsr report_error
                       >
73fb :                 >skip3552
                        
73fb : adff01                   lda $1ff        ;propper return on stack
73fe : c93b                     cmp #hi(brk_ret0)
                                trap_ne
7400 : f003            >        beq skip3554
                       >        trap            ;failed not equal (non zero)
7402 : 208574          >        jsr report_error
                       >
7405 :                 >skip3554
                        
7405 : adfe01                   lda $1fe
7408 : c93e                     cmp #lo(brk_ret0)
                                trap_ne
740a : f003            >        beq skip3556
                       >        trap            ;failed not equal (non zero)
740c : 208574          >        jsr report_error
                       >
740f :                 >skip3556
                        
                                load_flag $ff
740f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                        
7411 : 48                       pha
7412 : a651                     ldx irq_x
7414 : e8                       inx             ;return registers with modifications
7415 : a550                     lda irq_a
7417 : 49aa                     eor #$aa
7419 : 28                       plp             ;N=1, V=1, Z=1, C=1 but original flags should be restored
741a : 40                       rti
                                trap            ;runover protection
741b : 208574          >        jsr report_error
                        
741e : 4c0034                   jmp start       ;catastrophic error - cannot continue
                        
7421 :                  break2                  ;BRK pass 2
7421 : e0ad                     cpx #$ff-'R'
                                trap_ne
7423 : f003            >        beq skip3560
                       >        trap            ;failed not equal (non zero)
7425 : 208574          >        jsr report_error
                       >
7428 :                 >skip3560
                        
7428 : c0b1                     cpy #$ff-'K'-3
                                trap_ne
742a : f003            >        beq skip3562
                       >        trap            ;failed not equal (non zero)
742c : 208574          >        jsr report_error
                       >
742f :                 >skip3562
                        
742f : 8550                     sta irq_a       ;save registers during break test
7431 : 8651                     stx irq_x
7433 : ba                       tsx             ;test break on stack
7434 : bd0201                   lda $102,x
                                cmp_flag $ff    ;break test should have B=1
7437 : c9ff            >            cmp #($ff    |fao)&m8    ;expected flags + always on bits
                        
                                trap_ne         ; - no break flag on stack
7439 : f003            >        beq skip3565
                       >        trap            ;failed not equal (non zero)
743b : 208574          >        jsr report_error
                       >
743e :                 >skip3565
                        
743e : 68                       pla
743f : 0908                     ora #decmode    ;ignore decmode cleared if 65c02
                                cmp_flag $ff    ;actual passed flags
7441 : c9ff            >            cmp #($ff    |fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
7443 : f003            >        beq skip3568
                       >        trap            ;failed not equal (non zero)
7445 : 208574          >        jsr report_error
                       >
7448 :                 >skip3568
                        
7448 : ba                       tsx
7449 : e0fc                     cpx #$fc        ;sp -3? (return addr, flags)
                                trap_ne
744b : f003            >        beq skip3570
                       >        trap            ;failed not equal (non zero)
744d : 208574          >        jsr report_error
                       >
7450 :                 >skip3570
                        
7450 : adff01                   lda $1ff        ;propper return on stack
7453 : c93b                     cmp #hi(brk_ret1)
                                trap_ne
7455 : f003            >        beq skip3572
                       >        trap            ;failed not equal (non zero)
7457 : 208574          >        jsr report_error
                       >
745a :                 >skip3572
                        
745a : adfe01                   lda $1fe
745d : c97c                     cmp #lo(brk_ret1)
                                trap_ne
745f : f003            >        beq skip3574
                       >        trap            ;failed not equal (non zero)
7461 : 208574          >        jsr report_error
                       >
7464 :                 >skip3574
                        
                                load_flag intdis
7464 : a904            >            lda #intdis             ;allow test to change I-flag (no mask)
                        
7466 : 48                       pha
7467 : a651                     ldx irq_x
7469 : e8                       inx             ;return registers with modifications
746a : a550                     lda irq_a
746c : 49aa                     eor #$aa
746e : 28                       plp             ;N=0, V=0, Z=0, C=0 but original flags should be restored
746f : 40                       rti
                                trap            ;runover protection
7470 : 208574          >        jsr report_error
                        
7473 : 4c0034                   jmp start       ;catastrophic error - cannot continue
                        
                            if report = 1
                                include "report.i65"
0001 =                  T_ATOM = 1
0002 =                  T_BEEB = 2
                        
                          if (TARGET = T_ATOM)
                        OSRDCH = $FFE3
                        OSWRCH = $FFF4
                          else
                            if (TARGET = T_BEEB)
ffe0 =                  OSRDCH = $FFE0
ffee =                  OSWRCH = $FFEE
                            else
                        ERROR TARGET must be 1 or 2
                            endif
                          endif
                        
                        
                        ;**** report 6502 funtional test errors to standard I/O ****
                        ;
                        ;this include file is part of the 6502 functional tests
                        ;it is used when you configure report = 1 in the tests
                        ;
                        ;to adopt the standard output vectors of your test environment
                        ;you must modify the rchar and rget subroutines in this include
                        ;
                        ;I/O hardware may have to be initialized in report_init
                        
                        ;print message macro - \1 = message location
                        rprt    macro
                                ldx #0
                                lda \1
                        loop\?
                                jsr rchar
                                inx
                                lda \1,x
                                bne loop\?
                                endm
                        
                        ;initialize I/O as required (example: configure & enable ACIA)
7476 :                  report_init
                                ;nothing to initialize
                                rprt rmsg_start
7476 : a200            >        ldx #0
7478 : ad9375          >        lda rmsg_start
747b :                 >loop3578
747b : 208f75          >        jsr rchar
747e : e8              >        inx
747f : bd9375          >        lda rmsg_start,x
7482 : d0f7            >        bne loop3578
                        
7484 : 60                       rts
                                
                        ;show stack (with saved registers), zeropage and absolute memory workspace
                        ;after an error was trapped in the test program
7485 :                  report_error
                        ;save registers
7485 : 08                       php
7486 : 48                       pha
7487 : 8a                       txa
7488 : 48                       pha
7489 : 98                       tya
748a : 48                       pha
748b : d8                       cld
                        ;show stack with index to registers at error
                                rprt rmsg_stack
748c : a200            >        ldx #0
748e : ada775          >        lda rmsg_stack
7491 :                 >loop3579
7491 : 208f75          >        jsr rchar
7494 : e8              >        inx
7495 : bda775          >        lda rmsg_stack,x
7498 : d0f7            >        bne loop3579
                        
749a : ba                       tsx
749b : e8                       inx
749c : a901                     lda #1      ;address high
749e : 207b75                   jsr rhex
74a1 : 8a                       txa         ;address low
74a2 : 207b75                   jsr rhex
74a5 : 207775           rstack  jsr rspace
74a8 : bd0001                   lda $100,x  ;stack data
74ab : 207b75                   jsr rhex
74ae : e8                       inx
74af : d0f4                     bne rstack
74b1 : 206e75                   jsr rcrlf   ;new line
                        ;show zero page workspace
74b4 : a900                     lda #0
74b6 : 207b75                   jsr rhex
74b9 : a952                     lda #zpt
74bb : aa                       tax
74bc : 207b75                   jsr rhex
74bf : 207775           rzp     jsr rspace
74c2 : b500                     lda 0,x
74c4 : 207b75                   jsr rhex
74c7 : e8                       inx
74c8 : e059                     cpx #zp_bss
74ca : d0f3                     bne rzp
74cc : 206e75                   jsr rcrlf
                        ;show absolute workspace
74cf : a932                     lda #hi(data_segment)
74d1 : 207b75                   jsr rhex
74d4 : a900                     lda #lo(data_segment)
74d6 : 207b75                   jsr rhex
74d9 : a200                     ldx #0
74db : 207775           rabs    jsr rspace
74de : bd0032                   lda data_segment,x
74e1 : 207b75                   jsr rhex
74e4 : e8                       inx
74e5 : e009                     cpx #(data_bss-data_segment)
74e7 : d0f2                     bne rabs
                        ;ask to continue
                                rprt rmsg_cont
74e9 : a200            >        ldx #0
74eb : adc375          >        lda rmsg_cont
74ee :                 >loop3580
74ee : 208f75          >        jsr rchar
74f1 : e8              >        inx
74f2 : bdc375          >        lda rmsg_cont,x
74f5 : d0f7            >        bne loop3580
                        
74f7 : 206475           rerr1   jsr rget
74fa : c953                     cmp #'S'
74fc : f00b                     beq rskip
74fe : c943                     cmp #'C'
7500 : d0f5                     bne rerr1        
                        ;restore registers
7502 : 68                       pla
7503 : a8                       tay
7504 : 68                       pla
7505 : aa                       tax
7506 : 68                       pla 
7507 : 28                       plp
7508 : 60                       rts
                        ;skip the current test
7509 : a9f0             rskip   lda #$f0            ;already end of tests?
750b : cd0032                   cmp test_case
750e : f0e7                     beq rerr1           ;skip is not available
7510 : a2ff                     ldx #$ff            ;clear stack
7512 : 9a                       txs
7513 : ee0032                   inc test_case       ;next test
7516 : a900                     lda #lo(start)      ;find begin of test
7518 : 8552                     sta zpt
751a : a934                     lda #hi(start)
751c : 8553                     sta zpt+1
751e : a004             rskipl1 ldy #4              ;search pattern
7520 : b152             rskipl2 lda (zpt),y         ;next byte
7522 : d94975                   cmp rmark,y
7525 : d00a                     bne rskipnx         ;no match
7527 : 88                       dey
7528 : 300f                     bmi rskipf          ;found pattern        
752a : c001                     cpy #1              ;skip immediate value
752c : d0f2                     bne rskipl2
752e : 88                       dey
752f : f0ef                     beq rskipl2
                                
7531 : e652             rskipnx inc zpt             ;next RAM location
7533 : d0e9                     bne rskipl1
7535 : e653                     inc zpt+1
7537 : d0e5                     bne rskipl1
                        
7539 : a001             rskipf  ldy #1              ;pattern found - check test number
753b : b152                     lda (zpt),y         ;test number
753d : c9f0                     cmp #$f0            ;end of last test?
753f : f005                     beq rskipe          ;ask to rerun all
7541 : cd0032                   cmp test_case       ;is next test?
7544 : d0eb                     bne rskipnx         ;continue searching
7546 : 6c5200           rskipe  jmp (zpt)           ;start next test or rerun at end of tests
                                
7549 : a900             rmark   lda #0              ;begin of test search pattern
754b : 8d0032                   sta test_case
                        
                        ;show test has ended, ask to repeat
754e :                  report_success
                            if rep_int = 1
                                rprt rmsg_priority
                                lda data_segment    ;show interrupt sequence
                                jsr rhex
                                jsr rspace
                                lda data_segment+1
                                jsr rhex
                                jsr rspace
                                lda data_segment+2
                                jsr rhex
                            endif
                                rprt rmsg_success
754e : a200            >        ldx #0
7550 : adf575          >        lda rmsg_success
7553 :                 >loop3581
7553 : 208f75          >        jsr rchar
7556 : e8              >        inx
7557 : bdf575          >        lda rmsg_success,x
755a : d0f7            >        bne loop3581
                        
755c : 206475           rsuc1   jsr rget
755f : c952                     cmp #'R'
7561 : d0f9                     bne rsuc1        
7563 : 60                       rts
                        
                        ;input subroutine
                        ;get a character from standard input 
                        ;adjust according to the needs in your test environment
7564 :                  rget                ;get character in A
7564 : 20e0ff                   jsr OSRDCH  ;example: OSRDCH on a Beeb/Atom
                        ;rget1
                        ;        lda $bff1   ;wait RDRF
                        ;        and #8
                        ;        beq rget1
                        ;not a real ACIA - so RDRF is not checked
                        ;        lda $bff0   ;read acia rx reg
                        ;       lda $f004   ;Kowalski simulator default
                        ;the load can be replaced by a call to a kernal routine
                        ;        jsr $ffcf   ;example: CHRIN for a C64
7567 : c961                     cmp #'a'    ;lower case
7569 : 9002                     bcc rget1
756b : 295f                     and #$5f    ;convert to upper case
756d : 60               rget1   rts
                        
                        ;output subroutines
756e : a90a             rcrlf   lda #10
7570 : 208f75                   jsr rchar
7573 : a90d                     lda #13
7575 : d018                     bne rchar
                        
7577 : a920             rspace  lda #' '
7579 : d014                     bne rchar
                                
757b : 48               rhex    pha         ;report hex byte in A
757c : 4a                       lsr a       ;high nibble first
757d : 4a                       lsr a
757e : 4a                       lsr a
757f : 4a                       lsr a
7580 : 208675                   jsr rnib
7583 : 68                       pla         ;now low nibble
7584 : 290f                     and #$f
                        
7586 : 18               rnib    clc         ;report nibble in A
7587 : 6930                     adc #'0'    ;make printable 0-9
7589 : c93a                     cmp #'9'+1
758b : 9002                     bcc rchar
758d : 6906                     adc #6      ;make printable A-F
                        
                        ;send a character to standard output 
                        ;adjust according to the needs in your test environment
                        ;register X needs to be preserved!
758f :                  rchar               ;report character in A
758f : 20eeff                   jsr OSWRCH  ;example: OSWRCH on a Beeb/Atom
                        ;        pha         ;wait TDRF
                        ;rchar1  lda $bff1
                        ;        and #$10
                        ;        beq rchar1
                        ;        pla
                        ;not a real ACIA - so TDRF is not checked
                        ;        sta $bff0   ;write acia tx reg
                        ;        sta $f001   ;Kowalski simulator default
                        ;the store can be replaced by a call to a kernal routine
                        ;        jsr $ffd2   ;example: CHROUT for a C64
7592 : 60                       rts
                        
7593 :                  rmsg_start
7593 : 0a0d5374617274..         db  10,13,"Started testing",10,13,0
75a7 :                  rmsg_stack
75a7 : 0a0d7265677320..         db  10,13,"regs Y  X  A  PS PCLPCH",10,13,0
75c3 :                  rmsg_cont
75c3 : 0a0d7072657373..         db  10,13,"press C to continue or S to skip current test",10,13,0
75f5 :                  rmsg_success
75f5 : 0a0d416c6c2074..         db  10,13,"All tests completed, press R to repeat",10,13,0
                            if rep_int = 1
                        rmsg_priority
                                db  10,13,"interrupt sequence (NMI IRQ BRK) ",0
                            endif
                           
                            endif
                        
                        ;copy of data to initialize BSS segment
                            if load_data_direct != 1
7620 :                  zp_init
7620 : 8001             zps_    db  $80,1           ;additional shift pattern to test zero result & flag
7622 : c3824100         zp1_    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
7626 : 7f               zp7f_   db  $7f             ;test pattern for compare
                        ;logical zeropage operands
7627 : 001f7180         zpOR_   db  0,$1f,$71,$80   ;test pattern for OR
762b : 0fff7f80         zpAN_   db  $0f,$ff,$7f,$80 ;test pattern for AND
762f : ff0f8f8f         zpEO_   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
7633 : 1832             ind1_   dw  abs1            ;indirect pointer to pattern in absolute memory
7635 : 1932                     dw  abs1+1
7637 : 1a32                     dw  abs1+2
7639 : 1b32                     dw  abs1+3
763b : 1c32                     dw  abs7f
763d : 2031             inw1_   dw  abs1-$f8        ;indirect pointer for wrap-test pattern
763f : 0332             indt_   dw  abst            ;indirect pointer to store area in absolute memory
7641 : 0432                     dw  abst+1
7643 : 0532                     dw  abst+2
7645 : 0632                     dw  abst+3
7647 : 0b31             inwt_   dw  abst-$f8        ;indirect pointer for wrap-test store
7649 : 5f32             indAN_  dw  absAN           ;indirect pointer to AND pattern in absolute memory
764b : 6032                     dw  absAN+1
764d : 6132                     dw  absAN+2
764f : 6232                     dw  absAN+3
7651 : 6332             indEO_  dw  absEO           ;indirect pointer to EOR pattern in absolute memory
7653 : 6432                     dw  absEO+1
7655 : 6532                     dw  absEO+2
7657 : 6632                     dw  absEO+3
7659 : 5b32             indOR_  dw  absOR           ;indirect pointer to OR pattern in absolute memory
765b : 5c32                     dw  absOR+1
765d : 5d32                     dw  absOR+2
765f : 5e32                     dw  absOR+3
                        ;add/subtract indirect pointers
7661 : 0332             adi2_   dw  ada2            ;indirect pointer to operand 2 in absolute memory
7663 : 0432             sbi2_   dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
7665 : 0431             adiy2_  dw  ada2-$ff        ;with offset for indirect indexed
7667 : 0531             sbiy2_  dw  sba2-$ff
7669 :                  zp_end
                            if (zp_end - zp_init) != (zp_bss_end - zp_bss)
                                ;force assembler error if size is different
                                ERROR ERROR ERROR   ;mismatch between bss and zeropage data
                            endif
7669 :                  data_init
7669 : 2900             ex_and_ and #0              ;execute immediate opcodes
766b : 60                       rts
766c : 4900             ex_eor_ eor #0              ;execute immediate opcodes
766e : 60                       rts
766f : 0900             ex_ora_ ora #0              ;execute immediate opcodes
7671 : 60                       rts
7672 : 6900             ex_adc_ adc #0              ;execute immediate opcodes
7674 : 60                       rts
7675 : e900             ex_sbc_ sbc #0              ;execute immediate opcodes
7677 : 60                       rts
                        ;zps    db  $80,1           ;additional shift patterns test zero result & flag
7678 : c3824100         abs1_   db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
767c : 7f               abs7f_  db  $7f             ;test pattern for compare
                        ;loads
767d : 80800002         fLDx_   db  fn,fn,0,fz              ;expected flags for load
                        ;shifts
7681 :                  rASL_                               ;expected result ASL & ROL -carry
7681 : 000286048200     rROL_   db  0,2,$86,$04,$82,0
7687 : 010387058301     rROLc_  db  1,3,$87,$05,$83,1       ;expected result ROL +carry
768d :                  rLSR_                               ;expected result LSR & ROR -carry
768d : 400061412000     rROR_   db  $40,0,$61,$41,$20,0
7693 : c080e1c1a080     rRORc_  db  $c0,$80,$e1,$c1,$a0,$80 ;expected result ROR +carry
7699 :                  fASL_                               ;expected flags for shifts
7699 : 030081018002     fROL_   db  fzc,0,fnc,fc,fn,fz      ;no carry in
769f : 010081018000     fROLc_  db  fc,0,fnc,fc,fn,0        ;carry in
76a5 :                  fLSR_
76a5 : 000301000102     fROR_   db  0,fzc,fc,0,fc,fz        ;no carry in
76ab : 808181808180     fRORc_  db  fn,fnc,fnc,fn,fnc,fn    ;carry in
                        ;increments (decrements)
76b1 : 7f80ff0001       rINC_   db  $7f,$80,$ff,0,1         ;expected result for INC/DEC
76b6 : 0080800200       fINC_   db  0,fn,fn,fz,0            ;expected flags for INC/DEC
                        ;logical memory operand
76bb : 001f7180         absOR_  db  0,$1f,$71,$80           ;test pattern for OR
76bf : 0fff7f80         absAN_  db  $0f,$ff,$7f,$80         ;test pattern for AND
76c3 : ff0f8f8f         absEO_  db  $ff,$0f,$8f,$8f         ;test pattern for EOR
                        ;logical accu operand
76c7 : 00f11f00         absORa_ db  0,$f1,$1f,0             ;test pattern for OR
76cb : f0ffffff         absANa_ db  $f0,$ff,$ff,$ff         ;test pattern for AND
76cf : fff0f00f         absEOa_ db  $ff,$f0,$f0,$0f         ;test pattern for EOR
                        ;logical results
76d3 : 00ff7f80         absrlo_ db  0,$ff,$7f,$80
76d7 : 02800080         absflo_ db  fz,fn,0,fn
76db :                  data_end
                            if (data_end - data_init) != (data_bss_end - data_bss)
                                ;force assembler error if size is different
                                ERROR ERROR ERROR   ;mismatch between bss and data
                            endif
                        
76db :                  vec_init
76db : b173                     dw  nmi_trap
76dd : b773                     dw  res_trap
76df : bf73                     dw  irq_trap
fffa =                  vec_bss equ $fffa
                            endif                   ;end of RAM init data
                        
                            if (load_data_direct = 1) & (ROM_vectors = 1)
                                org $fffa       ;vectors
                                dw  nmi_trap
                                dw  res_trap
                                dw  irq_trap
                            endif
                        
fffa =                          end start
                        
No errors in pass 2.
Wrote binary from address $3400 through $76e0.
Total size 17121 bytes.
Program start address is at $3400 (13312).
