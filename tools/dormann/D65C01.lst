AS65 Assembler for R6502 [1.42].  Copyright 1994-2007, Frank A. Kingswood                                                Page    1
------------------------------------------------ 65C02_extended_opcodes_test.a65c ------------------------------------------------

3125 lines read, no errors in pass 1.
                        ;
                        ; 6 5 C 0 2   E X T E N D E D   O P C O D E S   T E S T
                        ;
                        ; Copyright (C) 2013-2017  Klaus Dormann
                        ;
                        ; This program is free software: you can redistribute it and/or modify
                        ; it under the terms of the GNU General Public License as published by
                        ; the Free Software Foundation, either version 3 of the License, or
                        ; (at your option) any later version.
                        ;
                        ; This program is distributed in the hope that it will be useful,
                        ; but WITHOUT ANY WARRANTY; without even the implied warranty of
                        ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        ; GNU General Public License for more details.
                        ;
                        ; You should have received a copy of the GNU General Public License
                        ; along with this program.  If not, see <http://www.gnu.org/licenses/>.
                        
                        
                        ; This program is designed to test all additional 65C02 opcodes, addressing
                        ; modes and functionality not available in the NMOS version of the 6502.
                        ; The 6502_functional_test is a prerequisite to this test.
                        ; NMI, IRQ, STP & WAI are covered in the 6502_interrupt_test.
                        ; 
                        ; version 04-dec-2017
                        ; contact info at http://2m5.de or email K@2m5.de
                        ;
                        ; assembled with AS65 from http://www.kingswood-consulting.co.uk/assemblers/
                        ; command line switches: -l -m -s2 -w -x -h0
                        ;                         |  |  |   |  |  no page headers in listing
                        ;                         |  |  |   |  65C02 extensions
                        ;                         |  |  |   wide listing (133 char/col)
                        ;                         |  |  write intel hex file instead of binary
                        ;                         |  expand macros in listing
                        ;                         generate pass2 listing
                        ;
                        ; No IO - should be run from a monitor with access to registers.
                        ; To run load intel hex image with a load command, than alter PC to 400 hex
                        ; (code_segment) and enter a go command.
                        ; Loop on program counter determines error or successful completion of test.
                        ; Check listing for relevant traps (jump/branch *).
                        ; Please note that in early tests some instructions will have to be used before
                        ; they are actually tested!
                        ;
                        ; RESET, NMI or IRQ should not occur and will be trapped if vectors are enabled.
                        ; Tests documented behavior of the original 65C02 only!
                        ; Decimal ops will only be tested with valid BCD operands and the V flag will
                        ; be ignored as it is absolutely useless in decimal mode.
                        ;
                        ; Debugging hints:
                        ;     Most of the code is written sequentially. if you hit a trap, check the
                        ;   immediately preceeding code for the instruction to be tested. Results are
                        ;   tested first, flags are checked second by pushing them onto the stack and
                        ;   pulling them to the accumulator after the result was checked. The "real"
                        ;   flags are no longer valid for the tested instruction at this time!
                        ;     If the tested instruction was indexed, the relevant index (X or Y) must
                        ;   also be checked. Opposed to the flags, X and Y registers are still valid.
                        ;
                        ; versions:
                        ;   19-jul-2013  1st version distributed for testing
                        ;   23-jul-2013  fixed BRA out of range due to larger trap macros
                        ;                added RAM integrity check
                        ;   16-aug-2013  added error report to standard output option
                        ;   23-aug-2015  change revoked
                        ;   24-aug-2015  all self modifying immediate opcodes now execute in data RAM
                        ;   28-aug-2015  fixed decimal adc/sbc immediate only testing carry
                        ;   09-feb-2017  fixed RMB/SMB tested when they shouldn't be tested
                        ;   04-dec-2017  fixed BRK not tested for actually going through the IRQ vector
                        ;                added option to skip the remainder of a failing test
                        ;                in report.i65
                        ;                added skip override to undefined opcode as NOP test
                        
                        
                        ; C O N F I G U R A T I O N
                        
                        ;ROM_vectors writable (0=no, 1=yes)
                        ;if ROM vectors can not be used interrupts will not be trapped
                        ;as a consequence BRK can not be tested but will be emulated to test RTI
0000 =                  ROM_vectors = 0
                        
                        ;load_data_direct (0=move from code segment, 1=load directly)
                        ;loading directly is preferred but may not be supported by your platform
                        ;0 produces only consecutive object code, 1 is not suitable for a binary image
0000 =                  load_data_direct = 0
                        
                        ;I_flag behavior (0=force enabled, 1=force disabled, 2=prohibit change, 3=allow
                        ;change) 2 requires extra code and is not recommended.
0003 =                  I_flag = 3
                        
                        ;configure memory - try to stay away from memory used by the system
                        ;zero_page memory start address, $4e (78) consecutive Bytes required
                        ;                                add 2 if I_flag = 2
0050 =                  zero_page = $50
                        
                        ;data_segment memory start address, $63 (99) consecutive Bytes required
                        ; + 12 Bytes at data_segment + $f9 (JMP indirect page cross test)
3200 =                  data_segment = $3200
                            if (data_segment & $ff) != 0
                                ERROR ERROR ERROR low byte of data_segment MUST be $00 !!
                            endif  
                        
                        ;code_segment memory start address, 10kB of consecutive space required
                        ;                                   add 1 kB if I_flag = 2
3400 =                  code_segment = $3400
                        
                        ;added WDC only opcodes WAI & STP (0=test as NOPs, >0=no test)
0000 =                  wdc_op = WDC_OP
                        
                        ;added Rockwell & WDC opcodes BBR, BBS, RMB & SMB
                        ;(0=test as NOPs, 1=full test, >1=no test) 
0001 =                  rkwl_wdc_op = RKWL_OP
                        
                        ;skip testing all undefined opcodes override
                        ;0=test as NOP, >0=skip
0000 =                  skip_nop = 0
                        
                        ;report errors through I/O channel (0=use standard self trap loops, 1=include
                        ;report.i65 as I/O channel, add 3 kB)
0001 =                  report = 1
                        
                        ;RAM integrity test option. Checks for undesired RAM writes.
                        ;set lowest non RAM or RAM mirror address page (-1=disable, 0=64k, $40=16k)
                        ;leave disabled if a monitor, OS or background interrupt is allowed to alter RAM
ffff =                  ram_top = -1
                        
                                noopt       ;do not take shortcuts
                                
                        ;macros for error & success traps to allow user modification
                        ;example:
                        ;trap    macro
                        ;        jsr my_error_handler
                        ;        endm
                        ;trap_eq macro
                        ;        bne skip\?
                        ;        trap           ;failed equal (zero)
                        ;skip\?
                        ;        endm
                        ;
                        ; my_error_handler should pop the calling address from the stack and report it.
                        ; putting larger portions of code (more than 3 bytes) inside the trap macro
                        ; may lead to branch range problems for some tests.
                            if report = 0
                        trap    macro
                                jmp *           ;failed anyway
                                endm
                        trap_eq macro
                                beq *           ;failed equal (zero)
                                endm
                        trap_ne macro
                                bne *           ;failed not equal (non zero)
                                endm
                        trap_cs macro
                                bcs *           ;failed carry set
                                endm
                        trap_cc macro
                                bcc *           ;failed carry clear
                                endm
                        trap_mi macro
                                bmi *           ;failed minus (bit 7 set)
                                endm
                        trap_pl macro
                                bpl *           ;failed plus (bit 7 clear)
                                endm
                        trap_vs macro
                                bvs *           ;failed overflow set
                                endm
                        trap_vc macro
                                bvc *           ;failed overflow clear
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                                jmp *           ;test passed, no errors
                                endm
                            endif
                            if report = 1
                        trap    macro
                                jsr report_error
                                endm
                        trap_eq macro
                                bne skip\?
                                trap           ;failed equal (zero)
                        skip\?
                                endm
                        trap_ne macro
                                beq skip\?
                                trap            ;failed not equal (non zero)
                        skip\?
                                endm
                        trap_cs macro
                                bcc skip\?
                                trap            ;failed carry set
                        skip\?
                                endm
                        trap_cc macro
                                bcs skip\?
                                trap            ;failed carry clear
                        skip\?
                                endm
                        trap_mi macro
                                bpl skip\?
                                trap            ;failed minus (bit 7 set)
                        skip\?
                                endm
                        trap_pl macro
                                bmi skip\?
                                trap            ;failed plus (bit 7 clear)
                        skip\?
                                endm
                        trap_vs macro
                                bvc skip\?
                                trap            ;failed overflow set
                        skip\?
                                endm
                        trap_vc macro
                                bvs skip\?
                                trap            ;failed overflow clear
                        skip\?
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                                jsr report_success
                                endm
                            endif
                        
                        
0001 =                  carry   equ %00000001   ;flag bits in status
0002 =                  zero    equ %00000010
0004 =                  intdis  equ %00000100
0008 =                  decmode equ %00001000
0010 =                  break   equ %00010000
0020 =                  reserv  equ %00100000
0040 =                  overfl  equ %01000000
0080 =                  minus   equ %10000000
                        
0001 =                  fc      equ carry
0002 =                  fz      equ zero
0003 =                  fzc     equ carry+zero
0040 =                  fv      equ overfl
0042 =                  fvz     equ overfl+zero
0080 =                  fn      equ minus
0081 =                  fnc     equ minus+carry
0082 =                  fnz     equ minus+zero
0083 =                  fnzc    equ minus+zero+carry
00c0 =                  fnv     equ minus+overfl
                        
0030 =                  fao     equ break+reserv    ;bits always on after PHP, BRK
0034 =                  fai     equ fao+intdis      ;+ forced interrupt disable
00ff =                  m8      equ $ff             ;8 bit mask
00fb =                  m8i     equ $ff&~intdis     ;8 bit mask - interrupt disable
                        
                        ;macros to allow masking of status bits.
                        ;masking of interrupt enable/disable on load and compare
                        ;masking of always on bits after PHP or BRK (unused & break) on compare
                                if I_flag = 0
                        load_flag   macro
                                    lda #\1&m8i         ;force enable interrupts (mask I)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8i   ;I_flag is always enabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 1
                        load_flag   macro
                                    lda #\1|intdis      ;force disable interrupts
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fai)&m8    ;I_flag is always disabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1|fai)       ;invert expected flags + always on bits + I
                                    endm
                                endif
                                if I_flag = 2
                        load_flag   macro
                                    lda #\1
                                    ora flag_I_on       ;restore I-flag
                                    and flag_I_off
                                    endm
                        cmp_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    cmp #(\1|fao)&m8i   ;expected flags + always on bits, mask I
                                    endm
                        eor_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 3
                        load_flag   macro
                                    lda #\1             ;allow test to change I-flag (no mask)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8    ;expected flags + always on bits
                                    endm
                        eor_flag    macro
                                    eor #\1|fao         ;invert expected flags + always on bits
                                    endm
                                endif
                        
                        ;macros to set (register|memory|zeropage) & status
                        set_stat    macro       ;setting flags in the processor status register
                                    load_flag \1
                                    pha         ;use stack to load status
                                    plp
                                    endm
                        
                        set_a       macro       ;precharging accu & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda #\1     ;precharge accu
                                    plp
                                    endm
                        
                        set_x       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldx #\1     ;precharge index x
                                    plp
                                    endm
                        
                        set_y       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldy #\1     ;precharge index y
                                    plp
                                    endm
                        
                        set_ax      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;precharge accu
                                    plp
                                    endm
                        
                        set_ay      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,y    ;precharge accu
                                    plp
                                    endm
                        
                        set_z       macro       ;precharging indexed zp & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to zeropage
                                    sta zpt
                                    plp
                                    endm
                        
                        set_zx      macro       ;precharging zp,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed zeropage
                                    sta zpt,x
                                    plp
                                    endm
                        
                        set_abs     macro       ;precharging indexed memory & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to memory
                                    sta abst
                                    plp
                                    endm
                        
                        set_absx    macro       ;precharging abs,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed memory
                                    sta abst,x
                                    plp
                                    endm
                        
                        ;macros to test (register|memory|zeropage) & status & (mask)
                        tst_stat    macro       ;testing flags in the processor status register
                                    php         ;save status
                                    pla         ;use stack to retrieve status
                                    pha
                                    cmp_flag \1
                                    trap_ne
                                    plp         ;restore status
                                    endm
                                    
                        tst_a       macro       ;testing result in accu & flags
                                    php         ;save flags
                                    cmp #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_as      macro       ;testing result in accu & flags, save accu
                                    pha
                                    php         ;save flags
                                    cmp #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    pla
                                    endm
                        
                        tst_x       macro       ;testing result in x index & flags
                                    php         ;save flags
                                    cpx #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_y       macro       ;testing result in y index & flags
                                    php         ;save flags
                                    cpy #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_ax      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne     ;
                                    endm
                        
                        tst_ay      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,y    ;test result
                                    trap_ne     ;
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,y    ;test flags
                                    trap_ne
                                    endm
                                
                        tst_z       macro       ;indexed testing result in zp & flags
                                    php         ;save flags
                                    lda zpt
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_zx      macro       ;testing result in zp,x & flags
                                    php         ;save flags
                                    lda zpt,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_abs     macro       ;indexed testing result in memory & flags
                                    php         ;save flags
                                    lda abst
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_absx    macro       ;testing result in abs,x & flags
                                    php         ;save flags
                                    lda abst,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                                    
                        ; RAM integrity test
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                        ;   uses zpt word as indirect pointer, zpt+2 word as checksum
                                if ram_top > -1
                        check_ram   macro 
                                    cld
                                    lda #0
                                    sta zpt         ;set low byte of indirect pointer
                                    sta zpt+3       ;checksum high byte
                                    ldx #11         ;reset modifiable RAM
                        ccs1\?      sta jxi_tab,x   ;JMP indirect page cross area
                                    dex
                                    bpl ccs1\?
                                    clc
                                    ldx #zp_bss-zero_page ;zeropage - write test area
                        ccs3\?      adc zero_page,x
                                    bcc ccs2\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs2\?      inx
                                    bne ccs3\?
                                    ldx #hi(abs1)   ;set high byte of indirect pointer
                                    stx zpt+1
                                    ldy #lo(abs1)   ;data after write & execute test area
                        ccs5\?      adc (zpt),y
                                    bcc ccs4\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs4\?      iny
                                    bne ccs5\?
                                    inx             ;advance RAM high address
                                    stx zpt+1
                                    cpx #ram_top
                                    bne ccs5\?
                                    sta zpt+2       ;checksum low is
                                    cmp ram_chksm   ;checksum low expected
                                    trap_ne         ;checksum mismatch
                                    lda zpt+3       ;checksum high is
                                    cmp ram_chksm+1 ;checksum high expected
                                    trap_ne         ;checksum mismatch
                                    endm            
                                else
                        check_ram   macro
                                    ;RAM check disabled - RAM size not set
                                    endm
                                endif
                                    
                        next_test   macro           ;make sure, tests don't jump the fence
                                    lda test_case   ;previous test
                                    cmp #test_num
                                    trap_ne         ;test is out of sequence
                        test_num = test_num + 1
                                    lda #test_num   ;*** next tests' number
                                    sta test_case
                                    ;check_ram       ;uncomment to find altered RAM after each test
                                    endm
                        
                            if load_data_direct = 1
                                data
                            else
                                bss                 ;uninitialized segment, copy of data at end of code!
                            endif
0050 =                          org zero_page
                        ;break test interrupt save
0050 =                  irq_a   ds  1               ;a register
0051 =                  irq_x   ds  1               ;x register
                            if I_flag = 2
                        ;masking for I bit in status
                        flag_I_on   ds  1           ;or mask to load flags   
                        flag_I_off  ds  1           ;and mask to load flags
                            endif
0052 =                  zpt                         ;5 bytes store/modify test area
                        ;add/subtract operand generation and result/flag prediction
0052 =                  adfc    ds  1               ;carry flag before op
0053 =                  ad1     ds  1               ;operand 1 - accumulator
0054 =                  ad2     ds  1               ;operand 2 - memory / immediate
0055 =                  adrl    ds  1               ;expected result bits 0-7
0056 =                  adrh    ds  1               ;expected result bit 8 (carry)
0057 =                  adrf    ds  1               ;expected flags NV0000ZC (-V in decimal mode)
0058 =                  sb2     ds  1               ;operand 2 complemented for subtract
0059 =                  zp_bss
0059 =                  zp1     db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
005d =                  zp7f    db  $7f             ;test pattern for compare  
                        ;logical zeropage operands
005e =                  zpOR    db  0,$1f,$71,$80   ;test pattern for OR
0062 =                  zpAN    db  $0f,$ff,$7f,$80 ;test pattern for AND
0066 =                  zpEO    db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
006a =                  ind1    dw  abs1            ;indirect pointer to pattern in absolute memory
006c =                          dw  abs1+1
006e =                          dw  abs1+2
0070 =                          dw  abs1+3
0072 =                          dw  abs7f
0074 =                  inw1    dw  abs1-$f8        ;indirect pointer for wrap-test pattern
0076 =                  indt    dw  abst            ;indirect pointer to store area in absolute memory
0078 =                          dw  abst+1
007a =                          dw  abst+2
007c =                          dw  abst+3
007e =                  inwt    dw  abst-$f8        ;indirect pointer for wrap-test store
0080 =                  indAN   dw  absAN           ;indirect pointer to AND pattern in absolute memory
0082 =                          dw  absAN+1
0084 =                          dw  absAN+2
0086 =                          dw  absAN+3
0088 =                  indEO   dw  absEO           ;indirect pointer to EOR pattern in absolute memory
008a =                          dw  absEO+1
008c =                          dw  absEO+2
008e =                          dw  absEO+3
0090 =                  indOR   dw  absOR           ;indirect pointer to OR pattern in absolute memory
0092 =                          dw  absOR+1
0094 =                          dw  absOR+2
0096 =                          dw  absOR+3
                        ;add/subtract indirect pointers
0098 =                  adi2    dw  ada2            ;indirect pointer to operand 2 in absolute memory
009a =                  sbi2    dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
009c =                  adiy2   dw  ada2-$ff        ;with offset for indirect indexed
009e =                  sbiy2   dw  sba2-$ff
00a0 =                  zp_bss_end
                            
3200 =                          org data_segment
3200 =                  pg_x    ds  2               ;high JMP indirect address for page cross bug
3202 =                  test_case   ds  1           ;current test number
3203 =                  ram_chksm   ds  2           ;checksum for RAM integrity test
                        ;add/subtract operand copy - abs tests write area
3205 =                  abst                        ;5 bytes store/modify test area
3205 =                  ada2    ds  1               ;operand 2
3206 =                  sba2    ds  1               ;operand 2 complemented for subtract
3207 =                          ds  3               ;fill remaining bytes
320a =                  data_bss
                            if load_data_direct = 1
                        ex_adci adc #0              ;execute immediate opcodes
                                rts
                        ex_sbci sbc #0              ;execute immediate opcodes
                                rts
                            else
320a =                  ex_adci ds  3
320d =                  ex_sbci ds  3
                            endif
3210 =                  abs1    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
3214 =                  abs7f   db  $7f             ;test pattern for compare
                        ;loads
3215 =                  fLDx    db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
3219 =                  rASL                        ;expected result ASL & ROL -carry  
3219 =                  rROL    db  $86,$04,$82,0   ; "
321d =                  rROLc   db  $87,$05,$83,1   ;expected result ROL +carry
3221 =                  rLSR                        ;expected result LSR & ROR -carry
3221 =                  rROR    db  $61,$41,$20,0   ; "
3225 =                  rRORc   db  $e1,$c1,$a0,$80 ;expected result ROR +carry
3229 =                  fASL                        ;expected flags for shifts
3229 =                  fROL    db  fnc,fc,fn,fz    ;no carry in
322d =                  fROLc   db  fnc,fc,fn,0     ;carry in
3231 =                  fLSR
3231 =                  fROR    db  fc,0,fc,fz      ;no carry in
3235 =                  fRORc   db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
3239 =                  rINC    db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
323e =                  fINC    db  0,fn,fn,fz,0    ;expected flags for INC/DEC
                        ;logical memory operand
3243 =                  absOR   db  0,$1f,$71,$80   ;test pattern for OR
3247 =                  absAN   db  $0f,$ff,$7f,$80 ;test pattern for AND
324b =                  absEO   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
324f =                  absORa  db  0,$f1,$1f,0     ;test pattern for OR
3253 =                  absANa  db  $f0,$ff,$ff,$ff ;test pattern for AND
3257 =                  absEOa  db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
325b =                  absrlo  db  0,$ff,$7f,$80
325f =                  absflo  db  fz,fn,0,fn
3263 =                  data_bss_end
                        ;define area for page crossing JMP (abs) & JMP (abs,x) test
32f9 =                  jxi_tab equ data_segment + $100 - 7     ;JMP (jxi_tab,x) x=6
32fd =                  ji_tab  equ data_segment + $100 - 3     ;JMP (ji_tab+2)
3300 =                  jxp_tab equ data_segment + $100         ;JMP (jxp_tab-255) x=255
                        
                        
                                code
3400 =                          org code_segment
3400 : d8               start   cld
3401 : a2ff                     ldx #$ff
3403 : 9a                       txs
3404 : a900                     lda #0          ;*** test 0 = initialize
3406 : 8d0232                   sta test_case
0000 =                  test_num = 0
                        
                        ;stop interrupts before initializing BSS
                            if I_flag = 1
                                sei
                            endif
                            
                        ;initialize I/O for report channel
                            if report = 1
3409 : 20b861                   jsr report_init
                            endif
                            
                        ;initialize BSS segment
                            if load_data_direct != 1
340c : a246                     ldx #zp_end-zp_init-1
340e : bd6263           ld_zp   lda zp_init,x
3411 : 9559                     sta zp_bss,x
3413 : ca                       dex
3414 : 10f8                     bpl ld_zp
3416 : a258                     ldx #data_end-data_init-1
3418 : bda963           ld_data lda data_init,x
341b : 9d0a32                   sta data_bss,x
341e : ca                       dex
341f : 10f7                     bpl ld_data
                              if ROM_vectors = 1
                                ldx #5
                        ld_vect lda vec_init,x
                                sta vec_bss,x
                                dex
                                bpl ld_vect
                              endif
                            endif
                        
                        ;retain status of interrupt flag
                            if I_flag = 2
                                php
                                pla
                                and #4          ;isolate flag
                                sta flag_I_on   ;or mask
                                eor #lo(~4)     ;reverse
                                sta flag_I_off  ;and mask
                            endif
                                
                        ;generate checksum for RAM integrity test
                            if ram_top > -1
                                lda #0 
                                sta zpt         ;set low byte of indirect pointer
                                sta ram_chksm+1 ;checksum high byte
                                ldx #11         ;reset modifiable RAM
                        gcs1    sta jxi_tab,x   ;JMP indirect page cross area
                                dex
                                bpl gcs1
                                clc
                                ldx #zp_bss-zero_page ;zeropage - write test area
                        gcs3    adc zero_page,x
                                bcc gcs2
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs2    inx
                                bne gcs3
                                ldx #hi(abs1)   ;set high byte of indirect pointer
                                stx zpt+1
                                ldy #lo(abs1)   ;data after write & execute test area
                        gcs5    adc (zpt),y
                                bcc gcs4
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs4    iny
                                bne gcs5
                                inx             ;advance RAM high address
                                stx zpt+1
                                cpx #ram_top
                                bne gcs5
                                sta ram_chksm   ;checksum complete
                            endif
                                next_test            
3421 : ad0232          >            lda test_case   ;previous test
3424 : c900            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3426 : f003            >        beq skip0002
                       >        trap            ;failed not equal (non zero)
3428 : 20c761          >        jsr report_error
                       >
342b :                 >skip0002
                       >
0001 =                 >test_num = test_num + 1
342b : a901            >            lda #test_num   ;*** next tests' number
342d : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ;testing stack operations PHX PHY PLX PLY
3430 : a999                     lda #$99        ;protect a
3432 : a2ff                     ldx #$ff        ;initialize stack
3434 : 9a                       txs
3435 : a255                     ldx #$55
3437 : da                       phx
3438 : a2aa                     ldx #$aa
343a : da                       phx
343b : ecfe01                   cpx $1fe        ;on stack ?
                                trap_ne
343e : f003            >        beq skip0004
                       >        trap            ;failed not equal (non zero)
3440 : 20c761          >        jsr report_error
                       >
3443 :                 >skip0004
                        
3443 : ba                       tsx
3444 : e0fd                     cpx #$fd        ;sp decremented?
                                trap_ne
3446 : f003            >        beq skip0006
                       >        trap            ;failed not equal (non zero)
3448 : 20c761          >        jsr report_error
                       >
344b :                 >skip0006
                        
344b : 7a                       ply
344c : c0aa                     cpy #$aa        ;successful retreived from stack?
                                trap_ne
344e : f003            >        beq skip0008
                       >        trap            ;failed not equal (non zero)
3450 : 20c761          >        jsr report_error
                       >
3453 :                 >skip0008
                        
3453 : 7a                       ply
3454 : c055                     cpy #$55
                                trap_ne
3456 : f003            >        beq skip0010
                       >        trap            ;failed not equal (non zero)
3458 : 20c761          >        jsr report_error
                       >
345b :                 >skip0010
                        
345b : ccff01                   cpy $1ff        ;remains on stack?
                                trap_ne
345e : f003            >        beq skip0012
                       >        trap            ;failed not equal (non zero)
3460 : 20c761          >        jsr report_error
                       >
3463 :                 >skip0012
                        
3463 : ba                       tsx
3464 : e0ff                     cpx #$ff        ;sp incremented?
                                trap_ne
3466 : f003            >        beq skip0014
                       >        trap            ;failed not equal (non zero)
3468 : 20c761          >        jsr report_error
                       >
346b :                 >skip0014
                        
                                
346b : a0a5                     ldy #$a5
346d : 5a                       phy
346e : a05a                     ldy #$5a
3470 : 5a                       phy
3471 : ccfe01                   cpy $1fe        ;on stack ?
                                trap_ne
3474 : f003            >        beq skip0016
                       >        trap            ;failed not equal (non zero)
3476 : 20c761          >        jsr report_error
                       >
3479 :                 >skip0016
                        
3479 : ba                       tsx
347a : e0fd                     cpx #$fd        ;sp decremented?
                                trap_ne
347c : f003            >        beq skip0018
                       >        trap            ;failed not equal (non zero)
347e : 20c761          >        jsr report_error
                       >
3481 :                 >skip0018
                        
3481 : fa                       plx
3482 : e05a                     cpx #$5a        ;successful retreived from stack?
                                trap_ne
3484 : f003            >        beq skip0020
                       >        trap            ;failed not equal (non zero)
3486 : 20c761          >        jsr report_error
                       >
3489 :                 >skip0020
                        
3489 : fa                       plx
348a : e0a5                     cpx #$a5
                                trap_ne
348c : f003            >        beq skip0022
                       >        trap            ;failed not equal (non zero)
348e : 20c761          >        jsr report_error
                       >
3491 :                 >skip0022
                        
3491 : ecff01                   cpx $1ff        ;remains on stack?
                                trap_ne
3494 : f003            >        beq skip0024
                       >        trap            ;failed not equal (non zero)
3496 : 20c761          >        jsr report_error
                       >
3499 :                 >skip0024
                        
3499 : ba                       tsx
349a : e0ff                     cpx #$ff        ;sp incremented?
                                trap_ne
349c : f003            >        beq skip0026
                       >        trap            ;failed not equal (non zero)
349e : 20c761          >        jsr report_error
                       >
34a1 :                 >skip0026
                        
34a1 : c999                     cmp #$99        ;unchanged?
                                trap_ne
34a3 : f003            >        beq skip0028
                       >        trap            ;failed not equal (non zero)
34a5 : 20c761          >        jsr report_error
                       >
34a8 :                 >skip0028
                        
                                next_test            
34a8 : ad0232          >            lda test_case   ;previous test
34ab : c901            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
34ad : f003            >        beq skip0031
                       >        trap            ;failed not equal (non zero)
34af : 20c761          >        jsr report_error
                       >
34b2 :                 >skip0031
                       >
0002 =                 >test_num = test_num + 1
34b2 : a902            >            lda #test_num   ;*** next tests' number
34b4 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                        ; test PHX does not alter flags or X but PLX does
34b7 : a0aa                     ldy #$aa        ;protect y
                                set_x 1,$ff     ;push
                       >            load_flag $ff     
34b9 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
34bb : 48              >            pha         ;use stack to load status
34bc : a201            >            ldx #1     ;precharge index x
34be : 28              >            plp
                        
34bf : da                       phx
                                tst_x 1,$ff
34c0 : 08              >            php         ;save flags
34c1 : e001            >            cpx #1     ;test result
                       >            trap_ne
34c3 : f003            >        beq skip0036
                       >        trap            ;failed not equal (non zero)
34c5 : 20c761          >        jsr report_error
                       >
34c8 :                 >skip0036
                       >
34c8 : 68              >            pla         ;load status
34c9 : 48              >            pha
                       >            cmp_flag $ff
34ca : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
34cc : f003            >        beq skip0039
                       >        trap            ;failed not equal (non zero)
34ce : 20c761          >        jsr report_error
                       >
34d1 :                 >skip0039
                       >
34d1 : 28              >            plp         ;restore status
                        
                                set_x 0,0
                       >            load_flag 0
34d2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
34d4 : 48              >            pha         ;use stack to load status
34d5 : a200            >            ldx #0     ;precharge index x
34d7 : 28              >            plp
                        
34d8 : da                       phx
                                tst_x 0,0
34d9 : 08              >            php         ;save flags
34da : e000            >            cpx #0     ;test result
                       >            trap_ne
34dc : f003            >        beq skip0044
                       >        trap            ;failed not equal (non zero)
34de : 20c761          >        jsr report_error
                       >
34e1 :                 >skip0044
                       >
34e1 : 68              >            pla         ;load status
34e2 : 48              >            pha
                       >            cmp_flag 0
34e3 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
34e5 : f003            >        beq skip0047
                       >        trap            ;failed not equal (non zero)
34e7 : 20c761          >        jsr report_error
                       >
34ea :                 >skip0047
                       >
34ea : 28              >            plp         ;restore status
                        
                                set_x $ff,$ff
                       >            load_flag $ff
34eb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
34ed : 48              >            pha         ;use stack to load status
34ee : a2ff            >            ldx #$ff     ;precharge index x
34f0 : 28              >            plp
                        
34f1 : da                       phx
                                tst_x $ff,$ff
34f2 : 08              >            php         ;save flags
34f3 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
34f5 : f003            >        beq skip0052
                       >        trap            ;failed not equal (non zero)
34f7 : 20c761          >        jsr report_error
                       >
34fa :                 >skip0052
                       >
34fa : 68              >            pla         ;load status
34fb : 48              >            pha
                       >            cmp_flag $ff
34fc : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
34fe : f003            >        beq skip0055
                       >        trap            ;failed not equal (non zero)
3500 : 20c761          >        jsr report_error
                       >
3503 :                 >skip0055
                       >
3503 : 28              >            plp         ;restore status
                        
                                set_x 1,0
                       >            load_flag 0
3504 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3506 : 48              >            pha         ;use stack to load status
3507 : a201            >            ldx #1     ;precharge index x
3509 : 28              >            plp
                        
350a : da                       phx
                                tst_x 1,0
350b : 08              >            php         ;save flags
350c : e001            >            cpx #1     ;test result
                       >            trap_ne
350e : f003            >        beq skip0060
                       >        trap            ;failed not equal (non zero)
3510 : 20c761          >        jsr report_error
                       >
3513 :                 >skip0060
                       >
3513 : 68              >            pla         ;load status
3514 : 48              >            pha
                       >            cmp_flag 0
3515 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3517 : f003            >        beq skip0063
                       >        trap            ;failed not equal (non zero)
3519 : 20c761          >        jsr report_error
                       >
351c :                 >skip0063
                       >
351c : 28              >            plp         ;restore status
                        
                                set_x 0,$ff
                       >            load_flag $ff
351d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
351f : 48              >            pha         ;use stack to load status
3520 : a200            >            ldx #0     ;precharge index x
3522 : 28              >            plp
                        
3523 : da                       phx
                                tst_x 0,$ff
3524 : 08              >            php         ;save flags
3525 : e000            >            cpx #0     ;test result
                       >            trap_ne
3527 : f003            >        beq skip0068
                       >        trap            ;failed not equal (non zero)
3529 : 20c761          >        jsr report_error
                       >
352c :                 >skip0068
                       >
352c : 68              >            pla         ;load status
352d : 48              >            pha
                       >            cmp_flag $ff
352e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3530 : f003            >        beq skip0071
                       >        trap            ;failed not equal (non zero)
3532 : 20c761          >        jsr report_error
                       >
3535 :                 >skip0071
                       >
3535 : 28              >            plp         ;restore status
                        
                                set_x $ff,0
                       >            load_flag 0
3536 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3538 : 48              >            pha         ;use stack to load status
3539 : a2ff            >            ldx #$ff     ;precharge index x
353b : 28              >            plp
                        
353c : da                       phx
                                tst_x $ff,0
353d : 08              >            php         ;save flags
353e : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
3540 : f003            >        beq skip0076
                       >        trap            ;failed not equal (non zero)
3542 : 20c761          >        jsr report_error
                       >
3545 :                 >skip0076
                       >
3545 : 68              >            pla         ;load status
3546 : 48              >            pha
                       >            cmp_flag 0
3547 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3549 : f003            >        beq skip0079
                       >        trap            ;failed not equal (non zero)
354b : 20c761          >        jsr report_error
                       >
354e :                 >skip0079
                       >
354e : 28              >            plp         ;restore status
                        
                                set_x 0,$ff     ;pull
                       >            load_flag $ff     
354f : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
3551 : 48              >            pha         ;use stack to load status
3552 : a200            >            ldx #0     ;precharge index x
3554 : 28              >            plp
                        
3555 : fa                       plx
                                tst_x $ff,$ff-zero
3556 : 08              >            php         ;save flags
3557 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
3559 : f003            >        beq skip0084
                       >        trap            ;failed not equal (non zero)
355b : 20c761          >        jsr report_error
                       >
355e :                 >skip0084
                       >
355e : 68              >            pla         ;load status
355f : 48              >            pha
                       >            cmp_flag $ff-zero
3560 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3562 : f003            >        beq skip0087
                       >        trap            ;failed not equal (non zero)
3564 : 20c761          >        jsr report_error
                       >
3567 :                 >skip0087
                       >
3567 : 28              >            plp         ;restore status
                        
                                set_x $ff,0
                       >            load_flag 0
3568 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
356a : 48              >            pha         ;use stack to load status
356b : a2ff            >            ldx #$ff     ;precharge index x
356d : 28              >            plp
                        
356e : fa                       plx
                                tst_x 0,zero
356f : 08              >            php         ;save flags
3570 : e000            >            cpx #0     ;test result
                       >            trap_ne
3572 : f003            >        beq skip0092
                       >        trap            ;failed not equal (non zero)
3574 : 20c761          >        jsr report_error
                       >
3577 :                 >skip0092
                       >
3577 : 68              >            pla         ;load status
3578 : 48              >            pha
                       >            cmp_flag zero
3579 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
357b : f003            >        beq skip0095
                       >        trap            ;failed not equal (non zero)
357d : 20c761          >        jsr report_error
                       >
3580 :                 >skip0095
                       >
3580 : 28              >            plp         ;restore status
                        
                                set_x $fe,$ff
                       >            load_flag $ff
3581 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3583 : 48              >            pha         ;use stack to load status
3584 : a2fe            >            ldx #$fe     ;precharge index x
3586 : 28              >            plp
                        
3587 : fa                       plx
                                tst_x 1,$ff-zero-minus
3588 : 08              >            php         ;save flags
3589 : e001            >            cpx #1     ;test result
                       >            trap_ne
358b : f003            >        beq skip0100
                       >        trap            ;failed not equal (non zero)
358d : 20c761          >        jsr report_error
                       >
3590 :                 >skip0100
                       >
3590 : 68              >            pla         ;load status
3591 : 48              >            pha
                       >            cmp_flag $ff-zero-minus
3592 : c97d            >            cmp #($ff-zero-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3594 : f003            >        beq skip0103
                       >        trap            ;failed not equal (non zero)
3596 : 20c761          >        jsr report_error
                       >
3599 :                 >skip0103
                       >
3599 : 28              >            plp         ;restore status
                        
                                set_x 0,0
                       >            load_flag 0
359a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
359c : 48              >            pha         ;use stack to load status
359d : a200            >            ldx #0     ;precharge index x
359f : 28              >            plp
                        
35a0 : fa                       plx
                                tst_x $ff,minus
35a1 : 08              >            php         ;save flags
35a2 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
35a4 : f003            >        beq skip0108
                       >        trap            ;failed not equal (non zero)
35a6 : 20c761          >        jsr report_error
                       >
35a9 :                 >skip0108
                       >
35a9 : 68              >            pla         ;load status
35aa : 48              >            pha
                       >            cmp_flag minus
35ab : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35ad : f003            >        beq skip0111
                       >        trap            ;failed not equal (non zero)
35af : 20c761          >        jsr report_error
                       >
35b2 :                 >skip0111
                       >
35b2 : 28              >            plp         ;restore status
                        
                                set_x $ff,$ff
                       >            load_flag $ff
35b3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
35b5 : 48              >            pha         ;use stack to load status
35b6 : a2ff            >            ldx #$ff     ;precharge index x
35b8 : 28              >            plp
                        
35b9 : fa                       plx
                                tst_x 0,$ff-minus
35ba : 08              >            php         ;save flags
35bb : e000            >            cpx #0     ;test result
                       >            trap_ne
35bd : f003            >        beq skip0116
                       >        trap            ;failed not equal (non zero)
35bf : 20c761          >        jsr report_error
                       >
35c2 :                 >skip0116
                       >
35c2 : 68              >            pla         ;load status
35c3 : 48              >            pha
                       >            cmp_flag $ff-minus
35c4 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35c6 : f003            >        beq skip0119
                       >        trap            ;failed not equal (non zero)
35c8 : 20c761          >        jsr report_error
                       >
35cb :                 >skip0119
                       >
35cb : 28              >            plp         ;restore status
                        
                                set_x $fe,0
                       >            load_flag 0
35cc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
35ce : 48              >            pha         ;use stack to load status
35cf : a2fe            >            ldx #$fe     ;precharge index x
35d1 : 28              >            plp
                        
35d2 : fa                       plx
                                tst_x 1,0
35d3 : 08              >            php         ;save flags
35d4 : e001            >            cpx #1     ;test result
                       >            trap_ne
35d6 : f003            >        beq skip0124
                       >        trap            ;failed not equal (non zero)
35d8 : 20c761          >        jsr report_error
                       >
35db :                 >skip0124
                       >
35db : 68              >            pla         ;load status
35dc : 48              >            pha
                       >            cmp_flag 0
35dd : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35df : f003            >        beq skip0127
                       >        trap            ;failed not equal (non zero)
35e1 : 20c761          >        jsr report_error
                       >
35e4 :                 >skip0127
                       >
35e4 : 28              >            plp         ;restore status
                        
35e5 : c0aa                     cpy #$aa        ;Y unchanged
                                trap_ne
35e7 : f003            >        beq skip0129
                       >        trap            ;failed not equal (non zero)
35e9 : 20c761          >        jsr report_error
                       >
35ec :                 >skip0129
                        
                                next_test            
35ec : ad0232          >            lda test_case   ;previous test
35ef : c902            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
35f1 : f003            >        beq skip0132
                       >        trap            ;failed not equal (non zero)
35f3 : 20c761          >        jsr report_error
                       >
35f6 :                 >skip0132
                       >
0003 =                 >test_num = test_num + 1
35f6 : a903            >            lda #test_num   ;*** next tests' number
35f8 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                         
                        ; test PHY does not alter flags or Y but PLY does
35fb : a255                     ldx #$55        ;x & a protected
                                set_y 1,$ff     ;push
                       >            load_flag $ff     
35fd : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
35ff : 48              >            pha         ;use stack to load status
3600 : a001            >            ldy #1     ;precharge index y
3602 : 28              >            plp
                        
3603 : 5a                       phy
                                tst_y 1,$ff
3604 : 08              >            php         ;save flags
3605 : c001            >            cpy #1     ;test result
                       >            trap_ne
3607 : f003            >        beq skip0137
                       >        trap            ;failed not equal (non zero)
3609 : 20c761          >        jsr report_error
                       >
360c :                 >skip0137
                       >
360c : 68              >            pla         ;load status
360d : 48              >            pha
                       >            cmp_flag $ff
360e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3610 : f003            >        beq skip0140
                       >        trap            ;failed not equal (non zero)
3612 : 20c761          >        jsr report_error
                       >
3615 :                 >skip0140
                       >
3615 : 28              >            plp         ;restore status
                        
                                set_y 0,0
                       >            load_flag 0
3616 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3618 : 48              >            pha         ;use stack to load status
3619 : a000            >            ldy #0     ;precharge index y
361b : 28              >            plp
                        
361c : 5a                       phy
                                tst_y 0,0
361d : 08              >            php         ;save flags
361e : c000            >            cpy #0     ;test result
                       >            trap_ne
3620 : f003            >        beq skip0145
                       >        trap            ;failed not equal (non zero)
3622 : 20c761          >        jsr report_error
                       >
3625 :                 >skip0145
                       >
3625 : 68              >            pla         ;load status
3626 : 48              >            pha
                       >            cmp_flag 0
3627 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3629 : f003            >        beq skip0148
                       >        trap            ;failed not equal (non zero)
362b : 20c761          >        jsr report_error
                       >
362e :                 >skip0148
                       >
362e : 28              >            plp         ;restore status
                        
                                set_y $ff,$ff
                       >            load_flag $ff
362f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3631 : 48              >            pha         ;use stack to load status
3632 : a0ff            >            ldy #$ff     ;precharge index y
3634 : 28              >            plp
                        
3635 : 5a                       phy
                                tst_y $ff,$ff
3636 : 08              >            php         ;save flags
3637 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
3639 : f003            >        beq skip0153
                       >        trap            ;failed not equal (non zero)
363b : 20c761          >        jsr report_error
                       >
363e :                 >skip0153
                       >
363e : 68              >            pla         ;load status
363f : 48              >            pha
                       >            cmp_flag $ff
3640 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3642 : f003            >        beq skip0156
                       >        trap            ;failed not equal (non zero)
3644 : 20c761          >        jsr report_error
                       >
3647 :                 >skip0156
                       >
3647 : 28              >            plp         ;restore status
                        
                                set_y 1,0
                       >            load_flag 0
3648 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
364a : 48              >            pha         ;use stack to load status
364b : a001            >            ldy #1     ;precharge index y
364d : 28              >            plp
                        
364e : 5a                       phy
                                tst_y 1,0
364f : 08              >            php         ;save flags
3650 : c001            >            cpy #1     ;test result
                       >            trap_ne
3652 : f003            >        beq skip0161
                       >        trap            ;failed not equal (non zero)
3654 : 20c761          >        jsr report_error
                       >
3657 :                 >skip0161
                       >
3657 : 68              >            pla         ;load status
3658 : 48              >            pha
                       >            cmp_flag 0
3659 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
365b : f003            >        beq skip0164
                       >        trap            ;failed not equal (non zero)
365d : 20c761          >        jsr report_error
                       >
3660 :                 >skip0164
                       >
3660 : 28              >            plp         ;restore status
                        
                                set_y 0,$ff
                       >            load_flag $ff
3661 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3663 : 48              >            pha         ;use stack to load status
3664 : a000            >            ldy #0     ;precharge index y
3666 : 28              >            plp
                        
3667 : 5a                       phy
                                tst_y 0,$ff
3668 : 08              >            php         ;save flags
3669 : c000            >            cpy #0     ;test result
                       >            trap_ne
366b : f003            >        beq skip0169
                       >        trap            ;failed not equal (non zero)
366d : 20c761          >        jsr report_error
                       >
3670 :                 >skip0169
                       >
3670 : 68              >            pla         ;load status
3671 : 48              >            pha
                       >            cmp_flag $ff
3672 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3674 : f003            >        beq skip0172
                       >        trap            ;failed not equal (non zero)
3676 : 20c761          >        jsr report_error
                       >
3679 :                 >skip0172
                       >
3679 : 28              >            plp         ;restore status
                        
                                set_y $ff,0
                       >            load_flag 0
367a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
367c : 48              >            pha         ;use stack to load status
367d : a0ff            >            ldy #$ff     ;precharge index y
367f : 28              >            plp
                        
3680 : 5a                       phy
                                tst_y $ff,0
3681 : 08              >            php         ;save flags
3682 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
3684 : f003            >        beq skip0177
                       >        trap            ;failed not equal (non zero)
3686 : 20c761          >        jsr report_error
                       >
3689 :                 >skip0177
                       >
3689 : 68              >            pla         ;load status
368a : 48              >            pha
                       >            cmp_flag 0
368b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
368d : f003            >        beq skip0180
                       >        trap            ;failed not equal (non zero)
368f : 20c761          >        jsr report_error
                       >
3692 :                 >skip0180
                       >
3692 : 28              >            plp         ;restore status
                        
                                set_y 0,$ff     ;pull
                       >            load_flag $ff     
3693 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
3695 : 48              >            pha         ;use stack to load status
3696 : a000            >            ldy #0     ;precharge index y
3698 : 28              >            plp
                        
3699 : 7a                       ply
                                tst_y $ff,$ff-zero
369a : 08              >            php         ;save flags
369b : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
369d : f003            >        beq skip0185
                       >        trap            ;failed not equal (non zero)
369f : 20c761          >        jsr report_error
                       >
36a2 :                 >skip0185
                       >
36a2 : 68              >            pla         ;load status
36a3 : 48              >            pha
                       >            cmp_flag $ff-zero
36a4 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36a6 : f003            >        beq skip0188
                       >        trap            ;failed not equal (non zero)
36a8 : 20c761          >        jsr report_error
                       >
36ab :                 >skip0188
                       >
36ab : 28              >            plp         ;restore status
                        
                                set_y $ff,0
                       >            load_flag 0
36ac : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
36ae : 48              >            pha         ;use stack to load status
36af : a0ff            >            ldy #$ff     ;precharge index y
36b1 : 28              >            plp
                        
36b2 : 7a                       ply
                                tst_y 0,zero
36b3 : 08              >            php         ;save flags
36b4 : c000            >            cpy #0     ;test result
                       >            trap_ne
36b6 : f003            >        beq skip0193
                       >        trap            ;failed not equal (non zero)
36b8 : 20c761          >        jsr report_error
                       >
36bb :                 >skip0193
                       >
36bb : 68              >            pla         ;load status
36bc : 48              >            pha
                       >            cmp_flag zero
36bd : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36bf : f003            >        beq skip0196
                       >        trap            ;failed not equal (non zero)
36c1 : 20c761          >        jsr report_error
                       >
36c4 :                 >skip0196
                       >
36c4 : 28              >            plp         ;restore status
                        
                                set_y $fe,$ff
                       >            load_flag $ff
36c5 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
36c7 : 48              >            pha         ;use stack to load status
36c8 : a0fe            >            ldy #$fe     ;precharge index y
36ca : 28              >            plp
                        
36cb : 7a                       ply
                                tst_y 1,$ff-zero-minus
36cc : 08              >            php         ;save flags
36cd : c001            >            cpy #1     ;test result
                       >            trap_ne
36cf : f003            >        beq skip0201
                       >        trap            ;failed not equal (non zero)
36d1 : 20c761          >        jsr report_error
                       >
36d4 :                 >skip0201
                       >
36d4 : 68              >            pla         ;load status
36d5 : 48              >            pha
                       >            cmp_flag $ff-zero-minus
36d6 : c97d            >            cmp #($ff-zero-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36d8 : f003            >        beq skip0204
                       >        trap            ;failed not equal (non zero)
36da : 20c761          >        jsr report_error
                       >
36dd :                 >skip0204
                       >
36dd : 28              >            plp         ;restore status
                        
                                set_y 0,0
                       >            load_flag 0
36de : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
36e0 : 48              >            pha         ;use stack to load status
36e1 : a000            >            ldy #0     ;precharge index y
36e3 : 28              >            plp
                        
36e4 : 7a                       ply
                                tst_y $ff,minus
36e5 : 08              >            php         ;save flags
36e6 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
36e8 : f003            >        beq skip0209
                       >        trap            ;failed not equal (non zero)
36ea : 20c761          >        jsr report_error
                       >
36ed :                 >skip0209
                       >
36ed : 68              >            pla         ;load status
36ee : 48              >            pha
                       >            cmp_flag minus
36ef : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36f1 : f003            >        beq skip0212
                       >        trap            ;failed not equal (non zero)
36f3 : 20c761          >        jsr report_error
                       >
36f6 :                 >skip0212
                       >
36f6 : 28              >            plp         ;restore status
                        
                                set_y $ff,$ff
                       >            load_flag $ff
36f7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
36f9 : 48              >            pha         ;use stack to load status
36fa : a0ff            >            ldy #$ff     ;precharge index y
36fc : 28              >            plp
                        
36fd : 7a                       ply
                                tst_y 0,$ff-minus
36fe : 08              >            php         ;save flags
36ff : c000            >            cpy #0     ;test result
                       >            trap_ne
3701 : f003            >        beq skip0217
                       >        trap            ;failed not equal (non zero)
3703 : 20c761          >        jsr report_error
                       >
3706 :                 >skip0217
                       >
3706 : 68              >            pla         ;load status
3707 : 48              >            pha
                       >            cmp_flag $ff-minus
3708 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
370a : f003            >        beq skip0220
                       >        trap            ;failed not equal (non zero)
370c : 20c761          >        jsr report_error
                       >
370f :                 >skip0220
                       >
370f : 28              >            plp         ;restore status
                        
                                set_y $fe,0
                       >            load_flag 0
3710 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3712 : 48              >            pha         ;use stack to load status
3713 : a0fe            >            ldy #$fe     ;precharge index y
3715 : 28              >            plp
                        
3716 : 7a                       ply
                                tst_y 1,0
3717 : 08              >            php         ;save flags
3718 : c001            >            cpy #1     ;test result
                       >            trap_ne
371a : f003            >        beq skip0225
                       >        trap            ;failed not equal (non zero)
371c : 20c761          >        jsr report_error
                       >
371f :                 >skip0225
                       >
371f : 68              >            pla         ;load status
3720 : 48              >            pha
                       >            cmp_flag 0
3721 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3723 : f003            >        beq skip0228
                       >        trap            ;failed not equal (non zero)
3725 : 20c761          >        jsr report_error
                       >
3728 :                 >skip0228
                       >
3728 : 28              >            plp         ;restore status
                        
3729 : e055                     cpx #$55        ;x unchanged?
                                trap_ne
372b : f003            >        beq skip0230
                       >        trap            ;failed not equal (non zero)
372d : 20c761          >        jsr report_error
                       >
3730 :                 >skip0230
                        
                                next_test            
3730 : ad0232          >            lda test_case   ;previous test
3733 : c903            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3735 : f003            >        beq skip0233
                       >        trap            ;failed not equal (non zero)
3737 : 20c761          >        jsr report_error
                       >
373a :                 >skip0233
                       >
0004 =                 >test_num = test_num + 1
373a : a904            >            lda #test_num   ;*** next tests' number
373c : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                         
                        ; PC modifying instructions (BRA, BBR, BBS, 1, 2, 3 byte NOPs, JMP(abs,x))
                        ; testing unconditional branch BRA
                        
373f : a281                     ldx #$81        ;protect unused registers
3741 : a07e                     ldy #$7e
                                set_a 0,$ff
                       >            load_flag $ff
3743 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3745 : 48              >            pha         ;use stack to load status
3746 : a900            >            lda #0     ;precharge accu
3748 : 28              >            plp
                        
3749 : 8003                     bra br1         ;branch should always be taken
                                trap 
374b : 20c761          >        jsr report_error
                        
374e :                  br1
                                tst_a 0,$ff
374e : 08              >            php         ;save flags
374f : c900            >            cmp #0     ;test result
                       >            trap_ne
3751 : f003            >        beq skip0239
                       >        trap            ;failed not equal (non zero)
3753 : 20c761          >        jsr report_error
                       >
3756 :                 >skip0239
                       >
3756 : 68              >            pla         ;load status
3757 : 48              >            pha
                       >            cmp_flag $ff
3758 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
375a : f003            >        beq skip0242
                       >        trap            ;failed not equal (non zero)
375c : 20c761          >        jsr report_error
                       >
375f :                 >skip0242
                       >
375f : 28              >            plp         ;restore status
                        
                                set_a $ff,0
                       >            load_flag 0
3760 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3762 : 48              >            pha         ;use stack to load status
3763 : a9ff            >            lda #$ff     ;precharge accu
3765 : 28              >            plp
                        
3766 : 8003                     bra br2         ;branch should always be taken
                                trap 
3768 : 20c761          >        jsr report_error
                        
376b :                  br2
                                tst_a $ff,0
376b : 08              >            php         ;save flags
376c : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
376e : f003            >        beq skip0248
                       >        trap            ;failed not equal (non zero)
3770 : 20c761          >        jsr report_error
                       >
3773 :                 >skip0248
                       >
3773 : 68              >            pla         ;load status
3774 : 48              >            pha
                       >            cmp_flag 0
3775 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3777 : f003            >        beq skip0251
                       >        trap            ;failed not equal (non zero)
3779 : 20c761          >        jsr report_error
                       >
377c :                 >skip0251
                       >
377c : 28              >            plp         ;restore status
                        
377d : e081                     cpx #$81
                                trap_ne
377f : f003            >        beq skip0253
                       >        trap            ;failed not equal (non zero)
3781 : 20c761          >        jsr report_error
                       >
3784 :                 >skip0253
                        
3784 : c07e                     cpy #$7e
                                trap_ne
3786 : f003            >        beq skip0255
                       >        trap            ;failed not equal (non zero)
3788 : 20c761          >        jsr report_error
                       >
378b :                 >skip0255
                        
                                next_test            
378b : ad0232          >            lda test_case   ;previous test
378e : c904            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3790 : f003            >        beq skip0258
                       >        trap            ;failed not equal (non zero)
3792 : 20c761          >        jsr report_error
                       >
3795 :                 >skip0258
                       >
0005 =                 >test_num = test_num + 1
3795 : a905            >            lda #test_num   ;*** next tests' number
3797 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
379a : a000                     ldy #0          ;branch range test  
379c : 8076                     bra bra0
                                
379e : c001             bra1    cpy #1
                                trap_ne         ;long range backward
37a0 : f003            >        beq skip0260
                       >        trap            ;failed not equal (non zero)
37a2 : 20c761          >        jsr report_error
                       >
37a5 :                 >skip0260
                        
37a5 : c8                       iny        
37a6 : 8062                     bra bra2
                                        
37a8 : c003             bra3    cpy #3
                                trap_ne         ;long range backward
37aa : f003            >        beq skip0262
                       >        trap            ;failed not equal (non zero)
37ac : 20c761          >        jsr report_error
                       >
37af :                 >skip0262
                        
37af : c8                       iny        
37b0 : 804e                     bra bra4
                                        
37b2 : c005             bra5    cpy #5
                                trap_ne         ;long range backward
37b4 : f003            >        beq skip0264
                       >        trap            ;failed not equal (non zero)
37b6 : 20c761          >        jsr report_error
                       >
37b9 :                 >skip0264
                        
37b9 : c8                       iny        
37ba : a000                     ldy #0
37bc : 8004                     bra brf0
                                
37be : c8                       iny
37bf : c8                       iny
37c0 : c8                       iny
37c1 : c8                       iny        
37c2 : 8003             brf0    bra brf1
                        
37c4 : c8                       iny
37c5 : c8                       iny
37c6 : c8                       iny
37c7 : c8               brf1    iny        
37c8 : 8002                     bra brf2
                                
37ca : c8                       iny
37cb : c8                       iny
37cc : c8               brf2    iny
37cd : c8                       iny        
37ce : 8001                     bra brf3
                                
37d0 : c8                       iny
37d1 : c8               brf3    iny
37d2 : c8                       iny
37d3 : c8                       iny        
37d4 : 8000                     bra brf4
                                
37d6 : c8               brf4    iny
37d7 : c8                       iny
37d8 : c8                       iny
37d9 : c8                       iny
37da : c00a                     cpy #10
                                trap_ne     ;short range forward
37dc : f003            >        beq skip0266
                       >        trap            ;failed not equal (non zero)
37de : 20c761          >        jsr report_error
                       >
37e1 :                 >skip0266
                        
37e1 : 8012                     bra brb0
                        
37e3 : 88               brb4    dey
37e4 : 88                       dey
37e5 : 88                       dey
37e6 : 88                       dey
37e7 : 800e                     bra brb5        
                        
37e9 : 88               brb3    dey
37ea : 88                       dey
37eb : 88                       dey
37ec : 80f5                     bra brb4        
                        
37ee : 88               brb2    dey
37ef : 88                       dey
37f0 : 80f7                     bra brb3        
                        
37f2 : 88               brb1    dey
37f3 : 80f9                     bra brb2        
                        
37f5 : 80fb             brb0    bra brb1        
                        
37f7 : c000             brb5    cpy #0
                                trap_ne     ;short range backward
37f9 : f003            >        beq skip0268
                       >        trap            ;failed not equal (non zero)
37fb : 20c761          >        jsr report_error
                       >
37fe :                 >skip0268
                        
37fe : 801e                     bra bra6
                        
3800 : c004             bra4    cpy #4
                                trap_ne     ;long range forward
3802 : f003            >        beq skip0270
                       >        trap            ;failed not equal (non zero)
3804 : 20c761          >        jsr report_error
                       >
3807 :                 >skip0270
                        
3807 : c8                       iny        
3808 : 80a8                     bra bra5
                                        
380a : c002             bra2    cpy #2
                                trap_ne     ;long range forward
380c : f003            >        beq skip0272
                       >        trap            ;failed not equal (non zero)
380e : 20c761          >        jsr report_error
                       >
3811 :                 >skip0272
                        
3811 : c8                       iny        
3812 : 8094                     bra bra3
                                        
3814 : c000             bra0    cpy #0
                                trap_ne     ;long range forward
3816 : f003            >        beq skip0274
                       >        trap            ;failed not equal (non zero)
3818 : 20c761          >        jsr report_error
                       >
381b :                 >skip0274
                        
381b : c8                       iny        
381c : 8080                     bra bra1
                                        
381e :                  bra6
                                next_test
381e : ad0232          >            lda test_case   ;previous test
3821 : c905            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3823 : f003            >        beq skip0277
                       >        trap            ;failed not equal (non zero)
3825 : 20c761          >        jsr report_error
                       >
3828 :                 >skip0277
                       >
0006 =                 >test_num = test_num + 1
3828 : a906            >            lda #test_num   ;*** next tests' number
382a : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                            if rkwl_wdc_op = 1
                        ; testing BBR & BBS
                        
                        bbt     macro           ;\1 = bitnum
                                lda #(1<<\1)    ;testing 1 bit on
                                sta zpt
                                set_a $33,0     ;with flags off
                                bbr \1,zpt,fail1\?
                                bbs \1,zpt,ok1\?
                                trap            ;bbs branch not taken
                        fail1\?
                                trap            ;bbr branch taken
                        ok1\?   
                                tst_a $33,0
                                set_a $cc,$ff   ;with flags on
                                bbr \1,zpt,fail2\?
                                bbs \1,zpt,ok2\?
                                trap            ;bbs branch not taken
                        fail2\? 
                                trap            ;bbr branch taken
                        ok2\?   
                                tst_a $cc,$ff
                                lda zpt
                                cmp #(1<<\1)
                                trap_ne         ;zp altered
                                lda #$ff-(1<<\1) ;testing 1 bit off
                                sta zpt
                                set_a $33,0     ;with flags off
                                bbs \1,zpt,fail3\?
                                bbr \1,zpt,ok3\?
                                trap            ;bbr branch not taken
                        fail3\? 
                                trap            ;bbs branch taken
                        ok3\?   
                                tst_a $33,0
                                set_a $cc,$ff   ;with flags on
                                bbs \1,zpt,fail4\?
                                bbr \1,zpt,ok4\?
                                trap            ;bbr branch not taken
                        fail4\? 
                                trap            ;bbs branch taken
                        ok4\?   
                                tst_a $cc,$ff
                                lda zpt
                                cmp #$ff-(1<<\1)
                                trap_ne         ;zp altered
                                endm
                        
382d : a211                     ldx #$11        ;test bbr/bbs integrity
382f : a022                     ldy #$22
                                bbt 0
3831 : a901            >        lda #(1<<0)    ;testing 1 bit on
3833 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
3835 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
3837 : 48              >            pha         ;use stack to load status
3838 : a933            >            lda #$33     ;precharge accu
383a : 28              >            plp
                       >
383b : 0f5206          >        bbr 0,zpt,fail10279
383e : 8f5206          >        bbs 0,zpt,ok10279
                       >        trap            ;bbs branch not taken
3841 : 20c761          >        jsr report_error
                       >
3844 :                 >fail10279
                       >        trap            ;bbr branch taken
3844 : 20c761          >        jsr report_error
                       >
3847 :                 >ok10279   
                       >        tst_a $33,0
3847 : 08              >            php         ;save flags
3848 : c933            >            cmp #$33     ;test result
                       >            trap_ne
384a : f003            >        beq skip0285
                       >        trap            ;failed not equal (non zero)
384c : 20c761          >        jsr report_error
                       >
384f :                 >skip0285
                       >
384f : 68              >            pla         ;load status
3850 : 48              >            pha
                       >            cmp_flag 0
3851 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3853 : f003            >        beq skip0288
                       >        trap            ;failed not equal (non zero)
3855 : 20c761          >        jsr report_error
                       >
3858 :                 >skip0288
                       >
3858 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
3859 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
385b : 48              >            pha         ;use stack to load status
385c : a9cc            >            lda #$cc     ;precharge accu
385e : 28              >            plp
                       >
385f : 0f5206          >        bbr 0,zpt,fail20279
3862 : 8f5206          >        bbs 0,zpt,ok20279
                       >        trap            ;bbs branch not taken
3865 : 20c761          >        jsr report_error
                       >
3868 :                 >fail20279 
                       >        trap            ;bbr branch taken
3868 : 20c761          >        jsr report_error
                       >
386b :                 >ok20279   
                       >        tst_a $cc,$ff
386b : 08              >            php         ;save flags
386c : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
386e : f003            >        beq skip0295
                       >        trap            ;failed not equal (non zero)
3870 : 20c761          >        jsr report_error
                       >
3873 :                 >skip0295
                       >
3873 : 68              >            pla         ;load status
3874 : 48              >            pha
                       >            cmp_flag $ff
3875 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3877 : f003            >        beq skip0298
                       >        trap            ;failed not equal (non zero)
3879 : 20c761          >        jsr report_error
                       >
387c :                 >skip0298
                       >
387c : 28              >            plp         ;restore status
                       >
387d : a552            >        lda zpt
387f : c901            >        cmp #(1<<0)
                       >        trap_ne         ;zp altered
3881 : f003            >        beq skip0300
                       >        trap            ;failed not equal (non zero)
3883 : 20c761          >        jsr report_error
                       >
3886 :                 >skip0300
                       >
3886 : a9fe            >        lda #$ff-(1<<0) ;testing 1 bit off
3888 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
388a : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
388c : 48              >            pha         ;use stack to load status
388d : a933            >            lda #$33     ;precharge accu
388f : 28              >            plp
                       >
3890 : 8f5206          >        bbs 0,zpt,fail30279
3893 : 0f5206          >        bbr 0,zpt,ok30279
                       >        trap            ;bbr branch not taken
3896 : 20c761          >        jsr report_error
                       >
3899 :                 >fail30279 
                       >        trap            ;bbs branch taken
3899 : 20c761          >        jsr report_error
                       >
389c :                 >ok30279   
                       >        tst_a $33,0
389c : 08              >            php         ;save flags
389d : c933            >            cmp #$33     ;test result
                       >            trap_ne
389f : f003            >        beq skip0307
                       >        trap            ;failed not equal (non zero)
38a1 : 20c761          >        jsr report_error
                       >
38a4 :                 >skip0307
                       >
38a4 : 68              >            pla         ;load status
38a5 : 48              >            pha
                       >            cmp_flag 0
38a6 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
38a8 : f003            >        beq skip0310
                       >        trap            ;failed not equal (non zero)
38aa : 20c761          >        jsr report_error
                       >
38ad :                 >skip0310
                       >
38ad : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
38ae : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
38b0 : 48              >            pha         ;use stack to load status
38b1 : a9cc            >            lda #$cc     ;precharge accu
38b3 : 28              >            plp
                       >
38b4 : 8f5206          >        bbs 0,zpt,fail40279
38b7 : 0f5206          >        bbr 0,zpt,ok40279
                       >        trap            ;bbr branch not taken
38ba : 20c761          >        jsr report_error
                       >
38bd :                 >fail40279 
                       >        trap            ;bbs branch taken
38bd : 20c761          >        jsr report_error
                       >
38c0 :                 >ok40279   
                       >        tst_a $cc,$ff
38c0 : 08              >            php         ;save flags
38c1 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
38c3 : f003            >        beq skip0317
                       >        trap            ;failed not equal (non zero)
38c5 : 20c761          >        jsr report_error
                       >
38c8 :                 >skip0317
                       >
38c8 : 68              >            pla         ;load status
38c9 : 48              >            pha
                       >            cmp_flag $ff
38ca : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
38cc : f003            >        beq skip0320
                       >        trap            ;failed not equal (non zero)
38ce : 20c761          >        jsr report_error
                       >
38d1 :                 >skip0320
                       >
38d1 : 28              >            plp         ;restore status
                       >
38d2 : a552            >        lda zpt
38d4 : c9fe            >        cmp #$ff-(1<<0)
                       >        trap_ne         ;zp altered
38d6 : f003            >        beq skip0322
                       >        trap            ;failed not equal (non zero)
38d8 : 20c761          >        jsr report_error
                       >
38db :                 >skip0322
                       >
                        
                                bbt 1
38db : a902            >        lda #(1<<1)    ;testing 1 bit on
38dd : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
38df : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
38e1 : 48              >            pha         ;use stack to load status
38e2 : a933            >            lda #$33     ;precharge accu
38e4 : 28              >            plp
                       >
38e5 : 1f5206          >        bbr 1,zpt,fail10324
38e8 : 9f5206          >        bbs 1,zpt,ok10324
                       >        trap            ;bbs branch not taken
38eb : 20c761          >        jsr report_error
                       >
38ee :                 >fail10324
                       >        trap            ;bbr branch taken
38ee : 20c761          >        jsr report_error
                       >
38f1 :                 >ok10324   
                       >        tst_a $33,0
38f1 : 08              >            php         ;save flags
38f2 : c933            >            cmp #$33     ;test result
                       >            trap_ne
38f4 : f003            >        beq skip0330
                       >        trap            ;failed not equal (non zero)
38f6 : 20c761          >        jsr report_error
                       >
38f9 :                 >skip0330
                       >
38f9 : 68              >            pla         ;load status
38fa : 48              >            pha
                       >            cmp_flag 0
38fb : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
38fd : f003            >        beq skip0333
                       >        trap            ;failed not equal (non zero)
38ff : 20c761          >        jsr report_error
                       >
3902 :                 >skip0333
                       >
3902 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
3903 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
3905 : 48              >            pha         ;use stack to load status
3906 : a9cc            >            lda #$cc     ;precharge accu
3908 : 28              >            plp
                       >
3909 : 1f5206          >        bbr 1,zpt,fail20324
390c : 9f5206          >        bbs 1,zpt,ok20324
                       >        trap            ;bbs branch not taken
390f : 20c761          >        jsr report_error
                       >
3912 :                 >fail20324 
                       >        trap            ;bbr branch taken
3912 : 20c761          >        jsr report_error
                       >
3915 :                 >ok20324   
                       >        tst_a $cc,$ff
3915 : 08              >            php         ;save flags
3916 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
3918 : f003            >        beq skip0340
                       >        trap            ;failed not equal (non zero)
391a : 20c761          >        jsr report_error
                       >
391d :                 >skip0340
                       >
391d : 68              >            pla         ;load status
391e : 48              >            pha
                       >            cmp_flag $ff
391f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3921 : f003            >        beq skip0343
                       >        trap            ;failed not equal (non zero)
3923 : 20c761          >        jsr report_error
                       >
3926 :                 >skip0343
                       >
3926 : 28              >            plp         ;restore status
                       >
3927 : a552            >        lda zpt
3929 : c902            >        cmp #(1<<1)
                       >        trap_ne         ;zp altered
392b : f003            >        beq skip0345
                       >        trap            ;failed not equal (non zero)
392d : 20c761          >        jsr report_error
                       >
3930 :                 >skip0345
                       >
3930 : a9fd            >        lda #$ff-(1<<1) ;testing 1 bit off
3932 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
3934 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
3936 : 48              >            pha         ;use stack to load status
3937 : a933            >            lda #$33     ;precharge accu
3939 : 28              >            plp
                       >
393a : 9f5206          >        bbs 1,zpt,fail30324
393d : 1f5206          >        bbr 1,zpt,ok30324
                       >        trap            ;bbr branch not taken
3940 : 20c761          >        jsr report_error
                       >
3943 :                 >fail30324 
                       >        trap            ;bbs branch taken
3943 : 20c761          >        jsr report_error
                       >
3946 :                 >ok30324   
                       >        tst_a $33,0
3946 : 08              >            php         ;save flags
3947 : c933            >            cmp #$33     ;test result
                       >            trap_ne
3949 : f003            >        beq skip0352
                       >        trap            ;failed not equal (non zero)
394b : 20c761          >        jsr report_error
                       >
394e :                 >skip0352
                       >
394e : 68              >            pla         ;load status
394f : 48              >            pha
                       >            cmp_flag 0
3950 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3952 : f003            >        beq skip0355
                       >        trap            ;failed not equal (non zero)
3954 : 20c761          >        jsr report_error
                       >
3957 :                 >skip0355
                       >
3957 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
3958 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
395a : 48              >            pha         ;use stack to load status
395b : a9cc            >            lda #$cc     ;precharge accu
395d : 28              >            plp
                       >
395e : 9f5206          >        bbs 1,zpt,fail40324
3961 : 1f5206          >        bbr 1,zpt,ok40324
                       >        trap            ;bbr branch not taken
3964 : 20c761          >        jsr report_error
                       >
3967 :                 >fail40324 
                       >        trap            ;bbs branch taken
3967 : 20c761          >        jsr report_error
                       >
396a :                 >ok40324   
                       >        tst_a $cc,$ff
396a : 08              >            php         ;save flags
396b : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
396d : f003            >        beq skip0362
                       >        trap            ;failed not equal (non zero)
396f : 20c761          >        jsr report_error
                       >
3972 :                 >skip0362
                       >
3972 : 68              >            pla         ;load status
3973 : 48              >            pha
                       >            cmp_flag $ff
3974 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3976 : f003            >        beq skip0365
                       >        trap            ;failed not equal (non zero)
3978 : 20c761          >        jsr report_error
                       >
397b :                 >skip0365
                       >
397b : 28              >            plp         ;restore status
                       >
397c : a552            >        lda zpt
397e : c9fd            >        cmp #$ff-(1<<1)
                       >        trap_ne         ;zp altered
3980 : f003            >        beq skip0367
                       >        trap            ;failed not equal (non zero)
3982 : 20c761          >        jsr report_error
                       >
3985 :                 >skip0367
                       >
                        
                                bbt 2
3985 : a904            >        lda #(1<<2)    ;testing 1 bit on
3987 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
3989 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
398b : 48              >            pha         ;use stack to load status
398c : a933            >            lda #$33     ;precharge accu
398e : 28              >            plp
                       >
398f : 2f5206          >        bbr 2,zpt,fail10369
3992 : af5206          >        bbs 2,zpt,ok10369
                       >        trap            ;bbs branch not taken
3995 : 20c761          >        jsr report_error
                       >
3998 :                 >fail10369
                       >        trap            ;bbr branch taken
3998 : 20c761          >        jsr report_error
                       >
399b :                 >ok10369   
                       >        tst_a $33,0
399b : 08              >            php         ;save flags
399c : c933            >            cmp #$33     ;test result
                       >            trap_ne
399e : f003            >        beq skip0375
                       >        trap            ;failed not equal (non zero)
39a0 : 20c761          >        jsr report_error
                       >
39a3 :                 >skip0375
                       >
39a3 : 68              >            pla         ;load status
39a4 : 48              >            pha
                       >            cmp_flag 0
39a5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
39a7 : f003            >        beq skip0378
                       >        trap            ;failed not equal (non zero)
39a9 : 20c761          >        jsr report_error
                       >
39ac :                 >skip0378
                       >
39ac : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
39ad : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
39af : 48              >            pha         ;use stack to load status
39b0 : a9cc            >            lda #$cc     ;precharge accu
39b2 : 28              >            plp
                       >
39b3 : 2f5206          >        bbr 2,zpt,fail20369
39b6 : af5206          >        bbs 2,zpt,ok20369
                       >        trap            ;bbs branch not taken
39b9 : 20c761          >        jsr report_error
                       >
39bc :                 >fail20369 
                       >        trap            ;bbr branch taken
39bc : 20c761          >        jsr report_error
                       >
39bf :                 >ok20369   
                       >        tst_a $cc,$ff
39bf : 08              >            php         ;save flags
39c0 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
39c2 : f003            >        beq skip0385
                       >        trap            ;failed not equal (non zero)
39c4 : 20c761          >        jsr report_error
                       >
39c7 :                 >skip0385
                       >
39c7 : 68              >            pla         ;load status
39c8 : 48              >            pha
                       >            cmp_flag $ff
39c9 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
39cb : f003            >        beq skip0388
                       >        trap            ;failed not equal (non zero)
39cd : 20c761          >        jsr report_error
                       >
39d0 :                 >skip0388
                       >
39d0 : 28              >            plp         ;restore status
                       >
39d1 : a552            >        lda zpt
39d3 : c904            >        cmp #(1<<2)
                       >        trap_ne         ;zp altered
39d5 : f003            >        beq skip0390
                       >        trap            ;failed not equal (non zero)
39d7 : 20c761          >        jsr report_error
                       >
39da :                 >skip0390
                       >
39da : a9fb            >        lda #$ff-(1<<2) ;testing 1 bit off
39dc : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
39de : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
39e0 : 48              >            pha         ;use stack to load status
39e1 : a933            >            lda #$33     ;precharge accu
39e3 : 28              >            plp
                       >
39e4 : af5206          >        bbs 2,zpt,fail30369
39e7 : 2f5206          >        bbr 2,zpt,ok30369
                       >        trap            ;bbr branch not taken
39ea : 20c761          >        jsr report_error
                       >
39ed :                 >fail30369 
                       >        trap            ;bbs branch taken
39ed : 20c761          >        jsr report_error
                       >
39f0 :                 >ok30369   
                       >        tst_a $33,0
39f0 : 08              >            php         ;save flags
39f1 : c933            >            cmp #$33     ;test result
                       >            trap_ne
39f3 : f003            >        beq skip0397
                       >        trap            ;failed not equal (non zero)
39f5 : 20c761          >        jsr report_error
                       >
39f8 :                 >skip0397
                       >
39f8 : 68              >            pla         ;load status
39f9 : 48              >            pha
                       >            cmp_flag 0
39fa : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
39fc : f003            >        beq skip0400
                       >        trap            ;failed not equal (non zero)
39fe : 20c761          >        jsr report_error
                       >
3a01 :                 >skip0400
                       >
3a01 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
3a02 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
3a04 : 48              >            pha         ;use stack to load status
3a05 : a9cc            >            lda #$cc     ;precharge accu
3a07 : 28              >            plp
                       >
3a08 : af5206          >        bbs 2,zpt,fail40369
3a0b : 2f5206          >        bbr 2,zpt,ok40369
                       >        trap            ;bbr branch not taken
3a0e : 20c761          >        jsr report_error
                       >
3a11 :                 >fail40369 
                       >        trap            ;bbs branch taken
3a11 : 20c761          >        jsr report_error
                       >
3a14 :                 >ok40369   
                       >        tst_a $cc,$ff
3a14 : 08              >            php         ;save flags
3a15 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
3a17 : f003            >        beq skip0407
                       >        trap            ;failed not equal (non zero)
3a19 : 20c761          >        jsr report_error
                       >
3a1c :                 >skip0407
                       >
3a1c : 68              >            pla         ;load status
3a1d : 48              >            pha
                       >            cmp_flag $ff
3a1e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3a20 : f003            >        beq skip0410
                       >        trap            ;failed not equal (non zero)
3a22 : 20c761          >        jsr report_error
                       >
3a25 :                 >skip0410
                       >
3a25 : 28              >            plp         ;restore status
                       >
3a26 : a552            >        lda zpt
3a28 : c9fb            >        cmp #$ff-(1<<2)
                       >        trap_ne         ;zp altered
3a2a : f003            >        beq skip0412
                       >        trap            ;failed not equal (non zero)
3a2c : 20c761          >        jsr report_error
                       >
3a2f :                 >skip0412
                       >
                        
                                bbt 3
3a2f : a908            >        lda #(1<<3)    ;testing 1 bit on
3a31 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
3a33 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
3a35 : 48              >            pha         ;use stack to load status
3a36 : a933            >            lda #$33     ;precharge accu
3a38 : 28              >            plp
                       >
3a39 : 3f5206          >        bbr 3,zpt,fail10414
3a3c : bf5206          >        bbs 3,zpt,ok10414
                       >        trap            ;bbs branch not taken
3a3f : 20c761          >        jsr report_error
                       >
3a42 :                 >fail10414
                       >        trap            ;bbr branch taken
3a42 : 20c761          >        jsr report_error
                       >
3a45 :                 >ok10414   
                       >        tst_a $33,0
3a45 : 08              >            php         ;save flags
3a46 : c933            >            cmp #$33     ;test result
                       >            trap_ne
3a48 : f003            >        beq skip0420
                       >        trap            ;failed not equal (non zero)
3a4a : 20c761          >        jsr report_error
                       >
3a4d :                 >skip0420
                       >
3a4d : 68              >            pla         ;load status
3a4e : 48              >            pha
                       >            cmp_flag 0
3a4f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3a51 : f003            >        beq skip0423
                       >        trap            ;failed not equal (non zero)
3a53 : 20c761          >        jsr report_error
                       >
3a56 :                 >skip0423
                       >
3a56 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
3a57 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
3a59 : 48              >            pha         ;use stack to load status
3a5a : a9cc            >            lda #$cc     ;precharge accu
3a5c : 28              >            plp
                       >
3a5d : 3f5206          >        bbr 3,zpt,fail20414
3a60 : bf5206          >        bbs 3,zpt,ok20414
                       >        trap            ;bbs branch not taken
3a63 : 20c761          >        jsr report_error
                       >
3a66 :                 >fail20414 
                       >        trap            ;bbr branch taken
3a66 : 20c761          >        jsr report_error
                       >
3a69 :                 >ok20414   
                       >        tst_a $cc,$ff
3a69 : 08              >            php         ;save flags
3a6a : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
3a6c : f003            >        beq skip0430
                       >        trap            ;failed not equal (non zero)
3a6e : 20c761          >        jsr report_error
                       >
3a71 :                 >skip0430
                       >
3a71 : 68              >            pla         ;load status
3a72 : 48              >            pha
                       >            cmp_flag $ff
3a73 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3a75 : f003            >        beq skip0433
                       >        trap            ;failed not equal (non zero)
3a77 : 20c761          >        jsr report_error
                       >
3a7a :                 >skip0433
                       >
3a7a : 28              >            plp         ;restore status
                       >
3a7b : a552            >        lda zpt
3a7d : c908            >        cmp #(1<<3)
                       >        trap_ne         ;zp altered
3a7f : f003            >        beq skip0435
                       >        trap            ;failed not equal (non zero)
3a81 : 20c761          >        jsr report_error
                       >
3a84 :                 >skip0435
                       >
3a84 : a9f7            >        lda #$ff-(1<<3) ;testing 1 bit off
3a86 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
3a88 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
3a8a : 48              >            pha         ;use stack to load status
3a8b : a933            >            lda #$33     ;precharge accu
3a8d : 28              >            plp
                       >
3a8e : bf5206          >        bbs 3,zpt,fail30414
3a91 : 3f5206          >        bbr 3,zpt,ok30414
                       >        trap            ;bbr branch not taken
3a94 : 20c761          >        jsr report_error
                       >
3a97 :                 >fail30414 
                       >        trap            ;bbs branch taken
3a97 : 20c761          >        jsr report_error
                       >
3a9a :                 >ok30414   
                       >        tst_a $33,0
3a9a : 08              >            php         ;save flags
3a9b : c933            >            cmp #$33     ;test result
                       >            trap_ne
3a9d : f003            >        beq skip0442
                       >        trap            ;failed not equal (non zero)
3a9f : 20c761          >        jsr report_error
                       >
3aa2 :                 >skip0442
                       >
3aa2 : 68              >            pla         ;load status
3aa3 : 48              >            pha
                       >            cmp_flag 0
3aa4 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3aa6 : f003            >        beq skip0445
                       >        trap            ;failed not equal (non zero)
3aa8 : 20c761          >        jsr report_error
                       >
3aab :                 >skip0445
                       >
3aab : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
3aac : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
3aae : 48              >            pha         ;use stack to load status
3aaf : a9cc            >            lda #$cc     ;precharge accu
3ab1 : 28              >            plp
                       >
3ab2 : bf5206          >        bbs 3,zpt,fail40414
3ab5 : 3f5206          >        bbr 3,zpt,ok40414
                       >        trap            ;bbr branch not taken
3ab8 : 20c761          >        jsr report_error
                       >
3abb :                 >fail40414 
                       >        trap            ;bbs branch taken
3abb : 20c761          >        jsr report_error
                       >
3abe :                 >ok40414   
                       >        tst_a $cc,$ff
3abe : 08              >            php         ;save flags
3abf : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
3ac1 : f003            >        beq skip0452
                       >        trap            ;failed not equal (non zero)
3ac3 : 20c761          >        jsr report_error
                       >
3ac6 :                 >skip0452
                       >
3ac6 : 68              >            pla         ;load status
3ac7 : 48              >            pha
                       >            cmp_flag $ff
3ac8 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3aca : f003            >        beq skip0455
                       >        trap            ;failed not equal (non zero)
3acc : 20c761          >        jsr report_error
                       >
3acf :                 >skip0455
                       >
3acf : 28              >            plp         ;restore status
                       >
3ad0 : a552            >        lda zpt
3ad2 : c9f7            >        cmp #$ff-(1<<3)
                       >        trap_ne         ;zp altered
3ad4 : f003            >        beq skip0457
                       >        trap            ;failed not equal (non zero)
3ad6 : 20c761          >        jsr report_error
                       >
3ad9 :                 >skip0457
                       >
                        
                                bbt 4
3ad9 : a910            >        lda #(1<<4)    ;testing 1 bit on
3adb : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
3add : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
3adf : 48              >            pha         ;use stack to load status
3ae0 : a933            >            lda #$33     ;precharge accu
3ae2 : 28              >            plp
                       >
3ae3 : 4f5206          >        bbr 4,zpt,fail10459
3ae6 : cf5206          >        bbs 4,zpt,ok10459
                       >        trap            ;bbs branch not taken
3ae9 : 20c761          >        jsr report_error
                       >
3aec :                 >fail10459
                       >        trap            ;bbr branch taken
3aec : 20c761          >        jsr report_error
                       >
3aef :                 >ok10459   
                       >        tst_a $33,0
3aef : 08              >            php         ;save flags
3af0 : c933            >            cmp #$33     ;test result
                       >            trap_ne
3af2 : f003            >        beq skip0465
                       >        trap            ;failed not equal (non zero)
3af4 : 20c761          >        jsr report_error
                       >
3af7 :                 >skip0465
                       >
3af7 : 68              >            pla         ;load status
3af8 : 48              >            pha
                       >            cmp_flag 0
3af9 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3afb : f003            >        beq skip0468
                       >        trap            ;failed not equal (non zero)
3afd : 20c761          >        jsr report_error
                       >
3b00 :                 >skip0468
                       >
3b00 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
3b01 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
3b03 : 48              >            pha         ;use stack to load status
3b04 : a9cc            >            lda #$cc     ;precharge accu
3b06 : 28              >            plp
                       >
3b07 : 4f5206          >        bbr 4,zpt,fail20459
3b0a : cf5206          >        bbs 4,zpt,ok20459
                       >        trap            ;bbs branch not taken
3b0d : 20c761          >        jsr report_error
                       >
3b10 :                 >fail20459 
                       >        trap            ;bbr branch taken
3b10 : 20c761          >        jsr report_error
                       >
3b13 :                 >ok20459   
                       >        tst_a $cc,$ff
3b13 : 08              >            php         ;save flags
3b14 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
3b16 : f003            >        beq skip0475
                       >        trap            ;failed not equal (non zero)
3b18 : 20c761          >        jsr report_error
                       >
3b1b :                 >skip0475
                       >
3b1b : 68              >            pla         ;load status
3b1c : 48              >            pha
                       >            cmp_flag $ff
3b1d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3b1f : f003            >        beq skip0478
                       >        trap            ;failed not equal (non zero)
3b21 : 20c761          >        jsr report_error
                       >
3b24 :                 >skip0478
                       >
3b24 : 28              >            plp         ;restore status
                       >
3b25 : a552            >        lda zpt
3b27 : c910            >        cmp #(1<<4)
                       >        trap_ne         ;zp altered
3b29 : f003            >        beq skip0480
                       >        trap            ;failed not equal (non zero)
3b2b : 20c761          >        jsr report_error
                       >
3b2e :                 >skip0480
                       >
3b2e : a9ef            >        lda #$ff-(1<<4) ;testing 1 bit off
3b30 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
3b32 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
3b34 : 48              >            pha         ;use stack to load status
3b35 : a933            >            lda #$33     ;precharge accu
3b37 : 28              >            plp
                       >
3b38 : cf5206          >        bbs 4,zpt,fail30459
3b3b : 4f5206          >        bbr 4,zpt,ok30459
                       >        trap            ;bbr branch not taken
3b3e : 20c761          >        jsr report_error
                       >
3b41 :                 >fail30459 
                       >        trap            ;bbs branch taken
3b41 : 20c761          >        jsr report_error
                       >
3b44 :                 >ok30459   
                       >        tst_a $33,0
3b44 : 08              >            php         ;save flags
3b45 : c933            >            cmp #$33     ;test result
                       >            trap_ne
3b47 : f003            >        beq skip0487
                       >        trap            ;failed not equal (non zero)
3b49 : 20c761          >        jsr report_error
                       >
3b4c :                 >skip0487
                       >
3b4c : 68              >            pla         ;load status
3b4d : 48              >            pha
                       >            cmp_flag 0
3b4e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3b50 : f003            >        beq skip0490
                       >        trap            ;failed not equal (non zero)
3b52 : 20c761          >        jsr report_error
                       >
3b55 :                 >skip0490
                       >
3b55 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
3b56 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
3b58 : 48              >            pha         ;use stack to load status
3b59 : a9cc            >            lda #$cc     ;precharge accu
3b5b : 28              >            plp
                       >
3b5c : cf5206          >        bbs 4,zpt,fail40459
3b5f : 4f5206          >        bbr 4,zpt,ok40459
                       >        trap            ;bbr branch not taken
3b62 : 20c761          >        jsr report_error
                       >
3b65 :                 >fail40459 
                       >        trap            ;bbs branch taken
3b65 : 20c761          >        jsr report_error
                       >
3b68 :                 >ok40459   
                       >        tst_a $cc,$ff
3b68 : 08              >            php         ;save flags
3b69 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
3b6b : f003            >        beq skip0497
                       >        trap            ;failed not equal (non zero)
3b6d : 20c761          >        jsr report_error
                       >
3b70 :                 >skip0497
                       >
3b70 : 68              >            pla         ;load status
3b71 : 48              >            pha
                       >            cmp_flag $ff
3b72 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3b74 : f003            >        beq skip0500
                       >        trap            ;failed not equal (non zero)
3b76 : 20c761          >        jsr report_error
                       >
3b79 :                 >skip0500
                       >
3b79 : 28              >            plp         ;restore status
                       >
3b7a : a552            >        lda zpt
3b7c : c9ef            >        cmp #$ff-(1<<4)
                       >        trap_ne         ;zp altered
3b7e : f003            >        beq skip0502
                       >        trap            ;failed not equal (non zero)
3b80 : 20c761          >        jsr report_error
                       >
3b83 :                 >skip0502
                       >
                        
                                bbt 5
3b83 : a920            >        lda #(1<<5)    ;testing 1 bit on
3b85 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
3b87 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
3b89 : 48              >            pha         ;use stack to load status
3b8a : a933            >            lda #$33     ;precharge accu
3b8c : 28              >            plp
                       >
3b8d : 5f5206          >        bbr 5,zpt,fail10504
3b90 : df5206          >        bbs 5,zpt,ok10504
                       >        trap            ;bbs branch not taken
3b93 : 20c761          >        jsr report_error
                       >
3b96 :                 >fail10504
                       >        trap            ;bbr branch taken
3b96 : 20c761          >        jsr report_error
                       >
3b99 :                 >ok10504   
                       >        tst_a $33,0
3b99 : 08              >            php         ;save flags
3b9a : c933            >            cmp #$33     ;test result
                       >            trap_ne
3b9c : f003            >        beq skip0510
                       >        trap            ;failed not equal (non zero)
3b9e : 20c761          >        jsr report_error
                       >
3ba1 :                 >skip0510
                       >
3ba1 : 68              >            pla         ;load status
3ba2 : 48              >            pha
                       >            cmp_flag 0
3ba3 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3ba5 : f003            >        beq skip0513
                       >        trap            ;failed not equal (non zero)
3ba7 : 20c761          >        jsr report_error
                       >
3baa :                 >skip0513
                       >
3baa : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
3bab : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
3bad : 48              >            pha         ;use stack to load status
3bae : a9cc            >            lda #$cc     ;precharge accu
3bb0 : 28              >            plp
                       >
3bb1 : 5f5206          >        bbr 5,zpt,fail20504
3bb4 : df5206          >        bbs 5,zpt,ok20504
                       >        trap            ;bbs branch not taken
3bb7 : 20c761          >        jsr report_error
                       >
3bba :                 >fail20504 
                       >        trap            ;bbr branch taken
3bba : 20c761          >        jsr report_error
                       >
3bbd :                 >ok20504   
                       >        tst_a $cc,$ff
3bbd : 08              >            php         ;save flags
3bbe : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
3bc0 : f003            >        beq skip0520
                       >        trap            ;failed not equal (non zero)
3bc2 : 20c761          >        jsr report_error
                       >
3bc5 :                 >skip0520
                       >
3bc5 : 68              >            pla         ;load status
3bc6 : 48              >            pha
                       >            cmp_flag $ff
3bc7 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3bc9 : f003            >        beq skip0523
                       >        trap            ;failed not equal (non zero)
3bcb : 20c761          >        jsr report_error
                       >
3bce :                 >skip0523
                       >
3bce : 28              >            plp         ;restore status
                       >
3bcf : a552            >        lda zpt
3bd1 : c920            >        cmp #(1<<5)
                       >        trap_ne         ;zp altered
3bd3 : f003            >        beq skip0525
                       >        trap            ;failed not equal (non zero)
3bd5 : 20c761          >        jsr report_error
                       >
3bd8 :                 >skip0525
                       >
3bd8 : a9df            >        lda #$ff-(1<<5) ;testing 1 bit off
3bda : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
3bdc : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
3bde : 48              >            pha         ;use stack to load status
3bdf : a933            >            lda #$33     ;precharge accu
3be1 : 28              >            plp
                       >
3be2 : df5206          >        bbs 5,zpt,fail30504
3be5 : 5f5206          >        bbr 5,zpt,ok30504
                       >        trap            ;bbr branch not taken
3be8 : 20c761          >        jsr report_error
                       >
3beb :                 >fail30504 
                       >        trap            ;bbs branch taken
3beb : 20c761          >        jsr report_error
                       >
3bee :                 >ok30504   
                       >        tst_a $33,0
3bee : 08              >            php         ;save flags
3bef : c933            >            cmp #$33     ;test result
                       >            trap_ne
3bf1 : f003            >        beq skip0532
                       >        trap            ;failed not equal (non zero)
3bf3 : 20c761          >        jsr report_error
                       >
3bf6 :                 >skip0532
                       >
3bf6 : 68              >            pla         ;load status
3bf7 : 48              >            pha
                       >            cmp_flag 0
3bf8 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3bfa : f003            >        beq skip0535
                       >        trap            ;failed not equal (non zero)
3bfc : 20c761          >        jsr report_error
                       >
3bff :                 >skip0535
                       >
3bff : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
3c00 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
3c02 : 48              >            pha         ;use stack to load status
3c03 : a9cc            >            lda #$cc     ;precharge accu
3c05 : 28              >            plp
                       >
3c06 : df5206          >        bbs 5,zpt,fail40504
3c09 : 5f5206          >        bbr 5,zpt,ok40504
                       >        trap            ;bbr branch not taken
3c0c : 20c761          >        jsr report_error
                       >
3c0f :                 >fail40504 
                       >        trap            ;bbs branch taken
3c0f : 20c761          >        jsr report_error
                       >
3c12 :                 >ok40504   
                       >        tst_a $cc,$ff
3c12 : 08              >            php         ;save flags
3c13 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
3c15 : f003            >        beq skip0542
                       >        trap            ;failed not equal (non zero)
3c17 : 20c761          >        jsr report_error
                       >
3c1a :                 >skip0542
                       >
3c1a : 68              >            pla         ;load status
3c1b : 48              >            pha
                       >            cmp_flag $ff
3c1c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3c1e : f003            >        beq skip0545
                       >        trap            ;failed not equal (non zero)
3c20 : 20c761          >        jsr report_error
                       >
3c23 :                 >skip0545
                       >
3c23 : 28              >            plp         ;restore status
                       >
3c24 : a552            >        lda zpt
3c26 : c9df            >        cmp #$ff-(1<<5)
                       >        trap_ne         ;zp altered
3c28 : f003            >        beq skip0547
                       >        trap            ;failed not equal (non zero)
3c2a : 20c761          >        jsr report_error
                       >
3c2d :                 >skip0547
                       >
                        
                                bbt 6
3c2d : a940            >        lda #(1<<6)    ;testing 1 bit on
3c2f : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
3c31 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
3c33 : 48              >            pha         ;use stack to load status
3c34 : a933            >            lda #$33     ;precharge accu
3c36 : 28              >            plp
                       >
3c37 : 6f5206          >        bbr 6,zpt,fail10549
3c3a : ef5206          >        bbs 6,zpt,ok10549
                       >        trap            ;bbs branch not taken
3c3d : 20c761          >        jsr report_error
                       >
3c40 :                 >fail10549
                       >        trap            ;bbr branch taken
3c40 : 20c761          >        jsr report_error
                       >
3c43 :                 >ok10549   
                       >        tst_a $33,0
3c43 : 08              >            php         ;save flags
3c44 : c933            >            cmp #$33     ;test result
                       >            trap_ne
3c46 : f003            >        beq skip0555
                       >        trap            ;failed not equal (non zero)
3c48 : 20c761          >        jsr report_error
                       >
3c4b :                 >skip0555
                       >
3c4b : 68              >            pla         ;load status
3c4c : 48              >            pha
                       >            cmp_flag 0
3c4d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3c4f : f003            >        beq skip0558
                       >        trap            ;failed not equal (non zero)
3c51 : 20c761          >        jsr report_error
                       >
3c54 :                 >skip0558
                       >
3c54 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
3c55 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
3c57 : 48              >            pha         ;use stack to load status
3c58 : a9cc            >            lda #$cc     ;precharge accu
3c5a : 28              >            plp
                       >
3c5b : 6f5206          >        bbr 6,zpt,fail20549
3c5e : ef5206          >        bbs 6,zpt,ok20549
                       >        trap            ;bbs branch not taken
3c61 : 20c761          >        jsr report_error
                       >
3c64 :                 >fail20549 
                       >        trap            ;bbr branch taken
3c64 : 20c761          >        jsr report_error
                       >
3c67 :                 >ok20549   
                       >        tst_a $cc,$ff
3c67 : 08              >            php         ;save flags
3c68 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
3c6a : f003            >        beq skip0565
                       >        trap            ;failed not equal (non zero)
3c6c : 20c761          >        jsr report_error
                       >
3c6f :                 >skip0565
                       >
3c6f : 68              >            pla         ;load status
3c70 : 48              >            pha
                       >            cmp_flag $ff
3c71 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3c73 : f003            >        beq skip0568
                       >        trap            ;failed not equal (non zero)
3c75 : 20c761          >        jsr report_error
                       >
3c78 :                 >skip0568
                       >
3c78 : 28              >            plp         ;restore status
                       >
3c79 : a552            >        lda zpt
3c7b : c940            >        cmp #(1<<6)
                       >        trap_ne         ;zp altered
3c7d : f003            >        beq skip0570
                       >        trap            ;failed not equal (non zero)
3c7f : 20c761          >        jsr report_error
                       >
3c82 :                 >skip0570
                       >
3c82 : a9bf            >        lda #$ff-(1<<6) ;testing 1 bit off
3c84 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
3c86 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
3c88 : 48              >            pha         ;use stack to load status
3c89 : a933            >            lda #$33     ;precharge accu
3c8b : 28              >            plp
                       >
3c8c : ef5206          >        bbs 6,zpt,fail30549
3c8f : 6f5206          >        bbr 6,zpt,ok30549
                       >        trap            ;bbr branch not taken
3c92 : 20c761          >        jsr report_error
                       >
3c95 :                 >fail30549 
                       >        trap            ;bbs branch taken
3c95 : 20c761          >        jsr report_error
                       >
3c98 :                 >ok30549   
                       >        tst_a $33,0
3c98 : 08              >            php         ;save flags
3c99 : c933            >            cmp #$33     ;test result
                       >            trap_ne
3c9b : f003            >        beq skip0577
                       >        trap            ;failed not equal (non zero)
3c9d : 20c761          >        jsr report_error
                       >
3ca0 :                 >skip0577
                       >
3ca0 : 68              >            pla         ;load status
3ca1 : 48              >            pha
                       >            cmp_flag 0
3ca2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3ca4 : f003            >        beq skip0580
                       >        trap            ;failed not equal (non zero)
3ca6 : 20c761          >        jsr report_error
                       >
3ca9 :                 >skip0580
                       >
3ca9 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
3caa : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
3cac : 48              >            pha         ;use stack to load status
3cad : a9cc            >            lda #$cc     ;precharge accu
3caf : 28              >            plp
                       >
3cb0 : ef5206          >        bbs 6,zpt,fail40549
3cb3 : 6f5206          >        bbr 6,zpt,ok40549
                       >        trap            ;bbr branch not taken
3cb6 : 20c761          >        jsr report_error
                       >
3cb9 :                 >fail40549 
                       >        trap            ;bbs branch taken
3cb9 : 20c761          >        jsr report_error
                       >
3cbc :                 >ok40549   
                       >        tst_a $cc,$ff
3cbc : 08              >            php         ;save flags
3cbd : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
3cbf : f003            >        beq skip0587
                       >        trap            ;failed not equal (non zero)
3cc1 : 20c761          >        jsr report_error
                       >
3cc4 :                 >skip0587
                       >
3cc4 : 68              >            pla         ;load status
3cc5 : 48              >            pha
                       >            cmp_flag $ff
3cc6 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3cc8 : f003            >        beq skip0590
                       >        trap            ;failed not equal (non zero)
3cca : 20c761          >        jsr report_error
                       >
3ccd :                 >skip0590
                       >
3ccd : 28              >            plp         ;restore status
                       >
3cce : a552            >        lda zpt
3cd0 : c9bf            >        cmp #$ff-(1<<6)
                       >        trap_ne         ;zp altered
3cd2 : f003            >        beq skip0592
                       >        trap            ;failed not equal (non zero)
3cd4 : 20c761          >        jsr report_error
                       >
3cd7 :                 >skip0592
                       >
                        
                                bbt 7
3cd7 : a980            >        lda #(1<<7)    ;testing 1 bit on
3cd9 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
3cdb : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
3cdd : 48              >            pha         ;use stack to load status
3cde : a933            >            lda #$33     ;precharge accu
3ce0 : 28              >            plp
                       >
3ce1 : 7f5206          >        bbr 7,zpt,fail10594
3ce4 : ff5206          >        bbs 7,zpt,ok10594
                       >        trap            ;bbs branch not taken
3ce7 : 20c761          >        jsr report_error
                       >
3cea :                 >fail10594
                       >        trap            ;bbr branch taken
3cea : 20c761          >        jsr report_error
                       >
3ced :                 >ok10594   
                       >        tst_a $33,0
3ced : 08              >            php         ;save flags
3cee : c933            >            cmp #$33     ;test result
                       >            trap_ne
3cf0 : f003            >        beq skip0600
                       >        trap            ;failed not equal (non zero)
3cf2 : 20c761          >        jsr report_error
                       >
3cf5 :                 >skip0600
                       >
3cf5 : 68              >            pla         ;load status
3cf6 : 48              >            pha
                       >            cmp_flag 0
3cf7 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3cf9 : f003            >        beq skip0603
                       >        trap            ;failed not equal (non zero)
3cfb : 20c761          >        jsr report_error
                       >
3cfe :                 >skip0603
                       >
3cfe : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
3cff : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
3d01 : 48              >            pha         ;use stack to load status
3d02 : a9cc            >            lda #$cc     ;precharge accu
3d04 : 28              >            plp
                       >
3d05 : 7f5206          >        bbr 7,zpt,fail20594
3d08 : ff5206          >        bbs 7,zpt,ok20594
                       >        trap            ;bbs branch not taken
3d0b : 20c761          >        jsr report_error
                       >
3d0e :                 >fail20594 
                       >        trap            ;bbr branch taken
3d0e : 20c761          >        jsr report_error
                       >
3d11 :                 >ok20594   
                       >        tst_a $cc,$ff
3d11 : 08              >            php         ;save flags
3d12 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
3d14 : f003            >        beq skip0610
                       >        trap            ;failed not equal (non zero)
3d16 : 20c761          >        jsr report_error
                       >
3d19 :                 >skip0610
                       >
3d19 : 68              >            pla         ;load status
3d1a : 48              >            pha
                       >            cmp_flag $ff
3d1b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3d1d : f003            >        beq skip0613
                       >        trap            ;failed not equal (non zero)
3d1f : 20c761          >        jsr report_error
                       >
3d22 :                 >skip0613
                       >
3d22 : 28              >            plp         ;restore status
                       >
3d23 : a552            >        lda zpt
3d25 : c980            >        cmp #(1<<7)
                       >        trap_ne         ;zp altered
3d27 : f003            >        beq skip0615
                       >        trap            ;failed not equal (non zero)
3d29 : 20c761          >        jsr report_error
                       >
3d2c :                 >skip0615
                       >
3d2c : a97f            >        lda #$ff-(1<<7) ;testing 1 bit off
3d2e : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
3d30 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
3d32 : 48              >            pha         ;use stack to load status
3d33 : a933            >            lda #$33     ;precharge accu
3d35 : 28              >            plp
                       >
3d36 : ff5206          >        bbs 7,zpt,fail30594
3d39 : 7f5206          >        bbr 7,zpt,ok30594
                       >        trap            ;bbr branch not taken
3d3c : 20c761          >        jsr report_error
                       >
3d3f :                 >fail30594 
                       >        trap            ;bbs branch taken
3d3f : 20c761          >        jsr report_error
                       >
3d42 :                 >ok30594   
                       >        tst_a $33,0
3d42 : 08              >            php         ;save flags
3d43 : c933            >            cmp #$33     ;test result
                       >            trap_ne
3d45 : f003            >        beq skip0622
                       >        trap            ;failed not equal (non zero)
3d47 : 20c761          >        jsr report_error
                       >
3d4a :                 >skip0622
                       >
3d4a : 68              >            pla         ;load status
3d4b : 48              >            pha
                       >            cmp_flag 0
3d4c : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3d4e : f003            >        beq skip0625
                       >        trap            ;failed not equal (non zero)
3d50 : 20c761          >        jsr report_error
                       >
3d53 :                 >skip0625
                       >
3d53 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
3d54 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
3d56 : 48              >            pha         ;use stack to load status
3d57 : a9cc            >            lda #$cc     ;precharge accu
3d59 : 28              >            plp
                       >
3d5a : ff5206          >        bbs 7,zpt,fail40594
3d5d : 7f5206          >        bbr 7,zpt,ok40594
                       >        trap            ;bbr branch not taken
3d60 : 20c761          >        jsr report_error
                       >
3d63 :                 >fail40594 
                       >        trap            ;bbs branch taken
3d63 : 20c761          >        jsr report_error
                       >
3d66 :                 >ok40594   
                       >        tst_a $cc,$ff
3d66 : 08              >            php         ;save flags
3d67 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
3d69 : f003            >        beq skip0632
                       >        trap            ;failed not equal (non zero)
3d6b : 20c761          >        jsr report_error
                       >
3d6e :                 >skip0632
                       >
3d6e : 68              >            pla         ;load status
3d6f : 48              >            pha
                       >            cmp_flag $ff
3d70 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3d72 : f003            >        beq skip0635
                       >        trap            ;failed not equal (non zero)
3d74 : 20c761          >        jsr report_error
                       >
3d77 :                 >skip0635
                       >
3d77 : 28              >            plp         ;restore status
                       >
3d78 : a552            >        lda zpt
3d7a : c97f            >        cmp #$ff-(1<<7)
                       >        trap_ne         ;zp altered
3d7c : f003            >        beq skip0637
                       >        trap            ;failed not equal (non zero)
3d7e : 20c761          >        jsr report_error
                       >
3d81 :                 >skip0637
                       >
                        
3d81 : e011                     cpx #$11
                                trap_ne         ;x overwritten
3d83 : f003            >        beq skip0639
                       >        trap            ;failed not equal (non zero)
3d85 : 20c761          >        jsr report_error
                       >
3d88 :                 >skip0639
                        
3d88 : c022                     cpy #$22
                                trap_ne         ;y overwritten
3d8a : f003            >        beq skip0641
                       >        trap            ;failed not equal (non zero)
3d8c : 20c761          >        jsr report_error
                       >
3d8f :                 >skip0641
                        
                                next_test 
3d8f : ad0232          >            lda test_case   ;previous test
3d92 : c906            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3d94 : f003            >        beq skip0644
                       >        trap            ;failed not equal (non zero)
3d96 : 20c761          >        jsr report_error
                       >
3d99 :                 >skip0644
                       >
0007 =                 >test_num = test_num + 1
3d99 : a907            >            lda #test_num   ;*** next tests' number
3d9b : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        bbrc    macro           ;\1 = bitnum
                                bbr \1,zpt,skip\?
                                eor #(1<<\1)       
                        skip\?
                                endm
                        bbsc    macro           ;\1 = bitnum
                                bbs \1,zpt,skip\?
                                eor #(1<<\1)       
                        skip\?
                                endm
                        
3d9e : a900                     lda #0          ;combined bit test
3da0 : 8552                     sta zpt
3da2 : a900             bbcl    lda #0
                                bbrc 0
3da4 : 0f5202          >        bbr 0,zpt,skip0646
3da7 : 4901            >        eor #(1<<0)       
3da9 :                 >skip0646
                        
                                bbrc 1
3da9 : 1f5202          >        bbr 1,zpt,skip0647
3dac : 4902            >        eor #(1<<1)       
3dae :                 >skip0647
                        
                                bbrc 2
3dae : 2f5202          >        bbr 2,zpt,skip0648
3db1 : 4904            >        eor #(1<<2)       
3db3 :                 >skip0648
                        
                                bbrc 3
3db3 : 3f5202          >        bbr 3,zpt,skip0649
3db6 : 4908            >        eor #(1<<3)       
3db8 :                 >skip0649
                        
                                bbrc 4
3db8 : 4f5202          >        bbr 4,zpt,skip0650
3dbb : 4910            >        eor #(1<<4)       
3dbd :                 >skip0650
                        
                                bbrc 5
3dbd : 5f5202          >        bbr 5,zpt,skip0651
3dc0 : 4920            >        eor #(1<<5)       
3dc2 :                 >skip0651
                        
                                bbrc 6
3dc2 : 6f5202          >        bbr 6,zpt,skip0652
3dc5 : 4940            >        eor #(1<<6)       
3dc7 :                 >skip0652
                        
                                bbrc 7
3dc7 : 7f5202          >        bbr 7,zpt,skip0653
3dca : 4980            >        eor #(1<<7)       
3dcc :                 >skip0653
                        
3dcc : 4552                     eor zpt
                                trap_ne         ;failed bbr bitnum in accu       
3dce : f003            >        beq skip0654
                       >        trap            ;failed not equal (non zero)
3dd0 : 20c761          >        jsr report_error
                       >
3dd3 :                 >skip0654
                        
3dd3 : a9ff                     lda #$ff
                                bbsc 0
3dd5 : 8f5202          >        bbs 0,zpt,skip0656
3dd8 : 4901            >        eor #(1<<0)       
3dda :                 >skip0656
                        
                                bbsc 1
3dda : 9f5202          >        bbs 1,zpt,skip0657
3ddd : 4902            >        eor #(1<<1)       
3ddf :                 >skip0657
                        
                                bbsc 2
3ddf : af5202          >        bbs 2,zpt,skip0658
3de2 : 4904            >        eor #(1<<2)       
3de4 :                 >skip0658
                        
                                bbsc 3
3de4 : bf5202          >        bbs 3,zpt,skip0659
3de7 : 4908            >        eor #(1<<3)       
3de9 :                 >skip0659
                        
                                bbsc 4
3de9 : cf5202          >        bbs 4,zpt,skip0660
3dec : 4910            >        eor #(1<<4)       
3dee :                 >skip0660
                        
                                bbsc 5
3dee : df5202          >        bbs 5,zpt,skip0661
3df1 : 4920            >        eor #(1<<5)       
3df3 :                 >skip0661
                        
                                bbsc 6
3df3 : ef5202          >        bbs 6,zpt,skip0662
3df6 : 4940            >        eor #(1<<6)       
3df8 :                 >skip0662
                        
                                bbsc 7
3df8 : ff5202          >        bbs 7,zpt,skip0663
3dfb : 4980            >        eor #(1<<7)       
3dfd :                 >skip0663
                        
3dfd : 4552                     eor zpt
                                trap_ne         ;failed bbs bitnum in accu       
3dff : f003            >        beq skip0664
                       >        trap            ;failed not equal (non zero)
3e01 : 20c761          >        jsr report_error
                       >
3e04 :                 >skip0664
                        
3e04 : e652                     inc zpt
3e06 : d09a                     bne bbcl
                                next_test            
3e08 : ad0232          >            lda test_case   ;previous test
3e0b : c907            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3e0d : f003            >        beq skip0667
                       >        trap            ;failed not equal (non zero)
3e0f : 20c761          >        jsr report_error
                       >
3e12 :                 >skip0667
                       >
0008 =                 >test_num = test_num + 1
3e12 : a908            >            lda #test_num   ;*** next tests' number
3e14 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                            endif
                            
                        ; testing NOP
                        
                        nop_test    macro       ;\1 = opcode, \2 = # of bytes
                                    ldy #$42
                                    ldx #4-\2
                                    db  \1          ;test nop length
                                if \2 = 1
                                    dex
                                    dex
                                endif
                                if \2 = 2
                                    iny
                                    dex
                                endif
                                if \2 = 3
                                    iny
                                    iny
                                endif
                                    dex
                                    trap_ne         ;wrong number of bytes
                                    set_a $ff-\1,0
                                    db  \1          ;test nop integrity - flags off
                                    nop
                                    nop
                                    tst_a $ff-\1,0
                                    set_a $aa-\1,$ff
                                    db  \1          ;test nop integrity - flags on
                                    nop
                                    nop
                                    tst_a $aa-\1,$ff
                                    cpy #$42
                                    trap_ne         ;y changed
                                    cpx #0
                                    trap_ne         ;x changed
                                    endm
                        
                            if skip_nop = 0
                                nop_test $02,2
3e17 : a042            >            ldy #$42
3e19 : a202            >            ldx #4-2
3e1b : 02              >            db  $02          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
3e1c : c8              >            iny
3e1d : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
3e1e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3e1f : f003            >        beq skip0670
                       >        trap            ;failed not equal (non zero)
3e21 : 20c761          >        jsr report_error
                       >
3e24 :                 >skip0670
                       >
                       >            set_a $ff-$02,0
                       >            load_flag 0
3e24 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3e26 : 48              >            pha         ;use stack to load status
3e27 : a9fd            >            lda #$ff-$02     ;precharge accu
3e29 : 28              >            plp
                       >
3e2a : 02              >            db  $02          ;test nop integrity - flags off
3e2b : ea              >            nop
3e2c : ea              >            nop
                       >            tst_a $ff-$02,0
3e2d : 08              >            php         ;save flags
3e2e : c9fd            >            cmp #$ff-$02     ;test result
                       >            trap_ne
3e30 : f003            >        beq skip0675
                       >        trap            ;failed not equal (non zero)
3e32 : 20c761          >        jsr report_error
                       >
3e35 :                 >skip0675
                       >
3e35 : 68              >            pla         ;load status
3e36 : 48              >            pha
                       >            cmp_flag 0
3e37 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3e39 : f003            >        beq skip0678
                       >        trap            ;failed not equal (non zero)
3e3b : 20c761          >        jsr report_error
                       >
3e3e :                 >skip0678
                       >
3e3e : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$02,$ff
                       >            load_flag $ff
3e3f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3e41 : 48              >            pha         ;use stack to load status
3e42 : a9a8            >            lda #$aa-$02     ;precharge accu
3e44 : 28              >            plp
                       >
3e45 : 02              >            db  $02          ;test nop integrity - flags on
3e46 : ea              >            nop
3e47 : ea              >            nop
                       >            tst_a $aa-$02,$ff
3e48 : 08              >            php         ;save flags
3e49 : c9a8            >            cmp #$aa-$02     ;test result
                       >            trap_ne
3e4b : f003            >        beq skip0683
                       >        trap            ;failed not equal (non zero)
3e4d : 20c761          >        jsr report_error
                       >
3e50 :                 >skip0683
                       >
3e50 : 68              >            pla         ;load status
3e51 : 48              >            pha
                       >            cmp_flag $ff
3e52 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3e54 : f003            >        beq skip0686
                       >        trap            ;failed not equal (non zero)
3e56 : 20c761          >        jsr report_error
                       >
3e59 :                 >skip0686
                       >
3e59 : 28              >            plp         ;restore status
                       >
3e5a : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3e5c : f003            >        beq skip0688
                       >        trap            ;failed not equal (non zero)
3e5e : 20c761          >        jsr report_error
                       >
3e61 :                 >skip0688
                       >
3e61 : e000            >            cpx #0
                       >            trap_ne         ;x changed
3e63 : f003            >        beq skip0690
                       >        trap            ;failed not equal (non zero)
3e65 : 20c761          >        jsr report_error
                       >
3e68 :                 >skip0690
                       >
                        
                                nop_test $22,2
3e68 : a042            >            ldy #$42
3e6a : a202            >            ldx #4-2
3e6c : 22              >            db  $22          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
3e6d : c8              >            iny
3e6e : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
3e6f : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3e70 : f003            >        beq skip0693
                       >        trap            ;failed not equal (non zero)
3e72 : 20c761          >        jsr report_error
                       >
3e75 :                 >skip0693
                       >
                       >            set_a $ff-$22,0
                       >            load_flag 0
3e75 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3e77 : 48              >            pha         ;use stack to load status
3e78 : a9dd            >            lda #$ff-$22     ;precharge accu
3e7a : 28              >            plp
                       >
3e7b : 22              >            db  $22          ;test nop integrity - flags off
3e7c : ea              >            nop
3e7d : ea              >            nop
                       >            tst_a $ff-$22,0
3e7e : 08              >            php         ;save flags
3e7f : c9dd            >            cmp #$ff-$22     ;test result
                       >            trap_ne
3e81 : f003            >        beq skip0698
                       >        trap            ;failed not equal (non zero)
3e83 : 20c761          >        jsr report_error
                       >
3e86 :                 >skip0698
                       >
3e86 : 68              >            pla         ;load status
3e87 : 48              >            pha
                       >            cmp_flag 0
3e88 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3e8a : f003            >        beq skip0701
                       >        trap            ;failed not equal (non zero)
3e8c : 20c761          >        jsr report_error
                       >
3e8f :                 >skip0701
                       >
3e8f : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$22,$ff
                       >            load_flag $ff
3e90 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3e92 : 48              >            pha         ;use stack to load status
3e93 : a988            >            lda #$aa-$22     ;precharge accu
3e95 : 28              >            plp
                       >
3e96 : 22              >            db  $22          ;test nop integrity - flags on
3e97 : ea              >            nop
3e98 : ea              >            nop
                       >            tst_a $aa-$22,$ff
3e99 : 08              >            php         ;save flags
3e9a : c988            >            cmp #$aa-$22     ;test result
                       >            trap_ne
3e9c : f003            >        beq skip0706
                       >        trap            ;failed not equal (non zero)
3e9e : 20c761          >        jsr report_error
                       >
3ea1 :                 >skip0706
                       >
3ea1 : 68              >            pla         ;load status
3ea2 : 48              >            pha
                       >            cmp_flag $ff
3ea3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3ea5 : f003            >        beq skip0709
                       >        trap            ;failed not equal (non zero)
3ea7 : 20c761          >        jsr report_error
                       >
3eaa :                 >skip0709
                       >
3eaa : 28              >            plp         ;restore status
                       >
3eab : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3ead : f003            >        beq skip0711
                       >        trap            ;failed not equal (non zero)
3eaf : 20c761          >        jsr report_error
                       >
3eb2 :                 >skip0711
                       >
3eb2 : e000            >            cpx #0
                       >            trap_ne         ;x changed
3eb4 : f003            >        beq skip0713
                       >        trap            ;failed not equal (non zero)
3eb6 : 20c761          >        jsr report_error
                       >
3eb9 :                 >skip0713
                       >
                        
                                nop_test $42,2
3eb9 : a042            >            ldy #$42
3ebb : a202            >            ldx #4-2
3ebd : 42              >            db  $42          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
3ebe : c8              >            iny
3ebf : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
3ec0 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3ec1 : f003            >        beq skip0716
                       >        trap            ;failed not equal (non zero)
3ec3 : 20c761          >        jsr report_error
                       >
3ec6 :                 >skip0716
                       >
                       >            set_a $ff-$42,0
                       >            load_flag 0
3ec6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3ec8 : 48              >            pha         ;use stack to load status
3ec9 : a9bd            >            lda #$ff-$42     ;precharge accu
3ecb : 28              >            plp
                       >
3ecc : 42              >            db  $42          ;test nop integrity - flags off
3ecd : ea              >            nop
3ece : ea              >            nop
                       >            tst_a $ff-$42,0
3ecf : 08              >            php         ;save flags
3ed0 : c9bd            >            cmp #$ff-$42     ;test result
                       >            trap_ne
3ed2 : f003            >        beq skip0721
                       >        trap            ;failed not equal (non zero)
3ed4 : 20c761          >        jsr report_error
                       >
3ed7 :                 >skip0721
                       >
3ed7 : 68              >            pla         ;load status
3ed8 : 48              >            pha
                       >            cmp_flag 0
3ed9 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3edb : f003            >        beq skip0724
                       >        trap            ;failed not equal (non zero)
3edd : 20c761          >        jsr report_error
                       >
3ee0 :                 >skip0724
                       >
3ee0 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$42,$ff
                       >            load_flag $ff
3ee1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3ee3 : 48              >            pha         ;use stack to load status
3ee4 : a968            >            lda #$aa-$42     ;precharge accu
3ee6 : 28              >            plp
                       >
3ee7 : 42              >            db  $42          ;test nop integrity - flags on
3ee8 : ea              >            nop
3ee9 : ea              >            nop
                       >            tst_a $aa-$42,$ff
3eea : 08              >            php         ;save flags
3eeb : c968            >            cmp #$aa-$42     ;test result
                       >            trap_ne
3eed : f003            >        beq skip0729
                       >        trap            ;failed not equal (non zero)
3eef : 20c761          >        jsr report_error
                       >
3ef2 :                 >skip0729
                       >
3ef2 : 68              >            pla         ;load status
3ef3 : 48              >            pha
                       >            cmp_flag $ff
3ef4 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3ef6 : f003            >        beq skip0732
                       >        trap            ;failed not equal (non zero)
3ef8 : 20c761          >        jsr report_error
                       >
3efb :                 >skip0732
                       >
3efb : 28              >            plp         ;restore status
                       >
3efc : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3efe : f003            >        beq skip0734
                       >        trap            ;failed not equal (non zero)
3f00 : 20c761          >        jsr report_error
                       >
3f03 :                 >skip0734
                       >
3f03 : e000            >            cpx #0
                       >            trap_ne         ;x changed
3f05 : f003            >        beq skip0736
                       >        trap            ;failed not equal (non zero)
3f07 : 20c761          >        jsr report_error
                       >
3f0a :                 >skip0736
                       >
                        
                                nop_test $62,2
3f0a : a042            >            ldy #$42
3f0c : a202            >            ldx #4-2
3f0e : 62              >            db  $62          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
3f0f : c8              >            iny
3f10 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
3f11 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3f12 : f003            >        beq skip0739
                       >        trap            ;failed not equal (non zero)
3f14 : 20c761          >        jsr report_error
                       >
3f17 :                 >skip0739
                       >
                       >            set_a $ff-$62,0
                       >            load_flag 0
3f17 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3f19 : 48              >            pha         ;use stack to load status
3f1a : a99d            >            lda #$ff-$62     ;precharge accu
3f1c : 28              >            plp
                       >
3f1d : 62              >            db  $62          ;test nop integrity - flags off
3f1e : ea              >            nop
3f1f : ea              >            nop
                       >            tst_a $ff-$62,0
3f20 : 08              >            php         ;save flags
3f21 : c99d            >            cmp #$ff-$62     ;test result
                       >            trap_ne
3f23 : f003            >        beq skip0744
                       >        trap            ;failed not equal (non zero)
3f25 : 20c761          >        jsr report_error
                       >
3f28 :                 >skip0744
                       >
3f28 : 68              >            pla         ;load status
3f29 : 48              >            pha
                       >            cmp_flag 0
3f2a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3f2c : f003            >        beq skip0747
                       >        trap            ;failed not equal (non zero)
3f2e : 20c761          >        jsr report_error
                       >
3f31 :                 >skip0747
                       >
3f31 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$62,$ff
                       >            load_flag $ff
3f32 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3f34 : 48              >            pha         ;use stack to load status
3f35 : a948            >            lda #$aa-$62     ;precharge accu
3f37 : 28              >            plp
                       >
3f38 : 62              >            db  $62          ;test nop integrity - flags on
3f39 : ea              >            nop
3f3a : ea              >            nop
                       >            tst_a $aa-$62,$ff
3f3b : 08              >            php         ;save flags
3f3c : c948            >            cmp #$aa-$62     ;test result
                       >            trap_ne
3f3e : f003            >        beq skip0752
                       >        trap            ;failed not equal (non zero)
3f40 : 20c761          >        jsr report_error
                       >
3f43 :                 >skip0752
                       >
3f43 : 68              >            pla         ;load status
3f44 : 48              >            pha
                       >            cmp_flag $ff
3f45 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3f47 : f003            >        beq skip0755
                       >        trap            ;failed not equal (non zero)
3f49 : 20c761          >        jsr report_error
                       >
3f4c :                 >skip0755
                       >
3f4c : 28              >            plp         ;restore status
                       >
3f4d : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3f4f : f003            >        beq skip0757
                       >        trap            ;failed not equal (non zero)
3f51 : 20c761          >        jsr report_error
                       >
3f54 :                 >skip0757
                       >
3f54 : e000            >            cpx #0
                       >            trap_ne         ;x changed
3f56 : f003            >        beq skip0759
                       >        trap            ;failed not equal (non zero)
3f58 : 20c761          >        jsr report_error
                       >
3f5b :                 >skip0759
                       >
                        
                                nop_test $82,2
3f5b : a042            >            ldy #$42
3f5d : a202            >            ldx #4-2
3f5f : 82              >            db  $82          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
3f60 : c8              >            iny
3f61 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
3f62 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3f63 : f003            >        beq skip0762
                       >        trap            ;failed not equal (non zero)
3f65 : 20c761          >        jsr report_error
                       >
3f68 :                 >skip0762
                       >
                       >            set_a $ff-$82,0
                       >            load_flag 0
3f68 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3f6a : 48              >            pha         ;use stack to load status
3f6b : a97d            >            lda #$ff-$82     ;precharge accu
3f6d : 28              >            plp
                       >
3f6e : 82              >            db  $82          ;test nop integrity - flags off
3f6f : ea              >            nop
3f70 : ea              >            nop
                       >            tst_a $ff-$82,0
3f71 : 08              >            php         ;save flags
3f72 : c97d            >            cmp #$ff-$82     ;test result
                       >            trap_ne
3f74 : f003            >        beq skip0767
                       >        trap            ;failed not equal (non zero)
3f76 : 20c761          >        jsr report_error
                       >
3f79 :                 >skip0767
                       >
3f79 : 68              >            pla         ;load status
3f7a : 48              >            pha
                       >            cmp_flag 0
3f7b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3f7d : f003            >        beq skip0770
                       >        trap            ;failed not equal (non zero)
3f7f : 20c761          >        jsr report_error
                       >
3f82 :                 >skip0770
                       >
3f82 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$82,$ff
                       >            load_flag $ff
3f83 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3f85 : 48              >            pha         ;use stack to load status
3f86 : a928            >            lda #$aa-$82     ;precharge accu
3f88 : 28              >            plp
                       >
3f89 : 82              >            db  $82          ;test nop integrity - flags on
3f8a : ea              >            nop
3f8b : ea              >            nop
                       >            tst_a $aa-$82,$ff
3f8c : 08              >            php         ;save flags
3f8d : c928            >            cmp #$aa-$82     ;test result
                       >            trap_ne
3f8f : f003            >        beq skip0775
                       >        trap            ;failed not equal (non zero)
3f91 : 20c761          >        jsr report_error
                       >
3f94 :                 >skip0775
                       >
3f94 : 68              >            pla         ;load status
3f95 : 48              >            pha
                       >            cmp_flag $ff
3f96 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3f98 : f003            >        beq skip0778
                       >        trap            ;failed not equal (non zero)
3f9a : 20c761          >        jsr report_error
                       >
3f9d :                 >skip0778
                       >
3f9d : 28              >            plp         ;restore status
                       >
3f9e : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3fa0 : f003            >        beq skip0780
                       >        trap            ;failed not equal (non zero)
3fa2 : 20c761          >        jsr report_error
                       >
3fa5 :                 >skip0780
                       >
3fa5 : e000            >            cpx #0
                       >            trap_ne         ;x changed
3fa7 : f003            >        beq skip0782
                       >        trap            ;failed not equal (non zero)
3fa9 : 20c761          >        jsr report_error
                       >
3fac :                 >skip0782
                       >
                        
                                nop_test $c2,2
3fac : a042            >            ldy #$42
3fae : a202            >            ldx #4-2
3fb0 : c2              >            db  $c2          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
3fb1 : c8              >            iny
3fb2 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
3fb3 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3fb4 : f003            >        beq skip0785
                       >        trap            ;failed not equal (non zero)
3fb6 : 20c761          >        jsr report_error
                       >
3fb9 :                 >skip0785
                       >
                       >            set_a $ff-$c2,0
                       >            load_flag 0
3fb9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3fbb : 48              >            pha         ;use stack to load status
3fbc : a93d            >            lda #$ff-$c2     ;precharge accu
3fbe : 28              >            plp
                       >
3fbf : c2              >            db  $c2          ;test nop integrity - flags off
3fc0 : ea              >            nop
3fc1 : ea              >            nop
                       >            tst_a $ff-$c2,0
3fc2 : 08              >            php         ;save flags
3fc3 : c93d            >            cmp #$ff-$c2     ;test result
                       >            trap_ne
3fc5 : f003            >        beq skip0790
                       >        trap            ;failed not equal (non zero)
3fc7 : 20c761          >        jsr report_error
                       >
3fca :                 >skip0790
                       >
3fca : 68              >            pla         ;load status
3fcb : 48              >            pha
                       >            cmp_flag 0
3fcc : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3fce : f003            >        beq skip0793
                       >        trap            ;failed not equal (non zero)
3fd0 : 20c761          >        jsr report_error
                       >
3fd3 :                 >skip0793
                       >
3fd3 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$c2,$ff
                       >            load_flag $ff
3fd4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3fd6 : 48              >            pha         ;use stack to load status
3fd7 : a9e8            >            lda #$aa-$c2     ;precharge accu
3fd9 : 28              >            plp
                       >
3fda : c2              >            db  $c2          ;test nop integrity - flags on
3fdb : ea              >            nop
3fdc : ea              >            nop
                       >            tst_a $aa-$c2,$ff
3fdd : 08              >            php         ;save flags
3fde : c9e8            >            cmp #$aa-$c2     ;test result
                       >            trap_ne
3fe0 : f003            >        beq skip0798
                       >        trap            ;failed not equal (non zero)
3fe2 : 20c761          >        jsr report_error
                       >
3fe5 :                 >skip0798
                       >
3fe5 : 68              >            pla         ;load status
3fe6 : 48              >            pha
                       >            cmp_flag $ff
3fe7 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3fe9 : f003            >        beq skip0801
                       >        trap            ;failed not equal (non zero)
3feb : 20c761          >        jsr report_error
                       >
3fee :                 >skip0801
                       >
3fee : 28              >            plp         ;restore status
                       >
3fef : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3ff1 : f003            >        beq skip0803
                       >        trap            ;failed not equal (non zero)
3ff3 : 20c761          >        jsr report_error
                       >
3ff6 :                 >skip0803
                       >
3ff6 : e000            >            cpx #0
                       >            trap_ne         ;x changed
3ff8 : f003            >        beq skip0805
                       >        trap            ;failed not equal (non zero)
3ffa : 20c761          >        jsr report_error
                       >
3ffd :                 >skip0805
                       >
                        
                                nop_test $e2,2
3ffd : a042            >            ldy #$42
3fff : a202            >            ldx #4-2
4001 : e2              >            db  $e2          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
4002 : c8              >            iny
4003 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
4004 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4005 : f003            >        beq skip0808
                       >        trap            ;failed not equal (non zero)
4007 : 20c761          >        jsr report_error
                       >
400a :                 >skip0808
                       >
                       >            set_a $ff-$e2,0
                       >            load_flag 0
400a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
400c : 48              >            pha         ;use stack to load status
400d : a91d            >            lda #$ff-$e2     ;precharge accu
400f : 28              >            plp
                       >
4010 : e2              >            db  $e2          ;test nop integrity - flags off
4011 : ea              >            nop
4012 : ea              >            nop
                       >            tst_a $ff-$e2,0
4013 : 08              >            php         ;save flags
4014 : c91d            >            cmp #$ff-$e2     ;test result
                       >            trap_ne
4016 : f003            >        beq skip0813
                       >        trap            ;failed not equal (non zero)
4018 : 20c761          >        jsr report_error
                       >
401b :                 >skip0813
                       >
401b : 68              >            pla         ;load status
401c : 48              >            pha
                       >            cmp_flag 0
401d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
401f : f003            >        beq skip0816
                       >        trap            ;failed not equal (non zero)
4021 : 20c761          >        jsr report_error
                       >
4024 :                 >skip0816
                       >
4024 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$e2,$ff
                       >            load_flag $ff
4025 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4027 : 48              >            pha         ;use stack to load status
4028 : a9c8            >            lda #$aa-$e2     ;precharge accu
402a : 28              >            plp
                       >
402b : e2              >            db  $e2          ;test nop integrity - flags on
402c : ea              >            nop
402d : ea              >            nop
                       >            tst_a $aa-$e2,$ff
402e : 08              >            php         ;save flags
402f : c9c8            >            cmp #$aa-$e2     ;test result
                       >            trap_ne
4031 : f003            >        beq skip0821
                       >        trap            ;failed not equal (non zero)
4033 : 20c761          >        jsr report_error
                       >
4036 :                 >skip0821
                       >
4036 : 68              >            pla         ;load status
4037 : 48              >            pha
                       >            cmp_flag $ff
4038 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
403a : f003            >        beq skip0824
                       >        trap            ;failed not equal (non zero)
403c : 20c761          >        jsr report_error
                       >
403f :                 >skip0824
                       >
403f : 28              >            plp         ;restore status
                       >
4040 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4042 : f003            >        beq skip0826
                       >        trap            ;failed not equal (non zero)
4044 : 20c761          >        jsr report_error
                       >
4047 :                 >skip0826
                       >
4047 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4049 : f003            >        beq skip0828
                       >        trap            ;failed not equal (non zero)
404b : 20c761          >        jsr report_error
                       >
404e :                 >skip0828
                       >
                        
                                nop_test $44,2
404e : a042            >            ldy #$42
4050 : a202            >            ldx #4-2
4052 : 44              >            db  $44          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
4053 : c8              >            iny
4054 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
4055 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4056 : f003            >        beq skip0831
                       >        trap            ;failed not equal (non zero)
4058 : 20c761          >        jsr report_error
                       >
405b :                 >skip0831
                       >
                       >            set_a $ff-$44,0
                       >            load_flag 0
405b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
405d : 48              >            pha         ;use stack to load status
405e : a9bb            >            lda #$ff-$44     ;precharge accu
4060 : 28              >            plp
                       >
4061 : 44              >            db  $44          ;test nop integrity - flags off
4062 : ea              >            nop
4063 : ea              >            nop
                       >            tst_a $ff-$44,0
4064 : 08              >            php         ;save flags
4065 : c9bb            >            cmp #$ff-$44     ;test result
                       >            trap_ne
4067 : f003            >        beq skip0836
                       >        trap            ;failed not equal (non zero)
4069 : 20c761          >        jsr report_error
                       >
406c :                 >skip0836
                       >
406c : 68              >            pla         ;load status
406d : 48              >            pha
                       >            cmp_flag 0
406e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4070 : f003            >        beq skip0839
                       >        trap            ;failed not equal (non zero)
4072 : 20c761          >        jsr report_error
                       >
4075 :                 >skip0839
                       >
4075 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$44,$ff
                       >            load_flag $ff
4076 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4078 : 48              >            pha         ;use stack to load status
4079 : a966            >            lda #$aa-$44     ;precharge accu
407b : 28              >            plp
                       >
407c : 44              >            db  $44          ;test nop integrity - flags on
407d : ea              >            nop
407e : ea              >            nop
                       >            tst_a $aa-$44,$ff
407f : 08              >            php         ;save flags
4080 : c966            >            cmp #$aa-$44     ;test result
                       >            trap_ne
4082 : f003            >        beq skip0844
                       >        trap            ;failed not equal (non zero)
4084 : 20c761          >        jsr report_error
                       >
4087 :                 >skip0844
                       >
4087 : 68              >            pla         ;load status
4088 : 48              >            pha
                       >            cmp_flag $ff
4089 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
408b : f003            >        beq skip0847
                       >        trap            ;failed not equal (non zero)
408d : 20c761          >        jsr report_error
                       >
4090 :                 >skip0847
                       >
4090 : 28              >            plp         ;restore status
                       >
4091 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4093 : f003            >        beq skip0849
                       >        trap            ;failed not equal (non zero)
4095 : 20c761          >        jsr report_error
                       >
4098 :                 >skip0849
                       >
4098 : e000            >            cpx #0
                       >            trap_ne         ;x changed
409a : f003            >        beq skip0851
                       >        trap            ;failed not equal (non zero)
409c : 20c761          >        jsr report_error
                       >
409f :                 >skip0851
                       >
                        
                                nop_test $54,2
409f : a042            >            ldy #$42
40a1 : a202            >            ldx #4-2
40a3 : 54              >            db  $54          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
40a4 : c8              >            iny
40a5 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
40a6 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
40a7 : f003            >        beq skip0854
                       >        trap            ;failed not equal (non zero)
40a9 : 20c761          >        jsr report_error
                       >
40ac :                 >skip0854
                       >
                       >            set_a $ff-$54,0
                       >            load_flag 0
40ac : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
40ae : 48              >            pha         ;use stack to load status
40af : a9ab            >            lda #$ff-$54     ;precharge accu
40b1 : 28              >            plp
                       >
40b2 : 54              >            db  $54          ;test nop integrity - flags off
40b3 : ea              >            nop
40b4 : ea              >            nop
                       >            tst_a $ff-$54,0
40b5 : 08              >            php         ;save flags
40b6 : c9ab            >            cmp #$ff-$54     ;test result
                       >            trap_ne
40b8 : f003            >        beq skip0859
                       >        trap            ;failed not equal (non zero)
40ba : 20c761          >        jsr report_error
                       >
40bd :                 >skip0859
                       >
40bd : 68              >            pla         ;load status
40be : 48              >            pha
                       >            cmp_flag 0
40bf : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
40c1 : f003            >        beq skip0862
                       >        trap            ;failed not equal (non zero)
40c3 : 20c761          >        jsr report_error
                       >
40c6 :                 >skip0862
                       >
40c6 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$54,$ff
                       >            load_flag $ff
40c7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
40c9 : 48              >            pha         ;use stack to load status
40ca : a956            >            lda #$aa-$54     ;precharge accu
40cc : 28              >            plp
                       >
40cd : 54              >            db  $54          ;test nop integrity - flags on
40ce : ea              >            nop
40cf : ea              >            nop
                       >            tst_a $aa-$54,$ff
40d0 : 08              >            php         ;save flags
40d1 : c956            >            cmp #$aa-$54     ;test result
                       >            trap_ne
40d3 : f003            >        beq skip0867
                       >        trap            ;failed not equal (non zero)
40d5 : 20c761          >        jsr report_error
                       >
40d8 :                 >skip0867
                       >
40d8 : 68              >            pla         ;load status
40d9 : 48              >            pha
                       >            cmp_flag $ff
40da : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
40dc : f003            >        beq skip0870
                       >        trap            ;failed not equal (non zero)
40de : 20c761          >        jsr report_error
                       >
40e1 :                 >skip0870
                       >
40e1 : 28              >            plp         ;restore status
                       >
40e2 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
40e4 : f003            >        beq skip0872
                       >        trap            ;failed not equal (non zero)
40e6 : 20c761          >        jsr report_error
                       >
40e9 :                 >skip0872
                       >
40e9 : e000            >            cpx #0
                       >            trap_ne         ;x changed
40eb : f003            >        beq skip0874
                       >        trap            ;failed not equal (non zero)
40ed : 20c761          >        jsr report_error
                       >
40f0 :                 >skip0874
                       >
                        
                                nop_test $d4,2
40f0 : a042            >            ldy #$42
40f2 : a202            >            ldx #4-2
40f4 : d4              >            db  $d4          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
40f5 : c8              >            iny
40f6 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
40f7 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
40f8 : f003            >        beq skip0877
                       >        trap            ;failed not equal (non zero)
40fa : 20c761          >        jsr report_error
                       >
40fd :                 >skip0877
                       >
                       >            set_a $ff-$d4,0
                       >            load_flag 0
40fd : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
40ff : 48              >            pha         ;use stack to load status
4100 : a92b            >            lda #$ff-$d4     ;precharge accu
4102 : 28              >            plp
                       >
4103 : d4              >            db  $d4          ;test nop integrity - flags off
4104 : ea              >            nop
4105 : ea              >            nop
                       >            tst_a $ff-$d4,0
4106 : 08              >            php         ;save flags
4107 : c92b            >            cmp #$ff-$d4     ;test result
                       >            trap_ne
4109 : f003            >        beq skip0882
                       >        trap            ;failed not equal (non zero)
410b : 20c761          >        jsr report_error
                       >
410e :                 >skip0882
                       >
410e : 68              >            pla         ;load status
410f : 48              >            pha
                       >            cmp_flag 0
4110 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4112 : f003            >        beq skip0885
                       >        trap            ;failed not equal (non zero)
4114 : 20c761          >        jsr report_error
                       >
4117 :                 >skip0885
                       >
4117 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$d4,$ff
                       >            load_flag $ff
4118 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
411a : 48              >            pha         ;use stack to load status
411b : a9d6            >            lda #$aa-$d4     ;precharge accu
411d : 28              >            plp
                       >
411e : d4              >            db  $d4          ;test nop integrity - flags on
411f : ea              >            nop
4120 : ea              >            nop
                       >            tst_a $aa-$d4,$ff
4121 : 08              >            php         ;save flags
4122 : c9d6            >            cmp #$aa-$d4     ;test result
                       >            trap_ne
4124 : f003            >        beq skip0890
                       >        trap            ;failed not equal (non zero)
4126 : 20c761          >        jsr report_error
                       >
4129 :                 >skip0890
                       >
4129 : 68              >            pla         ;load status
412a : 48              >            pha
                       >            cmp_flag $ff
412b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
412d : f003            >        beq skip0893
                       >        trap            ;failed not equal (non zero)
412f : 20c761          >        jsr report_error
                       >
4132 :                 >skip0893
                       >
4132 : 28              >            plp         ;restore status
                       >
4133 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4135 : f003            >        beq skip0895
                       >        trap            ;failed not equal (non zero)
4137 : 20c761          >        jsr report_error
                       >
413a :                 >skip0895
                       >
413a : e000            >            cpx #0
                       >            trap_ne         ;x changed
413c : f003            >        beq skip0897
                       >        trap            ;failed not equal (non zero)
413e : 20c761          >        jsr report_error
                       >
4141 :                 >skip0897
                       >
                        
                                nop_test $f4,2
4141 : a042            >            ldy #$42
4143 : a202            >            ldx #4-2
4145 : f4              >            db  $f4          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
4146 : c8              >            iny
4147 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
4148 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4149 : f003            >        beq skip0900
                       >        trap            ;failed not equal (non zero)
414b : 20c761          >        jsr report_error
                       >
414e :                 >skip0900
                       >
                       >            set_a $ff-$f4,0
                       >            load_flag 0
414e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4150 : 48              >            pha         ;use stack to load status
4151 : a90b            >            lda #$ff-$f4     ;precharge accu
4153 : 28              >            plp
                       >
4154 : f4              >            db  $f4          ;test nop integrity - flags off
4155 : ea              >            nop
4156 : ea              >            nop
                       >            tst_a $ff-$f4,0
4157 : 08              >            php         ;save flags
4158 : c90b            >            cmp #$ff-$f4     ;test result
                       >            trap_ne
415a : f003            >        beq skip0905
                       >        trap            ;failed not equal (non zero)
415c : 20c761          >        jsr report_error
                       >
415f :                 >skip0905
                       >
415f : 68              >            pla         ;load status
4160 : 48              >            pha
                       >            cmp_flag 0
4161 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4163 : f003            >        beq skip0908
                       >        trap            ;failed not equal (non zero)
4165 : 20c761          >        jsr report_error
                       >
4168 :                 >skip0908
                       >
4168 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$f4,$ff
                       >            load_flag $ff
4169 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
416b : 48              >            pha         ;use stack to load status
416c : a9b6            >            lda #$aa-$f4     ;precharge accu
416e : 28              >            plp
                       >
416f : f4              >            db  $f4          ;test nop integrity - flags on
4170 : ea              >            nop
4171 : ea              >            nop
                       >            tst_a $aa-$f4,$ff
4172 : 08              >            php         ;save flags
4173 : c9b6            >            cmp #$aa-$f4     ;test result
                       >            trap_ne
4175 : f003            >        beq skip0913
                       >        trap            ;failed not equal (non zero)
4177 : 20c761          >        jsr report_error
                       >
417a :                 >skip0913
                       >
417a : 68              >            pla         ;load status
417b : 48              >            pha
                       >            cmp_flag $ff
417c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
417e : f003            >        beq skip0916
                       >        trap            ;failed not equal (non zero)
4180 : 20c761          >        jsr report_error
                       >
4183 :                 >skip0916
                       >
4183 : 28              >            plp         ;restore status
                       >
4184 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4186 : f003            >        beq skip0918
                       >        trap            ;failed not equal (non zero)
4188 : 20c761          >        jsr report_error
                       >
418b :                 >skip0918
                       >
418b : e000            >            cpx #0
                       >            trap_ne         ;x changed
418d : f003            >        beq skip0920
                       >        trap            ;failed not equal (non zero)
418f : 20c761          >        jsr report_error
                       >
4192 :                 >skip0920
                       >
                        
                                nop_test $5c,3
4192 : a042            >            ldy #$42
4194 : a201            >            ldx #4-3
4196 : 5c              >            db  $5c          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
4197 : c8              >            iny
4198 : c8              >            iny
                       >        endif
4199 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
419a : f003            >        beq skip0923
                       >        trap            ;failed not equal (non zero)
419c : 20c761          >        jsr report_error
                       >
419f :                 >skip0923
                       >
                       >            set_a $ff-$5c,0
                       >            load_flag 0
419f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
41a1 : 48              >            pha         ;use stack to load status
41a2 : a9a3            >            lda #$ff-$5c     ;precharge accu
41a4 : 28              >            plp
                       >
41a5 : 5c              >            db  $5c          ;test nop integrity - flags off
41a6 : ea              >            nop
41a7 : ea              >            nop
                       >            tst_a $ff-$5c,0
41a8 : 08              >            php         ;save flags
41a9 : c9a3            >            cmp #$ff-$5c     ;test result
                       >            trap_ne
41ab : f003            >        beq skip0928
                       >        trap            ;failed not equal (non zero)
41ad : 20c761          >        jsr report_error
                       >
41b0 :                 >skip0928
                       >
41b0 : 68              >            pla         ;load status
41b1 : 48              >            pha
                       >            cmp_flag 0
41b2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
41b4 : f003            >        beq skip0931
                       >        trap            ;failed not equal (non zero)
41b6 : 20c761          >        jsr report_error
                       >
41b9 :                 >skip0931
                       >
41b9 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$5c,$ff
                       >            load_flag $ff
41ba : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
41bc : 48              >            pha         ;use stack to load status
41bd : a94e            >            lda #$aa-$5c     ;precharge accu
41bf : 28              >            plp
                       >
41c0 : 5c              >            db  $5c          ;test nop integrity - flags on
41c1 : ea              >            nop
41c2 : ea              >            nop
                       >            tst_a $aa-$5c,$ff
41c3 : 08              >            php         ;save flags
41c4 : c94e            >            cmp #$aa-$5c     ;test result
                       >            trap_ne
41c6 : f003            >        beq skip0936
                       >        trap            ;failed not equal (non zero)
41c8 : 20c761          >        jsr report_error
                       >
41cb :                 >skip0936
                       >
41cb : 68              >            pla         ;load status
41cc : 48              >            pha
                       >            cmp_flag $ff
41cd : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
41cf : f003            >        beq skip0939
                       >        trap            ;failed not equal (non zero)
41d1 : 20c761          >        jsr report_error
                       >
41d4 :                 >skip0939
                       >
41d4 : 28              >            plp         ;restore status
                       >
41d5 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
41d7 : f003            >        beq skip0941
                       >        trap            ;failed not equal (non zero)
41d9 : 20c761          >        jsr report_error
                       >
41dc :                 >skip0941
                       >
41dc : e000            >            cpx #0
                       >            trap_ne         ;x changed
41de : f003            >        beq skip0943
                       >        trap            ;failed not equal (non zero)
41e0 : 20c761          >        jsr report_error
                       >
41e3 :                 >skip0943
                       >
                        
                                nop_test $dc,3
41e3 : a042            >            ldy #$42
41e5 : a201            >            ldx #4-3
41e7 : dc              >            db  $dc          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
41e8 : c8              >            iny
41e9 : c8              >            iny
                       >        endif
41ea : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
41eb : f003            >        beq skip0946
                       >        trap            ;failed not equal (non zero)
41ed : 20c761          >        jsr report_error
                       >
41f0 :                 >skip0946
                       >
                       >            set_a $ff-$dc,0
                       >            load_flag 0
41f0 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
41f2 : 48              >            pha         ;use stack to load status
41f3 : a923            >            lda #$ff-$dc     ;precharge accu
41f5 : 28              >            plp
                       >
41f6 : dc              >            db  $dc          ;test nop integrity - flags off
41f7 : ea              >            nop
41f8 : ea              >            nop
                       >            tst_a $ff-$dc,0
41f9 : 08              >            php         ;save flags
41fa : c923            >            cmp #$ff-$dc     ;test result
                       >            trap_ne
41fc : f003            >        beq skip0951
                       >        trap            ;failed not equal (non zero)
41fe : 20c761          >        jsr report_error
                       >
4201 :                 >skip0951
                       >
4201 : 68              >            pla         ;load status
4202 : 48              >            pha
                       >            cmp_flag 0
4203 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4205 : f003            >        beq skip0954
                       >        trap            ;failed not equal (non zero)
4207 : 20c761          >        jsr report_error
                       >
420a :                 >skip0954
                       >
420a : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$dc,$ff
                       >            load_flag $ff
420b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
420d : 48              >            pha         ;use stack to load status
420e : a9ce            >            lda #$aa-$dc     ;precharge accu
4210 : 28              >            plp
                       >
4211 : dc              >            db  $dc          ;test nop integrity - flags on
4212 : ea              >            nop
4213 : ea              >            nop
                       >            tst_a $aa-$dc,$ff
4214 : 08              >            php         ;save flags
4215 : c9ce            >            cmp #$aa-$dc     ;test result
                       >            trap_ne
4217 : f003            >        beq skip0959
                       >        trap            ;failed not equal (non zero)
4219 : 20c761          >        jsr report_error
                       >
421c :                 >skip0959
                       >
421c : 68              >            pla         ;load status
421d : 48              >            pha
                       >            cmp_flag $ff
421e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4220 : f003            >        beq skip0962
                       >        trap            ;failed not equal (non zero)
4222 : 20c761          >        jsr report_error
                       >
4225 :                 >skip0962
                       >
4225 : 28              >            plp         ;restore status
                       >
4226 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4228 : f003            >        beq skip0964
                       >        trap            ;failed not equal (non zero)
422a : 20c761          >        jsr report_error
                       >
422d :                 >skip0964
                       >
422d : e000            >            cpx #0
                       >            trap_ne         ;x changed
422f : f003            >        beq skip0966
                       >        trap            ;failed not equal (non zero)
4231 : 20c761          >        jsr report_error
                       >
4234 :                 >skip0966
                       >
                        
                                nop_test $fc,3
4234 : a042            >            ldy #$42
4236 : a201            >            ldx #4-3
4238 : fc              >            db  $fc          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
4239 : c8              >            iny
423a : c8              >            iny
                       >        endif
423b : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
423c : f003            >        beq skip0969
                       >        trap            ;failed not equal (non zero)
423e : 20c761          >        jsr report_error
                       >
4241 :                 >skip0969
                       >
                       >            set_a $ff-$fc,0
                       >            load_flag 0
4241 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4243 : 48              >            pha         ;use stack to load status
4244 : a903            >            lda #$ff-$fc     ;precharge accu
4246 : 28              >            plp
                       >
4247 : fc              >            db  $fc          ;test nop integrity - flags off
4248 : ea              >            nop
4249 : ea              >            nop
                       >            tst_a $ff-$fc,0
424a : 08              >            php         ;save flags
424b : c903            >            cmp #$ff-$fc     ;test result
                       >            trap_ne
424d : f003            >        beq skip0974
                       >        trap            ;failed not equal (non zero)
424f : 20c761          >        jsr report_error
                       >
4252 :                 >skip0974
                       >
4252 : 68              >            pla         ;load status
4253 : 48              >            pha
                       >            cmp_flag 0
4254 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4256 : f003            >        beq skip0977
                       >        trap            ;failed not equal (non zero)
4258 : 20c761          >        jsr report_error
                       >
425b :                 >skip0977
                       >
425b : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$fc,$ff
                       >            load_flag $ff
425c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
425e : 48              >            pha         ;use stack to load status
425f : a9ae            >            lda #$aa-$fc     ;precharge accu
4261 : 28              >            plp
                       >
4262 : fc              >            db  $fc          ;test nop integrity - flags on
4263 : ea              >            nop
4264 : ea              >            nop
                       >            tst_a $aa-$fc,$ff
4265 : 08              >            php         ;save flags
4266 : c9ae            >            cmp #$aa-$fc     ;test result
                       >            trap_ne
4268 : f003            >        beq skip0982
                       >        trap            ;failed not equal (non zero)
426a : 20c761          >        jsr report_error
                       >
426d :                 >skip0982
                       >
426d : 68              >            pla         ;load status
426e : 48              >            pha
                       >            cmp_flag $ff
426f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4271 : f003            >        beq skip0985
                       >        trap            ;failed not equal (non zero)
4273 : 20c761          >        jsr report_error
                       >
4276 :                 >skip0985
                       >
4276 : 28              >            plp         ;restore status
                       >
4277 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4279 : f003            >        beq skip0987
                       >        trap            ;failed not equal (non zero)
427b : 20c761          >        jsr report_error
                       >
427e :                 >skip0987
                       >
427e : e000            >            cpx #0
                       >            trap_ne         ;x changed
4280 : f003            >        beq skip0989
                       >        trap            ;failed not equal (non zero)
4282 : 20c761          >        jsr report_error
                       >
4285 :                 >skip0989
                       >
                        
                                nop_test $03,1
4285 : a042            >            ldy #$42
4287 : a203            >            ldx #4-1
4289 : 03              >            db  $03          ;test nop length
                       >        if 1 = 1
428a : ca              >            dex
428b : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
428c : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
428d : f003            >        beq skip0992
                       >        trap            ;failed not equal (non zero)
428f : 20c761          >        jsr report_error
                       >
4292 :                 >skip0992
                       >
                       >            set_a $ff-$03,0
                       >            load_flag 0
4292 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4294 : 48              >            pha         ;use stack to load status
4295 : a9fc            >            lda #$ff-$03     ;precharge accu
4297 : 28              >            plp
                       >
4298 : 03              >            db  $03          ;test nop integrity - flags off
4299 : ea              >            nop
429a : ea              >            nop
                       >            tst_a $ff-$03,0
429b : 08              >            php         ;save flags
429c : c9fc            >            cmp #$ff-$03     ;test result
                       >            trap_ne
429e : f003            >        beq skip0997
                       >        trap            ;failed not equal (non zero)
42a0 : 20c761          >        jsr report_error
                       >
42a3 :                 >skip0997
                       >
42a3 : 68              >            pla         ;load status
42a4 : 48              >            pha
                       >            cmp_flag 0
42a5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
42a7 : f003            >        beq skip1000
                       >        trap            ;failed not equal (non zero)
42a9 : 20c761          >        jsr report_error
                       >
42ac :                 >skip1000
                       >
42ac : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$03,$ff
                       >            load_flag $ff
42ad : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
42af : 48              >            pha         ;use stack to load status
42b0 : a9a7            >            lda #$aa-$03     ;precharge accu
42b2 : 28              >            plp
                       >
42b3 : 03              >            db  $03          ;test nop integrity - flags on
42b4 : ea              >            nop
42b5 : ea              >            nop
                       >            tst_a $aa-$03,$ff
42b6 : 08              >            php         ;save flags
42b7 : c9a7            >            cmp #$aa-$03     ;test result
                       >            trap_ne
42b9 : f003            >        beq skip1005
                       >        trap            ;failed not equal (non zero)
42bb : 20c761          >        jsr report_error
                       >
42be :                 >skip1005
                       >
42be : 68              >            pla         ;load status
42bf : 48              >            pha
                       >            cmp_flag $ff
42c0 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
42c2 : f003            >        beq skip1008
                       >        trap            ;failed not equal (non zero)
42c4 : 20c761          >        jsr report_error
                       >
42c7 :                 >skip1008
                       >
42c7 : 28              >            plp         ;restore status
                       >
42c8 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
42ca : f003            >        beq skip1010
                       >        trap            ;failed not equal (non zero)
42cc : 20c761          >        jsr report_error
                       >
42cf :                 >skip1010
                       >
42cf : e000            >            cpx #0
                       >            trap_ne         ;x changed
42d1 : f003            >        beq skip1012
                       >        trap            ;failed not equal (non zero)
42d3 : 20c761          >        jsr report_error
                       >
42d6 :                 >skip1012
                       >
                        
                                nop_test $13,1
42d6 : a042            >            ldy #$42
42d8 : a203            >            ldx #4-1
42da : 13              >            db  $13          ;test nop length
                       >        if 1 = 1
42db : ca              >            dex
42dc : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
42dd : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
42de : f003            >        beq skip1015
                       >        trap            ;failed not equal (non zero)
42e0 : 20c761          >        jsr report_error
                       >
42e3 :                 >skip1015
                       >
                       >            set_a $ff-$13,0
                       >            load_flag 0
42e3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
42e5 : 48              >            pha         ;use stack to load status
42e6 : a9ec            >            lda #$ff-$13     ;precharge accu
42e8 : 28              >            plp
                       >
42e9 : 13              >            db  $13          ;test nop integrity - flags off
42ea : ea              >            nop
42eb : ea              >            nop
                       >            tst_a $ff-$13,0
42ec : 08              >            php         ;save flags
42ed : c9ec            >            cmp #$ff-$13     ;test result
                       >            trap_ne
42ef : f003            >        beq skip1020
                       >        trap            ;failed not equal (non zero)
42f1 : 20c761          >        jsr report_error
                       >
42f4 :                 >skip1020
                       >
42f4 : 68              >            pla         ;load status
42f5 : 48              >            pha
                       >            cmp_flag 0
42f6 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
42f8 : f003            >        beq skip1023
                       >        trap            ;failed not equal (non zero)
42fa : 20c761          >        jsr report_error
                       >
42fd :                 >skip1023
                       >
42fd : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$13,$ff
                       >            load_flag $ff
42fe : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4300 : 48              >            pha         ;use stack to load status
4301 : a997            >            lda #$aa-$13     ;precharge accu
4303 : 28              >            plp
                       >
4304 : 13              >            db  $13          ;test nop integrity - flags on
4305 : ea              >            nop
4306 : ea              >            nop
                       >            tst_a $aa-$13,$ff
4307 : 08              >            php         ;save flags
4308 : c997            >            cmp #$aa-$13     ;test result
                       >            trap_ne
430a : f003            >        beq skip1028
                       >        trap            ;failed not equal (non zero)
430c : 20c761          >        jsr report_error
                       >
430f :                 >skip1028
                       >
430f : 68              >            pla         ;load status
4310 : 48              >            pha
                       >            cmp_flag $ff
4311 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4313 : f003            >        beq skip1031
                       >        trap            ;failed not equal (non zero)
4315 : 20c761          >        jsr report_error
                       >
4318 :                 >skip1031
                       >
4318 : 28              >            plp         ;restore status
                       >
4319 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
431b : f003            >        beq skip1033
                       >        trap            ;failed not equal (non zero)
431d : 20c761          >        jsr report_error
                       >
4320 :                 >skip1033
                       >
4320 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4322 : f003            >        beq skip1035
                       >        trap            ;failed not equal (non zero)
4324 : 20c761          >        jsr report_error
                       >
4327 :                 >skip1035
                       >
                        
                                nop_test $23,1
4327 : a042            >            ldy #$42
4329 : a203            >            ldx #4-1
432b : 23              >            db  $23          ;test nop length
                       >        if 1 = 1
432c : ca              >            dex
432d : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
432e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
432f : f003            >        beq skip1038
                       >        trap            ;failed not equal (non zero)
4331 : 20c761          >        jsr report_error
                       >
4334 :                 >skip1038
                       >
                       >            set_a $ff-$23,0
                       >            load_flag 0
4334 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4336 : 48              >            pha         ;use stack to load status
4337 : a9dc            >            lda #$ff-$23     ;precharge accu
4339 : 28              >            plp
                       >
433a : 23              >            db  $23          ;test nop integrity - flags off
433b : ea              >            nop
433c : ea              >            nop
                       >            tst_a $ff-$23,0
433d : 08              >            php         ;save flags
433e : c9dc            >            cmp #$ff-$23     ;test result
                       >            trap_ne
4340 : f003            >        beq skip1043
                       >        trap            ;failed not equal (non zero)
4342 : 20c761          >        jsr report_error
                       >
4345 :                 >skip1043
                       >
4345 : 68              >            pla         ;load status
4346 : 48              >            pha
                       >            cmp_flag 0
4347 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4349 : f003            >        beq skip1046
                       >        trap            ;failed not equal (non zero)
434b : 20c761          >        jsr report_error
                       >
434e :                 >skip1046
                       >
434e : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$23,$ff
                       >            load_flag $ff
434f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4351 : 48              >            pha         ;use stack to load status
4352 : a987            >            lda #$aa-$23     ;precharge accu
4354 : 28              >            plp
                       >
4355 : 23              >            db  $23          ;test nop integrity - flags on
4356 : ea              >            nop
4357 : ea              >            nop
                       >            tst_a $aa-$23,$ff
4358 : 08              >            php         ;save flags
4359 : c987            >            cmp #$aa-$23     ;test result
                       >            trap_ne
435b : f003            >        beq skip1051
                       >        trap            ;failed not equal (non zero)
435d : 20c761          >        jsr report_error
                       >
4360 :                 >skip1051
                       >
4360 : 68              >            pla         ;load status
4361 : 48              >            pha
                       >            cmp_flag $ff
4362 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4364 : f003            >        beq skip1054
                       >        trap            ;failed not equal (non zero)
4366 : 20c761          >        jsr report_error
                       >
4369 :                 >skip1054
                       >
4369 : 28              >            plp         ;restore status
                       >
436a : c042            >            cpy #$42
                       >            trap_ne         ;y changed
436c : f003            >        beq skip1056
                       >        trap            ;failed not equal (non zero)
436e : 20c761          >        jsr report_error
                       >
4371 :                 >skip1056
                       >
4371 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4373 : f003            >        beq skip1058
                       >        trap            ;failed not equal (non zero)
4375 : 20c761          >        jsr report_error
                       >
4378 :                 >skip1058
                       >
                        
                                nop_test $33,1
4378 : a042            >            ldy #$42
437a : a203            >            ldx #4-1
437c : 33              >            db  $33          ;test nop length
                       >        if 1 = 1
437d : ca              >            dex
437e : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
437f : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4380 : f003            >        beq skip1061
                       >        trap            ;failed not equal (non zero)
4382 : 20c761          >        jsr report_error
                       >
4385 :                 >skip1061
                       >
                       >            set_a $ff-$33,0
                       >            load_flag 0
4385 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4387 : 48              >            pha         ;use stack to load status
4388 : a9cc            >            lda #$ff-$33     ;precharge accu
438a : 28              >            plp
                       >
438b : 33              >            db  $33          ;test nop integrity - flags off
438c : ea              >            nop
438d : ea              >            nop
                       >            tst_a $ff-$33,0
438e : 08              >            php         ;save flags
438f : c9cc            >            cmp #$ff-$33     ;test result
                       >            trap_ne
4391 : f003            >        beq skip1066
                       >        trap            ;failed not equal (non zero)
4393 : 20c761          >        jsr report_error
                       >
4396 :                 >skip1066
                       >
4396 : 68              >            pla         ;load status
4397 : 48              >            pha
                       >            cmp_flag 0
4398 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
439a : f003            >        beq skip1069
                       >        trap            ;failed not equal (non zero)
439c : 20c761          >        jsr report_error
                       >
439f :                 >skip1069
                       >
439f : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$33,$ff
                       >            load_flag $ff
43a0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
43a2 : 48              >            pha         ;use stack to load status
43a3 : a977            >            lda #$aa-$33     ;precharge accu
43a5 : 28              >            plp
                       >
43a6 : 33              >            db  $33          ;test nop integrity - flags on
43a7 : ea              >            nop
43a8 : ea              >            nop
                       >            tst_a $aa-$33,$ff
43a9 : 08              >            php         ;save flags
43aa : c977            >            cmp #$aa-$33     ;test result
                       >            trap_ne
43ac : f003            >        beq skip1074
                       >        trap            ;failed not equal (non zero)
43ae : 20c761          >        jsr report_error
                       >
43b1 :                 >skip1074
                       >
43b1 : 68              >            pla         ;load status
43b2 : 48              >            pha
                       >            cmp_flag $ff
43b3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
43b5 : f003            >        beq skip1077
                       >        trap            ;failed not equal (non zero)
43b7 : 20c761          >        jsr report_error
                       >
43ba :                 >skip1077
                       >
43ba : 28              >            plp         ;restore status
                       >
43bb : c042            >            cpy #$42
                       >            trap_ne         ;y changed
43bd : f003            >        beq skip1079
                       >        trap            ;failed not equal (non zero)
43bf : 20c761          >        jsr report_error
                       >
43c2 :                 >skip1079
                       >
43c2 : e000            >            cpx #0
                       >            trap_ne         ;x changed
43c4 : f003            >        beq skip1081
                       >        trap            ;failed not equal (non zero)
43c6 : 20c761          >        jsr report_error
                       >
43c9 :                 >skip1081
                       >
                        
                                nop_test $43,1
43c9 : a042            >            ldy #$42
43cb : a203            >            ldx #4-1
43cd : 43              >            db  $43          ;test nop length
                       >        if 1 = 1
43ce : ca              >            dex
43cf : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
43d0 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
43d1 : f003            >        beq skip1084
                       >        trap            ;failed not equal (non zero)
43d3 : 20c761          >        jsr report_error
                       >
43d6 :                 >skip1084
                       >
                       >            set_a $ff-$43,0
                       >            load_flag 0
43d6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
43d8 : 48              >            pha         ;use stack to load status
43d9 : a9bc            >            lda #$ff-$43     ;precharge accu
43db : 28              >            plp
                       >
43dc : 43              >            db  $43          ;test nop integrity - flags off
43dd : ea              >            nop
43de : ea              >            nop
                       >            tst_a $ff-$43,0
43df : 08              >            php         ;save flags
43e0 : c9bc            >            cmp #$ff-$43     ;test result
                       >            trap_ne
43e2 : f003            >        beq skip1089
                       >        trap            ;failed not equal (non zero)
43e4 : 20c761          >        jsr report_error
                       >
43e7 :                 >skip1089
                       >
43e7 : 68              >            pla         ;load status
43e8 : 48              >            pha
                       >            cmp_flag 0
43e9 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
43eb : f003            >        beq skip1092
                       >        trap            ;failed not equal (non zero)
43ed : 20c761          >        jsr report_error
                       >
43f0 :                 >skip1092
                       >
43f0 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$43,$ff
                       >            load_flag $ff
43f1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
43f3 : 48              >            pha         ;use stack to load status
43f4 : a967            >            lda #$aa-$43     ;precharge accu
43f6 : 28              >            plp
                       >
43f7 : 43              >            db  $43          ;test nop integrity - flags on
43f8 : ea              >            nop
43f9 : ea              >            nop
                       >            tst_a $aa-$43,$ff
43fa : 08              >            php         ;save flags
43fb : c967            >            cmp #$aa-$43     ;test result
                       >            trap_ne
43fd : f003            >        beq skip1097
                       >        trap            ;failed not equal (non zero)
43ff : 20c761          >        jsr report_error
                       >
4402 :                 >skip1097
                       >
4402 : 68              >            pla         ;load status
4403 : 48              >            pha
                       >            cmp_flag $ff
4404 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4406 : f003            >        beq skip1100
                       >        trap            ;failed not equal (non zero)
4408 : 20c761          >        jsr report_error
                       >
440b :                 >skip1100
                       >
440b : 28              >            plp         ;restore status
                       >
440c : c042            >            cpy #$42
                       >            trap_ne         ;y changed
440e : f003            >        beq skip1102
                       >        trap            ;failed not equal (non zero)
4410 : 20c761          >        jsr report_error
                       >
4413 :                 >skip1102
                       >
4413 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4415 : f003            >        beq skip1104
                       >        trap            ;failed not equal (non zero)
4417 : 20c761          >        jsr report_error
                       >
441a :                 >skip1104
                       >
                        
                                nop_test $53,1
441a : a042            >            ldy #$42
441c : a203            >            ldx #4-1
441e : 53              >            db  $53          ;test nop length
                       >        if 1 = 1
441f : ca              >            dex
4420 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4421 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4422 : f003            >        beq skip1107
                       >        trap            ;failed not equal (non zero)
4424 : 20c761          >        jsr report_error
                       >
4427 :                 >skip1107
                       >
                       >            set_a $ff-$53,0
                       >            load_flag 0
4427 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4429 : 48              >            pha         ;use stack to load status
442a : a9ac            >            lda #$ff-$53     ;precharge accu
442c : 28              >            plp
                       >
442d : 53              >            db  $53          ;test nop integrity - flags off
442e : ea              >            nop
442f : ea              >            nop
                       >            tst_a $ff-$53,0
4430 : 08              >            php         ;save flags
4431 : c9ac            >            cmp #$ff-$53     ;test result
                       >            trap_ne
4433 : f003            >        beq skip1112
                       >        trap            ;failed not equal (non zero)
4435 : 20c761          >        jsr report_error
                       >
4438 :                 >skip1112
                       >
4438 : 68              >            pla         ;load status
4439 : 48              >            pha
                       >            cmp_flag 0
443a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
443c : f003            >        beq skip1115
                       >        trap            ;failed not equal (non zero)
443e : 20c761          >        jsr report_error
                       >
4441 :                 >skip1115
                       >
4441 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$53,$ff
                       >            load_flag $ff
4442 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4444 : 48              >            pha         ;use stack to load status
4445 : a957            >            lda #$aa-$53     ;precharge accu
4447 : 28              >            plp
                       >
4448 : 53              >            db  $53          ;test nop integrity - flags on
4449 : ea              >            nop
444a : ea              >            nop
                       >            tst_a $aa-$53,$ff
444b : 08              >            php         ;save flags
444c : c957            >            cmp #$aa-$53     ;test result
                       >            trap_ne
444e : f003            >        beq skip1120
                       >        trap            ;failed not equal (non zero)
4450 : 20c761          >        jsr report_error
                       >
4453 :                 >skip1120
                       >
4453 : 68              >            pla         ;load status
4454 : 48              >            pha
                       >            cmp_flag $ff
4455 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4457 : f003            >        beq skip1123
                       >        trap            ;failed not equal (non zero)
4459 : 20c761          >        jsr report_error
                       >
445c :                 >skip1123
                       >
445c : 28              >            plp         ;restore status
                       >
445d : c042            >            cpy #$42
                       >            trap_ne         ;y changed
445f : f003            >        beq skip1125
                       >        trap            ;failed not equal (non zero)
4461 : 20c761          >        jsr report_error
                       >
4464 :                 >skip1125
                       >
4464 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4466 : f003            >        beq skip1127
                       >        trap            ;failed not equal (non zero)
4468 : 20c761          >        jsr report_error
                       >
446b :                 >skip1127
                       >
                        
                                nop_test $63,1
446b : a042            >            ldy #$42
446d : a203            >            ldx #4-1
446f : 63              >            db  $63          ;test nop length
                       >        if 1 = 1
4470 : ca              >            dex
4471 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4472 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4473 : f003            >        beq skip1130
                       >        trap            ;failed not equal (non zero)
4475 : 20c761          >        jsr report_error
                       >
4478 :                 >skip1130
                       >
                       >            set_a $ff-$63,0
                       >            load_flag 0
4478 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
447a : 48              >            pha         ;use stack to load status
447b : a99c            >            lda #$ff-$63     ;precharge accu
447d : 28              >            plp
                       >
447e : 63              >            db  $63          ;test nop integrity - flags off
447f : ea              >            nop
4480 : ea              >            nop
                       >            tst_a $ff-$63,0
4481 : 08              >            php         ;save flags
4482 : c99c            >            cmp #$ff-$63     ;test result
                       >            trap_ne
4484 : f003            >        beq skip1135
                       >        trap            ;failed not equal (non zero)
4486 : 20c761          >        jsr report_error
                       >
4489 :                 >skip1135
                       >
4489 : 68              >            pla         ;load status
448a : 48              >            pha
                       >            cmp_flag 0
448b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
448d : f003            >        beq skip1138
                       >        trap            ;failed not equal (non zero)
448f : 20c761          >        jsr report_error
                       >
4492 :                 >skip1138
                       >
4492 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$63,$ff
                       >            load_flag $ff
4493 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4495 : 48              >            pha         ;use stack to load status
4496 : a947            >            lda #$aa-$63     ;precharge accu
4498 : 28              >            plp
                       >
4499 : 63              >            db  $63          ;test nop integrity - flags on
449a : ea              >            nop
449b : ea              >            nop
                       >            tst_a $aa-$63,$ff
449c : 08              >            php         ;save flags
449d : c947            >            cmp #$aa-$63     ;test result
                       >            trap_ne
449f : f003            >        beq skip1143
                       >        trap            ;failed not equal (non zero)
44a1 : 20c761          >        jsr report_error
                       >
44a4 :                 >skip1143
                       >
44a4 : 68              >            pla         ;load status
44a5 : 48              >            pha
                       >            cmp_flag $ff
44a6 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
44a8 : f003            >        beq skip1146
                       >        trap            ;failed not equal (non zero)
44aa : 20c761          >        jsr report_error
                       >
44ad :                 >skip1146
                       >
44ad : 28              >            plp         ;restore status
                       >
44ae : c042            >            cpy #$42
                       >            trap_ne         ;y changed
44b0 : f003            >        beq skip1148
                       >        trap            ;failed not equal (non zero)
44b2 : 20c761          >        jsr report_error
                       >
44b5 :                 >skip1148
                       >
44b5 : e000            >            cpx #0
                       >            trap_ne         ;x changed
44b7 : f003            >        beq skip1150
                       >        trap            ;failed not equal (non zero)
44b9 : 20c761          >        jsr report_error
                       >
44bc :                 >skip1150
                       >
                        
                                nop_test $73,1
44bc : a042            >            ldy #$42
44be : a203            >            ldx #4-1
44c0 : 73              >            db  $73          ;test nop length
                       >        if 1 = 1
44c1 : ca              >            dex
44c2 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
44c3 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
44c4 : f003            >        beq skip1153
                       >        trap            ;failed not equal (non zero)
44c6 : 20c761          >        jsr report_error
                       >
44c9 :                 >skip1153
                       >
                       >            set_a $ff-$73,0
                       >            load_flag 0
44c9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
44cb : 48              >            pha         ;use stack to load status
44cc : a98c            >            lda #$ff-$73     ;precharge accu
44ce : 28              >            plp
                       >
44cf : 73              >            db  $73          ;test nop integrity - flags off
44d0 : ea              >            nop
44d1 : ea              >            nop
                       >            tst_a $ff-$73,0
44d2 : 08              >            php         ;save flags
44d3 : c98c            >            cmp #$ff-$73     ;test result
                       >            trap_ne
44d5 : f003            >        beq skip1158
                       >        trap            ;failed not equal (non zero)
44d7 : 20c761          >        jsr report_error
                       >
44da :                 >skip1158
                       >
44da : 68              >            pla         ;load status
44db : 48              >            pha
                       >            cmp_flag 0
44dc : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
44de : f003            >        beq skip1161
                       >        trap            ;failed not equal (non zero)
44e0 : 20c761          >        jsr report_error
                       >
44e3 :                 >skip1161
                       >
44e3 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$73,$ff
                       >            load_flag $ff
44e4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
44e6 : 48              >            pha         ;use stack to load status
44e7 : a937            >            lda #$aa-$73     ;precharge accu
44e9 : 28              >            plp
                       >
44ea : 73              >            db  $73          ;test nop integrity - flags on
44eb : ea              >            nop
44ec : ea              >            nop
                       >            tst_a $aa-$73,$ff
44ed : 08              >            php         ;save flags
44ee : c937            >            cmp #$aa-$73     ;test result
                       >            trap_ne
44f0 : f003            >        beq skip1166
                       >        trap            ;failed not equal (non zero)
44f2 : 20c761          >        jsr report_error
                       >
44f5 :                 >skip1166
                       >
44f5 : 68              >            pla         ;load status
44f6 : 48              >            pha
                       >            cmp_flag $ff
44f7 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
44f9 : f003            >        beq skip1169
                       >        trap            ;failed not equal (non zero)
44fb : 20c761          >        jsr report_error
                       >
44fe :                 >skip1169
                       >
44fe : 28              >            plp         ;restore status
                       >
44ff : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4501 : f003            >        beq skip1171
                       >        trap            ;failed not equal (non zero)
4503 : 20c761          >        jsr report_error
                       >
4506 :                 >skip1171
                       >
4506 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4508 : f003            >        beq skip1173
                       >        trap            ;failed not equal (non zero)
450a : 20c761          >        jsr report_error
                       >
450d :                 >skip1173
                       >
                        
                                nop_test $83,1
450d : a042            >            ldy #$42
450f : a203            >            ldx #4-1
4511 : 83              >            db  $83          ;test nop length
                       >        if 1 = 1
4512 : ca              >            dex
4513 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4514 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4515 : f003            >        beq skip1176
                       >        trap            ;failed not equal (non zero)
4517 : 20c761          >        jsr report_error
                       >
451a :                 >skip1176
                       >
                       >            set_a $ff-$83,0
                       >            load_flag 0
451a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
451c : 48              >            pha         ;use stack to load status
451d : a97c            >            lda #$ff-$83     ;precharge accu
451f : 28              >            plp
                       >
4520 : 83              >            db  $83          ;test nop integrity - flags off
4521 : ea              >            nop
4522 : ea              >            nop
                       >            tst_a $ff-$83,0
4523 : 08              >            php         ;save flags
4524 : c97c            >            cmp #$ff-$83     ;test result
                       >            trap_ne
4526 : f003            >        beq skip1181
                       >        trap            ;failed not equal (non zero)
4528 : 20c761          >        jsr report_error
                       >
452b :                 >skip1181
                       >
452b : 68              >            pla         ;load status
452c : 48              >            pha
                       >            cmp_flag 0
452d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
452f : f003            >        beq skip1184
                       >        trap            ;failed not equal (non zero)
4531 : 20c761          >        jsr report_error
                       >
4534 :                 >skip1184
                       >
4534 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$83,$ff
                       >            load_flag $ff
4535 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4537 : 48              >            pha         ;use stack to load status
4538 : a927            >            lda #$aa-$83     ;precharge accu
453a : 28              >            plp
                       >
453b : 83              >            db  $83          ;test nop integrity - flags on
453c : ea              >            nop
453d : ea              >            nop
                       >            tst_a $aa-$83,$ff
453e : 08              >            php         ;save flags
453f : c927            >            cmp #$aa-$83     ;test result
                       >            trap_ne
4541 : f003            >        beq skip1189
                       >        trap            ;failed not equal (non zero)
4543 : 20c761          >        jsr report_error
                       >
4546 :                 >skip1189
                       >
4546 : 68              >            pla         ;load status
4547 : 48              >            pha
                       >            cmp_flag $ff
4548 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
454a : f003            >        beq skip1192
                       >        trap            ;failed not equal (non zero)
454c : 20c761          >        jsr report_error
                       >
454f :                 >skip1192
                       >
454f : 28              >            plp         ;restore status
                       >
4550 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4552 : f003            >        beq skip1194
                       >        trap            ;failed not equal (non zero)
4554 : 20c761          >        jsr report_error
                       >
4557 :                 >skip1194
                       >
4557 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4559 : f003            >        beq skip1196
                       >        trap            ;failed not equal (non zero)
455b : 20c761          >        jsr report_error
                       >
455e :                 >skip1196
                       >
                        
                                nop_test $93,1
455e : a042            >            ldy #$42
4560 : a203            >            ldx #4-1
4562 : 93              >            db  $93          ;test nop length
                       >        if 1 = 1
4563 : ca              >            dex
4564 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4565 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4566 : f003            >        beq skip1199
                       >        trap            ;failed not equal (non zero)
4568 : 20c761          >        jsr report_error
                       >
456b :                 >skip1199
                       >
                       >            set_a $ff-$93,0
                       >            load_flag 0
456b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
456d : 48              >            pha         ;use stack to load status
456e : a96c            >            lda #$ff-$93     ;precharge accu
4570 : 28              >            plp
                       >
4571 : 93              >            db  $93          ;test nop integrity - flags off
4572 : ea              >            nop
4573 : ea              >            nop
                       >            tst_a $ff-$93,0
4574 : 08              >            php         ;save flags
4575 : c96c            >            cmp #$ff-$93     ;test result
                       >            trap_ne
4577 : f003            >        beq skip1204
                       >        trap            ;failed not equal (non zero)
4579 : 20c761          >        jsr report_error
                       >
457c :                 >skip1204
                       >
457c : 68              >            pla         ;load status
457d : 48              >            pha
                       >            cmp_flag 0
457e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4580 : f003            >        beq skip1207
                       >        trap            ;failed not equal (non zero)
4582 : 20c761          >        jsr report_error
                       >
4585 :                 >skip1207
                       >
4585 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$93,$ff
                       >            load_flag $ff
4586 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4588 : 48              >            pha         ;use stack to load status
4589 : a917            >            lda #$aa-$93     ;precharge accu
458b : 28              >            plp
                       >
458c : 93              >            db  $93          ;test nop integrity - flags on
458d : ea              >            nop
458e : ea              >            nop
                       >            tst_a $aa-$93,$ff
458f : 08              >            php         ;save flags
4590 : c917            >            cmp #$aa-$93     ;test result
                       >            trap_ne
4592 : f003            >        beq skip1212
                       >        trap            ;failed not equal (non zero)
4594 : 20c761          >        jsr report_error
                       >
4597 :                 >skip1212
                       >
4597 : 68              >            pla         ;load status
4598 : 48              >            pha
                       >            cmp_flag $ff
4599 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
459b : f003            >        beq skip1215
                       >        trap            ;failed not equal (non zero)
459d : 20c761          >        jsr report_error
                       >
45a0 :                 >skip1215
                       >
45a0 : 28              >            plp         ;restore status
                       >
45a1 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
45a3 : f003            >        beq skip1217
                       >        trap            ;failed not equal (non zero)
45a5 : 20c761          >        jsr report_error
                       >
45a8 :                 >skip1217
                       >
45a8 : e000            >            cpx #0
                       >            trap_ne         ;x changed
45aa : f003            >        beq skip1219
                       >        trap            ;failed not equal (non zero)
45ac : 20c761          >        jsr report_error
                       >
45af :                 >skip1219
                       >
                        
                                nop_test $a3,1
45af : a042            >            ldy #$42
45b1 : a203            >            ldx #4-1
45b3 : a3              >            db  $a3          ;test nop length
                       >        if 1 = 1
45b4 : ca              >            dex
45b5 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
45b6 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
45b7 : f003            >        beq skip1222
                       >        trap            ;failed not equal (non zero)
45b9 : 20c761          >        jsr report_error
                       >
45bc :                 >skip1222
                       >
                       >            set_a $ff-$a3,0
                       >            load_flag 0
45bc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
45be : 48              >            pha         ;use stack to load status
45bf : a95c            >            lda #$ff-$a3     ;precharge accu
45c1 : 28              >            plp
                       >
45c2 : a3              >            db  $a3          ;test nop integrity - flags off
45c3 : ea              >            nop
45c4 : ea              >            nop
                       >            tst_a $ff-$a3,0
45c5 : 08              >            php         ;save flags
45c6 : c95c            >            cmp #$ff-$a3     ;test result
                       >            trap_ne
45c8 : f003            >        beq skip1227
                       >        trap            ;failed not equal (non zero)
45ca : 20c761          >        jsr report_error
                       >
45cd :                 >skip1227
                       >
45cd : 68              >            pla         ;load status
45ce : 48              >            pha
                       >            cmp_flag 0
45cf : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
45d1 : f003            >        beq skip1230
                       >        trap            ;failed not equal (non zero)
45d3 : 20c761          >        jsr report_error
                       >
45d6 :                 >skip1230
                       >
45d6 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$a3,$ff
                       >            load_flag $ff
45d7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
45d9 : 48              >            pha         ;use stack to load status
45da : a907            >            lda #$aa-$a3     ;precharge accu
45dc : 28              >            plp
                       >
45dd : a3              >            db  $a3          ;test nop integrity - flags on
45de : ea              >            nop
45df : ea              >            nop
                       >            tst_a $aa-$a3,$ff
45e0 : 08              >            php         ;save flags
45e1 : c907            >            cmp #$aa-$a3     ;test result
                       >            trap_ne
45e3 : f003            >        beq skip1235
                       >        trap            ;failed not equal (non zero)
45e5 : 20c761          >        jsr report_error
                       >
45e8 :                 >skip1235
                       >
45e8 : 68              >            pla         ;load status
45e9 : 48              >            pha
                       >            cmp_flag $ff
45ea : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
45ec : f003            >        beq skip1238
                       >        trap            ;failed not equal (non zero)
45ee : 20c761          >        jsr report_error
                       >
45f1 :                 >skip1238
                       >
45f1 : 28              >            plp         ;restore status
                       >
45f2 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
45f4 : f003            >        beq skip1240
                       >        trap            ;failed not equal (non zero)
45f6 : 20c761          >        jsr report_error
                       >
45f9 :                 >skip1240
                       >
45f9 : e000            >            cpx #0
                       >            trap_ne         ;x changed
45fb : f003            >        beq skip1242
                       >        trap            ;failed not equal (non zero)
45fd : 20c761          >        jsr report_error
                       >
4600 :                 >skip1242
                       >
                        
                                nop_test $b3,1
4600 : a042            >            ldy #$42
4602 : a203            >            ldx #4-1
4604 : b3              >            db  $b3          ;test nop length
                       >        if 1 = 1
4605 : ca              >            dex
4606 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4607 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4608 : f003            >        beq skip1245
                       >        trap            ;failed not equal (non zero)
460a : 20c761          >        jsr report_error
                       >
460d :                 >skip1245
                       >
                       >            set_a $ff-$b3,0
                       >            load_flag 0
460d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
460f : 48              >            pha         ;use stack to load status
4610 : a94c            >            lda #$ff-$b3     ;precharge accu
4612 : 28              >            plp
                       >
4613 : b3              >            db  $b3          ;test nop integrity - flags off
4614 : ea              >            nop
4615 : ea              >            nop
                       >            tst_a $ff-$b3,0
4616 : 08              >            php         ;save flags
4617 : c94c            >            cmp #$ff-$b3     ;test result
                       >            trap_ne
4619 : f003            >        beq skip1250
                       >        trap            ;failed not equal (non zero)
461b : 20c761          >        jsr report_error
                       >
461e :                 >skip1250
                       >
461e : 68              >            pla         ;load status
461f : 48              >            pha
                       >            cmp_flag 0
4620 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4622 : f003            >        beq skip1253
                       >        trap            ;failed not equal (non zero)
4624 : 20c761          >        jsr report_error
                       >
4627 :                 >skip1253
                       >
4627 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$b3,$ff
                       >            load_flag $ff
4628 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
462a : 48              >            pha         ;use stack to load status
462b : a9f7            >            lda #$aa-$b3     ;precharge accu
462d : 28              >            plp
                       >
462e : b3              >            db  $b3          ;test nop integrity - flags on
462f : ea              >            nop
4630 : ea              >            nop
                       >            tst_a $aa-$b3,$ff
4631 : 08              >            php         ;save flags
4632 : c9f7            >            cmp #$aa-$b3     ;test result
                       >            trap_ne
4634 : f003            >        beq skip1258
                       >        trap            ;failed not equal (non zero)
4636 : 20c761          >        jsr report_error
                       >
4639 :                 >skip1258
                       >
4639 : 68              >            pla         ;load status
463a : 48              >            pha
                       >            cmp_flag $ff
463b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
463d : f003            >        beq skip1261
                       >        trap            ;failed not equal (non zero)
463f : 20c761          >        jsr report_error
                       >
4642 :                 >skip1261
                       >
4642 : 28              >            plp         ;restore status
                       >
4643 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4645 : f003            >        beq skip1263
                       >        trap            ;failed not equal (non zero)
4647 : 20c761          >        jsr report_error
                       >
464a :                 >skip1263
                       >
464a : e000            >            cpx #0
                       >            trap_ne         ;x changed
464c : f003            >        beq skip1265
                       >        trap            ;failed not equal (non zero)
464e : 20c761          >        jsr report_error
                       >
4651 :                 >skip1265
                       >
                        
                                nop_test $c3,1
4651 : a042            >            ldy #$42
4653 : a203            >            ldx #4-1
4655 : c3              >            db  $c3          ;test nop length
                       >        if 1 = 1
4656 : ca              >            dex
4657 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4658 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4659 : f003            >        beq skip1268
                       >        trap            ;failed not equal (non zero)
465b : 20c761          >        jsr report_error
                       >
465e :                 >skip1268
                       >
                       >            set_a $ff-$c3,0
                       >            load_flag 0
465e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4660 : 48              >            pha         ;use stack to load status
4661 : a93c            >            lda #$ff-$c3     ;precharge accu
4663 : 28              >            plp
                       >
4664 : c3              >            db  $c3          ;test nop integrity - flags off
4665 : ea              >            nop
4666 : ea              >            nop
                       >            tst_a $ff-$c3,0
4667 : 08              >            php         ;save flags
4668 : c93c            >            cmp #$ff-$c3     ;test result
                       >            trap_ne
466a : f003            >        beq skip1273
                       >        trap            ;failed not equal (non zero)
466c : 20c761          >        jsr report_error
                       >
466f :                 >skip1273
                       >
466f : 68              >            pla         ;load status
4670 : 48              >            pha
                       >            cmp_flag 0
4671 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4673 : f003            >        beq skip1276
                       >        trap            ;failed not equal (non zero)
4675 : 20c761          >        jsr report_error
                       >
4678 :                 >skip1276
                       >
4678 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$c3,$ff
                       >            load_flag $ff
4679 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
467b : 48              >            pha         ;use stack to load status
467c : a9e7            >            lda #$aa-$c3     ;precharge accu
467e : 28              >            plp
                       >
467f : c3              >            db  $c3          ;test nop integrity - flags on
4680 : ea              >            nop
4681 : ea              >            nop
                       >            tst_a $aa-$c3,$ff
4682 : 08              >            php         ;save flags
4683 : c9e7            >            cmp #$aa-$c3     ;test result
                       >            trap_ne
4685 : f003            >        beq skip1281
                       >        trap            ;failed not equal (non zero)
4687 : 20c761          >        jsr report_error
                       >
468a :                 >skip1281
                       >
468a : 68              >            pla         ;load status
468b : 48              >            pha
                       >            cmp_flag $ff
468c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
468e : f003            >        beq skip1284
                       >        trap            ;failed not equal (non zero)
4690 : 20c761          >        jsr report_error
                       >
4693 :                 >skip1284
                       >
4693 : 28              >            plp         ;restore status
                       >
4694 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4696 : f003            >        beq skip1286
                       >        trap            ;failed not equal (non zero)
4698 : 20c761          >        jsr report_error
                       >
469b :                 >skip1286
                       >
469b : e000            >            cpx #0
                       >            trap_ne         ;x changed
469d : f003            >        beq skip1288
                       >        trap            ;failed not equal (non zero)
469f : 20c761          >        jsr report_error
                       >
46a2 :                 >skip1288
                       >
                        
                                nop_test $d3,1
46a2 : a042            >            ldy #$42
46a4 : a203            >            ldx #4-1
46a6 : d3              >            db  $d3          ;test nop length
                       >        if 1 = 1
46a7 : ca              >            dex
46a8 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
46a9 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
46aa : f003            >        beq skip1291
                       >        trap            ;failed not equal (non zero)
46ac : 20c761          >        jsr report_error
                       >
46af :                 >skip1291
                       >
                       >            set_a $ff-$d3,0
                       >            load_flag 0
46af : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
46b1 : 48              >            pha         ;use stack to load status
46b2 : a92c            >            lda #$ff-$d3     ;precharge accu
46b4 : 28              >            plp
                       >
46b5 : d3              >            db  $d3          ;test nop integrity - flags off
46b6 : ea              >            nop
46b7 : ea              >            nop
                       >            tst_a $ff-$d3,0
46b8 : 08              >            php         ;save flags
46b9 : c92c            >            cmp #$ff-$d3     ;test result
                       >            trap_ne
46bb : f003            >        beq skip1296
                       >        trap            ;failed not equal (non zero)
46bd : 20c761          >        jsr report_error
                       >
46c0 :                 >skip1296
                       >
46c0 : 68              >            pla         ;load status
46c1 : 48              >            pha
                       >            cmp_flag 0
46c2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
46c4 : f003            >        beq skip1299
                       >        trap            ;failed not equal (non zero)
46c6 : 20c761          >        jsr report_error
                       >
46c9 :                 >skip1299
                       >
46c9 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$d3,$ff
                       >            load_flag $ff
46ca : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
46cc : 48              >            pha         ;use stack to load status
46cd : a9d7            >            lda #$aa-$d3     ;precharge accu
46cf : 28              >            plp
                       >
46d0 : d3              >            db  $d3          ;test nop integrity - flags on
46d1 : ea              >            nop
46d2 : ea              >            nop
                       >            tst_a $aa-$d3,$ff
46d3 : 08              >            php         ;save flags
46d4 : c9d7            >            cmp #$aa-$d3     ;test result
                       >            trap_ne
46d6 : f003            >        beq skip1304
                       >        trap            ;failed not equal (non zero)
46d8 : 20c761          >        jsr report_error
                       >
46db :                 >skip1304
                       >
46db : 68              >            pla         ;load status
46dc : 48              >            pha
                       >            cmp_flag $ff
46dd : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
46df : f003            >        beq skip1307
                       >        trap            ;failed not equal (non zero)
46e1 : 20c761          >        jsr report_error
                       >
46e4 :                 >skip1307
                       >
46e4 : 28              >            plp         ;restore status
                       >
46e5 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
46e7 : f003            >        beq skip1309
                       >        trap            ;failed not equal (non zero)
46e9 : 20c761          >        jsr report_error
                       >
46ec :                 >skip1309
                       >
46ec : e000            >            cpx #0
                       >            trap_ne         ;x changed
46ee : f003            >        beq skip1311
                       >        trap            ;failed not equal (non zero)
46f0 : 20c761          >        jsr report_error
                       >
46f3 :                 >skip1311
                       >
                        
                                nop_test $e3,1
46f3 : a042            >            ldy #$42
46f5 : a203            >            ldx #4-1
46f7 : e3              >            db  $e3          ;test nop length
                       >        if 1 = 1
46f8 : ca              >            dex
46f9 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
46fa : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
46fb : f003            >        beq skip1314
                       >        trap            ;failed not equal (non zero)
46fd : 20c761          >        jsr report_error
                       >
4700 :                 >skip1314
                       >
                       >            set_a $ff-$e3,0
                       >            load_flag 0
4700 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4702 : 48              >            pha         ;use stack to load status
4703 : a91c            >            lda #$ff-$e3     ;precharge accu
4705 : 28              >            plp
                       >
4706 : e3              >            db  $e3          ;test nop integrity - flags off
4707 : ea              >            nop
4708 : ea              >            nop
                       >            tst_a $ff-$e3,0
4709 : 08              >            php         ;save flags
470a : c91c            >            cmp #$ff-$e3     ;test result
                       >            trap_ne
470c : f003            >        beq skip1319
                       >        trap            ;failed not equal (non zero)
470e : 20c761          >        jsr report_error
                       >
4711 :                 >skip1319
                       >
4711 : 68              >            pla         ;load status
4712 : 48              >            pha
                       >            cmp_flag 0
4713 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4715 : f003            >        beq skip1322
                       >        trap            ;failed not equal (non zero)
4717 : 20c761          >        jsr report_error
                       >
471a :                 >skip1322
                       >
471a : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$e3,$ff
                       >            load_flag $ff
471b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
471d : 48              >            pha         ;use stack to load status
471e : a9c7            >            lda #$aa-$e3     ;precharge accu
4720 : 28              >            plp
                       >
4721 : e3              >            db  $e3          ;test nop integrity - flags on
4722 : ea              >            nop
4723 : ea              >            nop
                       >            tst_a $aa-$e3,$ff
4724 : 08              >            php         ;save flags
4725 : c9c7            >            cmp #$aa-$e3     ;test result
                       >            trap_ne
4727 : f003            >        beq skip1327
                       >        trap            ;failed not equal (non zero)
4729 : 20c761          >        jsr report_error
                       >
472c :                 >skip1327
                       >
472c : 68              >            pla         ;load status
472d : 48              >            pha
                       >            cmp_flag $ff
472e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4730 : f003            >        beq skip1330
                       >        trap            ;failed not equal (non zero)
4732 : 20c761          >        jsr report_error
                       >
4735 :                 >skip1330
                       >
4735 : 28              >            plp         ;restore status
                       >
4736 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4738 : f003            >        beq skip1332
                       >        trap            ;failed not equal (non zero)
473a : 20c761          >        jsr report_error
                       >
473d :                 >skip1332
                       >
473d : e000            >            cpx #0
                       >            trap_ne         ;x changed
473f : f003            >        beq skip1334
                       >        trap            ;failed not equal (non zero)
4741 : 20c761          >        jsr report_error
                       >
4744 :                 >skip1334
                       >
                        
                                nop_test $f3,1
4744 : a042            >            ldy #$42
4746 : a203            >            ldx #4-1
4748 : f3              >            db  $f3          ;test nop length
                       >        if 1 = 1
4749 : ca              >            dex
474a : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
474b : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
474c : f003            >        beq skip1337
                       >        trap            ;failed not equal (non zero)
474e : 20c761          >        jsr report_error
                       >
4751 :                 >skip1337
                       >
                       >            set_a $ff-$f3,0
                       >            load_flag 0
4751 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4753 : 48              >            pha         ;use stack to load status
4754 : a90c            >            lda #$ff-$f3     ;precharge accu
4756 : 28              >            plp
                       >
4757 : f3              >            db  $f3          ;test nop integrity - flags off
4758 : ea              >            nop
4759 : ea              >            nop
                       >            tst_a $ff-$f3,0
475a : 08              >            php         ;save flags
475b : c90c            >            cmp #$ff-$f3     ;test result
                       >            trap_ne
475d : f003            >        beq skip1342
                       >        trap            ;failed not equal (non zero)
475f : 20c761          >        jsr report_error
                       >
4762 :                 >skip1342
                       >
4762 : 68              >            pla         ;load status
4763 : 48              >            pha
                       >            cmp_flag 0
4764 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4766 : f003            >        beq skip1345
                       >        trap            ;failed not equal (non zero)
4768 : 20c761          >        jsr report_error
                       >
476b :                 >skip1345
                       >
476b : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$f3,$ff
                       >            load_flag $ff
476c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
476e : 48              >            pha         ;use stack to load status
476f : a9b7            >            lda #$aa-$f3     ;precharge accu
4771 : 28              >            plp
                       >
4772 : f3              >            db  $f3          ;test nop integrity - flags on
4773 : ea              >            nop
4774 : ea              >            nop
                       >            tst_a $aa-$f3,$ff
4775 : 08              >            php         ;save flags
4776 : c9b7            >            cmp #$aa-$f3     ;test result
                       >            trap_ne
4778 : f003            >        beq skip1350
                       >        trap            ;failed not equal (non zero)
477a : 20c761          >        jsr report_error
                       >
477d :                 >skip1350
                       >
477d : 68              >            pla         ;load status
477e : 48              >            pha
                       >            cmp_flag $ff
477f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4781 : f003            >        beq skip1353
                       >        trap            ;failed not equal (non zero)
4783 : 20c761          >        jsr report_error
                       >
4786 :                 >skip1353
                       >
4786 : 28              >            plp         ;restore status
                       >
4787 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4789 : f003            >        beq skip1355
                       >        trap            ;failed not equal (non zero)
478b : 20c761          >        jsr report_error
                       >
478e :                 >skip1355
                       >
478e : e000            >            cpx #0
                       >            trap_ne         ;x changed
4790 : f003            >        beq skip1357
                       >        trap            ;failed not equal (non zero)
4792 : 20c761          >        jsr report_error
                       >
4795 :                 >skip1357
                       >
                        
                                nop_test $0b,1
4795 : a042            >            ldy #$42
4797 : a203            >            ldx #4-1
4799 : 0b              >            db  $0b          ;test nop length
                       >        if 1 = 1
479a : ca              >            dex
479b : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
479c : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
479d : f003            >        beq skip1360
                       >        trap            ;failed not equal (non zero)
479f : 20c761          >        jsr report_error
                       >
47a2 :                 >skip1360
                       >
                       >            set_a $ff-$0b,0
                       >            load_flag 0
47a2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
47a4 : 48              >            pha         ;use stack to load status
47a5 : a9f4            >            lda #$ff-$0b     ;precharge accu
47a7 : 28              >            plp
                       >
47a8 : 0b              >            db  $0b          ;test nop integrity - flags off
47a9 : ea              >            nop
47aa : ea              >            nop
                       >            tst_a $ff-$0b,0
47ab : 08              >            php         ;save flags
47ac : c9f4            >            cmp #$ff-$0b     ;test result
                       >            trap_ne
47ae : f003            >        beq skip1365
                       >        trap            ;failed not equal (non zero)
47b0 : 20c761          >        jsr report_error
                       >
47b3 :                 >skip1365
                       >
47b3 : 68              >            pla         ;load status
47b4 : 48              >            pha
                       >            cmp_flag 0
47b5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
47b7 : f003            >        beq skip1368
                       >        trap            ;failed not equal (non zero)
47b9 : 20c761          >        jsr report_error
                       >
47bc :                 >skip1368
                       >
47bc : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$0b,$ff
                       >            load_flag $ff
47bd : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
47bf : 48              >            pha         ;use stack to load status
47c0 : a99f            >            lda #$aa-$0b     ;precharge accu
47c2 : 28              >            plp
                       >
47c3 : 0b              >            db  $0b          ;test nop integrity - flags on
47c4 : ea              >            nop
47c5 : ea              >            nop
                       >            tst_a $aa-$0b,$ff
47c6 : 08              >            php         ;save flags
47c7 : c99f            >            cmp #$aa-$0b     ;test result
                       >            trap_ne
47c9 : f003            >        beq skip1373
                       >        trap            ;failed not equal (non zero)
47cb : 20c761          >        jsr report_error
                       >
47ce :                 >skip1373
                       >
47ce : 68              >            pla         ;load status
47cf : 48              >            pha
                       >            cmp_flag $ff
47d0 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
47d2 : f003            >        beq skip1376
                       >        trap            ;failed not equal (non zero)
47d4 : 20c761          >        jsr report_error
                       >
47d7 :                 >skip1376
                       >
47d7 : 28              >            plp         ;restore status
                       >
47d8 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
47da : f003            >        beq skip1378
                       >        trap            ;failed not equal (non zero)
47dc : 20c761          >        jsr report_error
                       >
47df :                 >skip1378
                       >
47df : e000            >            cpx #0
                       >            trap_ne         ;x changed
47e1 : f003            >        beq skip1380
                       >        trap            ;failed not equal (non zero)
47e3 : 20c761          >        jsr report_error
                       >
47e6 :                 >skip1380
                       >
                        
                                nop_test $1b,1
47e6 : a042            >            ldy #$42
47e8 : a203            >            ldx #4-1
47ea : 1b              >            db  $1b          ;test nop length
                       >        if 1 = 1
47eb : ca              >            dex
47ec : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
47ed : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
47ee : f003            >        beq skip1383
                       >        trap            ;failed not equal (non zero)
47f0 : 20c761          >        jsr report_error
                       >
47f3 :                 >skip1383
                       >
                       >            set_a $ff-$1b,0
                       >            load_flag 0
47f3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
47f5 : 48              >            pha         ;use stack to load status
47f6 : a9e4            >            lda #$ff-$1b     ;precharge accu
47f8 : 28              >            plp
                       >
47f9 : 1b              >            db  $1b          ;test nop integrity - flags off
47fa : ea              >            nop
47fb : ea              >            nop
                       >            tst_a $ff-$1b,0
47fc : 08              >            php         ;save flags
47fd : c9e4            >            cmp #$ff-$1b     ;test result
                       >            trap_ne
47ff : f003            >        beq skip1388
                       >        trap            ;failed not equal (non zero)
4801 : 20c761          >        jsr report_error
                       >
4804 :                 >skip1388
                       >
4804 : 68              >            pla         ;load status
4805 : 48              >            pha
                       >            cmp_flag 0
4806 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4808 : f003            >        beq skip1391
                       >        trap            ;failed not equal (non zero)
480a : 20c761          >        jsr report_error
                       >
480d :                 >skip1391
                       >
480d : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$1b,$ff
                       >            load_flag $ff
480e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4810 : 48              >            pha         ;use stack to load status
4811 : a98f            >            lda #$aa-$1b     ;precharge accu
4813 : 28              >            plp
                       >
4814 : 1b              >            db  $1b          ;test nop integrity - flags on
4815 : ea              >            nop
4816 : ea              >            nop
                       >            tst_a $aa-$1b,$ff
4817 : 08              >            php         ;save flags
4818 : c98f            >            cmp #$aa-$1b     ;test result
                       >            trap_ne
481a : f003            >        beq skip1396
                       >        trap            ;failed not equal (non zero)
481c : 20c761          >        jsr report_error
                       >
481f :                 >skip1396
                       >
481f : 68              >            pla         ;load status
4820 : 48              >            pha
                       >            cmp_flag $ff
4821 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4823 : f003            >        beq skip1399
                       >        trap            ;failed not equal (non zero)
4825 : 20c761          >        jsr report_error
                       >
4828 :                 >skip1399
                       >
4828 : 28              >            plp         ;restore status
                       >
4829 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
482b : f003            >        beq skip1401
                       >        trap            ;failed not equal (non zero)
482d : 20c761          >        jsr report_error
                       >
4830 :                 >skip1401
                       >
4830 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4832 : f003            >        beq skip1403
                       >        trap            ;failed not equal (non zero)
4834 : 20c761          >        jsr report_error
                       >
4837 :                 >skip1403
                       >
                        
                                nop_test $2b,1
4837 : a042            >            ldy #$42
4839 : a203            >            ldx #4-1
483b : 2b              >            db  $2b          ;test nop length
                       >        if 1 = 1
483c : ca              >            dex
483d : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
483e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
483f : f003            >        beq skip1406
                       >        trap            ;failed not equal (non zero)
4841 : 20c761          >        jsr report_error
                       >
4844 :                 >skip1406
                       >
                       >            set_a $ff-$2b,0
                       >            load_flag 0
4844 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4846 : 48              >            pha         ;use stack to load status
4847 : a9d4            >            lda #$ff-$2b     ;precharge accu
4849 : 28              >            plp
                       >
484a : 2b              >            db  $2b          ;test nop integrity - flags off
484b : ea              >            nop
484c : ea              >            nop
                       >            tst_a $ff-$2b,0
484d : 08              >            php         ;save flags
484e : c9d4            >            cmp #$ff-$2b     ;test result
                       >            trap_ne
4850 : f003            >        beq skip1411
                       >        trap            ;failed not equal (non zero)
4852 : 20c761          >        jsr report_error
                       >
4855 :                 >skip1411
                       >
4855 : 68              >            pla         ;load status
4856 : 48              >            pha
                       >            cmp_flag 0
4857 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4859 : f003            >        beq skip1414
                       >        trap            ;failed not equal (non zero)
485b : 20c761          >        jsr report_error
                       >
485e :                 >skip1414
                       >
485e : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$2b,$ff
                       >            load_flag $ff
485f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4861 : 48              >            pha         ;use stack to load status
4862 : a97f            >            lda #$aa-$2b     ;precharge accu
4864 : 28              >            plp
                       >
4865 : 2b              >            db  $2b          ;test nop integrity - flags on
4866 : ea              >            nop
4867 : ea              >            nop
                       >            tst_a $aa-$2b,$ff
4868 : 08              >            php         ;save flags
4869 : c97f            >            cmp #$aa-$2b     ;test result
                       >            trap_ne
486b : f003            >        beq skip1419
                       >        trap            ;failed not equal (non zero)
486d : 20c761          >        jsr report_error
                       >
4870 :                 >skip1419
                       >
4870 : 68              >            pla         ;load status
4871 : 48              >            pha
                       >            cmp_flag $ff
4872 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4874 : f003            >        beq skip1422
                       >        trap            ;failed not equal (non zero)
4876 : 20c761          >        jsr report_error
                       >
4879 :                 >skip1422
                       >
4879 : 28              >            plp         ;restore status
                       >
487a : c042            >            cpy #$42
                       >            trap_ne         ;y changed
487c : f003            >        beq skip1424
                       >        trap            ;failed not equal (non zero)
487e : 20c761          >        jsr report_error
                       >
4881 :                 >skip1424
                       >
4881 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4883 : f003            >        beq skip1426
                       >        trap            ;failed not equal (non zero)
4885 : 20c761          >        jsr report_error
                       >
4888 :                 >skip1426
                       >
                        
                                nop_test $3b,1
4888 : a042            >            ldy #$42
488a : a203            >            ldx #4-1
488c : 3b              >            db  $3b          ;test nop length
                       >        if 1 = 1
488d : ca              >            dex
488e : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
488f : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4890 : f003            >        beq skip1429
                       >        trap            ;failed not equal (non zero)
4892 : 20c761          >        jsr report_error
                       >
4895 :                 >skip1429
                       >
                       >            set_a $ff-$3b,0
                       >            load_flag 0
4895 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4897 : 48              >            pha         ;use stack to load status
4898 : a9c4            >            lda #$ff-$3b     ;precharge accu
489a : 28              >            plp
                       >
489b : 3b              >            db  $3b          ;test nop integrity - flags off
489c : ea              >            nop
489d : ea              >            nop
                       >            tst_a $ff-$3b,0
489e : 08              >            php         ;save flags
489f : c9c4            >            cmp #$ff-$3b     ;test result
                       >            trap_ne
48a1 : f003            >        beq skip1434
                       >        trap            ;failed not equal (non zero)
48a3 : 20c761          >        jsr report_error
                       >
48a6 :                 >skip1434
                       >
48a6 : 68              >            pla         ;load status
48a7 : 48              >            pha
                       >            cmp_flag 0
48a8 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
48aa : f003            >        beq skip1437
                       >        trap            ;failed not equal (non zero)
48ac : 20c761          >        jsr report_error
                       >
48af :                 >skip1437
                       >
48af : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$3b,$ff
                       >            load_flag $ff
48b0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
48b2 : 48              >            pha         ;use stack to load status
48b3 : a96f            >            lda #$aa-$3b     ;precharge accu
48b5 : 28              >            plp
                       >
48b6 : 3b              >            db  $3b          ;test nop integrity - flags on
48b7 : ea              >            nop
48b8 : ea              >            nop
                       >            tst_a $aa-$3b,$ff
48b9 : 08              >            php         ;save flags
48ba : c96f            >            cmp #$aa-$3b     ;test result
                       >            trap_ne
48bc : f003            >        beq skip1442
                       >        trap            ;failed not equal (non zero)
48be : 20c761          >        jsr report_error
                       >
48c1 :                 >skip1442
                       >
48c1 : 68              >            pla         ;load status
48c2 : 48              >            pha
                       >            cmp_flag $ff
48c3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
48c5 : f003            >        beq skip1445
                       >        trap            ;failed not equal (non zero)
48c7 : 20c761          >        jsr report_error
                       >
48ca :                 >skip1445
                       >
48ca : 28              >            plp         ;restore status
                       >
48cb : c042            >            cpy #$42
                       >            trap_ne         ;y changed
48cd : f003            >        beq skip1447
                       >        trap            ;failed not equal (non zero)
48cf : 20c761          >        jsr report_error
                       >
48d2 :                 >skip1447
                       >
48d2 : e000            >            cpx #0
                       >            trap_ne         ;x changed
48d4 : f003            >        beq skip1449
                       >        trap            ;failed not equal (non zero)
48d6 : 20c761          >        jsr report_error
                       >
48d9 :                 >skip1449
                       >
                        
                                nop_test $4b,1
48d9 : a042            >            ldy #$42
48db : a203            >            ldx #4-1
48dd : 4b              >            db  $4b          ;test nop length
                       >        if 1 = 1
48de : ca              >            dex
48df : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
48e0 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
48e1 : f003            >        beq skip1452
                       >        trap            ;failed not equal (non zero)
48e3 : 20c761          >        jsr report_error
                       >
48e6 :                 >skip1452
                       >
                       >            set_a $ff-$4b,0
                       >            load_flag 0
48e6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
48e8 : 48              >            pha         ;use stack to load status
48e9 : a9b4            >            lda #$ff-$4b     ;precharge accu
48eb : 28              >            plp
                       >
48ec : 4b              >            db  $4b          ;test nop integrity - flags off
48ed : ea              >            nop
48ee : ea              >            nop
                       >            tst_a $ff-$4b,0
48ef : 08              >            php         ;save flags
48f0 : c9b4            >            cmp #$ff-$4b     ;test result
                       >            trap_ne
48f2 : f003            >        beq skip1457
                       >        trap            ;failed not equal (non zero)
48f4 : 20c761          >        jsr report_error
                       >
48f7 :                 >skip1457
                       >
48f7 : 68              >            pla         ;load status
48f8 : 48              >            pha
                       >            cmp_flag 0
48f9 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
48fb : f003            >        beq skip1460
                       >        trap            ;failed not equal (non zero)
48fd : 20c761          >        jsr report_error
                       >
4900 :                 >skip1460
                       >
4900 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$4b,$ff
                       >            load_flag $ff
4901 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4903 : 48              >            pha         ;use stack to load status
4904 : a95f            >            lda #$aa-$4b     ;precharge accu
4906 : 28              >            plp
                       >
4907 : 4b              >            db  $4b          ;test nop integrity - flags on
4908 : ea              >            nop
4909 : ea              >            nop
                       >            tst_a $aa-$4b,$ff
490a : 08              >            php         ;save flags
490b : c95f            >            cmp #$aa-$4b     ;test result
                       >            trap_ne
490d : f003            >        beq skip1465
                       >        trap            ;failed not equal (non zero)
490f : 20c761          >        jsr report_error
                       >
4912 :                 >skip1465
                       >
4912 : 68              >            pla         ;load status
4913 : 48              >            pha
                       >            cmp_flag $ff
4914 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4916 : f003            >        beq skip1468
                       >        trap            ;failed not equal (non zero)
4918 : 20c761          >        jsr report_error
                       >
491b :                 >skip1468
                       >
491b : 28              >            plp         ;restore status
                       >
491c : c042            >            cpy #$42
                       >            trap_ne         ;y changed
491e : f003            >        beq skip1470
                       >        trap            ;failed not equal (non zero)
4920 : 20c761          >        jsr report_error
                       >
4923 :                 >skip1470
                       >
4923 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4925 : f003            >        beq skip1472
                       >        trap            ;failed not equal (non zero)
4927 : 20c761          >        jsr report_error
                       >
492a :                 >skip1472
                       >
                        
                                nop_test $5b,1
492a : a042            >            ldy #$42
492c : a203            >            ldx #4-1
492e : 5b              >            db  $5b          ;test nop length
                       >        if 1 = 1
492f : ca              >            dex
4930 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4931 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4932 : f003            >        beq skip1475
                       >        trap            ;failed not equal (non zero)
4934 : 20c761          >        jsr report_error
                       >
4937 :                 >skip1475
                       >
                       >            set_a $ff-$5b,0
                       >            load_flag 0
4937 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4939 : 48              >            pha         ;use stack to load status
493a : a9a4            >            lda #$ff-$5b     ;precharge accu
493c : 28              >            plp
                       >
493d : 5b              >            db  $5b          ;test nop integrity - flags off
493e : ea              >            nop
493f : ea              >            nop
                       >            tst_a $ff-$5b,0
4940 : 08              >            php         ;save flags
4941 : c9a4            >            cmp #$ff-$5b     ;test result
                       >            trap_ne
4943 : f003            >        beq skip1480
                       >        trap            ;failed not equal (non zero)
4945 : 20c761          >        jsr report_error
                       >
4948 :                 >skip1480
                       >
4948 : 68              >            pla         ;load status
4949 : 48              >            pha
                       >            cmp_flag 0
494a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
494c : f003            >        beq skip1483
                       >        trap            ;failed not equal (non zero)
494e : 20c761          >        jsr report_error
                       >
4951 :                 >skip1483
                       >
4951 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$5b,$ff
                       >            load_flag $ff
4952 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4954 : 48              >            pha         ;use stack to load status
4955 : a94f            >            lda #$aa-$5b     ;precharge accu
4957 : 28              >            plp
                       >
4958 : 5b              >            db  $5b          ;test nop integrity - flags on
4959 : ea              >            nop
495a : ea              >            nop
                       >            tst_a $aa-$5b,$ff
495b : 08              >            php         ;save flags
495c : c94f            >            cmp #$aa-$5b     ;test result
                       >            trap_ne
495e : f003            >        beq skip1488
                       >        trap            ;failed not equal (non zero)
4960 : 20c761          >        jsr report_error
                       >
4963 :                 >skip1488
                       >
4963 : 68              >            pla         ;load status
4964 : 48              >            pha
                       >            cmp_flag $ff
4965 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4967 : f003            >        beq skip1491
                       >        trap            ;failed not equal (non zero)
4969 : 20c761          >        jsr report_error
                       >
496c :                 >skip1491
                       >
496c : 28              >            plp         ;restore status
                       >
496d : c042            >            cpy #$42
                       >            trap_ne         ;y changed
496f : f003            >        beq skip1493
                       >        trap            ;failed not equal (non zero)
4971 : 20c761          >        jsr report_error
                       >
4974 :                 >skip1493
                       >
4974 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4976 : f003            >        beq skip1495
                       >        trap            ;failed not equal (non zero)
4978 : 20c761          >        jsr report_error
                       >
497b :                 >skip1495
                       >
                        
                                nop_test $6b,1
497b : a042            >            ldy #$42
497d : a203            >            ldx #4-1
497f : 6b              >            db  $6b          ;test nop length
                       >        if 1 = 1
4980 : ca              >            dex
4981 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4982 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4983 : f003            >        beq skip1498
                       >        trap            ;failed not equal (non zero)
4985 : 20c761          >        jsr report_error
                       >
4988 :                 >skip1498
                       >
                       >            set_a $ff-$6b,0
                       >            load_flag 0
4988 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
498a : 48              >            pha         ;use stack to load status
498b : a994            >            lda #$ff-$6b     ;precharge accu
498d : 28              >            plp
                       >
498e : 6b              >            db  $6b          ;test nop integrity - flags off
498f : ea              >            nop
4990 : ea              >            nop
                       >            tst_a $ff-$6b,0
4991 : 08              >            php         ;save flags
4992 : c994            >            cmp #$ff-$6b     ;test result
                       >            trap_ne
4994 : f003            >        beq skip1503
                       >        trap            ;failed not equal (non zero)
4996 : 20c761          >        jsr report_error
                       >
4999 :                 >skip1503
                       >
4999 : 68              >            pla         ;load status
499a : 48              >            pha
                       >            cmp_flag 0
499b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
499d : f003            >        beq skip1506
                       >        trap            ;failed not equal (non zero)
499f : 20c761          >        jsr report_error
                       >
49a2 :                 >skip1506
                       >
49a2 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$6b,$ff
                       >            load_flag $ff
49a3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
49a5 : 48              >            pha         ;use stack to load status
49a6 : a93f            >            lda #$aa-$6b     ;precharge accu
49a8 : 28              >            plp
                       >
49a9 : 6b              >            db  $6b          ;test nop integrity - flags on
49aa : ea              >            nop
49ab : ea              >            nop
                       >            tst_a $aa-$6b,$ff
49ac : 08              >            php         ;save flags
49ad : c93f            >            cmp #$aa-$6b     ;test result
                       >            trap_ne
49af : f003            >        beq skip1511
                       >        trap            ;failed not equal (non zero)
49b1 : 20c761          >        jsr report_error
                       >
49b4 :                 >skip1511
                       >
49b4 : 68              >            pla         ;load status
49b5 : 48              >            pha
                       >            cmp_flag $ff
49b6 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
49b8 : f003            >        beq skip1514
                       >        trap            ;failed not equal (non zero)
49ba : 20c761          >        jsr report_error
                       >
49bd :                 >skip1514
                       >
49bd : 28              >            plp         ;restore status
                       >
49be : c042            >            cpy #$42
                       >            trap_ne         ;y changed
49c0 : f003            >        beq skip1516
                       >        trap            ;failed not equal (non zero)
49c2 : 20c761          >        jsr report_error
                       >
49c5 :                 >skip1516
                       >
49c5 : e000            >            cpx #0
                       >            trap_ne         ;x changed
49c7 : f003            >        beq skip1518
                       >        trap            ;failed not equal (non zero)
49c9 : 20c761          >        jsr report_error
                       >
49cc :                 >skip1518
                       >
                        
                                nop_test $7b,1
49cc : a042            >            ldy #$42
49ce : a203            >            ldx #4-1
49d0 : 7b              >            db  $7b          ;test nop length
                       >        if 1 = 1
49d1 : ca              >            dex
49d2 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
49d3 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
49d4 : f003            >        beq skip1521
                       >        trap            ;failed not equal (non zero)
49d6 : 20c761          >        jsr report_error
                       >
49d9 :                 >skip1521
                       >
                       >            set_a $ff-$7b,0
                       >            load_flag 0
49d9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
49db : 48              >            pha         ;use stack to load status
49dc : a984            >            lda #$ff-$7b     ;precharge accu
49de : 28              >            plp
                       >
49df : 7b              >            db  $7b          ;test nop integrity - flags off
49e0 : ea              >            nop
49e1 : ea              >            nop
                       >            tst_a $ff-$7b,0
49e2 : 08              >            php         ;save flags
49e3 : c984            >            cmp #$ff-$7b     ;test result
                       >            trap_ne
49e5 : f003            >        beq skip1526
                       >        trap            ;failed not equal (non zero)
49e7 : 20c761          >        jsr report_error
                       >
49ea :                 >skip1526
                       >
49ea : 68              >            pla         ;load status
49eb : 48              >            pha
                       >            cmp_flag 0
49ec : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
49ee : f003            >        beq skip1529
                       >        trap            ;failed not equal (non zero)
49f0 : 20c761          >        jsr report_error
                       >
49f3 :                 >skip1529
                       >
49f3 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$7b,$ff
                       >            load_flag $ff
49f4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
49f6 : 48              >            pha         ;use stack to load status
49f7 : a92f            >            lda #$aa-$7b     ;precharge accu
49f9 : 28              >            plp
                       >
49fa : 7b              >            db  $7b          ;test nop integrity - flags on
49fb : ea              >            nop
49fc : ea              >            nop
                       >            tst_a $aa-$7b,$ff
49fd : 08              >            php         ;save flags
49fe : c92f            >            cmp #$aa-$7b     ;test result
                       >            trap_ne
4a00 : f003            >        beq skip1534
                       >        trap            ;failed not equal (non zero)
4a02 : 20c761          >        jsr report_error
                       >
4a05 :                 >skip1534
                       >
4a05 : 68              >            pla         ;load status
4a06 : 48              >            pha
                       >            cmp_flag $ff
4a07 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4a09 : f003            >        beq skip1537
                       >        trap            ;failed not equal (non zero)
4a0b : 20c761          >        jsr report_error
                       >
4a0e :                 >skip1537
                       >
4a0e : 28              >            plp         ;restore status
                       >
4a0f : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4a11 : f003            >        beq skip1539
                       >        trap            ;failed not equal (non zero)
4a13 : 20c761          >        jsr report_error
                       >
4a16 :                 >skip1539
                       >
4a16 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4a18 : f003            >        beq skip1541
                       >        trap            ;failed not equal (non zero)
4a1a : 20c761          >        jsr report_error
                       >
4a1d :                 >skip1541
                       >
                        
                                nop_test $8b,1
4a1d : a042            >            ldy #$42
4a1f : a203            >            ldx #4-1
4a21 : 8b              >            db  $8b          ;test nop length
                       >        if 1 = 1
4a22 : ca              >            dex
4a23 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4a24 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4a25 : f003            >        beq skip1544
                       >        trap            ;failed not equal (non zero)
4a27 : 20c761          >        jsr report_error
                       >
4a2a :                 >skip1544
                       >
                       >            set_a $ff-$8b,0
                       >            load_flag 0
4a2a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4a2c : 48              >            pha         ;use stack to load status
4a2d : a974            >            lda #$ff-$8b     ;precharge accu
4a2f : 28              >            plp
                       >
4a30 : 8b              >            db  $8b          ;test nop integrity - flags off
4a31 : ea              >            nop
4a32 : ea              >            nop
                       >            tst_a $ff-$8b,0
4a33 : 08              >            php         ;save flags
4a34 : c974            >            cmp #$ff-$8b     ;test result
                       >            trap_ne
4a36 : f003            >        beq skip1549
                       >        trap            ;failed not equal (non zero)
4a38 : 20c761          >        jsr report_error
                       >
4a3b :                 >skip1549
                       >
4a3b : 68              >            pla         ;load status
4a3c : 48              >            pha
                       >            cmp_flag 0
4a3d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4a3f : f003            >        beq skip1552
                       >        trap            ;failed not equal (non zero)
4a41 : 20c761          >        jsr report_error
                       >
4a44 :                 >skip1552
                       >
4a44 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$8b,$ff
                       >            load_flag $ff
4a45 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4a47 : 48              >            pha         ;use stack to load status
4a48 : a91f            >            lda #$aa-$8b     ;precharge accu
4a4a : 28              >            plp
                       >
4a4b : 8b              >            db  $8b          ;test nop integrity - flags on
4a4c : ea              >            nop
4a4d : ea              >            nop
                       >            tst_a $aa-$8b,$ff
4a4e : 08              >            php         ;save flags
4a4f : c91f            >            cmp #$aa-$8b     ;test result
                       >            trap_ne
4a51 : f003            >        beq skip1557
                       >        trap            ;failed not equal (non zero)
4a53 : 20c761          >        jsr report_error
                       >
4a56 :                 >skip1557
                       >
4a56 : 68              >            pla         ;load status
4a57 : 48              >            pha
                       >            cmp_flag $ff
4a58 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4a5a : f003            >        beq skip1560
                       >        trap            ;failed not equal (non zero)
4a5c : 20c761          >        jsr report_error
                       >
4a5f :                 >skip1560
                       >
4a5f : 28              >            plp         ;restore status
                       >
4a60 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4a62 : f003            >        beq skip1562
                       >        trap            ;failed not equal (non zero)
4a64 : 20c761          >        jsr report_error
                       >
4a67 :                 >skip1562
                       >
4a67 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4a69 : f003            >        beq skip1564
                       >        trap            ;failed not equal (non zero)
4a6b : 20c761          >        jsr report_error
                       >
4a6e :                 >skip1564
                       >
                        
                                nop_test $9b,1
4a6e : a042            >            ldy #$42
4a70 : a203            >            ldx #4-1
4a72 : 9b              >            db  $9b          ;test nop length
                       >        if 1 = 1
4a73 : ca              >            dex
4a74 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4a75 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4a76 : f003            >        beq skip1567
                       >        trap            ;failed not equal (non zero)
4a78 : 20c761          >        jsr report_error
                       >
4a7b :                 >skip1567
                       >
                       >            set_a $ff-$9b,0
                       >            load_flag 0
4a7b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4a7d : 48              >            pha         ;use stack to load status
4a7e : a964            >            lda #$ff-$9b     ;precharge accu
4a80 : 28              >            plp
                       >
4a81 : 9b              >            db  $9b          ;test nop integrity - flags off
4a82 : ea              >            nop
4a83 : ea              >            nop
                       >            tst_a $ff-$9b,0
4a84 : 08              >            php         ;save flags
4a85 : c964            >            cmp #$ff-$9b     ;test result
                       >            trap_ne
4a87 : f003            >        beq skip1572
                       >        trap            ;failed not equal (non zero)
4a89 : 20c761          >        jsr report_error
                       >
4a8c :                 >skip1572
                       >
4a8c : 68              >            pla         ;load status
4a8d : 48              >            pha
                       >            cmp_flag 0
4a8e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4a90 : f003            >        beq skip1575
                       >        trap            ;failed not equal (non zero)
4a92 : 20c761          >        jsr report_error
                       >
4a95 :                 >skip1575
                       >
4a95 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$9b,$ff
                       >            load_flag $ff
4a96 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4a98 : 48              >            pha         ;use stack to load status
4a99 : a90f            >            lda #$aa-$9b     ;precharge accu
4a9b : 28              >            plp
                       >
4a9c : 9b              >            db  $9b          ;test nop integrity - flags on
4a9d : ea              >            nop
4a9e : ea              >            nop
                       >            tst_a $aa-$9b,$ff
4a9f : 08              >            php         ;save flags
4aa0 : c90f            >            cmp #$aa-$9b     ;test result
                       >            trap_ne
4aa2 : f003            >        beq skip1580
                       >        trap            ;failed not equal (non zero)
4aa4 : 20c761          >        jsr report_error
                       >
4aa7 :                 >skip1580
                       >
4aa7 : 68              >            pla         ;load status
4aa8 : 48              >            pha
                       >            cmp_flag $ff
4aa9 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4aab : f003            >        beq skip1583
                       >        trap            ;failed not equal (non zero)
4aad : 20c761          >        jsr report_error
                       >
4ab0 :                 >skip1583
                       >
4ab0 : 28              >            plp         ;restore status
                       >
4ab1 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4ab3 : f003            >        beq skip1585
                       >        trap            ;failed not equal (non zero)
4ab5 : 20c761          >        jsr report_error
                       >
4ab8 :                 >skip1585
                       >
4ab8 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4aba : f003            >        beq skip1587
                       >        trap            ;failed not equal (non zero)
4abc : 20c761          >        jsr report_error
                       >
4abf :                 >skip1587
                       >
                        
                                nop_test $ab,1
4abf : a042            >            ldy #$42
4ac1 : a203            >            ldx #4-1
4ac3 : ab              >            db  $ab          ;test nop length
                       >        if 1 = 1
4ac4 : ca              >            dex
4ac5 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4ac6 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4ac7 : f003            >        beq skip1590
                       >        trap            ;failed not equal (non zero)
4ac9 : 20c761          >        jsr report_error
                       >
4acc :                 >skip1590
                       >
                       >            set_a $ff-$ab,0
                       >            load_flag 0
4acc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4ace : 48              >            pha         ;use stack to load status
4acf : a954            >            lda #$ff-$ab     ;precharge accu
4ad1 : 28              >            plp
                       >
4ad2 : ab              >            db  $ab          ;test nop integrity - flags off
4ad3 : ea              >            nop
4ad4 : ea              >            nop
                       >            tst_a $ff-$ab,0
4ad5 : 08              >            php         ;save flags
4ad6 : c954            >            cmp #$ff-$ab     ;test result
                       >            trap_ne
4ad8 : f003            >        beq skip1595
                       >        trap            ;failed not equal (non zero)
4ada : 20c761          >        jsr report_error
                       >
4add :                 >skip1595
                       >
4add : 68              >            pla         ;load status
4ade : 48              >            pha
                       >            cmp_flag 0
4adf : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4ae1 : f003            >        beq skip1598
                       >        trap            ;failed not equal (non zero)
4ae3 : 20c761          >        jsr report_error
                       >
4ae6 :                 >skip1598
                       >
4ae6 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$ab,$ff
                       >            load_flag $ff
4ae7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4ae9 : 48              >            pha         ;use stack to load status
4aea : a9ff            >            lda #$aa-$ab     ;precharge accu
4aec : 28              >            plp
                       >
4aed : ab              >            db  $ab          ;test nop integrity - flags on
4aee : ea              >            nop
4aef : ea              >            nop
                       >            tst_a $aa-$ab,$ff
4af0 : 08              >            php         ;save flags
4af1 : c9ff            >            cmp #$aa-$ab     ;test result
                       >            trap_ne
4af3 : f003            >        beq skip1603
                       >        trap            ;failed not equal (non zero)
4af5 : 20c761          >        jsr report_error
                       >
4af8 :                 >skip1603
                       >
4af8 : 68              >            pla         ;load status
4af9 : 48              >            pha
                       >            cmp_flag $ff
4afa : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4afc : f003            >        beq skip1606
                       >        trap            ;failed not equal (non zero)
4afe : 20c761          >        jsr report_error
                       >
4b01 :                 >skip1606
                       >
4b01 : 28              >            plp         ;restore status
                       >
4b02 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4b04 : f003            >        beq skip1608
                       >        trap            ;failed not equal (non zero)
4b06 : 20c761          >        jsr report_error
                       >
4b09 :                 >skip1608
                       >
4b09 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4b0b : f003            >        beq skip1610
                       >        trap            ;failed not equal (non zero)
4b0d : 20c761          >        jsr report_error
                       >
4b10 :                 >skip1610
                       >
                        
                                nop_test $bb,1
4b10 : a042            >            ldy #$42
4b12 : a203            >            ldx #4-1
4b14 : bb              >            db  $bb          ;test nop length
                       >        if 1 = 1
4b15 : ca              >            dex
4b16 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4b17 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4b18 : f003            >        beq skip1613
                       >        trap            ;failed not equal (non zero)
4b1a : 20c761          >        jsr report_error
                       >
4b1d :                 >skip1613
                       >
                       >            set_a $ff-$bb,0
                       >            load_flag 0
4b1d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4b1f : 48              >            pha         ;use stack to load status
4b20 : a944            >            lda #$ff-$bb     ;precharge accu
4b22 : 28              >            plp
                       >
4b23 : bb              >            db  $bb          ;test nop integrity - flags off
4b24 : ea              >            nop
4b25 : ea              >            nop
                       >            tst_a $ff-$bb,0
4b26 : 08              >            php         ;save flags
4b27 : c944            >            cmp #$ff-$bb     ;test result
                       >            trap_ne
4b29 : f003            >        beq skip1618
                       >        trap            ;failed not equal (non zero)
4b2b : 20c761          >        jsr report_error
                       >
4b2e :                 >skip1618
                       >
4b2e : 68              >            pla         ;load status
4b2f : 48              >            pha
                       >            cmp_flag 0
4b30 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4b32 : f003            >        beq skip1621
                       >        trap            ;failed not equal (non zero)
4b34 : 20c761          >        jsr report_error
                       >
4b37 :                 >skip1621
                       >
4b37 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$bb,$ff
                       >            load_flag $ff
4b38 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4b3a : 48              >            pha         ;use stack to load status
4b3b : a9ef            >            lda #$aa-$bb     ;precharge accu
4b3d : 28              >            plp
                       >
4b3e : bb              >            db  $bb          ;test nop integrity - flags on
4b3f : ea              >            nop
4b40 : ea              >            nop
                       >            tst_a $aa-$bb,$ff
4b41 : 08              >            php         ;save flags
4b42 : c9ef            >            cmp #$aa-$bb     ;test result
                       >            trap_ne
4b44 : f003            >        beq skip1626
                       >        trap            ;failed not equal (non zero)
4b46 : 20c761          >        jsr report_error
                       >
4b49 :                 >skip1626
                       >
4b49 : 68              >            pla         ;load status
4b4a : 48              >            pha
                       >            cmp_flag $ff
4b4b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4b4d : f003            >        beq skip1629
                       >        trap            ;failed not equal (non zero)
4b4f : 20c761          >        jsr report_error
                       >
4b52 :                 >skip1629
                       >
4b52 : 28              >            plp         ;restore status
                       >
4b53 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4b55 : f003            >        beq skip1631
                       >        trap            ;failed not equal (non zero)
4b57 : 20c761          >        jsr report_error
                       >
4b5a :                 >skip1631
                       >
4b5a : e000            >            cpx #0
                       >            trap_ne         ;x changed
4b5c : f003            >        beq skip1633
                       >        trap            ;failed not equal (non zero)
4b5e : 20c761          >        jsr report_error
                       >
4b61 :                 >skip1633
                       >
                        
                                nop_test $eb,1
4b61 : a042            >            ldy #$42
4b63 : a203            >            ldx #4-1
4b65 : eb              >            db  $eb          ;test nop length
                       >        if 1 = 1
4b66 : ca              >            dex
4b67 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4b68 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4b69 : f003            >        beq skip1636
                       >        trap            ;failed not equal (non zero)
4b6b : 20c761          >        jsr report_error
                       >
4b6e :                 >skip1636
                       >
                       >            set_a $ff-$eb,0
                       >            load_flag 0
4b6e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4b70 : 48              >            pha         ;use stack to load status
4b71 : a914            >            lda #$ff-$eb     ;precharge accu
4b73 : 28              >            plp
                       >
4b74 : eb              >            db  $eb          ;test nop integrity - flags off
4b75 : ea              >            nop
4b76 : ea              >            nop
                       >            tst_a $ff-$eb,0
4b77 : 08              >            php         ;save flags
4b78 : c914            >            cmp #$ff-$eb     ;test result
                       >            trap_ne
4b7a : f003            >        beq skip1641
                       >        trap            ;failed not equal (non zero)
4b7c : 20c761          >        jsr report_error
                       >
4b7f :                 >skip1641
                       >
4b7f : 68              >            pla         ;load status
4b80 : 48              >            pha
                       >            cmp_flag 0
4b81 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4b83 : f003            >        beq skip1644
                       >        trap            ;failed not equal (non zero)
4b85 : 20c761          >        jsr report_error
                       >
4b88 :                 >skip1644
                       >
4b88 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$eb,$ff
                       >            load_flag $ff
4b89 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4b8b : 48              >            pha         ;use stack to load status
4b8c : a9bf            >            lda #$aa-$eb     ;precharge accu
4b8e : 28              >            plp
                       >
4b8f : eb              >            db  $eb          ;test nop integrity - flags on
4b90 : ea              >            nop
4b91 : ea              >            nop
                       >            tst_a $aa-$eb,$ff
4b92 : 08              >            php         ;save flags
4b93 : c9bf            >            cmp #$aa-$eb     ;test result
                       >            trap_ne
4b95 : f003            >        beq skip1649
                       >        trap            ;failed not equal (non zero)
4b97 : 20c761          >        jsr report_error
                       >
4b9a :                 >skip1649
                       >
4b9a : 68              >            pla         ;load status
4b9b : 48              >            pha
                       >            cmp_flag $ff
4b9c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4b9e : f003            >        beq skip1652
                       >        trap            ;failed not equal (non zero)
4ba0 : 20c761          >        jsr report_error
                       >
4ba3 :                 >skip1652
                       >
4ba3 : 28              >            plp         ;restore status
                       >
4ba4 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4ba6 : f003            >        beq skip1654
                       >        trap            ;failed not equal (non zero)
4ba8 : 20c761          >        jsr report_error
                       >
4bab :                 >skip1654
                       >
4bab : e000            >            cpx #0
                       >            trap_ne         ;x changed
4bad : f003            >        beq skip1656
                       >        trap            ;failed not equal (non zero)
4baf : 20c761          >        jsr report_error
                       >
4bb2 :                 >skip1656
                       >
                        
                                nop_test $fb,1
4bb2 : a042            >            ldy #$42
4bb4 : a203            >            ldx #4-1
4bb6 : fb              >            db  $fb          ;test nop length
                       >        if 1 = 1
4bb7 : ca              >            dex
4bb8 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4bb9 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4bba : f003            >        beq skip1659
                       >        trap            ;failed not equal (non zero)
4bbc : 20c761          >        jsr report_error
                       >
4bbf :                 >skip1659
                       >
                       >            set_a $ff-$fb,0
                       >            load_flag 0
4bbf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4bc1 : 48              >            pha         ;use stack to load status
4bc2 : a904            >            lda #$ff-$fb     ;precharge accu
4bc4 : 28              >            plp
                       >
4bc5 : fb              >            db  $fb          ;test nop integrity - flags off
4bc6 : ea              >            nop
4bc7 : ea              >            nop
                       >            tst_a $ff-$fb,0
4bc8 : 08              >            php         ;save flags
4bc9 : c904            >            cmp #$ff-$fb     ;test result
                       >            trap_ne
4bcb : f003            >        beq skip1664
                       >        trap            ;failed not equal (non zero)
4bcd : 20c761          >        jsr report_error
                       >
4bd0 :                 >skip1664
                       >
4bd0 : 68              >            pla         ;load status
4bd1 : 48              >            pha
                       >            cmp_flag 0
4bd2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4bd4 : f003            >        beq skip1667
                       >        trap            ;failed not equal (non zero)
4bd6 : 20c761          >        jsr report_error
                       >
4bd9 :                 >skip1667
                       >
4bd9 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$fb,$ff
                       >            load_flag $ff
4bda : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4bdc : 48              >            pha         ;use stack to load status
4bdd : a9af            >            lda #$aa-$fb     ;precharge accu
4bdf : 28              >            plp
                       >
4be0 : fb              >            db  $fb          ;test nop integrity - flags on
4be1 : ea              >            nop
4be2 : ea              >            nop
                       >            tst_a $aa-$fb,$ff
4be3 : 08              >            php         ;save flags
4be4 : c9af            >            cmp #$aa-$fb     ;test result
                       >            trap_ne
4be6 : f003            >        beq skip1672
                       >        trap            ;failed not equal (non zero)
4be8 : 20c761          >        jsr report_error
                       >
4beb :                 >skip1672
                       >
4beb : 68              >            pla         ;load status
4bec : 48              >            pha
                       >            cmp_flag $ff
4bed : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4bef : f003            >        beq skip1675
                       >        trap            ;failed not equal (non zero)
4bf1 : 20c761          >        jsr report_error
                       >
4bf4 :                 >skip1675
                       >
4bf4 : 28              >            plp         ;restore status
                       >
4bf5 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4bf7 : f003            >        beq skip1677
                       >        trap            ;failed not equal (non zero)
4bf9 : 20c761          >        jsr report_error
                       >
4bfc :                 >skip1677
                       >
4bfc : e000            >            cpx #0
                       >            trap_ne         ;x changed
4bfe : f003            >        beq skip1679
                       >        trap            ;failed not equal (non zero)
4c00 : 20c761          >        jsr report_error
                       >
4c03 :                 >skip1679
                       >
                        
                            if rkwl_wdc_op = 0      ;NOPs not available on Rockwell & WDC 65C02
                                nop_test $07,1
                                nop_test $17,1
                                nop_test $27,1
                                nop_test $37,1
                                nop_test $47,1
                                nop_test $57,1
                                nop_test $67,1
                                nop_test $77,1
                                nop_test $87,1
                                nop_test $97,1
                                nop_test $a7,1
                                nop_test $b7,1
                                nop_test $c7,1
                                nop_test $d7,1
                                nop_test $e7,1
                                nop_test $f7,1
                                nop_test $0f,1
                                nop_test $1f,1
                                nop_test $2f,1
                                nop_test $3f,1
                                nop_test $4f,1
                                nop_test $5f,1
                                nop_test $6f,1
                                nop_test $7f,1
                                nop_test $8f,1
                                nop_test $9f,1
                                nop_test $af,1
                                nop_test $bf,1
                                nop_test $cf,1
                                nop_test $df,1
                                nop_test $ef,1
                                nop_test $ff,1
                            endif
                            if  wdc_op = 0          ;NOPs not available on WDC 65C02 (WAI, STP)
                                nop_test $cb,1
4c03 : a042            >            ldy #$42
4c05 : a203            >            ldx #4-1
4c07 : cb              >            db  $cb          ;test nop length
                       >        if 1 = 1
4c08 : ca              >            dex
4c09 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4c0a : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4c0b : f003            >        beq skip1682
                       >        trap            ;failed not equal (non zero)
4c0d : 20c761          >        jsr report_error
                       >
4c10 :                 >skip1682
                       >
                       >            set_a $ff-$cb,0
                       >            load_flag 0
4c10 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4c12 : 48              >            pha         ;use stack to load status
4c13 : a934            >            lda #$ff-$cb     ;precharge accu
4c15 : 28              >            plp
                       >
4c16 : cb              >            db  $cb          ;test nop integrity - flags off
4c17 : ea              >            nop
4c18 : ea              >            nop
                       >            tst_a $ff-$cb,0
4c19 : 08              >            php         ;save flags
4c1a : c934            >            cmp #$ff-$cb     ;test result
                       >            trap_ne
4c1c : f003            >        beq skip1687
                       >        trap            ;failed not equal (non zero)
4c1e : 20c761          >        jsr report_error
                       >
4c21 :                 >skip1687
                       >
4c21 : 68              >            pla         ;load status
4c22 : 48              >            pha
                       >            cmp_flag 0
4c23 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4c25 : f003            >        beq skip1690
                       >        trap            ;failed not equal (non zero)
4c27 : 20c761          >        jsr report_error
                       >
4c2a :                 >skip1690
                       >
4c2a : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$cb,$ff
                       >            load_flag $ff
4c2b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4c2d : 48              >            pha         ;use stack to load status
4c2e : a9df            >            lda #$aa-$cb     ;precharge accu
4c30 : 28              >            plp
                       >
4c31 : cb              >            db  $cb          ;test nop integrity - flags on
4c32 : ea              >            nop
4c33 : ea              >            nop
                       >            tst_a $aa-$cb,$ff
4c34 : 08              >            php         ;save flags
4c35 : c9df            >            cmp #$aa-$cb     ;test result
                       >            trap_ne
4c37 : f003            >        beq skip1695
                       >        trap            ;failed not equal (non zero)
4c39 : 20c761          >        jsr report_error
                       >
4c3c :                 >skip1695
                       >
4c3c : 68              >            pla         ;load status
4c3d : 48              >            pha
                       >            cmp_flag $ff
4c3e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4c40 : f003            >        beq skip1698
                       >        trap            ;failed not equal (non zero)
4c42 : 20c761          >        jsr report_error
                       >
4c45 :                 >skip1698
                       >
4c45 : 28              >            plp         ;restore status
                       >
4c46 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4c48 : f003            >        beq skip1700
                       >        trap            ;failed not equal (non zero)
4c4a : 20c761          >        jsr report_error
                       >
4c4d :                 >skip1700
                       >
4c4d : e000            >            cpx #0
                       >            trap_ne         ;x changed
4c4f : f003            >        beq skip1702
                       >        trap            ;failed not equal (non zero)
4c51 : 20c761          >        jsr report_error
                       >
4c54 :                 >skip1702
                       >
                        
                                nop_test $db,1
4c54 : a042            >            ldy #$42
4c56 : a203            >            ldx #4-1
4c58 : db              >            db  $db          ;test nop length
                       >        if 1 = 1
4c59 : ca              >            dex
4c5a : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4c5b : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4c5c : f003            >        beq skip1705
                       >        trap            ;failed not equal (non zero)
4c5e : 20c761          >        jsr report_error
                       >
4c61 :                 >skip1705
                       >
                       >            set_a $ff-$db,0
                       >            load_flag 0
4c61 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4c63 : 48              >            pha         ;use stack to load status
4c64 : a924            >            lda #$ff-$db     ;precharge accu
4c66 : 28              >            plp
                       >
4c67 : db              >            db  $db          ;test nop integrity - flags off
4c68 : ea              >            nop
4c69 : ea              >            nop
                       >            tst_a $ff-$db,0
4c6a : 08              >            php         ;save flags
4c6b : c924            >            cmp #$ff-$db     ;test result
                       >            trap_ne
4c6d : f003            >        beq skip1710
                       >        trap            ;failed not equal (non zero)
4c6f : 20c761          >        jsr report_error
                       >
4c72 :                 >skip1710
                       >
4c72 : 68              >            pla         ;load status
4c73 : 48              >            pha
                       >            cmp_flag 0
4c74 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4c76 : f003            >        beq skip1713
                       >        trap            ;failed not equal (non zero)
4c78 : 20c761          >        jsr report_error
                       >
4c7b :                 >skip1713
                       >
4c7b : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$db,$ff
                       >            load_flag $ff
4c7c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4c7e : 48              >            pha         ;use stack to load status
4c7f : a9cf            >            lda #$aa-$db     ;precharge accu
4c81 : 28              >            plp
                       >
4c82 : db              >            db  $db          ;test nop integrity - flags on
4c83 : ea              >            nop
4c84 : ea              >            nop
                       >            tst_a $aa-$db,$ff
4c85 : 08              >            php         ;save flags
4c86 : c9cf            >            cmp #$aa-$db     ;test result
                       >            trap_ne
4c88 : f003            >        beq skip1718
                       >        trap            ;failed not equal (non zero)
4c8a : 20c761          >        jsr report_error
                       >
4c8d :                 >skip1718
                       >
4c8d : 68              >            pla         ;load status
4c8e : 48              >            pha
                       >            cmp_flag $ff
4c8f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4c91 : f003            >        beq skip1721
                       >        trap            ;failed not equal (non zero)
4c93 : 20c761          >        jsr report_error
                       >
4c96 :                 >skip1721
                       >
4c96 : 28              >            plp         ;restore status
                       >
4c97 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4c99 : f003            >        beq skip1723
                       >        trap            ;failed not equal (non zero)
4c9b : 20c761          >        jsr report_error
                       >
4c9e :                 >skip1723
                       >
4c9e : e000            >            cpx #0
                       >            trap_ne         ;x changed
4ca0 : f003            >        beq skip1725
                       >        trap            ;failed not equal (non zero)
4ca2 : 20c761          >        jsr report_error
                       >
4ca5 :                 >skip1725
                       >
                        
                            endif
                                next_test
4ca5 : ad0232          >            lda test_case   ;previous test
4ca8 : c908            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4caa : f003            >        beq skip1728
                       >        trap            ;failed not equal (non zero)
4cac : 20c761          >        jsr report_error
                       >
4caf :                 >skip1728
                       >
0009 =                 >test_num = test_num + 1
4caf : a909            >            lda #test_num   ;*** next tests' number
4cb1 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                            endif
                                    
                        ; jump indirect (test page cross bug is fixed)
4cb4 : a203                     ldx #3          ;prepare table
4cb6 : bdc260           ji1     lda ji_adr,x
4cb9 : 9dfd32                   sta ji_tab,x
4cbc : ca                       dex
4cbd : 10f7                     bpl ji1
4cbf : a964                     lda #hi(ji_px) ;high address if page cross bug
4cc1 : 8d0032                   sta pg_x
                                set_stat 0
                       >            load_flag 0
4cc4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4cc6 : 48              >            pha         ;use stack to load status
4cc7 : 28              >            plp
                        
4cc8 : a949                     lda #'I'
4cca : a24e                     ldx #'N'
4ccc : a044                     ldy #'D'        ;N=0, V=0, Z=0, C=0
4cce : 6cfd32                   jmp (ji_tab)
4cd1 : ea                       nop
                                trap_ne         ;runover protection
4cd2 : f003            >        beq skip1732
                       >        trap            ;failed not equal (non zero)
4cd4 : 20c761          >        jsr report_error
                       >
4cd7 :                 >skip1732
                        
                        
4cd7 : 88                       dey
4cd8 : 88                       dey
4cd9 : 08               ji_ret  php             ;either SP or Y count will fail, if we do not hit
4cda : 88                       dey
4cdb : 88                       dey
4cdc : 88                       dey
4cdd : 28                       plp
                                trap_eq         ;returned flags OK?
4cde : d003            >        bne skip1734
                       >        trap           ;failed equal (zero)
4ce0 : 20c761          >        jsr report_error
                       >
4ce3 :                 >skip1734
                        
                                trap_pl
4ce3 : 3003            >        bmi skip1736
                       >        trap            ;failed plus (bit 7 clear)
4ce5 : 20c761          >        jsr report_error
                       >
4ce8 :                 >skip1736
                        
                                trap_cc
4ce8 : b003            >        bcs skip1738
                       >        trap            ;failed carry clear
4cea : 20c761          >        jsr report_error
                       >
4ced :                 >skip1738
                        
                                trap_vc
4ced : 7003            >        bvs skip1740
                       >        trap            ;failed overflow clear
4cef : 20c761          >        jsr report_error
                       >
4cf2 :                 >skip1740
                        
4cf2 : c9e3                     cmp #('I'^$aa)  ;returned registers OK?
                                trap_ne
4cf4 : f003            >        beq skip1742
                       >        trap            ;failed not equal (non zero)
4cf6 : 20c761          >        jsr report_error
                       >
4cf9 :                 >skip1742
                        
4cf9 : e04f                     cpx #('N'+1)
                                trap_ne
4cfb : f003            >        beq skip1744
                       >        trap            ;failed not equal (non zero)
4cfd : 20c761          >        jsr report_error
                       >
4d00 :                 >skip1744
                        
4d00 : c03e                     cpy #('D'-6)
                                trap_ne
4d02 : f003            >        beq skip1746
                       >        trap            ;failed not equal (non zero)
4d04 : 20c761          >        jsr report_error
                       >
4d07 :                 >skip1746
                        
4d07 : ba                       tsx             ;SP check
4d08 : e0ff                     cpx #$ff
                                trap_ne
4d0a : f003            >        beq skip1748
                       >        trap            ;failed not equal (non zero)
4d0c : 20c761          >        jsr report_error
                       >
4d0f :                 >skip1748
                        
                                next_test
4d0f : ad0232          >            lda test_case   ;previous test
4d12 : c909            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4d14 : f003            >        beq skip1751
                       >        trap            ;failed not equal (non zero)
4d16 : 20c761          >        jsr report_error
                       >
4d19 :                 >skip1751
                       >
000a =                 >test_num = test_num + 1
4d19 : a90a            >            lda #test_num   ;*** next tests' number
4d1b : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; jump indexed indirect
4d1e : a20b                     ldx #11         ;prepare table
4d20 : bd1661           jxi1    lda jxi_adr,x
4d23 : 9df932                   sta jxi_tab,x
4d26 : ca                       dex
4d27 : 10f7                     bpl jxi1
4d29 : a964                     lda #hi(jxi_px) ;high address if page cross bug
4d2b : 8d0032                   sta pg_x
                                set_stat 0
                       >            load_flag 0
4d2e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4d30 : 48              >            pha         ;use stack to load status
4d31 : 28              >            plp
                        
4d32 : a958                     lda #'X'
4d34 : a204                     ldx #4
4d36 : a049                     ldy #'I'        ;N=0, V=0, Z=0, C=0
4d38 : 7cf932                   jmp (jxi_tab,x)
4d3b : ea                       nop
                                trap_ne         ;runover protection
4d3c : f003            >        beq skip1755
                       >        trap            ;failed not equal (non zero)
4d3e : 20c761          >        jsr report_error
                       >
4d41 :                 >skip1755
                        
                        
4d41 : 88                       dey
4d42 : 88                       dey
4d43 : 08               jxi_ret php             ;either SP or Y count will fail, if we do not hit
4d44 : 88                       dey
4d45 : 88                       dey
4d46 : 88                       dey
4d47 : 28                       plp
                                trap_eq         ;returned flags OK?
4d48 : d003            >        bne skip1757
                       >        trap           ;failed equal (zero)
4d4a : 20c761          >        jsr report_error
                       >
4d4d :                 >skip1757
                        
                                trap_pl
4d4d : 3003            >        bmi skip1759
                       >        trap            ;failed plus (bit 7 clear)
4d4f : 20c761          >        jsr report_error
                       >
4d52 :                 >skip1759
                        
                                trap_cc
4d52 : b003            >        bcs skip1761
                       >        trap            ;failed carry clear
4d54 : 20c761          >        jsr report_error
                       >
4d57 :                 >skip1761
                        
                                trap_vc
4d57 : 7003            >        bvs skip1763
                       >        trap            ;failed overflow clear
4d59 : 20c761          >        jsr report_error
                       >
4d5c :                 >skip1763
                        
4d5c : c9f2                     cmp #('X'^$aa)  ;returned registers OK?
                                trap_ne
4d5e : f003            >        beq skip1765
                       >        trap            ;failed not equal (non zero)
4d60 : 20c761          >        jsr report_error
                       >
4d63 :                 >skip1765
                        
4d63 : e006                     cpx #6
                                trap_ne
4d65 : f003            >        beq skip1767
                       >        trap            ;failed not equal (non zero)
4d67 : 20c761          >        jsr report_error
                       >
4d6a :                 >skip1767
                        
4d6a : c043                     cpy #('I'-6)
                                trap_ne
4d6c : f003            >        beq skip1769
                       >        trap            ;failed not equal (non zero)
4d6e : 20c761          >        jsr report_error
                       >
4d71 :                 >skip1769
                        
4d71 : ba                       tsx             ;SP check
4d72 : e0ff                     cpx #$ff
                                trap_ne
4d74 : f003            >        beq skip1771
                       >        trap            ;failed not equal (non zero)
4d76 : 20c761          >        jsr report_error
                       >
4d79 :                 >skip1771
                        
                        
4d79 : a995                     lda #lo(jxp_ok) ;test with index causing a page cross
4d7b : 8d0033                   sta jxp_tab
4d7e : a94d                     lda #hi(jxp_ok)
4d80 : 8d0133                   sta jxp_tab+1
4d83 : a992                     lda #lo(jxp_px)
4d85 : 8d0032                   sta pg_x
4d88 : a94d                     lda #hi(jxp_px)
4d8a : 8d0132                   sta pg_x+1
4d8d : a2ff                     ldx #$ff
4d8f : 7c0132                   jmp (jxp_tab-$ff,x)
                                
4d92 :                  jxp_px  
                                trap            ;page cross by index to wrong page
4d92 : 20c761          >        jsr report_error
                        
                        
4d95 :                  jxp_ok
                                next_test
4d95 : ad0232          >            lda test_case   ;previous test
4d98 : c90a            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4d9a : f003            >        beq skip1775
                       >        trap            ;failed not equal (non zero)
4d9c : 20c761          >        jsr report_error
                       >
4d9f :                 >skip1775
                       >
000b =                 >test_num = test_num + 1
4d9f : a90b            >            lda #test_num   ;*** next tests' number
4da1 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                            if ROM_vectors = 1
                        ; test BRK clears decimal mode
                                load_flag 0     ;with interrupts enabled if allowed!
                                pha
                                lda #'B'
                                ldx #'R'
                                ldy #'K'
                                plp             ;N=0, V=0, Z=0, C=0
                                brk
                                dey             ;should not be executed
                        brk_ret0                ;address of break return
                                php             ;either SP or Y count will fail, if we do not hit
                                dey
                                dey
                                dey
                                cmp #'B'^$aa    ;returned registers OK?
                                ;the IRQ vector was never executed if A & X stay unmodified
                                trap_ne
                                cpx #'R'+1
                                trap_ne
                                cpy #'K'-6
                                trap_ne
                                pla             ;returned flags OK (unchanged)?
                                cmp_flag 0
                                trap_ne
                                tsx             ;sp?
                                cpx #$ff
                                trap_ne
                        ;pass 2
                                load_flag $ff   ;with interrupts disabled if allowed!
                                pha
                                lda #$ff-'B'
                                ldx #$ff-'R'
                                ldy #$ff-'K'
                                plp             ;N=1, V=1, Z=1, C=1
                                brk
                                dey             ;should not be executed
                        brk_ret1                ;address of break return
                                php             ;either SP or Y count will fail, if we do not hit
                                dey
                                dey
                                dey
                                cmp #($ff-'B')^$aa  ;returned registers OK?
                                ;the IRQ vector was never executed if A & X stay unmodified
                                trap_ne
                                cpx #$ff-'R'+1
                                trap_ne
                                cpy #$ff-'K'-6
                                trap_ne
                                pla             ;returned flags OK (unchanged)?
                                cmp_flag $ff
                                trap_ne
                                tsx             ;sp?
                                cpx #$ff
                                trap_ne
                                next_test
                            endif
                         
                        ; testing accumulator increment/decrement INC A & DEC A
4da4 : a2ac                     ldx #$ac    ;protect x & y
4da6 : a0dc                     ldy #$dc
                                set_a $fe,$ff
                       >            load_flag $ff
4da8 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4daa : 48              >            pha         ;use stack to load status
4dab : a9fe            >            lda #$fe     ;precharge accu
4dad : 28              >            plp
                        
4dae : 1a                       inc a           ;ff
                                tst_as $ff,$ff-zero
4daf : 48              >            pha
4db0 : 08              >            php         ;save flags
4db1 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
4db3 : f003            >        beq skip1780
                       >        trap            ;failed not equal (non zero)
4db5 : 20c761          >        jsr report_error
                       >
4db8 :                 >skip1780
                       >
4db8 : 68              >            pla         ;load status
4db9 : 48              >            pha
                       >            cmp_flag $ff-zero
4dba : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4dbc : f003            >        beq skip1783
                       >        trap            ;failed not equal (non zero)
4dbe : 20c761          >        jsr report_error
                       >
4dc1 :                 >skip1783
                       >
4dc1 : 28              >            plp         ;restore status
4dc2 : 68              >            pla
                        
4dc3 : 1a                       inc a           ;00
                                tst_as 0,$ff-minus
4dc4 : 48              >            pha
4dc5 : 08              >            php         ;save flags
4dc6 : c900            >            cmp #0     ;test result
                       >            trap_ne
4dc8 : f003            >        beq skip1786
                       >        trap            ;failed not equal (non zero)
4dca : 20c761          >        jsr report_error
                       >
4dcd :                 >skip1786
                       >
4dcd : 68              >            pla         ;load status
4dce : 48              >            pha
                       >            cmp_flag $ff-minus
4dcf : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4dd1 : f003            >        beq skip1789
                       >        trap            ;failed not equal (non zero)
4dd3 : 20c761          >        jsr report_error
                       >
4dd6 :                 >skip1789
                       >
4dd6 : 28              >            plp         ;restore status
4dd7 : 68              >            pla
                        
4dd8 : 1a                       inc a           ;01
                                tst_as 1,$ff-minus-zero
4dd9 : 48              >            pha
4dda : 08              >            php         ;save flags
4ddb : c901            >            cmp #1     ;test result
                       >            trap_ne
4ddd : f003            >        beq skip1792
                       >        trap            ;failed not equal (non zero)
4ddf : 20c761          >        jsr report_error
                       >
4de2 :                 >skip1792
                       >
4de2 : 68              >            pla         ;load status
4de3 : 48              >            pha
                       >            cmp_flag $ff-minus-zero
4de4 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4de6 : f003            >        beq skip1795
                       >        trap            ;failed not equal (non zero)
4de8 : 20c761          >        jsr report_error
                       >
4deb :                 >skip1795
                       >
4deb : 28              >            plp         ;restore status
4dec : 68              >            pla
                        
4ded : 3a                       dec a           ;00
                                tst_as 0,$ff-minus
4dee : 48              >            pha
4def : 08              >            php         ;save flags
4df0 : c900            >            cmp #0     ;test result
                       >            trap_ne
4df2 : f003            >        beq skip1798
                       >        trap            ;failed not equal (non zero)
4df4 : 20c761          >        jsr report_error
                       >
4df7 :                 >skip1798
                       >
4df7 : 68              >            pla         ;load status
4df8 : 48              >            pha
                       >            cmp_flag $ff-minus
4df9 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4dfb : f003            >        beq skip1801
                       >        trap            ;failed not equal (non zero)
4dfd : 20c761          >        jsr report_error
                       >
4e00 :                 >skip1801
                       >
4e00 : 28              >            plp         ;restore status
4e01 : 68              >            pla
                        
4e02 : 3a                       dec a           ;ff
                                tst_as $ff,$ff-zero
4e03 : 48              >            pha
4e04 : 08              >            php         ;save flags
4e05 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
4e07 : f003            >        beq skip1804
                       >        trap            ;failed not equal (non zero)
4e09 : 20c761          >        jsr report_error
                       >
4e0c :                 >skip1804
                       >
4e0c : 68              >            pla         ;load status
4e0d : 48              >            pha
                       >            cmp_flag $ff-zero
4e0e : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4e10 : f003            >        beq skip1807
                       >        trap            ;failed not equal (non zero)
4e12 : 20c761          >        jsr report_error
                       >
4e15 :                 >skip1807
                       >
4e15 : 28              >            plp         ;restore status
4e16 : 68              >            pla
                        
4e17 : 3a                       dec a           ;fe
                                set_a $fe,0
                       >            load_flag 0
4e18 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4e1a : 48              >            pha         ;use stack to load status
4e1b : a9fe            >            lda #$fe     ;precharge accu
4e1d : 28              >            plp
                        
4e1e : 1a                       inc a           ;ff
                                tst_as $ff,minus
4e1f : 48              >            pha
4e20 : 08              >            php         ;save flags
4e21 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
4e23 : f003            >        beq skip1812
                       >        trap            ;failed not equal (non zero)
4e25 : 20c761          >        jsr report_error
                       >
4e28 :                 >skip1812
                       >
4e28 : 68              >            pla         ;load status
4e29 : 48              >            pha
                       >            cmp_flag minus
4e2a : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4e2c : f003            >        beq skip1815
                       >        trap            ;failed not equal (non zero)
4e2e : 20c761          >        jsr report_error
                       >
4e31 :                 >skip1815
                       >
4e31 : 28              >            plp         ;restore status
4e32 : 68              >            pla
                        
4e33 : 1a                       inc a           ;00
                                tst_as 0,zero
4e34 : 48              >            pha
4e35 : 08              >            php         ;save flags
4e36 : c900            >            cmp #0     ;test result
                       >            trap_ne
4e38 : f003            >        beq skip1818
                       >        trap            ;failed not equal (non zero)
4e3a : 20c761          >        jsr report_error
                       >
4e3d :                 >skip1818
                       >
4e3d : 68              >            pla         ;load status
4e3e : 48              >            pha
                       >            cmp_flag zero
4e3f : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4e41 : f003            >        beq skip1821
                       >        trap            ;failed not equal (non zero)
4e43 : 20c761          >        jsr report_error
                       >
4e46 :                 >skip1821
                       >
4e46 : 28              >            plp         ;restore status
4e47 : 68              >            pla
                        
4e48 : 1a                       inc a           ;01
                                tst_as 1,0
4e49 : 48              >            pha
4e4a : 08              >            php         ;save flags
4e4b : c901            >            cmp #1     ;test result
                       >            trap_ne
4e4d : f003            >        beq skip1824
                       >        trap            ;failed not equal (non zero)
4e4f : 20c761          >        jsr report_error
                       >
4e52 :                 >skip1824
                       >
4e52 : 68              >            pla         ;load status
4e53 : 48              >            pha
                       >            cmp_flag 0
4e54 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4e56 : f003            >        beq skip1827
                       >        trap            ;failed not equal (non zero)
4e58 : 20c761          >        jsr report_error
                       >
4e5b :                 >skip1827
                       >
4e5b : 28              >            plp         ;restore status
4e5c : 68              >            pla
                        
4e5d : 3a                       dec a           ;00
                                tst_as 0,zero
4e5e : 48              >            pha
4e5f : 08              >            php         ;save flags
4e60 : c900            >            cmp #0     ;test result
                       >            trap_ne
4e62 : f003            >        beq skip1830
                       >        trap            ;failed not equal (non zero)
4e64 : 20c761          >        jsr report_error
                       >
4e67 :                 >skip1830
                       >
4e67 : 68              >            pla         ;load status
4e68 : 48              >            pha
                       >            cmp_flag zero
4e69 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4e6b : f003            >        beq skip1833
                       >        trap            ;failed not equal (non zero)
4e6d : 20c761          >        jsr report_error
                       >
4e70 :                 >skip1833
                       >
4e70 : 28              >            plp         ;restore status
4e71 : 68              >            pla
                        
4e72 : 3a                       dec a           ;ff
                                tst_as $ff,minus
4e73 : 48              >            pha
4e74 : 08              >            php         ;save flags
4e75 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
4e77 : f003            >        beq skip1836
                       >        trap            ;failed not equal (non zero)
4e79 : 20c761          >        jsr report_error
                       >
4e7c :                 >skip1836
                       >
4e7c : 68              >            pla         ;load status
4e7d : 48              >            pha
                       >            cmp_flag minus
4e7e : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4e80 : f003            >        beq skip1839
                       >        trap            ;failed not equal (non zero)
4e82 : 20c761          >        jsr report_error
                       >
4e85 :                 >skip1839
                       >
4e85 : 28              >            plp         ;restore status
4e86 : 68              >            pla
                        
4e87 : e0ac                     cpx #$ac
                                trap_ne     ;x altered during test
4e89 : f003            >        beq skip1841
                       >        trap            ;failed not equal (non zero)
4e8b : 20c761          >        jsr report_error
                       >
4e8e :                 >skip1841
                        
4e8e : c0dc                     cpy #$dc
                                trap_ne     ;y altered during test
4e90 : f003            >        beq skip1843
                       >        trap            ;failed not equal (non zero)
4e92 : 20c761          >        jsr report_error
                       >
4e95 :                 >skip1843
                        
4e95 : ba                       tsx
4e96 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
4e98 : f003            >        beq skip1845
                       >        trap            ;failed not equal (non zero)
4e9a : 20c761          >        jsr report_error
                       >
4e9d :                 >skip1845
                        
                                next_test
4e9d : ad0232          >            lda test_case   ;previous test
4ea0 : c90b            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4ea2 : f003            >        beq skip1848
                       >        trap            ;failed not equal (non zero)
4ea4 : 20c761          >        jsr report_error
                       >
4ea7 :                 >skip1848
                       >
000c =                 >test_num = test_num + 1
4ea7 : a90c            >            lda #test_num   ;*** next tests' number
4ea9 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing load / store accumulator LDA / STA (zp)
4eac : a299                     ldx #$99    ;protect x & y
4eae : a066                     ldy #$66
                                set_stat 0  
                       >            load_flag 0  
4eb0 : a900            >            lda #0               ;allow test to change I-flag (no mask)
                       >
4eb2 : 48              >            pha         ;use stack to load status
4eb3 : 28              >            plp
                        
4eb4 : b26a                     lda (ind1)
4eb6 : 08                       php         ;test stores do not alter flags
4eb7 : 49c3                     eor #$c3
4eb9 : 28                       plp
4eba : 9276                     sta (indt)
4ebc : 08                       php         ;flags after load/store sequence
4ebd : 49c3                     eor #$c3
4ebf : c9c3                     cmp #$c3    ;test result
                                trap_ne
4ec1 : f003            >        beq skip1852
                       >        trap            ;failed not equal (non zero)
4ec3 : 20c761          >        jsr report_error
                       >
4ec6 :                 >skip1852
                        
4ec6 : 68                       pla         ;load status
                                eor_flag 0
4ec7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4ec9 : cd1532                   cmp fLDx    ;test flags
                                trap_ne
4ecc : f003            >        beq skip1855
                       >        trap            ;failed not equal (non zero)
4ece : 20c761          >        jsr report_error
                       >
4ed1 :                 >skip1855
                        
                                set_stat 0
                       >            load_flag 0
4ed1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4ed3 : 48              >            pha         ;use stack to load status
4ed4 : 28              >            plp
                        
4ed5 : b26c                     lda (ind1+2)
4ed7 : 08                       php         ;test stores do not alter flags
4ed8 : 49c3                     eor #$c3
4eda : 28                       plp
4edb : 9278                     sta (indt+2)
4edd : 08                       php         ;flags after load/store sequence
4ede : 49c3                     eor #$c3
4ee0 : c982                     cmp #$82    ;test result
                                trap_ne
4ee2 : f003            >        beq skip1859
                       >        trap            ;failed not equal (non zero)
4ee4 : 20c761          >        jsr report_error
                       >
4ee7 :                 >skip1859
                        
4ee7 : 68                       pla         ;load status
                                eor_flag 0
4ee8 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4eea : cd1632                   cmp fLDx+1  ;test flags
                                trap_ne
4eed : f003            >        beq skip1862
                       >        trap            ;failed not equal (non zero)
4eef : 20c761          >        jsr report_error
                       >
4ef2 :                 >skip1862
                        
                                set_stat 0
                       >            load_flag 0
4ef2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4ef4 : 48              >            pha         ;use stack to load status
4ef5 : 28              >            plp
                        
4ef6 : b26e                     lda (ind1+4)
4ef8 : 08                       php         ;test stores do not alter flags
4ef9 : 49c3                     eor #$c3
4efb : 28                       plp
4efc : 927a                     sta (indt+4)
4efe : 08                       php         ;flags after load/store sequence
4eff : 49c3                     eor #$c3
4f01 : c941                     cmp #$41    ;test result
                                trap_ne
4f03 : f003            >        beq skip1866
                       >        trap            ;failed not equal (non zero)
4f05 : 20c761          >        jsr report_error
                       >
4f08 :                 >skip1866
                        
4f08 : 68                       pla         ;load status
                                eor_flag 0
4f09 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4f0b : cd1732                   cmp fLDx+2  ;test flags
                                trap_ne
4f0e : f003            >        beq skip1869
                       >        trap            ;failed not equal (non zero)
4f10 : 20c761          >        jsr report_error
                       >
4f13 :                 >skip1869
                        
                                set_stat 0
                       >            load_flag 0
4f13 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4f15 : 48              >            pha         ;use stack to load status
4f16 : 28              >            plp
                        
4f17 : b270                     lda (ind1+6)
4f19 : 08                       php         ;test stores do not alter flags
4f1a : 49c3                     eor #$c3
4f1c : 28                       plp
4f1d : 927c                     sta (indt+6)
4f1f : 08                       php         ;flags after load/store sequence
4f20 : 49c3                     eor #$c3
4f22 : c900                     cmp #0      ;test result
                                trap_ne
4f24 : f003            >        beq skip1873
                       >        trap            ;failed not equal (non zero)
4f26 : 20c761          >        jsr report_error
                       >
4f29 :                 >skip1873
                        
4f29 : 68                       pla         ;load status
                                eor_flag 0
4f2a : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4f2c : cd1832                   cmp fLDx+3  ;test flags
                                trap_ne
4f2f : f003            >        beq skip1876
                       >        trap            ;failed not equal (non zero)
4f31 : 20c761          >        jsr report_error
                       >
4f34 :                 >skip1876
                        
4f34 : e099                     cpx #$99
                                trap_ne     ;x altered during test
4f36 : f003            >        beq skip1878
                       >        trap            ;failed not equal (non zero)
4f38 : 20c761          >        jsr report_error
                       >
4f3b :                 >skip1878
                        
4f3b : c066                     cpy #$66
                                trap_ne     ;y altered during test
4f3d : f003            >        beq skip1880
                       >        trap            ;failed not equal (non zero)
4f3f : 20c761          >        jsr report_error
                       >
4f42 :                 >skip1880
                        
                        
4f42 : a003                     ldy #3      ;testing store result
4f44 : a200                     ldx #0
4f46 : b90532           tstai1  lda abst,y
4f49 : 49c3                     eor #$c3
4f4b : d91032                   cmp abs1,y
                                trap_ne     ;store to indirect data
4f4e : f003            >        beq skip1882
                       >        trap            ;failed not equal (non zero)
4f50 : 20c761          >        jsr report_error
                       >
4f53 :                 >skip1882
                        
4f53 : 8a                       txa
4f54 : 990532                   sta abst,y  ;clear                
4f57 : 88                       dey
4f58 : 10ec                     bpl tstai1
                        
4f5a : a299                     ldx #$99    ;protect x & y
4f5c : a066                     ldy #$66
                                set_stat $ff  
                       >            load_flag $ff  
4f5e : a9ff            >            lda #$ff               ;allow test to change I-flag (no mask)
                       >
4f60 : 48              >            pha         ;use stack to load status
4f61 : 28              >            plp
                        
4f62 : b26a                     lda (ind1)
4f64 : 08                       php         ;test stores do not alter flags
4f65 : 49c3                     eor #$c3
4f67 : 28                       plp
4f68 : 9276                     sta (indt)
4f6a : 08                       php         ;flags after load/store sequence
4f6b : 49c3                     eor #$c3
4f6d : c9c3                     cmp #$c3    ;test result
                                trap_ne
4f6f : f003            >        beq skip1886
                       >        trap            ;failed not equal (non zero)
4f71 : 20c761          >        jsr report_error
                       >
4f74 :                 >skip1886
                        
4f74 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4f75 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4f77 : cd1532                   cmp fLDx    ;test flags
                                trap_ne
4f7a : f003            >        beq skip1889
                       >        trap            ;failed not equal (non zero)
4f7c : 20c761          >        jsr report_error
                       >
4f7f :                 >skip1889
                        
                                set_stat $ff
                       >            load_flag $ff
4f7f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4f81 : 48              >            pha         ;use stack to load status
4f82 : 28              >            plp
                        
4f83 : b26c                     lda (ind1+2)
4f85 : 08                       php         ;test stores do not alter flags
4f86 : 49c3                     eor #$c3
4f88 : 28                       plp
4f89 : 9278                     sta (indt+2)
4f8b : 08                       php         ;flags after load/store sequence
4f8c : 49c3                     eor #$c3
4f8e : c982                     cmp #$82    ;test result
                                trap_ne
4f90 : f003            >        beq skip1893
                       >        trap            ;failed not equal (non zero)
4f92 : 20c761          >        jsr report_error
                       >
4f95 :                 >skip1893
                        
4f95 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4f96 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4f98 : cd1632                   cmp fLDx+1  ;test flags
                                trap_ne
4f9b : f003            >        beq skip1896
                       >        trap            ;failed not equal (non zero)
4f9d : 20c761          >        jsr report_error
                       >
4fa0 :                 >skip1896
                        
                                set_stat $ff
                       >            load_flag $ff
4fa0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4fa2 : 48              >            pha         ;use stack to load status
4fa3 : 28              >            plp
                        
4fa4 : b26e                     lda (ind1+4)
4fa6 : 08                       php         ;test stores do not alter flags
4fa7 : 49c3                     eor #$c3
4fa9 : 28                       plp
4faa : 927a                     sta (indt+4)
4fac : 08                       php         ;flags after load/store sequence
4fad : 49c3                     eor #$c3
4faf : c941                     cmp #$41    ;test result
                                trap_ne
4fb1 : f003            >        beq skip1900
                       >        trap            ;failed not equal (non zero)
4fb3 : 20c761          >        jsr report_error
                       >
4fb6 :                 >skip1900
                        
4fb6 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4fb7 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4fb9 : cd1732                   cmp fLDx+2  ;test flags
                                trap_ne
4fbc : f003            >        beq skip1903
                       >        trap            ;failed not equal (non zero)
4fbe : 20c761          >        jsr report_error
                       >
4fc1 :                 >skip1903
                        
                                set_stat $ff
                       >            load_flag $ff
4fc1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4fc3 : 48              >            pha         ;use stack to load status
4fc4 : 28              >            plp
                        
4fc5 : b270                     lda (ind1+6)
4fc7 : 08                       php         ;test stores do not alter flags
4fc8 : 49c3                     eor #$c3
4fca : 28                       plp
4fcb : 927c                     sta (indt+6)
4fcd : 08                       php         ;flags after load/store sequence
4fce : 49c3                     eor #$c3
4fd0 : c900                     cmp #0      ;test result
                                trap_ne
4fd2 : f003            >        beq skip1907
                       >        trap            ;failed not equal (non zero)
4fd4 : 20c761          >        jsr report_error
                       >
4fd7 :                 >skip1907
                        
4fd7 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4fd8 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4fda : cd1832                   cmp fLDx+3  ;test flags
                                trap_ne
4fdd : f003            >        beq skip1910
                       >        trap            ;failed not equal (non zero)
4fdf : 20c761          >        jsr report_error
                       >
4fe2 :                 >skip1910
                        
4fe2 : e099                     cpx #$99
                                trap_ne     ;x altered during test
4fe4 : f003            >        beq skip1912
                       >        trap            ;failed not equal (non zero)
4fe6 : 20c761          >        jsr report_error
                       >
4fe9 :                 >skip1912
                        
4fe9 : c066                     cpy #$66
                                trap_ne     ;y altered during test
4feb : f003            >        beq skip1914
                       >        trap            ;failed not equal (non zero)
4fed : 20c761          >        jsr report_error
                       >
4ff0 :                 >skip1914
                        
                        
4ff0 : a003                     ldy #3      ;testing store result
4ff2 : a200                     ldx #0
4ff4 : b90532           tstai2  lda abst,y
4ff7 : 49c3                     eor #$c3
4ff9 : d91032                   cmp abs1,y
                                trap_ne     ;store to indirect data
4ffc : f003            >        beq skip1916
                       >        trap            ;failed not equal (non zero)
4ffe : 20c761          >        jsr report_error
                       >
5001 :                 >skip1916
                        
5001 : 8a                       txa
5002 : 990532                   sta abst,y  ;clear                
5005 : 88                       dey
5006 : 10ec                     bpl tstai2
5008 : ba                       tsx
5009 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
500b : f003            >        beq skip1918
                       >        trap            ;failed not equal (non zero)
500d : 20c761          >        jsr report_error
                       >
5010 :                 >skip1918
                        
                                next_test
5010 : ad0232          >            lda test_case   ;previous test
5013 : c90c            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
5015 : f003            >        beq skip1921
                       >        trap            ;failed not equal (non zero)
5017 : 20c761          >        jsr report_error
                       >
501a :                 >skip1921
                       >
000d =                 >test_num = test_num + 1
501a : a90d            >            lda #test_num   ;*** next tests' number
501c : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing STZ - zp / abs / zp,x / abs,x
501f : a07b                     ldy #123    ;protect y
5021 : a204                     ldx #4      ;precharge test area
5023 : a907                     lda #7
5025 : 9552             tstz1   sta zpt,x
5027 : 0a                       asl a
5028 : ca                       dex
5029 : 10fa                     bpl tstz1
502b : a204                     ldx #4
                                set_a $55,$ff
                       >            load_flag $ff
502d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
502f : 48              >            pha         ;use stack to load status
5030 : a955            >            lda #$55     ;precharge accu
5032 : 28              >            plp
                        
5033 : 6452                     stz zpt     
5035 : 6453                     stz zpt+1
5037 : 6454                     stz zpt+2
5039 : 6455                     stz zpt+3
503b : 6456                     stz zpt+4
                                tst_a $55,$ff
503d : 08              >            php         ;save flags
503e : c955            >            cmp #$55     ;test result
                       >            trap_ne
5040 : f003            >        beq skip1926
                       >        trap            ;failed not equal (non zero)
5042 : 20c761          >        jsr report_error
                       >
5045 :                 >skip1926
                       >
5045 : 68              >            pla         ;load status
5046 : 48              >            pha
                       >            cmp_flag $ff
5047 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5049 : f003            >        beq skip1929
                       >        trap            ;failed not equal (non zero)
504b : 20c761          >        jsr report_error
                       >
504e :                 >skip1929
                       >
504e : 28              >            plp         ;restore status
                        
504f : b552             tstz2   lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
5051 : f003            >        beq skip1931
                       >        trap            ;failed not equal (non zero)
5053 : 20c761          >        jsr report_error
                       >
5056 :                 >skip1931
                        
5056 : ca                       dex
5057 : 10f6                     bpl tstz2
5059 : a204                     ldx #4      ;precharge test area
505b : a907                     lda #7
505d : 9552             tstz3   sta zpt,x
505f : 0a                       asl a
5060 : ca                       dex
5061 : 10fa                     bpl tstz3
5063 : a204                     ldx #4
                                set_a $aa,0
                       >            load_flag 0
5065 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5067 : 48              >            pha         ;use stack to load status
5068 : a9aa            >            lda #$aa     ;precharge accu
506a : 28              >            plp
                        
506b : 6452                     stz zpt     
506d : 6453                     stz zpt+1
506f : 6454                     stz zpt+2
5071 : 6455                     stz zpt+3
5073 : 6456                     stz zpt+4
                                tst_a $aa,0
5075 : 08              >            php         ;save flags
5076 : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
5078 : f003            >        beq skip1936
                       >        trap            ;failed not equal (non zero)
507a : 20c761          >        jsr report_error
                       >
507d :                 >skip1936
                       >
507d : 68              >            pla         ;load status
507e : 48              >            pha
                       >            cmp_flag 0
507f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5081 : f003            >        beq skip1939
                       >        trap            ;failed not equal (non zero)
5083 : 20c761          >        jsr report_error
                       >
5086 :                 >skip1939
                       >
5086 : 28              >            plp         ;restore status
                        
5087 : b552             tstz4   lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
5089 : f003            >        beq skip1941
                       >        trap            ;failed not equal (non zero)
508b : 20c761          >        jsr report_error
                       >
508e :                 >skip1941
                        
508e : ca                       dex
508f : 10f6                     bpl tstz4
                                
5091 : a204                     ldx #4      ;precharge test area
5093 : a907                     lda #7
5095 : 9d0532           tstz5   sta abst,x
5098 : 0a                       asl a
5099 : ca                       dex
509a : 10f9                     bpl tstz5
509c : a204                     ldx #4
                                set_a $55,$ff
                       >            load_flag $ff
509e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
50a0 : 48              >            pha         ;use stack to load status
50a1 : a955            >            lda #$55     ;precharge accu
50a3 : 28              >            plp
                        
50a4 : 9c0532                   stz abst     
50a7 : 9c0632                   stz abst+1
50aa : 9c0732                   stz abst+2
50ad : 9c0832                   stz abst+3
50b0 : 9c0932                   stz abst+4
                                tst_a $55,$ff
50b3 : 08              >            php         ;save flags
50b4 : c955            >            cmp #$55     ;test result
                       >            trap_ne
50b6 : f003            >        beq skip1946
                       >        trap            ;failed not equal (non zero)
50b8 : 20c761          >        jsr report_error
                       >
50bb :                 >skip1946
                       >
50bb : 68              >            pla         ;load status
50bc : 48              >            pha
                       >            cmp_flag $ff
50bd : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
50bf : f003            >        beq skip1949
                       >        trap            ;failed not equal (non zero)
50c1 : 20c761          >        jsr report_error
                       >
50c4 :                 >skip1949
                       >
50c4 : 28              >            plp         ;restore status
                        
50c5 : bd0532           tstz6   lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ abs
50c8 : f003            >        beq skip1951
                       >        trap            ;failed not equal (non zero)
50ca : 20c761          >        jsr report_error
                       >
50cd :                 >skip1951
                        
50cd : ca                       dex
50ce : 10f5                     bpl tstz6
50d0 : a204                     ldx #4      ;precharge test area
50d2 : a907                     lda #7
50d4 : 9d0532           tstz7   sta abst,x
50d7 : 0a                       asl a
50d8 : ca                       dex
50d9 : 10f9                     bpl tstz7
50db : a204                     ldx #4
                                set_a $aa,0
                       >            load_flag 0
50dd : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
50df : 48              >            pha         ;use stack to load status
50e0 : a9aa            >            lda #$aa     ;precharge accu
50e2 : 28              >            plp
                        
50e3 : 9c0532                   stz abst     
50e6 : 9c0632                   stz abst+1
50e9 : 9c0732                   stz abst+2
50ec : 9c0832                   stz abst+3
50ef : 9c0932                   stz abst+4
                                tst_a $aa,0
50f2 : 08              >            php         ;save flags
50f3 : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
50f5 : f003            >        beq skip1956
                       >        trap            ;failed not equal (non zero)
50f7 : 20c761          >        jsr report_error
                       >
50fa :                 >skip1956
                       >
50fa : 68              >            pla         ;load status
50fb : 48              >            pha
                       >            cmp_flag 0
50fc : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
50fe : f003            >        beq skip1959
                       >        trap            ;failed not equal (non zero)
5100 : 20c761          >        jsr report_error
                       >
5103 :                 >skip1959
                       >
5103 : 28              >            plp         ;restore status
                        
5104 : bd0532           tstz8   lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ abs
5107 : f003            >        beq skip1961
                       >        trap            ;failed not equal (non zero)
5109 : 20c761          >        jsr report_error
                       >
510c :                 >skip1961
                        
510c : ca                       dex
510d : 10f5                     bpl tstz8
                                
510f : a204                     ldx #4      ;precharge test area
5111 : a907                     lda #7
5113 : 9552             tstz11  sta zpt,x
5115 : 0a                       asl a
5116 : ca                       dex
5117 : 10fa                     bpl tstz11
5119 : a204                     ldx #4
511b :                  tstz15
                                set_a $55,$ff
                       >            load_flag $ff
511b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
511d : 48              >            pha         ;use stack to load status
511e : a955            >            lda #$55     ;precharge accu
5120 : 28              >            plp
                        
5121 : 7452                     stz zpt,x     
                                tst_a $55,$ff
5123 : 08              >            php         ;save flags
5124 : c955            >            cmp #$55     ;test result
                       >            trap_ne
5126 : f003            >        beq skip1966
                       >        trap            ;failed not equal (non zero)
5128 : 20c761          >        jsr report_error
                       >
512b :                 >skip1966
                       >
512b : 68              >            pla         ;load status
512c : 48              >            pha
                       >            cmp_flag $ff
512d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
512f : f003            >        beq skip1969
                       >        trap            ;failed not equal (non zero)
5131 : 20c761          >        jsr report_error
                       >
5134 :                 >skip1969
                       >
5134 : 28              >            plp         ;restore status
                        
5135 : ca                       dex
5136 : 10e3                     bpl tstz15
5138 : a204                     ldx #4
513a : b552             tstz12  lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
513c : f003            >        beq skip1971
                       >        trap            ;failed not equal (non zero)
513e : 20c761          >        jsr report_error
                       >
5141 :                 >skip1971
                        
5141 : ca                       dex
5142 : 10f6                     bpl tstz12
5144 : a204                     ldx #4      ;precharge test area
5146 : a907                     lda #7
5148 : 9552             tstz13  sta zpt,x
514a : 0a                       asl a
514b : ca                       dex
514c : 10fa                     bpl tstz13
514e : a204                     ldx #4
5150 :                  tstz16
                                set_a $aa,0
                       >            load_flag 0
5150 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5152 : 48              >            pha         ;use stack to load status
5153 : a9aa            >            lda #$aa     ;precharge accu
5155 : 28              >            plp
                        
5156 : 7452                     stz zpt,x
                                tst_a $aa,0
5158 : 08              >            php         ;save flags
5159 : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
515b : f003            >        beq skip1976
                       >        trap            ;failed not equal (non zero)
515d : 20c761          >        jsr report_error
                       >
5160 :                 >skip1976
                       >
5160 : 68              >            pla         ;load status
5161 : 48              >            pha
                       >            cmp_flag 0
5162 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5164 : f003            >        beq skip1979
                       >        trap            ;failed not equal (non zero)
5166 : 20c761          >        jsr report_error
                       >
5169 :                 >skip1979
                       >
5169 : 28              >            plp         ;restore status
                        
516a : ca                       dex
516b : 10e3                     bpl tstz16
516d : a204                     ldx #4
516f : b552             tstz14  lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
5171 : f003            >        beq skip1981
                       >        trap            ;failed not equal (non zero)
5173 : 20c761          >        jsr report_error
                       >
5176 :                 >skip1981
                        
5176 : ca                       dex
5177 : 10f6                     bpl tstz14
                                
5179 : a204                     ldx #4      ;precharge test area
517b : a907                     lda #7
517d : 9d0532           tstz21  sta abst,x
5180 : 0a                       asl a
5181 : ca                       dex
5182 : 10f9                     bpl tstz21
5184 : a204                     ldx #4
5186 :                  tstz25
                                set_a $55,$ff
                       >            load_flag $ff
5186 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5188 : 48              >            pha         ;use stack to load status
5189 : a955            >            lda #$55     ;precharge accu
518b : 28              >            plp
                        
518c : 9e0532                   stz abst,x     
                                tst_a $55,$ff
518f : 08              >            php         ;save flags
5190 : c955            >            cmp #$55     ;test result
                       >            trap_ne
5192 : f003            >        beq skip1986
                       >        trap            ;failed not equal (non zero)
5194 : 20c761          >        jsr report_error
                       >
5197 :                 >skip1986
                       >
5197 : 68              >            pla         ;load status
5198 : 48              >            pha
                       >            cmp_flag $ff
5199 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
519b : f003            >        beq skip1989
                       >        trap            ;failed not equal (non zero)
519d : 20c761          >        jsr report_error
                       >
51a0 :                 >skip1989
                       >
51a0 : 28              >            plp         ;restore status
                        
51a1 : ca                       dex
51a2 : 10e2                     bpl tstz25
51a4 : a204                     ldx #4
51a6 : bd0532           tstz22  lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
51a9 : f003            >        beq skip1991
                       >        trap            ;failed not equal (non zero)
51ab : 20c761          >        jsr report_error
                       >
51ae :                 >skip1991
                        
51ae : ca                       dex
51af : 10f5                     bpl tstz22
51b1 : a204                     ldx #4      ;precharge test area
51b3 : a907                     lda #7
51b5 : 9d0532           tstz23  sta abst,x
51b8 : 0a                       asl a
51b9 : ca                       dex
51ba : 10f9                     bpl tstz23
51bc : a204                     ldx #4
51be :                  tstz26
                                set_a $aa,0
                       >            load_flag 0
51be : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
51c0 : 48              >            pha         ;use stack to load status
51c1 : a9aa            >            lda #$aa     ;precharge accu
51c3 : 28              >            plp
                        
51c4 : 9e0532                   stz abst,x
                                tst_a $aa,0
51c7 : 08              >            php         ;save flags
51c8 : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
51ca : f003            >        beq skip1996
                       >        trap            ;failed not equal (non zero)
51cc : 20c761          >        jsr report_error
                       >
51cf :                 >skip1996
                       >
51cf : 68              >            pla         ;load status
51d0 : 48              >            pha
                       >            cmp_flag 0
51d1 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
51d3 : f003            >        beq skip1999
                       >        trap            ;failed not equal (non zero)
51d5 : 20c761          >        jsr report_error
                       >
51d8 :                 >skip1999
                       >
51d8 : 28              >            plp         ;restore status
                        
51d9 : ca                       dex
51da : 10e2                     bpl tstz26
51dc : a204                     ldx #4
51de : bd0532           tstz24  lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
51e1 : f003            >        beq skip2001
                       >        trap            ;failed not equal (non zero)
51e3 : 20c761          >        jsr report_error
                       >
51e6 :                 >skip2001
                        
51e6 : ca                       dex
51e7 : 10f5                     bpl tstz24
                                
51e9 : c07b                     cpy #123
                                trap_ne     ;y altered during test 
51eb : f003            >        beq skip2003
                       >        trap            ;failed not equal (non zero)
51ed : 20c761          >        jsr report_error
                       >
51f0 :                 >skip2003
                        
51f0 : ba                       tsx
51f1 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
51f3 : f003            >        beq skip2005
                       >        trap            ;failed not equal (non zero)
51f5 : 20c761          >        jsr report_error
                       >
51f8 :                 >skip2005
                        
                                next_test
51f8 : ad0232          >            lda test_case   ;previous test
51fb : c90d            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
51fd : f003            >        beq skip2008
                       >        trap            ;failed not equal (non zero)
51ff : 20c761          >        jsr report_error
                       >
5202 :                 >skip2008
                       >
000e =                 >test_num = test_num + 1
5202 : a90e            >            lda #test_num   ;*** next tests' number
5204 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing BIT - zp,x / abs,x / #
5207 : a042                     ldy #$42
5209 : a203                     ldx #3
                                set_a $ff,0
                       >            load_flag 0
520b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
520d : 48              >            pha         ;use stack to load status
520e : a9ff            >            lda #$ff     ;precharge accu
5210 : 28              >            plp
                        
5211 : 3459                     bit zp1,x   ;00 - should set Z / clear  NV
                                tst_a $ff,fz 
5213 : 08              >            php         ;save flags
5214 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
5216 : f003            >        beq skip2013
                       >        trap            ;failed not equal (non zero)
5218 : 20c761          >        jsr report_error
                       >
521b :                 >skip2013
                       >
521b : 68              >            pla         ;load status
521c : 48              >            pha
                       >            cmp_flag fz 
521d : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
521f : f003            >        beq skip2016
                       >        trap            ;failed not equal (non zero)
5221 : 20c761          >        jsr report_error
                       >
5224 :                 >skip2016
                       >
5224 : 28              >            plp         ;restore status
                        
5225 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
5226 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5228 : 48              >            pha         ;use stack to load status
5229 : a901            >            lda #1     ;precharge accu
522b : 28              >            plp
                        
522c : 3459                     bit zp1,x   ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
522e : 08              >            php         ;save flags
522f : c901            >            cmp #1     ;test result
                       >            trap_ne
5231 : f003            >        beq skip2021
                       >        trap            ;failed not equal (non zero)
5233 : 20c761          >        jsr report_error
                       >
5236 :                 >skip2021
                       >
5236 : 68              >            pla         ;load status
5237 : 48              >            pha
                       >            cmp_flag fv
5238 : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
523a : f003            >        beq skip2024
                       >        trap            ;failed not equal (non zero)
523c : 20c761          >        jsr report_error
                       >
523f :                 >skip2024
                       >
523f : 28              >            plp         ;restore status
                        
5240 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
5241 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5243 : 48              >            pha         ;use stack to load status
5244 : a901            >            lda #1     ;precharge accu
5246 : 28              >            plp
                        
5247 : 3459                     bit zp1,x   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
5249 : 08              >            php         ;save flags
524a : c901            >            cmp #1     ;test result
                       >            trap_ne
524c : f003            >        beq skip2029
                       >        trap            ;failed not equal (non zero)
524e : 20c761          >        jsr report_error
                       >
5251 :                 >skip2029
                       >
5251 : 68              >            pla         ;load status
5252 : 48              >            pha
                       >            cmp_flag fnz
5253 : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5255 : f003            >        beq skip2032
                       >        trap            ;failed not equal (non zero)
5257 : 20c761          >        jsr report_error
                       >
525a :                 >skip2032
                       >
525a : 28              >            plp         ;restore status
                        
525b : ca                       dex
                                set_a 1,0
                       >            load_flag 0
525c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
525e : 48              >            pha         ;use stack to load status
525f : a901            >            lda #1     ;precharge accu
5261 : 28              >            plp
                        
5262 : 3459                     bit zp1,x   ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
5264 : 08              >            php         ;save flags
5265 : c901            >            cmp #1     ;test result
                       >            trap_ne
5267 : f003            >        beq skip2037
                       >        trap            ;failed not equal (non zero)
5269 : 20c761          >        jsr report_error
                       >
526c :                 >skip2037
                       >
526c : 68              >            pla         ;load status
526d : 48              >            pha
                       >            cmp_flag fnv
526e : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5270 : f003            >        beq skip2040
                       >        trap            ;failed not equal (non zero)
5272 : 20c761          >        jsr report_error
                       >
5275 :                 >skip2040
                       >
5275 : 28              >            plp         ;restore status
                        
                                
                                set_a 1,$ff
                       >            load_flag $ff
5276 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5278 : 48              >            pha         ;use stack to load status
5279 : a901            >            lda #1     ;precharge accu
527b : 28              >            plp
                        
527c : 3459                     bit zp1,x   ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
527e : 08              >            php         ;save flags
527f : c901            >            cmp #1     ;test result
                       >            trap_ne
5281 : f003            >        beq skip2045
                       >        trap            ;failed not equal (non zero)
5283 : 20c761          >        jsr report_error
                       >
5286 :                 >skip2045
                       >
5286 : 68              >            pla         ;load status
5287 : 48              >            pha
                       >            cmp_flag ~fz
5288 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
528a : f003            >        beq skip2048
                       >        trap            ;failed not equal (non zero)
528c : 20c761          >        jsr report_error
                       >
528f :                 >skip2048
                       >
528f : 28              >            plp         ;restore status
                        
5290 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
5291 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5293 : 48              >            pha         ;use stack to load status
5294 : a901            >            lda #1     ;precharge accu
5296 : 28              >            plp
                        
5297 : 3459                     bit zp1,x   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
5299 : 08              >            php         ;save flags
529a : c901            >            cmp #1     ;test result
                       >            trap_ne
529c : f003            >        beq skip2053
                       >        trap            ;failed not equal (non zero)
529e : 20c761          >        jsr report_error
                       >
52a1 :                 >skip2053
                       >
52a1 : 68              >            pla         ;load status
52a2 : 48              >            pha
                       >            cmp_flag ~fv
52a3 : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
52a5 : f003            >        beq skip2056
                       >        trap            ;failed not equal (non zero)
52a7 : 20c761          >        jsr report_error
                       >
52aa :                 >skip2056
                       >
52aa : 28              >            plp         ;restore status
                        
52ab : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
52ac : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
52ae : 48              >            pha         ;use stack to load status
52af : a901            >            lda #1     ;precharge accu
52b1 : 28              >            plp
                        
52b2 : 3459                     bit zp1,x   ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
52b4 : 08              >            php         ;save flags
52b5 : c901            >            cmp #1     ;test result
                       >            trap_ne
52b7 : f003            >        beq skip2061
                       >        trap            ;failed not equal (non zero)
52b9 : 20c761          >        jsr report_error
                       >
52bc :                 >skip2061
                       >
52bc : 68              >            pla         ;load status
52bd : 48              >            pha
                       >            cmp_flag ~fnz
52be : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
52c0 : f003            >        beq skip2064
                       >        trap            ;failed not equal (non zero)
52c2 : 20c761          >        jsr report_error
                       >
52c5 :                 >skip2064
                       >
52c5 : 28              >            plp         ;restore status
                        
52c6 : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
52c7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
52c9 : 48              >            pha         ;use stack to load status
52ca : a9ff            >            lda #$ff     ;precharge accu
52cc : 28              >            plp
                        
52cd : 3459                     bit zp1,x   ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv 
52cf : 08              >            php         ;save flags
52d0 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
52d2 : f003            >        beq skip2069
                       >        trap            ;failed not equal (non zero)
52d4 : 20c761          >        jsr report_error
                       >
52d7 :                 >skip2069
                       >
52d7 : 68              >            pla         ;load status
52d8 : 48              >            pha
                       >            cmp_flag ~fnv 
52d9 : c93f            >            cmp #(~fnv |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
52db : f003            >        beq skip2072
                       >        trap            ;failed not equal (non zero)
52dd : 20c761          >        jsr report_error
                       >
52e0 :                 >skip2072
                       >
52e0 : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,0
                       >            load_flag 0
52e1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
52e3 : 48              >            pha         ;use stack to load status
52e4 : a9ff            >            lda #$ff     ;precharge accu
52e6 : 28              >            plp
                        
52e7 : 3c1032                   bit abs1,x  ;00 - should set Z / clear  NV
                                tst_a $ff,fz 
52ea : 08              >            php         ;save flags
52eb : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
52ed : f003            >        beq skip2077
                       >        trap            ;failed not equal (non zero)
52ef : 20c761          >        jsr report_error
                       >
52f2 :                 >skip2077
                       >
52f2 : 68              >            pla         ;load status
52f3 : 48              >            pha
                       >            cmp_flag fz 
52f4 : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
52f6 : f003            >        beq skip2080
                       >        trap            ;failed not equal (non zero)
52f8 : 20c761          >        jsr report_error
                       >
52fb :                 >skip2080
                       >
52fb : 28              >            plp         ;restore status
                        
52fc : ca                       dex
                                set_a 1,0
                       >            load_flag 0
52fd : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
52ff : 48              >            pha         ;use stack to load status
5300 : a901            >            lda #1     ;precharge accu
5302 : 28              >            plp
                        
5303 : 3c1032                   bit abs1,x  ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
5306 : 08              >            php         ;save flags
5307 : c901            >            cmp #1     ;test result
                       >            trap_ne
5309 : f003            >        beq skip2085
                       >        trap            ;failed not equal (non zero)
530b : 20c761          >        jsr report_error
                       >
530e :                 >skip2085
                       >
530e : 68              >            pla         ;load status
530f : 48              >            pha
                       >            cmp_flag fv
5310 : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5312 : f003            >        beq skip2088
                       >        trap            ;failed not equal (non zero)
5314 : 20c761          >        jsr report_error
                       >
5317 :                 >skip2088
                       >
5317 : 28              >            plp         ;restore status
                        
5318 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
5319 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
531b : 48              >            pha         ;use stack to load status
531c : a901            >            lda #1     ;precharge accu
531e : 28              >            plp
                        
531f : 3c1032                   bit abs1,x  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
5322 : 08              >            php         ;save flags
5323 : c901            >            cmp #1     ;test result
                       >            trap_ne
5325 : f003            >        beq skip2093
                       >        trap            ;failed not equal (non zero)
5327 : 20c761          >        jsr report_error
                       >
532a :                 >skip2093
                       >
532a : 68              >            pla         ;load status
532b : 48              >            pha
                       >            cmp_flag fnz
532c : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
532e : f003            >        beq skip2096
                       >        trap            ;failed not equal (non zero)
5330 : 20c761          >        jsr report_error
                       >
5333 :                 >skip2096
                       >
5333 : 28              >            plp         ;restore status
                        
5334 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
5335 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5337 : 48              >            pha         ;use stack to load status
5338 : a901            >            lda #1     ;precharge accu
533a : 28              >            plp
                        
533b : 3c1032                   bit abs1,x  ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
533e : 08              >            php         ;save flags
533f : c901            >            cmp #1     ;test result
                       >            trap_ne
5341 : f003            >        beq skip2101
                       >        trap            ;failed not equal (non zero)
5343 : 20c761          >        jsr report_error
                       >
5346 :                 >skip2101
                       >
5346 : 68              >            pla         ;load status
5347 : 48              >            pha
                       >            cmp_flag fnv
5348 : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
534a : f003            >        beq skip2104
                       >        trap            ;failed not equal (non zero)
534c : 20c761          >        jsr report_error
                       >
534f :                 >skip2104
                       >
534f : 28              >            plp         ;restore status
                        
                                
                                set_a 1,$ff
                       >            load_flag $ff
5350 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5352 : 48              >            pha         ;use stack to load status
5353 : a901            >            lda #1     ;precharge accu
5355 : 28              >            plp
                        
5356 : 3c1032                   bit abs1,x  ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
5359 : 08              >            php         ;save flags
535a : c901            >            cmp #1     ;test result
                       >            trap_ne
535c : f003            >        beq skip2109
                       >        trap            ;failed not equal (non zero)
535e : 20c761          >        jsr report_error
                       >
5361 :                 >skip2109
                       >
5361 : 68              >            pla         ;load status
5362 : 48              >            pha
                       >            cmp_flag ~fz
5363 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5365 : f003            >        beq skip2112
                       >        trap            ;failed not equal (non zero)
5367 : 20c761          >        jsr report_error
                       >
536a :                 >skip2112
                       >
536a : 28              >            plp         ;restore status
                        
536b : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
536c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
536e : 48              >            pha         ;use stack to load status
536f : a901            >            lda #1     ;precharge accu
5371 : 28              >            plp
                        
5372 : 3c1032                   bit abs1,x  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
5375 : 08              >            php         ;save flags
5376 : c901            >            cmp #1     ;test result
                       >            trap_ne
5378 : f003            >        beq skip2117
                       >        trap            ;failed not equal (non zero)
537a : 20c761          >        jsr report_error
                       >
537d :                 >skip2117
                       >
537d : 68              >            pla         ;load status
537e : 48              >            pha
                       >            cmp_flag ~fv
537f : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5381 : f003            >        beq skip2120
                       >        trap            ;failed not equal (non zero)
5383 : 20c761          >        jsr report_error
                       >
5386 :                 >skip2120
                       >
5386 : 28              >            plp         ;restore status
                        
5387 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
5388 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
538a : 48              >            pha         ;use stack to load status
538b : a901            >            lda #1     ;precharge accu
538d : 28              >            plp
                        
538e : 3c1032                   bit abs1,x  ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
5391 : 08              >            php         ;save flags
5392 : c901            >            cmp #1     ;test result
                       >            trap_ne
5394 : f003            >        beq skip2125
                       >        trap            ;failed not equal (non zero)
5396 : 20c761          >        jsr report_error
                       >
5399 :                 >skip2125
                       >
5399 : 68              >            pla         ;load status
539a : 48              >            pha
                       >            cmp_flag ~fnz
539b : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
539d : f003            >        beq skip2128
                       >        trap            ;failed not equal (non zero)
539f : 20c761          >        jsr report_error
                       >
53a2 :                 >skip2128
                       >
53a2 : 28              >            plp         ;restore status
                        
53a3 : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
53a4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
53a6 : 48              >            pha         ;use stack to load status
53a7 : a9ff            >            lda #$ff     ;precharge accu
53a9 : 28              >            plp
                        
53aa : 3c1032                   bit abs1,x  ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv 
53ad : 08              >            php         ;save flags
53ae : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
53b0 : f003            >        beq skip2133
                       >        trap            ;failed not equal (non zero)
53b2 : 20c761          >        jsr report_error
                       >
53b5 :                 >skip2133
                       >
53b5 : 68              >            pla         ;load status
53b6 : 48              >            pha
                       >            cmp_flag ~fnv 
53b7 : c93f            >            cmp #(~fnv |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
53b9 : f003            >        beq skip2136
                       >        trap            ;failed not equal (non zero)
53bb : 20c761          >        jsr report_error
                       >
53be :                 >skip2136
                       >
53be : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,0
                       >            load_flag 0
53bf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
53c1 : 48              >            pha         ;use stack to load status
53c2 : a9ff            >            lda #$ff     ;precharge accu
53c4 : 28              >            plp
                        
53c5 : 8900                     bit #$00    ;00 - should set Z
                                tst_a $ff,fz 
53c7 : 08              >            php         ;save flags
53c8 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
53ca : f003            >        beq skip2141
                       >        trap            ;failed not equal (non zero)
53cc : 20c761          >        jsr report_error
                       >
53cf :                 >skip2141
                       >
53cf : 68              >            pla         ;load status
53d0 : 48              >            pha
                       >            cmp_flag fz 
53d1 : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
53d3 : f003            >        beq skip2144
                       >        trap            ;failed not equal (non zero)
53d5 : 20c761          >        jsr report_error
                       >
53d8 :                 >skip2144
                       >
53d8 : 28              >            plp         ;restore status
                        
53d9 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
53da : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
53dc : 48              >            pha         ;use stack to load status
53dd : a901            >            lda #1     ;precharge accu
53df : 28              >            plp
                        
53e0 : 8941                     bit #$41    ;41 - should clear Z
                                tst_a 1,0
53e2 : 08              >            php         ;save flags
53e3 : c901            >            cmp #1     ;test result
                       >            trap_ne
53e5 : f003            >        beq skip2149
                       >        trap            ;failed not equal (non zero)
53e7 : 20c761          >        jsr report_error
                       >
53ea :                 >skip2149
                       >
53ea : 68              >            pla         ;load status
53eb : 48              >            pha
                       >            cmp_flag 0
53ec : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
53ee : f003            >        beq skip2152
                       >        trap            ;failed not equal (non zero)
53f0 : 20c761          >        jsr report_error
                       >
53f3 :                 >skip2152
                       >
53f3 : 28              >            plp         ;restore status
                        
                        ; *** DEBUG INFO ***
                        ; if it fails the previous test and your BIT # has set the V flag
                        ; see http://forum.6502.org/viewtopic.php?f=2&t=2241&p=27243#p27239
                        ; why it shouldn't alter N or V flags on a BIT #
53f4 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
53f5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
53f7 : 48              >            pha         ;use stack to load status
53f8 : a901            >            lda #1     ;precharge accu
53fa : 28              >            plp
                        
53fb : 8982                     bit #$82    ;82 - should set Z
                                tst_a 1,fz
53fd : 08              >            php         ;save flags
53fe : c901            >            cmp #1     ;test result
                       >            trap_ne
5400 : f003            >        beq skip2157
                       >        trap            ;failed not equal (non zero)
5402 : 20c761          >        jsr report_error
                       >
5405 :                 >skip2157
                       >
5405 : 68              >            pla         ;load status
5406 : 48              >            pha
                       >            cmp_flag fz
5407 : c932            >            cmp #(fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5409 : f003            >        beq skip2160
                       >        trap            ;failed not equal (non zero)
540b : 20c761          >        jsr report_error
                       >
540e :                 >skip2160
                       >
540e : 28              >            plp         ;restore status
                        
540f : ca                       dex
                                set_a 1,0
                       >            load_flag 0
5410 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5412 : 48              >            pha         ;use stack to load status
5413 : a901            >            lda #1     ;precharge accu
5415 : 28              >            plp
                        
5416 : 89c3                     bit #$c3    ;c3 - should clear Z
                                tst_a 1,0
5418 : 08              >            php         ;save flags
5419 : c901            >            cmp #1     ;test result
                       >            trap_ne
541b : f003            >        beq skip2165
                       >        trap            ;failed not equal (non zero)
541d : 20c761          >        jsr report_error
                       >
5420 :                 >skip2165
                       >
5420 : 68              >            pla         ;load status
5421 : 48              >            pha
                       >            cmp_flag 0
5422 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5424 : f003            >        beq skip2168
                       >        trap            ;failed not equal (non zero)
5426 : 20c761          >        jsr report_error
                       >
5429 :                 >skip2168
                       >
5429 : 28              >            plp         ;restore status
                        
                                
                                set_a 1,$ff
                       >            load_flag $ff
542a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
542c : 48              >            pha         ;use stack to load status
542d : a901            >            lda #1     ;precharge accu
542f : 28              >            plp
                        
5430 : 89c3                     bit #$c3    ;c3 - clear Z
                                tst_a 1,~fz
5432 : 08              >            php         ;save flags
5433 : c901            >            cmp #1     ;test result
                       >            trap_ne
5435 : f003            >        beq skip2173
                       >        trap            ;failed not equal (non zero)
5437 : 20c761          >        jsr report_error
                       >
543a :                 >skip2173
                       >
543a : 68              >            pla         ;load status
543b : 48              >            pha
                       >            cmp_flag ~fz
543c : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
543e : f003            >        beq skip2176
                       >        trap            ;failed not equal (non zero)
5440 : 20c761          >        jsr report_error
                       >
5443 :                 >skip2176
                       >
5443 : 28              >            plp         ;restore status
                        
5444 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
5445 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5447 : 48              >            pha         ;use stack to load status
5448 : a901            >            lda #1     ;precharge accu
544a : 28              >            plp
                        
544b : 8982                     bit #$82    ;82 - should set Z
                                tst_a 1,$ff
544d : 08              >            php         ;save flags
544e : c901            >            cmp #1     ;test result
                       >            trap_ne
5450 : f003            >        beq skip2181
                       >        trap            ;failed not equal (non zero)
5452 : 20c761          >        jsr report_error
                       >
5455 :                 >skip2181
                       >
5455 : 68              >            pla         ;load status
5456 : 48              >            pha
                       >            cmp_flag $ff
5457 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5459 : f003            >        beq skip2184
                       >        trap            ;failed not equal (non zero)
545b : 20c761          >        jsr report_error
                       >
545e :                 >skip2184
                       >
545e : 28              >            plp         ;restore status
                        
545f : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
5460 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5462 : 48              >            pha         ;use stack to load status
5463 : a901            >            lda #1     ;precharge accu
5465 : 28              >            plp
                        
5466 : 8941                     bit #$41    ;41 - should clear Z
                                tst_a 1,~fz
5468 : 08              >            php         ;save flags
5469 : c901            >            cmp #1     ;test result
                       >            trap_ne
546b : f003            >        beq skip2189
                       >        trap            ;failed not equal (non zero)
546d : 20c761          >        jsr report_error
                       >
5470 :                 >skip2189
                       >
5470 : 68              >            pla         ;load status
5471 : 48              >            pha
                       >            cmp_flag ~fz
5472 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5474 : f003            >        beq skip2192
                       >        trap            ;failed not equal (non zero)
5476 : 20c761          >        jsr report_error
                       >
5479 :                 >skip2192
                       >
5479 : 28              >            plp         ;restore status
                        
547a : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
547b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
547d : 48              >            pha         ;use stack to load status
547e : a9ff            >            lda #$ff     ;precharge accu
5480 : 28              >            plp
                        
5481 : 8900                     bit #$00   ;00 - should set Z
                                tst_a $ff,$ff
5483 : 08              >            php         ;save flags
5484 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
5486 : f003            >        beq skip2197
                       >        trap            ;failed not equal (non zero)
5488 : 20c761          >        jsr report_error
                       >
548b :                 >skip2197
                       >
548b : 68              >            pla         ;load status
548c : 48              >            pha
                       >            cmp_flag $ff
548d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
548f : f003            >        beq skip2200
                       >        trap            ;failed not equal (non zero)
5491 : 20c761          >        jsr report_error
                       >
5494 :                 >skip2200
                       >
5494 : 28              >            plp         ;restore status
                        
                                
5495 : e003                     cpx #3
                                trap_ne     ;x altered during test
5497 : f003            >        beq skip2202
                       >        trap            ;failed not equal (non zero)
5499 : 20c761          >        jsr report_error
                       >
549c :                 >skip2202
                        
549c : c042                     cpy #$42
                                trap_ne     ;y altered during test 
549e : f003            >        beq skip2204
                       >        trap            ;failed not equal (non zero)
54a0 : 20c761          >        jsr report_error
                       >
54a3 :                 >skip2204
                        
54a3 : ba                       tsx
54a4 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
54a6 : f003            >        beq skip2206
                       >        trap            ;failed not equal (non zero)
54a8 : 20c761          >        jsr report_error
                       >
54ab :                 >skip2206
                        
                                next_test
54ab : ad0232          >            lda test_case   ;previous test
54ae : c90e            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
54b0 : f003            >        beq skip2209
                       >        trap            ;failed not equal (non zero)
54b2 : 20c761          >        jsr report_error
                       >
54b5 :                 >skip2209
                       >
000f =                 >test_num = test_num + 1
54b5 : a90f            >            lda #test_num   ;*** next tests' number
54b7 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing TRB, TSB - zp / abs
                        
                        trbt    macro       ;\1 = memory, \2 = flags   
                                sty \1
                                load_flag \2
                                pha
                                lda zpt+1
                                plp
                                trb \1
                                php
                                cmp zpt+1
                                trap_ne     ;accu was changed
                                pla
                                pha
                                ora #fz     ;mask Z
                                cmp_flag \2|fz
                                trap_ne     ;flags changed except Z
                                pla
                                and #fz
                                cmp zpt+2
                                trap_ne     ;Z flag invalid
                                lda zpt+3
                                cmp zpt
                                trap_ne     ;altered bits in memory wrong       
                                endm
                        
                        tsbt    macro       ;\1 = memory, \2 = flags   
                                sty \1
                                load_flag \2
                                pha
                                lda zpt+1
                                plp
                                tsb \1
                                php
                                cmp zpt+1
                                trap_ne     ;accu was changed
                                pla
                                pha
                                ora #fz     ;mask Z
                                cmp_flag \2|fz
                                trap_ne     ;flags changed except Z
                                pla
                                and #fz
                                cmp zpt+2
                                trap_ne     ;Z flag invalid
                                lda zpt+4
                                cmp zpt
                                trap_ne     ;altered bits in memory wrong        
                                endm
                        
54ba : a2c0                     ldx #$c0
54bc : a000                     ldy #0      ;op1 - memory save
                                ;   zpt     ;op1 - memory modifiable
54be : 6453                     stz zpt+1   ;op2 - accu
                                ;   zpt+2   ;and flags
                                ;   zpt+3   ;memory after reset
                                ;   zpt+4   ;memory after set
                                
54c0 : 98               tbt1    tya
54c1 : 2553                     and zpt+1   ;set Z by anding the 2 operands
54c3 : 08                       php
54c4 : 68                       pla
54c5 : 2902                     and #fz     ;mask Z
54c7 : 8554                     sta zpt+2
54c9 : 98                       tya         ;reset op1 bits by op2
54ca : 49ff                     eor #$ff
54cc : 0553                     ora zpt+1
54ce : 49ff                     eor #$ff
54d0 : 8555                     sta zpt+3
54d2 : 98                       tya         ;set op1 bits by op2
54d3 : 0553                     ora zpt+1
54d5 : 8556                     sta zpt+4
                        
                                trbt zpt,$ff
54d7 : 8452            >        sty zpt
                       >        load_flag $ff
54d9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
54db : 48              >        pha
54dc : a553            >        lda zpt+1
54de : 28              >        plp
54df : 1452            >        trb zpt
54e1 : 08              >        php
54e2 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
54e4 : f003            >        beq skip2213
                       >        trap            ;failed not equal (non zero)
54e6 : 20c761          >        jsr report_error
                       >
54e9 :                 >skip2213
                       >
54e9 : 68              >        pla
54ea : 48              >        pha
54eb : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
54ed : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
54ef : f003            >        beq skip2216
                       >        trap            ;failed not equal (non zero)
54f1 : 20c761          >        jsr report_error
                       >
54f4 :                 >skip2216
                       >
54f4 : 68              >        pla
54f5 : 2902            >        and #fz
54f7 : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
54f9 : f003            >        beq skip2218
                       >        trap            ;failed not equal (non zero)
54fb : 20c761          >        jsr report_error
                       >
54fe :                 >skip2218
                       >
54fe : a555            >        lda zpt+3
5500 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
5502 : f003            >        beq skip2220
                       >        trap            ;failed not equal (non zero)
5504 : 20c761          >        jsr report_error
                       >
5507 :                 >skip2220
                       >
                        
                                trbt abst,$ff
5507 : 8c0532          >        sty abst
                       >        load_flag $ff
550a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
550c : 48              >        pha
550d : a553            >        lda zpt+1
550f : 28              >        plp
5510 : 1c0532          >        trb abst
5513 : 08              >        php
5514 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
5516 : f003            >        beq skip2224
                       >        trap            ;failed not equal (non zero)
5518 : 20c761          >        jsr report_error
                       >
551b :                 >skip2224
                       >
551b : 68              >        pla
551c : 48              >        pha
551d : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
551f : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
5521 : f003            >        beq skip2227
                       >        trap            ;failed not equal (non zero)
5523 : 20c761          >        jsr report_error
                       >
5526 :                 >skip2227
                       >
5526 : 68              >        pla
5527 : 2902            >        and #fz
5529 : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
552b : f003            >        beq skip2229
                       >        trap            ;failed not equal (non zero)
552d : 20c761          >        jsr report_error
                       >
5530 :                 >skip2229
                       >
5530 : a555            >        lda zpt+3
5532 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
5534 : f003            >        beq skip2231
                       >        trap            ;failed not equal (non zero)
5536 : 20c761          >        jsr report_error
                       >
5539 :                 >skip2231
                       >
                        
                                trbt zpt,0
5539 : 8452            >        sty zpt
                       >        load_flag 0
553b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
553d : 48              >        pha
553e : a553            >        lda zpt+1
5540 : 28              >        plp
5541 : 1452            >        trb zpt
5543 : 08              >        php
5544 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
5546 : f003            >        beq skip2235
                       >        trap            ;failed not equal (non zero)
5548 : 20c761          >        jsr report_error
                       >
554b :                 >skip2235
                       >
554b : 68              >        pla
554c : 48              >        pha
554d : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
554f : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
5551 : f003            >        beq skip2238
                       >        trap            ;failed not equal (non zero)
5553 : 20c761          >        jsr report_error
                       >
5556 :                 >skip2238
                       >
5556 : 68              >        pla
5557 : 2902            >        and #fz
5559 : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
555b : f003            >        beq skip2240
                       >        trap            ;failed not equal (non zero)
555d : 20c761          >        jsr report_error
                       >
5560 :                 >skip2240
                       >
5560 : a555            >        lda zpt+3
5562 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
5564 : f003            >        beq skip2242
                       >        trap            ;failed not equal (non zero)
5566 : 20c761          >        jsr report_error
                       >
5569 :                 >skip2242
                       >
                        
                                trbt abst,0
5569 : 8c0532          >        sty abst
                       >        load_flag 0
556c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
556e : 48              >        pha
556f : a553            >        lda zpt+1
5571 : 28              >        plp
5572 : 1c0532          >        trb abst
5575 : 08              >        php
5576 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
5578 : f003            >        beq skip2246
                       >        trap            ;failed not equal (non zero)
557a : 20c761          >        jsr report_error
                       >
557d :                 >skip2246
                       >
557d : 68              >        pla
557e : 48              >        pha
557f : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
5581 : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
5583 : f003            >        beq skip2249
                       >        trap            ;failed not equal (non zero)
5585 : 20c761          >        jsr report_error
                       >
5588 :                 >skip2249
                       >
5588 : 68              >        pla
5589 : 2902            >        and #fz
558b : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
558d : f003            >        beq skip2251
                       >        trap            ;failed not equal (non zero)
558f : 20c761          >        jsr report_error
                       >
5592 :                 >skip2251
                       >
5592 : a555            >        lda zpt+3
5594 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
5596 : f003            >        beq skip2253
                       >        trap            ;failed not equal (non zero)
5598 : 20c761          >        jsr report_error
                       >
559b :                 >skip2253
                       >
                        
                                tsbt zpt,$ff
559b : 8452            >        sty zpt
                       >        load_flag $ff
559d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
559f : 48              >        pha
55a0 : a553            >        lda zpt+1
55a2 : 28              >        plp
55a3 : 0452            >        tsb zpt
55a5 : 08              >        php
55a6 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
55a8 : f003            >        beq skip2257
                       >        trap            ;failed not equal (non zero)
55aa : 20c761          >        jsr report_error
                       >
55ad :                 >skip2257
                       >
55ad : 68              >        pla
55ae : 48              >        pha
55af : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
55b1 : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
55b3 : f003            >        beq skip2260
                       >        trap            ;failed not equal (non zero)
55b5 : 20c761          >        jsr report_error
                       >
55b8 :                 >skip2260
                       >
55b8 : 68              >        pla
55b9 : 2902            >        and #fz
55bb : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
55bd : f003            >        beq skip2262
                       >        trap            ;failed not equal (non zero)
55bf : 20c761          >        jsr report_error
                       >
55c2 :                 >skip2262
                       >
55c2 : a556            >        lda zpt+4
55c4 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
55c6 : f003            >        beq skip2264
                       >        trap            ;failed not equal (non zero)
55c8 : 20c761          >        jsr report_error
                       >
55cb :                 >skip2264
                       >
                        
                                tsbt abst,$ff
55cb : 8c0532          >        sty abst
                       >        load_flag $ff
55ce : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
55d0 : 48              >        pha
55d1 : a553            >        lda zpt+1
55d3 : 28              >        plp
55d4 : 0c0532          >        tsb abst
55d7 : 08              >        php
55d8 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
55da : f003            >        beq skip2268
                       >        trap            ;failed not equal (non zero)
55dc : 20c761          >        jsr report_error
                       >
55df :                 >skip2268
                       >
55df : 68              >        pla
55e0 : 48              >        pha
55e1 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
55e3 : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
55e5 : f003            >        beq skip2271
                       >        trap            ;failed not equal (non zero)
55e7 : 20c761          >        jsr report_error
                       >
55ea :                 >skip2271
                       >
55ea : 68              >        pla
55eb : 2902            >        and #fz
55ed : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
55ef : f003            >        beq skip2273
                       >        trap            ;failed not equal (non zero)
55f1 : 20c761          >        jsr report_error
                       >
55f4 :                 >skip2273
                       >
55f4 : a556            >        lda zpt+4
55f6 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
55f8 : f003            >        beq skip2275
                       >        trap            ;failed not equal (non zero)
55fa : 20c761          >        jsr report_error
                       >
55fd :                 >skip2275
                       >
                        
                                tsbt zpt,0
55fd : 8452            >        sty zpt
                       >        load_flag 0
55ff : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5601 : 48              >        pha
5602 : a553            >        lda zpt+1
5604 : 28              >        plp
5605 : 0452            >        tsb zpt
5607 : 08              >        php
5608 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
560a : f003            >        beq skip2279
                       >        trap            ;failed not equal (non zero)
560c : 20c761          >        jsr report_error
                       >
560f :                 >skip2279
                       >
560f : 68              >        pla
5610 : 48              >        pha
5611 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
5613 : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
5615 : f003            >        beq skip2282
                       >        trap            ;failed not equal (non zero)
5617 : 20c761          >        jsr report_error
                       >
561a :                 >skip2282
                       >
561a : 68              >        pla
561b : 2902            >        and #fz
561d : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
561f : f003            >        beq skip2284
                       >        trap            ;failed not equal (non zero)
5621 : 20c761          >        jsr report_error
                       >
5624 :                 >skip2284
                       >
5624 : a556            >        lda zpt+4
5626 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
5628 : f003            >        beq skip2286
                       >        trap            ;failed not equal (non zero)
562a : 20c761          >        jsr report_error
                       >
562d :                 >skip2286
                       >
                        
                                tsbt abst,0
562d : 8c0532          >        sty abst
                       >        load_flag 0
5630 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5632 : 48              >        pha
5633 : a553            >        lda zpt+1
5635 : 28              >        plp
5636 : 0c0532          >        tsb abst
5639 : 08              >        php
563a : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
563c : f003            >        beq skip2290
                       >        trap            ;failed not equal (non zero)
563e : 20c761          >        jsr report_error
                       >
5641 :                 >skip2290
                       >
5641 : 68              >        pla
5642 : 48              >        pha
5643 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
5645 : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
5647 : f003            >        beq skip2293
                       >        trap            ;failed not equal (non zero)
5649 : 20c761          >        jsr report_error
                       >
564c :                 >skip2293
                       >
564c : 68              >        pla
564d : 2902            >        and #fz
564f : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
5651 : f003            >        beq skip2295
                       >        trap            ;failed not equal (non zero)
5653 : 20c761          >        jsr report_error
                       >
5656 :                 >skip2295
                       >
5656 : a556            >        lda zpt+4
5658 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
565a : f003            >        beq skip2297
                       >        trap            ;failed not equal (non zero)
565c : 20c761          >        jsr report_error
                       >
565f :                 >skip2297
                       >
                        
                                
565f : c8                       iny         ;iterate op1
5660 : d004                     bne tbt3
5662 : e653                     inc zpt+1   ;iterate op2
5664 : f003                     beq tbt2
5666 : 4cc054           tbt3    jmp tbt1        
5669 :                  tbt2
5669 : e0c0                     cpx #$c0
                                trap_ne     ;x altered during test
566b : f003            >        beq skip2299
                       >        trap            ;failed not equal (non zero)
566d : 20c761          >        jsr report_error
                       >
5670 :                 >skip2299
                        
5670 : ba                       tsx
5671 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
5673 : f003            >        beq skip2301
                       >        trap            ;failed not equal (non zero)
5675 : 20c761          >        jsr report_error
                       >
5678 :                 >skip2301
                        
                                next_test    
5678 : ad0232          >            lda test_case   ;previous test
567b : c90f            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
567d : f003            >        beq skip2304
                       >        trap            ;failed not equal (non zero)
567f : 20c761          >        jsr report_error
                       >
5682 :                 >skip2304
                       >
0010 =                 >test_num = test_num + 1
5682 : a910            >            lda #test_num   ;*** next tests' number
5684 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                            if rkwl_wdc_op = 1
                        ; testing RMB, SMB - zp
                        rmbt    macro       ;\1 = bitnum
                                lda #$ff
                                sta zpt
                                set_a $a5,0
                                rmb \1,zpt
                                tst_a $a5,0
                                lda zpt
                                cmp #$ff-(1<<\1)
                                trap_ne     ;wrong bits set or cleared
                                lda #1<<\1
                                sta zpt
                                set_a $5a,$ff
                                rmb \1,zpt
                                tst_a $5a,$ff
                                lda zpt
                                trap_ne     ;wrong bits set or cleared
                                endm
                        smbt    macro       ;\1 = bitnum
                                lda #$ff-(1<<\1)
                                sta zpt
                                set_a $a5,0
                                smb \1,zpt
                                tst_a $a5,0
                                lda zpt
                                cmp #$ff
                                trap_ne     ;wrong bits set or cleared
                                lda #0
                                sta zpt
                                set_a $5a,$ff
                                smb \1,zpt
                                tst_a $5a,$ff
                                lda zpt
                                cmp #1<<\1
                                trap_ne     ;wrong bits set or cleared
                                endm
                        
5687 : a2ba                     ldx #$ba    ;protect x & y
5689 : a0d0                     ldy #$d0
                                rmbt 0
568b : a9ff            >        lda #$ff
568d : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
568f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5691 : 48              >            pha         ;use stack to load status
5692 : a9a5            >            lda #$a5     ;precharge accu
5694 : 28              >            plp
                       >
5695 : 0752            >        rmb 0,zpt
                       >        tst_a $a5,0
5697 : 08              >            php         ;save flags
5698 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
569a : f003            >        beq skip2310
                       >        trap            ;failed not equal (non zero)
569c : 20c761          >        jsr report_error
                       >
569f :                 >skip2310
                       >
569f : 68              >            pla         ;load status
56a0 : 48              >            pha
                       >            cmp_flag 0
56a1 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
56a3 : f003            >        beq skip2313
                       >        trap            ;failed not equal (non zero)
56a5 : 20c761          >        jsr report_error
                       >
56a8 :                 >skip2313
                       >
56a8 : 28              >            plp         ;restore status
                       >
56a9 : a552            >        lda zpt
56ab : c9fe            >        cmp #$ff-(1<<0)
                       >        trap_ne     ;wrong bits set or cleared
56ad : f003            >        beq skip2315
                       >        trap            ;failed not equal (non zero)
56af : 20c761          >        jsr report_error
                       >
56b2 :                 >skip2315
                       >
56b2 : a901            >        lda #1<<0
56b4 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
56b6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
56b8 : 48              >            pha         ;use stack to load status
56b9 : a95a            >            lda #$5a     ;precharge accu
56bb : 28              >            plp
                       >
56bc : 0752            >        rmb 0,zpt
                       >        tst_a $5a,$ff
56be : 08              >            php         ;save flags
56bf : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
56c1 : f003            >        beq skip2320
                       >        trap            ;failed not equal (non zero)
56c3 : 20c761          >        jsr report_error
                       >
56c6 :                 >skip2320
                       >
56c6 : 68              >            pla         ;load status
56c7 : 48              >            pha
                       >            cmp_flag $ff
56c8 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
56ca : f003            >        beq skip2323
                       >        trap            ;failed not equal (non zero)
56cc : 20c761          >        jsr report_error
                       >
56cf :                 >skip2323
                       >
56cf : 28              >            plp         ;restore status
                       >
56d0 : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
56d2 : f003            >        beq skip2325
                       >        trap            ;failed not equal (non zero)
56d4 : 20c761          >        jsr report_error
                       >
56d7 :                 >skip2325
                       >
                        
                                rmbt 1
56d7 : a9ff            >        lda #$ff
56d9 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
56db : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
56dd : 48              >            pha         ;use stack to load status
56de : a9a5            >            lda #$a5     ;precharge accu
56e0 : 28              >            plp
                       >
56e1 : 1752            >        rmb 1,zpt
                       >        tst_a $a5,0
56e3 : 08              >            php         ;save flags
56e4 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
56e6 : f003            >        beq skip2331
                       >        trap            ;failed not equal (non zero)
56e8 : 20c761          >        jsr report_error
                       >
56eb :                 >skip2331
                       >
56eb : 68              >            pla         ;load status
56ec : 48              >            pha
                       >            cmp_flag 0
56ed : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
56ef : f003            >        beq skip2334
                       >        trap            ;failed not equal (non zero)
56f1 : 20c761          >        jsr report_error
                       >
56f4 :                 >skip2334
                       >
56f4 : 28              >            plp         ;restore status
                       >
56f5 : a552            >        lda zpt
56f7 : c9fd            >        cmp #$ff-(1<<1)
                       >        trap_ne     ;wrong bits set or cleared
56f9 : f003            >        beq skip2336
                       >        trap            ;failed not equal (non zero)
56fb : 20c761          >        jsr report_error
                       >
56fe :                 >skip2336
                       >
56fe : a902            >        lda #1<<1
5700 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
5702 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5704 : 48              >            pha         ;use stack to load status
5705 : a95a            >            lda #$5a     ;precharge accu
5707 : 28              >            plp
                       >
5708 : 1752            >        rmb 1,zpt
                       >        tst_a $5a,$ff
570a : 08              >            php         ;save flags
570b : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
570d : f003            >        beq skip2341
                       >        trap            ;failed not equal (non zero)
570f : 20c761          >        jsr report_error
                       >
5712 :                 >skip2341
                       >
5712 : 68              >            pla         ;load status
5713 : 48              >            pha
                       >            cmp_flag $ff
5714 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5716 : f003            >        beq skip2344
                       >        trap            ;failed not equal (non zero)
5718 : 20c761          >        jsr report_error
                       >
571b :                 >skip2344
                       >
571b : 28              >            plp         ;restore status
                       >
571c : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
571e : f003            >        beq skip2346
                       >        trap            ;failed not equal (non zero)
5720 : 20c761          >        jsr report_error
                       >
5723 :                 >skip2346
                       >
                        
                                rmbt 2
5723 : a9ff            >        lda #$ff
5725 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
5727 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5729 : 48              >            pha         ;use stack to load status
572a : a9a5            >            lda #$a5     ;precharge accu
572c : 28              >            plp
                       >
572d : 2752            >        rmb 2,zpt
                       >        tst_a $a5,0
572f : 08              >            php         ;save flags
5730 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
5732 : f003            >        beq skip2352
                       >        trap            ;failed not equal (non zero)
5734 : 20c761          >        jsr report_error
                       >
5737 :                 >skip2352
                       >
5737 : 68              >            pla         ;load status
5738 : 48              >            pha
                       >            cmp_flag 0
5739 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
573b : f003            >        beq skip2355
                       >        trap            ;failed not equal (non zero)
573d : 20c761          >        jsr report_error
                       >
5740 :                 >skip2355
                       >
5740 : 28              >            plp         ;restore status
                       >
5741 : a552            >        lda zpt
5743 : c9fb            >        cmp #$ff-(1<<2)
                       >        trap_ne     ;wrong bits set or cleared
5745 : f003            >        beq skip2357
                       >        trap            ;failed not equal (non zero)
5747 : 20c761          >        jsr report_error
                       >
574a :                 >skip2357
                       >
574a : a904            >        lda #1<<2
574c : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
574e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5750 : 48              >            pha         ;use stack to load status
5751 : a95a            >            lda #$5a     ;precharge accu
5753 : 28              >            plp
                       >
5754 : 2752            >        rmb 2,zpt
                       >        tst_a $5a,$ff
5756 : 08              >            php         ;save flags
5757 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
5759 : f003            >        beq skip2362
                       >        trap            ;failed not equal (non zero)
575b : 20c761          >        jsr report_error
                       >
575e :                 >skip2362
                       >
575e : 68              >            pla         ;load status
575f : 48              >            pha
                       >            cmp_flag $ff
5760 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5762 : f003            >        beq skip2365
                       >        trap            ;failed not equal (non zero)
5764 : 20c761          >        jsr report_error
                       >
5767 :                 >skip2365
                       >
5767 : 28              >            plp         ;restore status
                       >
5768 : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
576a : f003            >        beq skip2367
                       >        trap            ;failed not equal (non zero)
576c : 20c761          >        jsr report_error
                       >
576f :                 >skip2367
                       >
                        
                                rmbt 3
576f : a9ff            >        lda #$ff
5771 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
5773 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5775 : 48              >            pha         ;use stack to load status
5776 : a9a5            >            lda #$a5     ;precharge accu
5778 : 28              >            plp
                       >
5779 : 3752            >        rmb 3,zpt
                       >        tst_a $a5,0
577b : 08              >            php         ;save flags
577c : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
577e : f003            >        beq skip2373
                       >        trap            ;failed not equal (non zero)
5780 : 20c761          >        jsr report_error
                       >
5783 :                 >skip2373
                       >
5783 : 68              >            pla         ;load status
5784 : 48              >            pha
                       >            cmp_flag 0
5785 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5787 : f003            >        beq skip2376
                       >        trap            ;failed not equal (non zero)
5789 : 20c761          >        jsr report_error
                       >
578c :                 >skip2376
                       >
578c : 28              >            plp         ;restore status
                       >
578d : a552            >        lda zpt
578f : c9f7            >        cmp #$ff-(1<<3)
                       >        trap_ne     ;wrong bits set or cleared
5791 : f003            >        beq skip2378
                       >        trap            ;failed not equal (non zero)
5793 : 20c761          >        jsr report_error
                       >
5796 :                 >skip2378
                       >
5796 : a908            >        lda #1<<3
5798 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
579a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
579c : 48              >            pha         ;use stack to load status
579d : a95a            >            lda #$5a     ;precharge accu
579f : 28              >            plp
                       >
57a0 : 3752            >        rmb 3,zpt
                       >        tst_a $5a,$ff
57a2 : 08              >            php         ;save flags
57a3 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
57a5 : f003            >        beq skip2383
                       >        trap            ;failed not equal (non zero)
57a7 : 20c761          >        jsr report_error
                       >
57aa :                 >skip2383
                       >
57aa : 68              >            pla         ;load status
57ab : 48              >            pha
                       >            cmp_flag $ff
57ac : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
57ae : f003            >        beq skip2386
                       >        trap            ;failed not equal (non zero)
57b0 : 20c761          >        jsr report_error
                       >
57b3 :                 >skip2386
                       >
57b3 : 28              >            plp         ;restore status
                       >
57b4 : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
57b6 : f003            >        beq skip2388
                       >        trap            ;failed not equal (non zero)
57b8 : 20c761          >        jsr report_error
                       >
57bb :                 >skip2388
                       >
                        
                                rmbt 4
57bb : a9ff            >        lda #$ff
57bd : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
57bf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
57c1 : 48              >            pha         ;use stack to load status
57c2 : a9a5            >            lda #$a5     ;precharge accu
57c4 : 28              >            plp
                       >
57c5 : 4752            >        rmb 4,zpt
                       >        tst_a $a5,0
57c7 : 08              >            php         ;save flags
57c8 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
57ca : f003            >        beq skip2394
                       >        trap            ;failed not equal (non zero)
57cc : 20c761          >        jsr report_error
                       >
57cf :                 >skip2394
                       >
57cf : 68              >            pla         ;load status
57d0 : 48              >            pha
                       >            cmp_flag 0
57d1 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
57d3 : f003            >        beq skip2397
                       >        trap            ;failed not equal (non zero)
57d5 : 20c761          >        jsr report_error
                       >
57d8 :                 >skip2397
                       >
57d8 : 28              >            plp         ;restore status
                       >
57d9 : a552            >        lda zpt
57db : c9ef            >        cmp #$ff-(1<<4)
                       >        trap_ne     ;wrong bits set or cleared
57dd : f003            >        beq skip2399
                       >        trap            ;failed not equal (non zero)
57df : 20c761          >        jsr report_error
                       >
57e2 :                 >skip2399
                       >
57e2 : a910            >        lda #1<<4
57e4 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
57e6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
57e8 : 48              >            pha         ;use stack to load status
57e9 : a95a            >            lda #$5a     ;precharge accu
57eb : 28              >            plp
                       >
57ec : 4752            >        rmb 4,zpt
                       >        tst_a $5a,$ff
57ee : 08              >            php         ;save flags
57ef : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
57f1 : f003            >        beq skip2404
                       >        trap            ;failed not equal (non zero)
57f3 : 20c761          >        jsr report_error
                       >
57f6 :                 >skip2404
                       >
57f6 : 68              >            pla         ;load status
57f7 : 48              >            pha
                       >            cmp_flag $ff
57f8 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
57fa : f003            >        beq skip2407
                       >        trap            ;failed not equal (non zero)
57fc : 20c761          >        jsr report_error
                       >
57ff :                 >skip2407
                       >
57ff : 28              >            plp         ;restore status
                       >
5800 : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
5802 : f003            >        beq skip2409
                       >        trap            ;failed not equal (non zero)
5804 : 20c761          >        jsr report_error
                       >
5807 :                 >skip2409
                       >
                        
                                rmbt 5
5807 : a9ff            >        lda #$ff
5809 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
580b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
580d : 48              >            pha         ;use stack to load status
580e : a9a5            >            lda #$a5     ;precharge accu
5810 : 28              >            plp
                       >
5811 : 5752            >        rmb 5,zpt
                       >        tst_a $a5,0
5813 : 08              >            php         ;save flags
5814 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
5816 : f003            >        beq skip2415
                       >        trap            ;failed not equal (non zero)
5818 : 20c761          >        jsr report_error
                       >
581b :                 >skip2415
                       >
581b : 68              >            pla         ;load status
581c : 48              >            pha
                       >            cmp_flag 0
581d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
581f : f003            >        beq skip2418
                       >        trap            ;failed not equal (non zero)
5821 : 20c761          >        jsr report_error
                       >
5824 :                 >skip2418
                       >
5824 : 28              >            plp         ;restore status
                       >
5825 : a552            >        lda zpt
5827 : c9df            >        cmp #$ff-(1<<5)
                       >        trap_ne     ;wrong bits set or cleared
5829 : f003            >        beq skip2420
                       >        trap            ;failed not equal (non zero)
582b : 20c761          >        jsr report_error
                       >
582e :                 >skip2420
                       >
582e : a920            >        lda #1<<5
5830 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
5832 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5834 : 48              >            pha         ;use stack to load status
5835 : a95a            >            lda #$5a     ;precharge accu
5837 : 28              >            plp
                       >
5838 : 5752            >        rmb 5,zpt
                       >        tst_a $5a,$ff
583a : 08              >            php         ;save flags
583b : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
583d : f003            >        beq skip2425
                       >        trap            ;failed not equal (non zero)
583f : 20c761          >        jsr report_error
                       >
5842 :                 >skip2425
                       >
5842 : 68              >            pla         ;load status
5843 : 48              >            pha
                       >            cmp_flag $ff
5844 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5846 : f003            >        beq skip2428
                       >        trap            ;failed not equal (non zero)
5848 : 20c761          >        jsr report_error
                       >
584b :                 >skip2428
                       >
584b : 28              >            plp         ;restore status
                       >
584c : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
584e : f003            >        beq skip2430
                       >        trap            ;failed not equal (non zero)
5850 : 20c761          >        jsr report_error
                       >
5853 :                 >skip2430
                       >
                        
                                rmbt 6
5853 : a9ff            >        lda #$ff
5855 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
5857 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5859 : 48              >            pha         ;use stack to load status
585a : a9a5            >            lda #$a5     ;precharge accu
585c : 28              >            plp
                       >
585d : 6752            >        rmb 6,zpt
                       >        tst_a $a5,0
585f : 08              >            php         ;save flags
5860 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
5862 : f003            >        beq skip2436
                       >        trap            ;failed not equal (non zero)
5864 : 20c761          >        jsr report_error
                       >
5867 :                 >skip2436
                       >
5867 : 68              >            pla         ;load status
5868 : 48              >            pha
                       >            cmp_flag 0
5869 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
586b : f003            >        beq skip2439
                       >        trap            ;failed not equal (non zero)
586d : 20c761          >        jsr report_error
                       >
5870 :                 >skip2439
                       >
5870 : 28              >            plp         ;restore status
                       >
5871 : a552            >        lda zpt
5873 : c9bf            >        cmp #$ff-(1<<6)
                       >        trap_ne     ;wrong bits set or cleared
5875 : f003            >        beq skip2441
                       >        trap            ;failed not equal (non zero)
5877 : 20c761          >        jsr report_error
                       >
587a :                 >skip2441
                       >
587a : a940            >        lda #1<<6
587c : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
587e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5880 : 48              >            pha         ;use stack to load status
5881 : a95a            >            lda #$5a     ;precharge accu
5883 : 28              >            plp
                       >
5884 : 6752            >        rmb 6,zpt
                       >        tst_a $5a,$ff
5886 : 08              >            php         ;save flags
5887 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
5889 : f003            >        beq skip2446
                       >        trap            ;failed not equal (non zero)
588b : 20c761          >        jsr report_error
                       >
588e :                 >skip2446
                       >
588e : 68              >            pla         ;load status
588f : 48              >            pha
                       >            cmp_flag $ff
5890 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5892 : f003            >        beq skip2449
                       >        trap            ;failed not equal (non zero)
5894 : 20c761          >        jsr report_error
                       >
5897 :                 >skip2449
                       >
5897 : 28              >            plp         ;restore status
                       >
5898 : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
589a : f003            >        beq skip2451
                       >        trap            ;failed not equal (non zero)
589c : 20c761          >        jsr report_error
                       >
589f :                 >skip2451
                       >
                        
                                rmbt 7
589f : a9ff            >        lda #$ff
58a1 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
58a3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
58a5 : 48              >            pha         ;use stack to load status
58a6 : a9a5            >            lda #$a5     ;precharge accu
58a8 : 28              >            plp
                       >
58a9 : 7752            >        rmb 7,zpt
                       >        tst_a $a5,0
58ab : 08              >            php         ;save flags
58ac : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
58ae : f003            >        beq skip2457
                       >        trap            ;failed not equal (non zero)
58b0 : 20c761          >        jsr report_error
                       >
58b3 :                 >skip2457
                       >
58b3 : 68              >            pla         ;load status
58b4 : 48              >            pha
                       >            cmp_flag 0
58b5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
58b7 : f003            >        beq skip2460
                       >        trap            ;failed not equal (non zero)
58b9 : 20c761          >        jsr report_error
                       >
58bc :                 >skip2460
                       >
58bc : 28              >            plp         ;restore status
                       >
58bd : a552            >        lda zpt
58bf : c97f            >        cmp #$ff-(1<<7)
                       >        trap_ne     ;wrong bits set or cleared
58c1 : f003            >        beq skip2462
                       >        trap            ;failed not equal (non zero)
58c3 : 20c761          >        jsr report_error
                       >
58c6 :                 >skip2462
                       >
58c6 : a980            >        lda #1<<7
58c8 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
58ca : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
58cc : 48              >            pha         ;use stack to load status
58cd : a95a            >            lda #$5a     ;precharge accu
58cf : 28              >            plp
                       >
58d0 : 7752            >        rmb 7,zpt
                       >        tst_a $5a,$ff
58d2 : 08              >            php         ;save flags
58d3 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
58d5 : f003            >        beq skip2467
                       >        trap            ;failed not equal (non zero)
58d7 : 20c761          >        jsr report_error
                       >
58da :                 >skip2467
                       >
58da : 68              >            pla         ;load status
58db : 48              >            pha
                       >            cmp_flag $ff
58dc : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
58de : f003            >        beq skip2470
                       >        trap            ;failed not equal (non zero)
58e0 : 20c761          >        jsr report_error
                       >
58e3 :                 >skip2470
                       >
58e3 : 28              >            plp         ;restore status
                       >
58e4 : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
58e6 : f003            >        beq skip2472
                       >        trap            ;failed not equal (non zero)
58e8 : 20c761          >        jsr report_error
                       >
58eb :                 >skip2472
                       >
                        
                                smbt 0
58eb : a9fe            >        lda #$ff-(1<<0)
58ed : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
58ef : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
58f1 : 48              >            pha         ;use stack to load status
58f2 : a9a5            >            lda #$a5     ;precharge accu
58f4 : 28              >            plp
                       >
58f5 : 8752            >        smb 0,zpt
                       >        tst_a $a5,0
58f7 : 08              >            php         ;save flags
58f8 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
58fa : f003            >        beq skip2478
                       >        trap            ;failed not equal (non zero)
58fc : 20c761          >        jsr report_error
                       >
58ff :                 >skip2478
                       >
58ff : 68              >            pla         ;load status
5900 : 48              >            pha
                       >            cmp_flag 0
5901 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5903 : f003            >        beq skip2481
                       >        trap            ;failed not equal (non zero)
5905 : 20c761          >        jsr report_error
                       >
5908 :                 >skip2481
                       >
5908 : 28              >            plp         ;restore status
                       >
5909 : a552            >        lda zpt
590b : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
590d : f003            >        beq skip2483
                       >        trap            ;failed not equal (non zero)
590f : 20c761          >        jsr report_error
                       >
5912 :                 >skip2483
                       >
5912 : a900            >        lda #0
5914 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
5916 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5918 : 48              >            pha         ;use stack to load status
5919 : a95a            >            lda #$5a     ;precharge accu
591b : 28              >            plp
                       >
591c : 8752            >        smb 0,zpt
                       >        tst_a $5a,$ff
591e : 08              >            php         ;save flags
591f : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
5921 : f003            >        beq skip2488
                       >        trap            ;failed not equal (non zero)
5923 : 20c761          >        jsr report_error
                       >
5926 :                 >skip2488
                       >
5926 : 68              >            pla         ;load status
5927 : 48              >            pha
                       >            cmp_flag $ff
5928 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
592a : f003            >        beq skip2491
                       >        trap            ;failed not equal (non zero)
592c : 20c761          >        jsr report_error
                       >
592f :                 >skip2491
                       >
592f : 28              >            plp         ;restore status
                       >
5930 : a552            >        lda zpt
5932 : c901            >        cmp #1<<0
                       >        trap_ne     ;wrong bits set or cleared
5934 : f003            >        beq skip2493
                       >        trap            ;failed not equal (non zero)
5936 : 20c761          >        jsr report_error
                       >
5939 :                 >skip2493
                       >
                        
                                smbt 1
5939 : a9fd            >        lda #$ff-(1<<1)
593b : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
593d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
593f : 48              >            pha         ;use stack to load status
5940 : a9a5            >            lda #$a5     ;precharge accu
5942 : 28              >            plp
                       >
5943 : 9752            >        smb 1,zpt
                       >        tst_a $a5,0
5945 : 08              >            php         ;save flags
5946 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
5948 : f003            >        beq skip2499
                       >        trap            ;failed not equal (non zero)
594a : 20c761          >        jsr report_error
                       >
594d :                 >skip2499
                       >
594d : 68              >            pla         ;load status
594e : 48              >            pha
                       >            cmp_flag 0
594f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5951 : f003            >        beq skip2502
                       >        trap            ;failed not equal (non zero)
5953 : 20c761          >        jsr report_error
                       >
5956 :                 >skip2502
                       >
5956 : 28              >            plp         ;restore status
                       >
5957 : a552            >        lda zpt
5959 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
595b : f003            >        beq skip2504
                       >        trap            ;failed not equal (non zero)
595d : 20c761          >        jsr report_error
                       >
5960 :                 >skip2504
                       >
5960 : a900            >        lda #0
5962 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
5964 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5966 : 48              >            pha         ;use stack to load status
5967 : a95a            >            lda #$5a     ;precharge accu
5969 : 28              >            plp
                       >
596a : 9752            >        smb 1,zpt
                       >        tst_a $5a,$ff
596c : 08              >            php         ;save flags
596d : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
596f : f003            >        beq skip2509
                       >        trap            ;failed not equal (non zero)
5971 : 20c761          >        jsr report_error
                       >
5974 :                 >skip2509
                       >
5974 : 68              >            pla         ;load status
5975 : 48              >            pha
                       >            cmp_flag $ff
5976 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5978 : f003            >        beq skip2512
                       >        trap            ;failed not equal (non zero)
597a : 20c761          >        jsr report_error
                       >
597d :                 >skip2512
                       >
597d : 28              >            plp         ;restore status
                       >
597e : a552            >        lda zpt
5980 : c902            >        cmp #1<<1
                       >        trap_ne     ;wrong bits set or cleared
5982 : f003            >        beq skip2514
                       >        trap            ;failed not equal (non zero)
5984 : 20c761          >        jsr report_error
                       >
5987 :                 >skip2514
                       >
                        
                                smbt 2
5987 : a9fb            >        lda #$ff-(1<<2)
5989 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
598b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
598d : 48              >            pha         ;use stack to load status
598e : a9a5            >            lda #$a5     ;precharge accu
5990 : 28              >            plp
                       >
5991 : a752            >        smb 2,zpt
                       >        tst_a $a5,0
5993 : 08              >            php         ;save flags
5994 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
5996 : f003            >        beq skip2520
                       >        trap            ;failed not equal (non zero)
5998 : 20c761          >        jsr report_error
                       >
599b :                 >skip2520
                       >
599b : 68              >            pla         ;load status
599c : 48              >            pha
                       >            cmp_flag 0
599d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
599f : f003            >        beq skip2523
                       >        trap            ;failed not equal (non zero)
59a1 : 20c761          >        jsr report_error
                       >
59a4 :                 >skip2523
                       >
59a4 : 28              >            plp         ;restore status
                       >
59a5 : a552            >        lda zpt
59a7 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
59a9 : f003            >        beq skip2525
                       >        trap            ;failed not equal (non zero)
59ab : 20c761          >        jsr report_error
                       >
59ae :                 >skip2525
                       >
59ae : a900            >        lda #0
59b0 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
59b2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
59b4 : 48              >            pha         ;use stack to load status
59b5 : a95a            >            lda #$5a     ;precharge accu
59b7 : 28              >            plp
                       >
59b8 : a752            >        smb 2,zpt
                       >        tst_a $5a,$ff
59ba : 08              >            php         ;save flags
59bb : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
59bd : f003            >        beq skip2530
                       >        trap            ;failed not equal (non zero)
59bf : 20c761          >        jsr report_error
                       >
59c2 :                 >skip2530
                       >
59c2 : 68              >            pla         ;load status
59c3 : 48              >            pha
                       >            cmp_flag $ff
59c4 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
59c6 : f003            >        beq skip2533
                       >        trap            ;failed not equal (non zero)
59c8 : 20c761          >        jsr report_error
                       >
59cb :                 >skip2533
                       >
59cb : 28              >            plp         ;restore status
                       >
59cc : a552            >        lda zpt
59ce : c904            >        cmp #1<<2
                       >        trap_ne     ;wrong bits set or cleared
59d0 : f003            >        beq skip2535
                       >        trap            ;failed not equal (non zero)
59d2 : 20c761          >        jsr report_error
                       >
59d5 :                 >skip2535
                       >
                        
                                smbt 3
59d5 : a9f7            >        lda #$ff-(1<<3)
59d7 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
59d9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
59db : 48              >            pha         ;use stack to load status
59dc : a9a5            >            lda #$a5     ;precharge accu
59de : 28              >            plp
                       >
59df : b752            >        smb 3,zpt
                       >        tst_a $a5,0
59e1 : 08              >            php         ;save flags
59e2 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
59e4 : f003            >        beq skip2541
                       >        trap            ;failed not equal (non zero)
59e6 : 20c761          >        jsr report_error
                       >
59e9 :                 >skip2541
                       >
59e9 : 68              >            pla         ;load status
59ea : 48              >            pha
                       >            cmp_flag 0
59eb : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
59ed : f003            >        beq skip2544
                       >        trap            ;failed not equal (non zero)
59ef : 20c761          >        jsr report_error
                       >
59f2 :                 >skip2544
                       >
59f2 : 28              >            plp         ;restore status
                       >
59f3 : a552            >        lda zpt
59f5 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
59f7 : f003            >        beq skip2546
                       >        trap            ;failed not equal (non zero)
59f9 : 20c761          >        jsr report_error
                       >
59fc :                 >skip2546
                       >
59fc : a900            >        lda #0
59fe : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
5a00 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5a02 : 48              >            pha         ;use stack to load status
5a03 : a95a            >            lda #$5a     ;precharge accu
5a05 : 28              >            plp
                       >
5a06 : b752            >        smb 3,zpt
                       >        tst_a $5a,$ff
5a08 : 08              >            php         ;save flags
5a09 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
5a0b : f003            >        beq skip2551
                       >        trap            ;failed not equal (non zero)
5a0d : 20c761          >        jsr report_error
                       >
5a10 :                 >skip2551
                       >
5a10 : 68              >            pla         ;load status
5a11 : 48              >            pha
                       >            cmp_flag $ff
5a12 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5a14 : f003            >        beq skip2554
                       >        trap            ;failed not equal (non zero)
5a16 : 20c761          >        jsr report_error
                       >
5a19 :                 >skip2554
                       >
5a19 : 28              >            plp         ;restore status
                       >
5a1a : a552            >        lda zpt
5a1c : c908            >        cmp #1<<3
                       >        trap_ne     ;wrong bits set or cleared
5a1e : f003            >        beq skip2556
                       >        trap            ;failed not equal (non zero)
5a20 : 20c761          >        jsr report_error
                       >
5a23 :                 >skip2556
                       >
                        
                                smbt 4
5a23 : a9ef            >        lda #$ff-(1<<4)
5a25 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
5a27 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5a29 : 48              >            pha         ;use stack to load status
5a2a : a9a5            >            lda #$a5     ;precharge accu
5a2c : 28              >            plp
                       >
5a2d : c752            >        smb 4,zpt
                       >        tst_a $a5,0
5a2f : 08              >            php         ;save flags
5a30 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
5a32 : f003            >        beq skip2562
                       >        trap            ;failed not equal (non zero)
5a34 : 20c761          >        jsr report_error
                       >
5a37 :                 >skip2562
                       >
5a37 : 68              >            pla         ;load status
5a38 : 48              >            pha
                       >            cmp_flag 0
5a39 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5a3b : f003            >        beq skip2565
                       >        trap            ;failed not equal (non zero)
5a3d : 20c761          >        jsr report_error
                       >
5a40 :                 >skip2565
                       >
5a40 : 28              >            plp         ;restore status
                       >
5a41 : a552            >        lda zpt
5a43 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
5a45 : f003            >        beq skip2567
                       >        trap            ;failed not equal (non zero)
5a47 : 20c761          >        jsr report_error
                       >
5a4a :                 >skip2567
                       >
5a4a : a900            >        lda #0
5a4c : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
5a4e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5a50 : 48              >            pha         ;use stack to load status
5a51 : a95a            >            lda #$5a     ;precharge accu
5a53 : 28              >            plp
                       >
5a54 : c752            >        smb 4,zpt
                       >        tst_a $5a,$ff
5a56 : 08              >            php         ;save flags
5a57 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
5a59 : f003            >        beq skip2572
                       >        trap            ;failed not equal (non zero)
5a5b : 20c761          >        jsr report_error
                       >
5a5e :                 >skip2572
                       >
5a5e : 68              >            pla         ;load status
5a5f : 48              >            pha
                       >            cmp_flag $ff
5a60 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5a62 : f003            >        beq skip2575
                       >        trap            ;failed not equal (non zero)
5a64 : 20c761          >        jsr report_error
                       >
5a67 :                 >skip2575
                       >
5a67 : 28              >            plp         ;restore status
                       >
5a68 : a552            >        lda zpt
5a6a : c910            >        cmp #1<<4
                       >        trap_ne     ;wrong bits set or cleared
5a6c : f003            >        beq skip2577
                       >        trap            ;failed not equal (non zero)
5a6e : 20c761          >        jsr report_error
                       >
5a71 :                 >skip2577
                       >
                        
                                smbt 5
5a71 : a9df            >        lda #$ff-(1<<5)
5a73 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
5a75 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5a77 : 48              >            pha         ;use stack to load status
5a78 : a9a5            >            lda #$a5     ;precharge accu
5a7a : 28              >            plp
                       >
5a7b : d752            >        smb 5,zpt
                       >        tst_a $a5,0
5a7d : 08              >            php         ;save flags
5a7e : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
5a80 : f003            >        beq skip2583
                       >        trap            ;failed not equal (non zero)
5a82 : 20c761          >        jsr report_error
                       >
5a85 :                 >skip2583
                       >
5a85 : 68              >            pla         ;load status
5a86 : 48              >            pha
                       >            cmp_flag 0
5a87 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5a89 : f003            >        beq skip2586
                       >        trap            ;failed not equal (non zero)
5a8b : 20c761          >        jsr report_error
                       >
5a8e :                 >skip2586
                       >
5a8e : 28              >            plp         ;restore status
                       >
5a8f : a552            >        lda zpt
5a91 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
5a93 : f003            >        beq skip2588
                       >        trap            ;failed not equal (non zero)
5a95 : 20c761          >        jsr report_error
                       >
5a98 :                 >skip2588
                       >
5a98 : a900            >        lda #0
5a9a : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
5a9c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5a9e : 48              >            pha         ;use stack to load status
5a9f : a95a            >            lda #$5a     ;precharge accu
5aa1 : 28              >            plp
                       >
5aa2 : d752            >        smb 5,zpt
                       >        tst_a $5a,$ff
5aa4 : 08              >            php         ;save flags
5aa5 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
5aa7 : f003            >        beq skip2593
                       >        trap            ;failed not equal (non zero)
5aa9 : 20c761          >        jsr report_error
                       >
5aac :                 >skip2593
                       >
5aac : 68              >            pla         ;load status
5aad : 48              >            pha
                       >            cmp_flag $ff
5aae : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5ab0 : f003            >        beq skip2596
                       >        trap            ;failed not equal (non zero)
5ab2 : 20c761          >        jsr report_error
                       >
5ab5 :                 >skip2596
                       >
5ab5 : 28              >            plp         ;restore status
                       >
5ab6 : a552            >        lda zpt
5ab8 : c920            >        cmp #1<<5
                       >        trap_ne     ;wrong bits set or cleared
5aba : f003            >        beq skip2598
                       >        trap            ;failed not equal (non zero)
5abc : 20c761          >        jsr report_error
                       >
5abf :                 >skip2598
                       >
                        
                                smbt 6
5abf : a9bf            >        lda #$ff-(1<<6)
5ac1 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
5ac3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5ac5 : 48              >            pha         ;use stack to load status
5ac6 : a9a5            >            lda #$a5     ;precharge accu
5ac8 : 28              >            plp
                       >
5ac9 : e752            >        smb 6,zpt
                       >        tst_a $a5,0
5acb : 08              >            php         ;save flags
5acc : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
5ace : f003            >        beq skip2604
                       >        trap            ;failed not equal (non zero)
5ad0 : 20c761          >        jsr report_error
                       >
5ad3 :                 >skip2604
                       >
5ad3 : 68              >            pla         ;load status
5ad4 : 48              >            pha
                       >            cmp_flag 0
5ad5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5ad7 : f003            >        beq skip2607
                       >        trap            ;failed not equal (non zero)
5ad9 : 20c761          >        jsr report_error
                       >
5adc :                 >skip2607
                       >
5adc : 28              >            plp         ;restore status
                       >
5add : a552            >        lda zpt
5adf : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
5ae1 : f003            >        beq skip2609
                       >        trap            ;failed not equal (non zero)
5ae3 : 20c761          >        jsr report_error
                       >
5ae6 :                 >skip2609
                       >
5ae6 : a900            >        lda #0
5ae8 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
5aea : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5aec : 48              >            pha         ;use stack to load status
5aed : a95a            >            lda #$5a     ;precharge accu
5aef : 28              >            plp
                       >
5af0 : e752            >        smb 6,zpt
                       >        tst_a $5a,$ff
5af2 : 08              >            php         ;save flags
5af3 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
5af5 : f003            >        beq skip2614
                       >        trap            ;failed not equal (non zero)
5af7 : 20c761          >        jsr report_error
                       >
5afa :                 >skip2614
                       >
5afa : 68              >            pla         ;load status
5afb : 48              >            pha
                       >            cmp_flag $ff
5afc : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5afe : f003            >        beq skip2617
                       >        trap            ;failed not equal (non zero)
5b00 : 20c761          >        jsr report_error
                       >
5b03 :                 >skip2617
                       >
5b03 : 28              >            plp         ;restore status
                       >
5b04 : a552            >        lda zpt
5b06 : c940            >        cmp #1<<6
                       >        trap_ne     ;wrong bits set or cleared
5b08 : f003            >        beq skip2619
                       >        trap            ;failed not equal (non zero)
5b0a : 20c761          >        jsr report_error
                       >
5b0d :                 >skip2619
                       >
                        
                                smbt 7
5b0d : a97f            >        lda #$ff-(1<<7)
5b0f : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
5b11 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5b13 : 48              >            pha         ;use stack to load status
5b14 : a9a5            >            lda #$a5     ;precharge accu
5b16 : 28              >            plp
                       >
5b17 : f752            >        smb 7,zpt
                       >        tst_a $a5,0
5b19 : 08              >            php         ;save flags
5b1a : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
5b1c : f003            >        beq skip2625
                       >        trap            ;failed not equal (non zero)
5b1e : 20c761          >        jsr report_error
                       >
5b21 :                 >skip2625
                       >
5b21 : 68              >            pla         ;load status
5b22 : 48              >            pha
                       >            cmp_flag 0
5b23 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5b25 : f003            >        beq skip2628
                       >        trap            ;failed not equal (non zero)
5b27 : 20c761          >        jsr report_error
                       >
5b2a :                 >skip2628
                       >
5b2a : 28              >            plp         ;restore status
                       >
5b2b : a552            >        lda zpt
5b2d : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
5b2f : f003            >        beq skip2630
                       >        trap            ;failed not equal (non zero)
5b31 : 20c761          >        jsr report_error
                       >
5b34 :                 >skip2630
                       >
5b34 : a900            >        lda #0
5b36 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
5b38 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5b3a : 48              >            pha         ;use stack to load status
5b3b : a95a            >            lda #$5a     ;precharge accu
5b3d : 28              >            plp
                       >
5b3e : f752            >        smb 7,zpt
                       >        tst_a $5a,$ff
5b40 : 08              >            php         ;save flags
5b41 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
5b43 : f003            >        beq skip2635
                       >        trap            ;failed not equal (non zero)
5b45 : 20c761          >        jsr report_error
                       >
5b48 :                 >skip2635
                       >
5b48 : 68              >            pla         ;load status
5b49 : 48              >            pha
                       >            cmp_flag $ff
5b4a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5b4c : f003            >        beq skip2638
                       >        trap            ;failed not equal (non zero)
5b4e : 20c761          >        jsr report_error
                       >
5b51 :                 >skip2638
                       >
5b51 : 28              >            plp         ;restore status
                       >
5b52 : a552            >        lda zpt
5b54 : c980            >        cmp #1<<7
                       >        trap_ne     ;wrong bits set or cleared
5b56 : f003            >        beq skip2640
                       >        trap            ;failed not equal (non zero)
5b58 : 20c761          >        jsr report_error
                       >
5b5b :                 >skip2640
                       >
                        
5b5b : e0ba                     cpx #$ba
                                trap_ne     ;x altered during test
5b5d : f003            >        beq skip2642
                       >        trap            ;failed not equal (non zero)
5b5f : 20c761          >        jsr report_error
                       >
5b62 :                 >skip2642
                        
5b62 : c0d0                     cpy #$d0
                                trap_ne     ;y altered during test
5b64 : f003            >        beq skip2644
                       >        trap            ;failed not equal (non zero)
5b66 : 20c761          >        jsr report_error
                       >
5b69 :                 >skip2644
                        
5b69 : ba                       tsx
5b6a : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
5b6c : f003            >        beq skip2646
                       >        trap            ;failed not equal (non zero)
5b6e : 20c761          >        jsr report_error
                       >
5b71 :                 >skip2646
                        
                                next_test
5b71 : ad0232          >            lda test_case   ;previous test
5b74 : c910            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
5b76 : f003            >        beq skip2649
                       >        trap            ;failed not equal (non zero)
5b78 : 20c761          >        jsr report_error
                       >
5b7b :                 >skip2649
                       >
0011 =                 >test_num = test_num + 1
5b7b : a911            >            lda #test_num   ;*** next tests' number
5b7d : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                            endif        
                                 
                        ; testing CMP - (zp)         
5b80 : a2de                     ldx #$de    ;protect x & y
5b82 : a0ad                     ldy #$ad
                                set_a $80,0
                       >            load_flag 0
5b84 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5b86 : 48              >            pha         ;use stack to load status
5b87 : a980            >            lda #$80     ;precharge accu
5b89 : 28              >            plp
                        
5b8a : d272                     cmp (ind1+8)
                                tst_a $80,fc
5b8c : 08              >            php         ;save flags
5b8d : c980            >            cmp #$80     ;test result
                       >            trap_ne
5b8f : f003            >        beq skip2654
                       >        trap            ;failed not equal (non zero)
5b91 : 20c761          >        jsr report_error
                       >
5b94 :                 >skip2654
                       >
5b94 : 68              >            pla         ;load status
5b95 : 48              >            pha
                       >            cmp_flag fc
5b96 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5b98 : f003            >        beq skip2657
                       >        trap            ;failed not equal (non zero)
5b9a : 20c761          >        jsr report_error
                       >
5b9d :                 >skip2657
                       >
5b9d : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
5b9e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5ba0 : 48              >            pha         ;use stack to load status
5ba1 : a97f            >            lda #$7f     ;precharge accu
5ba3 : 28              >            plp
                        
5ba4 : d272                     cmp (ind1+8)
                                tst_a $7f,fzc
5ba6 : 08              >            php         ;save flags
5ba7 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
5ba9 : f003            >        beq skip2662
                       >        trap            ;failed not equal (non zero)
5bab : 20c761          >        jsr report_error
                       >
5bae :                 >skip2662
                       >
5bae : 68              >            pla         ;load status
5baf : 48              >            pha
                       >            cmp_flag fzc
5bb0 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5bb2 : f003            >        beq skip2665
                       >        trap            ;failed not equal (non zero)
5bb4 : 20c761          >        jsr report_error
                       >
5bb7 :                 >skip2665
                       >
5bb7 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
5bb8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5bba : 48              >            pha         ;use stack to load status
5bbb : a97e            >            lda #$7e     ;precharge accu
5bbd : 28              >            plp
                        
5bbe : d272                     cmp (ind1+8)
                                tst_a $7e,fn
5bc0 : 08              >            php         ;save flags
5bc1 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
5bc3 : f003            >        beq skip2670
                       >        trap            ;failed not equal (non zero)
5bc5 : 20c761          >        jsr report_error
                       >
5bc8 :                 >skip2670
                       >
5bc8 : 68              >            pla         ;load status
5bc9 : 48              >            pha
                       >            cmp_flag fn
5bca : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5bcc : f003            >        beq skip2673
                       >        trap            ;failed not equal (non zero)
5bce : 20c761          >        jsr report_error
                       >
5bd1 :                 >skip2673
                       >
5bd1 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
5bd2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5bd4 : 48              >            pha         ;use stack to load status
5bd5 : a980            >            lda #$80     ;precharge accu
5bd7 : 28              >            plp
                        
5bd8 : d272                     cmp (ind1+8)
                                tst_a $80,~fnz
5bda : 08              >            php         ;save flags
5bdb : c980            >            cmp #$80     ;test result
                       >            trap_ne
5bdd : f003            >        beq skip2678
                       >        trap            ;failed not equal (non zero)
5bdf : 20c761          >        jsr report_error
                       >
5be2 :                 >skip2678
                       >
5be2 : 68              >            pla         ;load status
5be3 : 48              >            pha
                       >            cmp_flag ~fnz
5be4 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5be6 : f003            >        beq skip2681
                       >        trap            ;failed not equal (non zero)
5be8 : 20c761          >        jsr report_error
                       >
5beb :                 >skip2681
                       >
5beb : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
5bec : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5bee : 48              >            pha         ;use stack to load status
5bef : a97f            >            lda #$7f     ;precharge accu
5bf1 : 28              >            plp
                        
5bf2 : d272                     cmp (ind1+8)
                                tst_a $7f,~fn
5bf4 : 08              >            php         ;save flags
5bf5 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
5bf7 : f003            >        beq skip2686
                       >        trap            ;failed not equal (non zero)
5bf9 : 20c761          >        jsr report_error
                       >
5bfc :                 >skip2686
                       >
5bfc : 68              >            pla         ;load status
5bfd : 48              >            pha
                       >            cmp_flag ~fn
5bfe : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5c00 : f003            >        beq skip2689
                       >        trap            ;failed not equal (non zero)
5c02 : 20c761          >        jsr report_error
                       >
5c05 :                 >skip2689
                       >
5c05 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
5c06 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5c08 : 48              >            pha         ;use stack to load status
5c09 : a97e            >            lda #$7e     ;precharge accu
5c0b : 28              >            plp
                        
5c0c : d272                     cmp (ind1+8)
                                tst_a $7e,~fzc
5c0e : 08              >            php         ;save flags
5c0f : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
5c11 : f003            >        beq skip2694
                       >        trap            ;failed not equal (non zero)
5c13 : 20c761          >        jsr report_error
                       >
5c16 :                 >skip2694
                       >
5c16 : 68              >            pla         ;load status
5c17 : 48              >            pha
                       >            cmp_flag ~fzc
5c18 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5c1a : f003            >        beq skip2697
                       >        trap            ;failed not equal (non zero)
5c1c : 20c761          >        jsr report_error
                       >
5c1f :                 >skip2697
                       >
5c1f : 28              >            plp         ;restore status
                        
5c20 : e0de                     cpx #$de
                                trap_ne     ;x altered during test
5c22 : f003            >        beq skip2699
                       >        trap            ;failed not equal (non zero)
5c24 : 20c761          >        jsr report_error
                       >
5c27 :                 >skip2699
                        
5c27 : c0ad                     cpy #$ad
                                trap_ne     ;y altered during test 
5c29 : f003            >        beq skip2701
                       >        trap            ;failed not equal (non zero)
5c2b : 20c761          >        jsr report_error
                       >
5c2e :                 >skip2701
                        
5c2e : ba                       tsx
5c2f : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
5c31 : f003            >        beq skip2703
                       >        trap            ;failed not equal (non zero)
5c33 : 20c761          >        jsr report_error
                       >
5c36 :                 >skip2703
                        
                                next_test
5c36 : ad0232          >            lda test_case   ;previous test
5c39 : c911            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
5c3b : f003            >        beq skip2706
                       >        trap            ;failed not equal (non zero)
5c3d : 20c761          >        jsr report_error
                       >
5c40 :                 >skip2706
                       >
0012 =                 >test_num = test_num + 1
5c40 : a912            >            lda #test_num   ;*** next tests' number
5c42 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing logical instructions - AND EOR ORA (zp)
5c45 : a242                     ldx #$42    ;protect x & y
                        
5c47 : a000                     ldy #0      ;AND
5c49 : a580                     lda indAN   ;set indirect address
5c4b : 8552                     sta zpt
5c4d : a581                     lda indAN+1
5c4f : 8553                     sta zpt+1
5c51 :                  tand1
                                set_ay  absANa,0
                       >            load_flag 0
5c51 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5c53 : 48              >            pha         ;use stack to load status
5c54 : b95332          >            lda absANa,y    ;precharge accu
5c57 : 28              >            plp
                        
5c58 : 3252                     and (zpt)
                                tst_ay  absrlo,absflo,0
5c5a : 08              >            php         ;save flags
5c5b : d95b32          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
5c5e : f003            >        beq skip2711
                       >        trap            ;failed not equal (non zero)
5c60 : 20c761          >        jsr report_error
                       >
5c63 :                 >skip2711
                       >
5c63 : 68              >            pla         ;load status
                       >            eor_flag 0
5c64 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
5c66 : d95f32          >            cmp absflo,y    ;test flags
                       >            trap_ne
5c69 : f003            >        beq skip2714
                       >        trap            ;failed not equal (non zero)
5c6b : 20c761          >        jsr report_error
                       >
5c6e :                 >skip2714
                       >
                        
5c6e : e652                     inc zpt
5c70 : c8                       iny
5c71 : c004                     cpy #4
5c73 : d0dc                     bne tand1
5c75 : 88                       dey
5c76 : c652                     dec zpt
5c78 :                  tand2
                                set_ay  absANa,$ff
                       >            load_flag $ff
5c78 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5c7a : 48              >            pha         ;use stack to load status
5c7b : b95332          >            lda absANa,y    ;precharge accu
5c7e : 28              >            plp
                        
5c7f : 3252                     and (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
5c81 : 08              >            php         ;save flags
5c82 : d95b32          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
5c85 : f003            >        beq skip2719
                       >        trap            ;failed not equal (non zero)
5c87 : 20c761          >        jsr report_error
                       >
5c8a :                 >skip2719
                       >
5c8a : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
5c8b : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
5c8d : d95f32          >            cmp absflo,y    ;test flags
                       >            trap_ne
5c90 : f003            >        beq skip2722
                       >        trap            ;failed not equal (non zero)
5c92 : 20c761          >        jsr report_error
                       >
5c95 :                 >skip2722
                       >
                        
5c95 : c652                     dec zpt
5c97 : 88                       dey
5c98 : 10de                     bpl tand2
                        
5c9a : a000                     ldy #0      ;EOR
5c9c : a588                     lda indEO   ;set indirect address
5c9e : 8552                     sta zpt
5ca0 : a589                     lda indEO+1
5ca2 : 8553                     sta zpt+1
5ca4 :                  teor1
                                set_ay  absEOa,0
                       >            load_flag 0
5ca4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5ca6 : 48              >            pha         ;use stack to load status
5ca7 : b95732          >            lda absEOa,y    ;precharge accu
5caa : 28              >            plp
                        
5cab : 5252                     eor (zpt)
                                tst_ay  absrlo,absflo,0
5cad : 08              >            php         ;save flags
5cae : d95b32          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
5cb1 : f003            >        beq skip2727
                       >        trap            ;failed not equal (non zero)
5cb3 : 20c761          >        jsr report_error
                       >
5cb6 :                 >skip2727
                       >
5cb6 : 68              >            pla         ;load status
                       >            eor_flag 0
5cb7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
5cb9 : d95f32          >            cmp absflo,y    ;test flags
                       >            trap_ne
5cbc : f003            >        beq skip2730
                       >        trap            ;failed not equal (non zero)
5cbe : 20c761          >        jsr report_error
                       >
5cc1 :                 >skip2730
                       >
                        
5cc1 : e652                     inc zpt
5cc3 : c8                       iny
5cc4 : c004                     cpy #4
5cc6 : d0dc                     bne teor1
5cc8 : 88                       dey
5cc9 : c652                     dec zpt
5ccb :                  teor2
                                set_ay  absEOa,$ff
                       >            load_flag $ff
5ccb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5ccd : 48              >            pha         ;use stack to load status
5cce : b95732          >            lda absEOa,y    ;precharge accu
5cd1 : 28              >            plp
                        
5cd2 : 5252                     eor (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
5cd4 : 08              >            php         ;save flags
5cd5 : d95b32          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
5cd8 : f003            >        beq skip2735
                       >        trap            ;failed not equal (non zero)
5cda : 20c761          >        jsr report_error
                       >
5cdd :                 >skip2735
                       >
5cdd : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
5cde : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
5ce0 : d95f32          >            cmp absflo,y    ;test flags
                       >            trap_ne
5ce3 : f003            >        beq skip2738
                       >        trap            ;failed not equal (non zero)
5ce5 : 20c761          >        jsr report_error
                       >
5ce8 :                 >skip2738
                       >
                        
5ce8 : c652                     dec zpt
5cea : 88                       dey
5ceb : 10de                     bpl teor2
                        
5ced : a000                     ldy #0      ;ORA
5cef : a590                     lda indOR   ;set indirect address
5cf1 : 8552                     sta zpt
5cf3 : a591                     lda indOR+1
5cf5 : 8553                     sta zpt+1
5cf7 :                  tora1
                                set_ay  absORa,0
                       >            load_flag 0
5cf7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5cf9 : 48              >            pha         ;use stack to load status
5cfa : b94f32          >            lda absORa,y    ;precharge accu
5cfd : 28              >            plp
                        
5cfe : 1252                     ora (zpt)
                                tst_ay  absrlo,absflo,0
5d00 : 08              >            php         ;save flags
5d01 : d95b32          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
5d04 : f003            >        beq skip2743
                       >        trap            ;failed not equal (non zero)
5d06 : 20c761          >        jsr report_error
                       >
5d09 :                 >skip2743
                       >
5d09 : 68              >            pla         ;load status
                       >            eor_flag 0
5d0a : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
5d0c : d95f32          >            cmp absflo,y    ;test flags
                       >            trap_ne
5d0f : f003            >        beq skip2746
                       >        trap            ;failed not equal (non zero)
5d11 : 20c761          >        jsr report_error
                       >
5d14 :                 >skip2746
                       >
                        
5d14 : e652                     inc zpt
5d16 : c8                       iny
5d17 : c004                     cpy #4
5d19 : d0dc                     bne tora1
5d1b : 88                       dey
5d1c : c652                     dec zpt
5d1e :                  tora2
                                set_ay  absORa,$ff
                       >            load_flag $ff
5d1e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5d20 : 48              >            pha         ;use stack to load status
5d21 : b94f32          >            lda absORa,y    ;precharge accu
5d24 : 28              >            plp
                        
5d25 : 1252                     ora (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
5d27 : 08              >            php         ;save flags
5d28 : d95b32          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
5d2b : f003            >        beq skip2751
                       >        trap            ;failed not equal (non zero)
5d2d : 20c761          >        jsr report_error
                       >
5d30 :                 >skip2751
                       >
5d30 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
5d31 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
5d33 : d95f32          >            cmp absflo,y    ;test flags
                       >            trap_ne
5d36 : f003            >        beq skip2754
                       >        trap            ;failed not equal (non zero)
5d38 : 20c761          >        jsr report_error
                       >
5d3b :                 >skip2754
                       >
                        
5d3b : c652                     dec zpt
5d3d : 88                       dey
5d3e : 10de                     bpl tora2
                        
5d40 : e042                     cpx #$42
                                trap_ne     ;x altered during test
5d42 : f003            >        beq skip2756
                       >        trap            ;failed not equal (non zero)
5d44 : 20c761          >        jsr report_error
                       >
5d47 :                 >skip2756
                        
5d47 : ba                       tsx
5d48 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
5d4a : f003            >        beq skip2758
                       >        trap            ;failed not equal (non zero)
5d4c : 20c761          >        jsr report_error
                       >
5d4f :                 >skip2758
                        
                                next_test
5d4f : ad0232          >            lda test_case   ;previous test
5d52 : c912            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
5d54 : f003            >        beq skip2761
                       >        trap            ;failed not equal (non zero)
5d56 : 20c761          >        jsr report_error
                       >
5d59 :                 >skip2761
                       >
0013 =                 >test_num = test_num + 1
5d59 : a913            >            lda #test_num   ;*** next tests' number
5d5b : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                            if I_flag = 3
5d5e : 58                       cli
                            endif                
                        
                        ; full binary add/subtract test - (zp) only
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
5d5f : d8                       cld
5d60 : a254                     ldx #ad2        ;for indexed test
5d62 : a0ff                     ldy #$ff        ;max range
5d64 : a900                     lda #0          ;start with adding zeroes & no carry
5d66 : 8552                     sta adfc        ;carry in - for diag
5d68 : 8553                     sta ad1         ;operand 1 - accumulator
5d6a : 8554                     sta ad2         ;operand 2 - memory or immediate
5d6c : 8d0532                   sta ada2        ;non zp
5d6f : 8555                     sta adrl        ;expected result bits 0-7
5d71 : 8556                     sta adrh        ;expected result bit 8 (carry out)
5d73 : a9ff                     lda #$ff        ;complemented operand 2 for subtract
5d75 : 8558                     sta sb2
5d77 : 8d0632                   sta sba2        ;non zp
5d7a : a902                     lda #2          ;expected Z-flag
5d7c : 8557                     sta adrf
5d7e : 18               tadd    clc             ;test with carry clear
5d7f : 207960                   jsr chkadd
5d82 : e652                     inc adfc        ;now with carry
5d84 : e655                     inc adrl        ;result +1
5d86 : 08                       php             ;save N & Z from low result
5d87 : 08                       php
5d88 : 68                       pla             ;accu holds expected flags
5d89 : 2982                     and #$82        ;mask N & Z
5d8b : 28                       plp
5d8c : d002                     bne tadd1
5d8e : e656                     inc adrh        ;result bit 8 - carry
5d90 : 0556             tadd1   ora adrh        ;merge C to expected flags
5d92 : 8557                     sta adrf        ;save expected flags except overflow
5d94 : 38                       sec             ;test with carry set
5d95 : 207960                   jsr chkadd
5d98 : c652                     dec adfc        ;same for operand +1 but no carry
5d9a : e653                     inc ad1
5d9c : d0e0                     bne tadd        ;iterate op1
5d9e : a900                     lda #0          ;preset result to op2 when op1 = 0
5da0 : 8556                     sta adrh
5da2 : ee0532                   inc ada2
5da5 : e654                     inc ad2
5da7 : 08                       php             ;save NZ as operand 2 becomes the new result
5da8 : 68                       pla
5da9 : 2982                     and #$82        ;mask N00000Z0
5dab : 8557                     sta adrf        ;no need to check carry as we are adding to 0
5dad : c658                     dec sb2         ;complement subtract operand 2
5daf : ce0632                   dec sba2
5db2 : a554                     lda ad2         
5db4 : 8555                     sta adrl
5db6 : d0c6                     bne tadd        ;iterate op2
                        
5db8 : e054                     cpx #ad2
                                trap_ne         ;x altered during test
5dba : f003            >        beq skip2763
                       >        trap            ;failed not equal (non zero)
5dbc : 20c761          >        jsr report_error
                       >
5dbf :                 >skip2763
                        
5dbf : c0ff                     cpy #$ff
                                trap_ne         ;y altered during test 
5dc1 : f003            >        beq skip2765
                       >        trap            ;failed not equal (non zero)
5dc3 : 20c761          >        jsr report_error
                       >
5dc6 :                 >skip2765
                        
5dc6 : ba                       tsx
5dc7 : e0ff                     cpx #$ff
                                trap_ne         ;sp push/pop mismatch
5dc9 : f003            >        beq skip2767
                       >        trap            ;failed not equal (non zero)
5dcb : 20c761          >        jsr report_error
                       >
5dce :                 >skip2767
                        
                                next_test
5dce : ad0232          >            lda test_case   ;previous test
5dd1 : c913            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
5dd3 : f003            >        beq skip2770
                       >        trap            ;failed not equal (non zero)
5dd5 : 20c761          >        jsr report_error
                       >
5dd8 :                 >skip2770
                       >
0014 =                 >test_num = test_num + 1
5dd8 : a914            >            lda #test_num   ;*** next tests' number
5dda : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, the V flag is ignored
                        ;   although V is declared as beeing valid on the 65C02 it has absolutely
                        ;   no use in BCD math. No sign = no overflow!
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
5ddd : f8                       sed 
5dde : a254                     ldx #ad2        ;for indexed test
5de0 : a0ff                     ldy #$ff        ;max range
5de2 : a999                     lda #$99        ;start with adding 99 to 99 with carry
5de4 : 8553                     sta ad1         ;operand 1 - accumulator
5de6 : 8554                     sta ad2         ;operand 2 - memory or immediate
5de8 : 8d0532                   sta ada2        ;non zp
5deb : 8555                     sta adrl        ;expected result bits 0-7
5ded : a901                     lda #1          ;set carry in & out
5def : 8552                     sta adfc        ;carry in - for diag
5df1 : 8556                     sta adrh        ;expected result bit 8 (carry out)
5df3 : a981                     lda #$81        ;set N & C (99 + 99 + C = 99 + C)
5df5 : 8557                     sta adrf
5df7 : a900                     lda #0          ;complemented operand 2 for subtract
5df9 : 8558                     sta sb2
5dfb : 8d0632                   sta sba2        ;non zp
5dfe : 38               tdad    sec             ;test with carry set
5dff : 20b65e                   jsr chkdad
5e02 : c652                     dec adfc        ;now with carry clear
5e04 : a555                     lda adrl        ;decimal adjust result
5e06 : d008                     bne tdad1       ;skip clear carry & preset result 99 (9A-1)
5e08 : c656                     dec adrh
5e0a : a999                     lda #$99
5e0c : 8555                     sta adrl
5e0e : d012                     bne tdad3
5e10 : 290f             tdad1   and #$f         ;lower nibble mask
5e12 : d00c                     bne tdad2       ;no decimal adjust needed
5e14 : c655                     dec adrl        ;decimal adjust (?0-6)
5e16 : c655                     dec adrl
5e18 : c655                     dec adrl
5e1a : c655                     dec adrl
5e1c : c655                     dec adrl
5e1e : c655                     dec adrl
5e20 : c655             tdad2   dec adrl        ;result -1
5e22 : 08               tdad3   php             ;save valid flags
5e23 : 68                       pla
5e24 : 2982                     and #$82        ;N-----Z-
5e26 : 0556                     ora adrh        ;N-----ZC
5e28 : 8557                     sta adrf
5e2a : 18                       clc             ;test with carry clear
5e2b : 20b65e                   jsr chkdad
5e2e : e652                     inc adfc        ;same for operand -1 but with carry
5e30 : a553                     lda ad1         ;decimal adjust operand 1
5e32 : f015                     beq tdad5       ;iterate operand 2
5e34 : 290f                     and #$f         ;lower nibble mask
5e36 : d00c                     bne tdad4       ;skip decimal adjust
5e38 : c653                     dec ad1         ;decimal adjust (?0-6)
5e3a : c653                     dec ad1
5e3c : c653                     dec ad1
5e3e : c653                     dec ad1
5e40 : c653                     dec ad1
5e42 : c653                     dec ad1
5e44 : c653             tdad4   dec ad1         ;operand 1 -1
5e46 : 4cfe5d                   jmp tdad        ;iterate op1
                        
5e49 : a999             tdad5   lda #$99        ;precharge op1 max
5e4b : 8553                     sta ad1
5e4d : a554                     lda ad2         ;decimal adjust operand 2
5e4f : f039                     beq tdad7       ;end of iteration
5e51 : 290f                     and #$f         ;lower nibble mask
5e53 : d018                     bne tdad6       ;skip decimal adjust
5e55 : c654                     dec ad2         ;decimal adjust (?0-6)
5e57 : c654                     dec ad2
5e59 : c654                     dec ad2
5e5b : c654                     dec ad2
5e5d : c654                     dec ad2
5e5f : c654                     dec ad2
5e61 : e658                     inc sb2         ;complemented decimal adjust for subtract (?9+6)
5e63 : e658                     inc sb2
5e65 : e658                     inc sb2
5e67 : e658                     inc sb2
5e69 : e658                     inc sb2
5e6b : e658                     inc sb2
5e6d : c654             tdad6   dec ad2         ;operand 2 -1
5e6f : e658                     inc sb2         ;complemented operand for subtract
5e71 : a558                     lda sb2
5e73 : 8d0632                   sta sba2        ;copy as non zp operand
5e76 : a554                     lda ad2
5e78 : 8d0532                   sta ada2        ;copy as non zp operand
5e7b : 8555                     sta adrl        ;new result since op1+carry=00+carry +op2=op2
5e7d : 08                       php             ;save flags
5e7e : 68                       pla
5e7f : 2982                     and #$82        ;N-----Z-
5e81 : 0901                     ora #1          ;N-----ZC
5e83 : 8557                     sta adrf
5e85 : e656                     inc adrh        ;result carry
5e87 : 4cfe5d                   jmp tdad        ;iterate op2
                        
5e8a : e054             tdad7   cpx #ad2
                                trap_ne         ;x altered during test
5e8c : f003            >        beq skip2772
                       >        trap            ;failed not equal (non zero)
5e8e : 20c761          >        jsr report_error
                       >
5e91 :                 >skip2772
                        
5e91 : c0ff                     cpy #$ff
                                trap_ne         ;y altered during test 
5e93 : f003            >        beq skip2774
                       >        trap            ;failed not equal (non zero)
5e95 : 20c761          >        jsr report_error
                       >
5e98 :                 >skip2774
                        
5e98 : ba                       tsx
5e99 : e0ff                     cpx #$ff
                                trap_ne         ;sp push/pop mismatch
5e9b : f003            >        beq skip2776
                       >        trap            ;failed not equal (non zero)
5e9d : 20c761          >        jsr report_error
                       >
5ea0 :                 >skip2776
                        
5ea0 : d8                       cld
                        
5ea1 : ad0232                   lda test_case
5ea4 : c914                     cmp #test_num
                                trap_ne         ;previous test is out of sequence
5ea6 : f003            >        beq skip2778
                       >        trap            ;failed not equal (non zero)
5ea8 : 20c761          >        jsr report_error
                       >
5eab :                 >skip2778
                        
5eab : a9f0                     lda #$f0        ;mark opcode testing complete
5ead : 8d0232                   sta test_case
                        
                        ; final RAM integrity test
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                                check_ram
                       >            ;RAM check disabled - RAM size not set
                        
                        ; *** DEBUG INFO ***
                        ; to debug checksum errors uncomment check_ram in the next_test macro to 
                        ; narrow down the responsible opcode.
                        ; may give false errors when monitor, OS or other background activity is
                        ; allowed during previous tests.
                        
                        
                        ; S U C C E S S ************************************************       
                        ; -------------       
                                success         ;if you get here everything went well
5eb0 : 209062          >        jsr report_success
                        
                        ; -------------       
                        ; S U C C E S S ************************************************       
5eb3 : 4c0034                   jmp start       ;run again      
                        
                        ; core subroutine of the decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, V flag is ignored
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
5eb6 :                  chkdad
                        ; decimal ADC / SBC zp
5eb6 : 08                       php             ;save carry for subtract
5eb7 : a553                     lda ad1
5eb9 : 6554                     adc ad2         ;perform add
5ebb : 08                       php          
5ebc : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5ebe : f003            >        beq skip2782
                       >        trap            ;failed not equal (non zero)
5ec0 : 20c761          >        jsr report_error
                       >
5ec3 :                 >skip2782
                        
5ec3 : 68                       pla             ;check flags
5ec4 : 2983                     and #$83        ;mask N-----ZC
5ec6 : c557                     cmp adrf
                                trap_ne         ;bad flags
5ec8 : f003            >        beq skip2784
                       >        trap            ;failed not equal (non zero)
5eca : 20c761          >        jsr report_error
                       >
5ecd :                 >skip2784
                        
5ecd : 28                       plp
5ece : 08                       php             ;save carry for next add
5ecf : a553                     lda ad1
5ed1 : e558                     sbc sb2         ;perform subtract
5ed3 : 08                       php          
5ed4 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5ed6 : f003            >        beq skip2786
                       >        trap            ;failed not equal (non zero)
5ed8 : 20c761          >        jsr report_error
                       >
5edb :                 >skip2786
                        
5edb : 68                       pla             ;check flags
5edc : 2983                     and #$83        ;mask N-----ZC
5ede : c557                     cmp adrf
                                trap_ne         ;bad flags
5ee0 : f003            >        beq skip2788
                       >        trap            ;failed not equal (non zero)
5ee2 : 20c761          >        jsr report_error
                       >
5ee5 :                 >skip2788
                        
5ee5 : 28                       plp
                        ; decimal ADC / SBC abs
5ee6 : 08                       php             ;save carry for subtract
5ee7 : a553                     lda ad1
5ee9 : 6d0532                   adc ada2        ;perform add
5eec : 08                       php          
5eed : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5eef : f003            >        beq skip2790
                       >        trap            ;failed not equal (non zero)
5ef1 : 20c761          >        jsr report_error
                       >
5ef4 :                 >skip2790
                        
5ef4 : 68                       pla             ;check flags
5ef5 : 2983                     and #$83        ;mask N-----ZC
5ef7 : c557                     cmp adrf
                                trap_ne         ;bad flags
5ef9 : f003            >        beq skip2792
                       >        trap            ;failed not equal (non zero)
5efb : 20c761          >        jsr report_error
                       >
5efe :                 >skip2792
                        
5efe : 28                       plp
5eff : 08                       php             ;save carry for next add
5f00 : a553                     lda ad1
5f02 : ed0632                   sbc sba2        ;perform subtract
5f05 : 08                       php          
5f06 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5f08 : f003            >        beq skip2794
                       >        trap            ;failed not equal (non zero)
5f0a : 20c761          >        jsr report_error
                       >
5f0d :                 >skip2794
                        
5f0d : 68                       pla             ;check flags
5f0e : 2983                     and #$83        ;mask N-----ZC
5f10 : c557                     cmp adrf
                                trap_ne         ;bad flags
5f12 : f003            >        beq skip2796
                       >        trap            ;failed not equal (non zero)
5f14 : 20c761          >        jsr report_error
                       >
5f17 :                 >skip2796
                        
5f17 : 28                       plp
                        ; decimal ADC / SBC #
5f18 : 08                       php             ;save carry for subtract
5f19 : a554                     lda ad2
5f1b : 8d0b32                   sta ex_adci+1   ;set ADC # operand
5f1e : a553                     lda ad1
5f20 : 200a32                   jsr ex_adci     ;execute ADC # in RAM
5f23 : 08                       php          
5f24 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5f26 : f003            >        beq skip2798
                       >        trap            ;failed not equal (non zero)
5f28 : 20c761          >        jsr report_error
                       >
5f2b :                 >skip2798
                        
5f2b : 68                       pla             ;check flags
5f2c : 2983                     and #$83        ;mask N-----ZC
5f2e : c557                     cmp adrf
                                trap_ne         ;bad flags
5f30 : f003            >        beq skip2800
                       >        trap            ;failed not equal (non zero)
5f32 : 20c761          >        jsr report_error
                       >
5f35 :                 >skip2800
                        
5f35 : 28                       plp
5f36 : 08                       php             ;save carry for next add
5f37 : a558                     lda sb2
5f39 : 8d0e32                   sta ex_sbci+1   ;set SBC # operand
5f3c : a553                     lda ad1
5f3e : 200d32                   jsr ex_sbci     ;execute SBC # in RAM
5f41 : 08                       php          
5f42 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5f44 : f003            >        beq skip2802
                       >        trap            ;failed not equal (non zero)
5f46 : 20c761          >        jsr report_error
                       >
5f49 :                 >skip2802
                        
5f49 : 68                       pla             ;check flags
5f4a : 2983                     and #$83        ;mask N-----ZC
5f4c : c557                     cmp adrf
                                trap_ne         ;bad flags
5f4e : f003            >        beq skip2804
                       >        trap            ;failed not equal (non zero)
5f50 : 20c761          >        jsr report_error
                       >
5f53 :                 >skip2804
                        
5f53 : 28                       plp
                        ; decimal ADC / SBC zp,x
5f54 : 08                       php             ;save carry for subtract
5f55 : a553                     lda ad1
5f57 : 7500                     adc 0,x         ;perform add
5f59 : 08                       php          
5f5a : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5f5c : f003            >        beq skip2806
                       >        trap            ;failed not equal (non zero)
5f5e : 20c761          >        jsr report_error
                       >
5f61 :                 >skip2806
                        
5f61 : 68                       pla             ;check flags
5f62 : 2983                     and #$83        ;mask N-----ZC
5f64 : c557                     cmp adrf
                                trap_ne         ;bad flags
5f66 : f003            >        beq skip2808
                       >        trap            ;failed not equal (non zero)
5f68 : 20c761          >        jsr report_error
                       >
5f6b :                 >skip2808
                        
5f6b : 28                       plp
5f6c : 08                       php             ;save carry for next add
5f6d : a553                     lda ad1
5f6f : f504                     sbc sb2-ad2,x   ;perform subtract
5f71 : 08                       php          
5f72 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5f74 : f003            >        beq skip2810
                       >        trap            ;failed not equal (non zero)
5f76 : 20c761          >        jsr report_error
                       >
5f79 :                 >skip2810
                        
5f79 : 68                       pla             ;check flags
5f7a : 2983                     and #$83        ;mask N-----ZC
5f7c : c557                     cmp adrf
                                trap_ne         ;bad flags
5f7e : f003            >        beq skip2812
                       >        trap            ;failed not equal (non zero)
5f80 : 20c761          >        jsr report_error
                       >
5f83 :                 >skip2812
                        
5f83 : 28                       plp
                        ; decimal ADC / SBC abs,x
5f84 : 08                       php             ;save carry for subtract
5f85 : a553                     lda ad1
5f87 : 7db131                   adc ada2-ad2,x  ;perform add
5f8a : 08                       php          
5f8b : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5f8d : f003            >        beq skip2814
                       >        trap            ;failed not equal (non zero)
5f8f : 20c761          >        jsr report_error
                       >
5f92 :                 >skip2814
                        
5f92 : 68                       pla             ;check flags
5f93 : 2983                     and #$83        ;mask N-----ZC
5f95 : c557                     cmp adrf
                                trap_ne         ;bad flags
5f97 : f003            >        beq skip2816
                       >        trap            ;failed not equal (non zero)
5f99 : 20c761          >        jsr report_error
                       >
5f9c :                 >skip2816
                        
5f9c : 28                       plp
5f9d : 08                       php             ;save carry for next add
5f9e : a553                     lda ad1
5fa0 : fdb231                   sbc sba2-ad2,x  ;perform subtract
5fa3 : 08                       php          
5fa4 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5fa6 : f003            >        beq skip2818
                       >        trap            ;failed not equal (non zero)
5fa8 : 20c761          >        jsr report_error
                       >
5fab :                 >skip2818
                        
5fab : 68                       pla             ;check flags
5fac : 2983                     and #$83        ;mask N-----ZC
5fae : c557                     cmp adrf
                                trap_ne         ;bad flags
5fb0 : f003            >        beq skip2820
                       >        trap            ;failed not equal (non zero)
5fb2 : 20c761          >        jsr report_error
                       >
5fb5 :                 >skip2820
                        
5fb5 : 28                       plp
                        ; decimal ADC / SBC abs,y
5fb6 : 08                       php             ;save carry for subtract
5fb7 : a553                     lda ad1
5fb9 : 790631                   adc ada2-$ff,y  ;perform add
5fbc : 08                       php          
5fbd : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5fbf : f003            >        beq skip2822
                       >        trap            ;failed not equal (non zero)
5fc1 : 20c761          >        jsr report_error
                       >
5fc4 :                 >skip2822
                        
5fc4 : 68                       pla             ;check flags
5fc5 : 2983                     and #$83        ;mask N-----ZC
5fc7 : c557                     cmp adrf
                                trap_ne         ;bad flags
5fc9 : f003            >        beq skip2824
                       >        trap            ;failed not equal (non zero)
5fcb : 20c761          >        jsr report_error
                       >
5fce :                 >skip2824
                        
5fce : 28                       plp
5fcf : 08                       php             ;save carry for next add
5fd0 : a553                     lda ad1
5fd2 : f90731                   sbc sba2-$ff,y  ;perform subtract
5fd5 : 08                       php          
5fd6 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5fd8 : f003            >        beq skip2826
                       >        trap            ;failed not equal (non zero)
5fda : 20c761          >        jsr report_error
                       >
5fdd :                 >skip2826
                        
5fdd : 68                       pla             ;check flags
5fde : 2983                     and #$83        ;mask N-----ZC
5fe0 : c557                     cmp adrf
                                trap_ne         ;bad flags
5fe2 : f003            >        beq skip2828
                       >        trap            ;failed not equal (non zero)
5fe4 : 20c761          >        jsr report_error
                       >
5fe7 :                 >skip2828
                        
5fe7 : 28                       plp
                        ; decimal ADC / SBC (zp,x)
5fe8 : 08                       php             ;save carry for subtract
5fe9 : a553                     lda ad1
5feb : 6144                     adc (lo adi2-ad2,x) ;perform add
5fed : 08                       php          
5fee : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5ff0 : f003            >        beq skip2830
                       >        trap            ;failed not equal (non zero)
5ff2 : 20c761          >        jsr report_error
                       >
5ff5 :                 >skip2830
                        
5ff5 : 68                       pla             ;check flags
5ff6 : 2983                     and #$83        ;mask N-----ZC
5ff8 : c557                     cmp adrf
                                trap_ne         ;bad flags
5ffa : f003            >        beq skip2832
                       >        trap            ;failed not equal (non zero)
5ffc : 20c761          >        jsr report_error
                       >
5fff :                 >skip2832
                        
5fff : 28                       plp
6000 : 08                       php             ;save carry for next add
6001 : a553                     lda ad1
6003 : e146                     sbc (lo sbi2-ad2,x) ;perform subtract
6005 : 08                       php          
6006 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
6008 : f003            >        beq skip2834
                       >        trap            ;failed not equal (non zero)
600a : 20c761          >        jsr report_error
                       >
600d :                 >skip2834
                        
600d : 68                       pla             ;check flags
600e : 2983                     and #$83        ;mask N-----ZC
6010 : c557                     cmp adrf
                                trap_ne         ;bad flags
6012 : f003            >        beq skip2836
                       >        trap            ;failed not equal (non zero)
6014 : 20c761          >        jsr report_error
                       >
6017 :                 >skip2836
                        
6017 : 28                       plp
                        ; decimal ADC / SBC (abs),y
6018 : 08                       php             ;save carry for subtract
6019 : a553                     lda ad1
601b : 719c                     adc (adiy2),y   ;perform add
601d : 08                       php          
601e : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
6020 : f003            >        beq skip2838
                       >        trap            ;failed not equal (non zero)
6022 : 20c761          >        jsr report_error
                       >
6025 :                 >skip2838
                        
6025 : 68                       pla             ;check flags
6026 : 2983                     and #$83        ;mask N-----ZC
6028 : c557                     cmp adrf
                                trap_ne         ;bad flags
602a : f003            >        beq skip2840
                       >        trap            ;failed not equal (non zero)
602c : 20c761          >        jsr report_error
                       >
602f :                 >skip2840
                        
602f : 28                       plp
6030 : 08                       php             ;save carry for next add
6031 : a553                     lda ad1
6033 : f19e                     sbc (sbiy2),y   ;perform subtract
6035 : 08                       php          
6036 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
6038 : f003            >        beq skip2842
                       >        trap            ;failed not equal (non zero)
603a : 20c761          >        jsr report_error
                       >
603d :                 >skip2842
                        
603d : 68                       pla             ;check flags
603e : 2983                     and #$83        ;mask N-----ZC
6040 : c557                     cmp adrf
                                trap_ne         ;bad flags
6042 : f003            >        beq skip2844
                       >        trap            ;failed not equal (non zero)
6044 : 20c761          >        jsr report_error
                       >
6047 :                 >skip2844
                        
6047 : 28                       plp
                        ; decimal ADC / SBC (zp)
6048 : 08                       php             ;save carry for subtract
6049 : a553                     lda ad1
604b : 7298                     adc (adi2)      ;perform add
604d : 08                       php          
604e : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
6050 : f003            >        beq skip2846
                       >        trap            ;failed not equal (non zero)
6052 : 20c761          >        jsr report_error
                       >
6055 :                 >skip2846
                        
6055 : 68                       pla             ;check flags
6056 : 2983                     and #$83        ;mask N-----ZC
6058 : c557                     cmp adrf
                                trap_ne         ;bad flags
605a : f003            >        beq skip2848
                       >        trap            ;failed not equal (non zero)
605c : 20c761          >        jsr report_error
                       >
605f :                 >skip2848
                        
605f : 28                       plp
6060 : 08                       php             ;save carry for next add
6061 : a553                     lda ad1
6063 : f29a                     sbc (sbi2)      ;perform subtract
6065 : 08                       php          
6066 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
6068 : f003            >        beq skip2850
                       >        trap            ;failed not equal (non zero)
606a : 20c761          >        jsr report_error
                       >
606d :                 >skip2850
                        
606d : 68                       pla             ;check flags
606e : 2983                     and #$83        ;mask N-----ZC
6070 : c557                     cmp adrf
                                trap_ne         ;bad flags
6072 : f003            >        beq skip2852
                       >        trap            ;failed not equal (non zero)
6074 : 20c761          >        jsr report_error
                       >
6077 :                 >skip2852
                        
6077 : 28                       plp
6078 : 60                       rts
                        
                        ; core subroutine of the full binary add/subtract test
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
6079 : a557             chkadd  lda adrf        ;add V-flag if overflow
607b : 2983                     and #$83        ;keep N-----ZC / clear V
607d : 48                       pha
607e : a553                     lda ad1         ;test sign unequal between operands
6080 : 4554                     eor ad2
6082 : 300a                     bmi ckad1       ;no overflow possible - operands have different sign
6084 : a553                     lda ad1         ;test sign equal between operands and result
6086 : 4555                     eor adrl
6088 : 1004                     bpl ckad1       ;no overflow occured - operand and result have same sign
608a : 68                       pla
608b : 0940                     ora #$40        ;set V
608d : 48                       pha
608e : 68               ckad1   pla
608f : 8557                     sta adrf        ;save expected flags
                        ; binary ADC / SBC (zp)
6091 : 08                       php             ;save carry for subtract
6092 : a553                     lda ad1
6094 : 7298                     adc (adi2)      ;perform add
6096 : 08                       php          
6097 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
6099 : f003            >        beq skip2854
                       >        trap            ;failed not equal (non zero)
609b : 20c761          >        jsr report_error
                       >
609e :                 >skip2854
                        
609e : 68                       pla             ;check flags
609f : 29c3                     and #$c3        ;mask NV----ZC
60a1 : c557                     cmp adrf
                                trap_ne         ;bad flags
60a3 : f003            >        beq skip2856
                       >        trap            ;failed not equal (non zero)
60a5 : 20c761          >        jsr report_error
                       >
60a8 :                 >skip2856
                        
60a8 : 28                       plp
60a9 : 08                       php             ;save carry for next add
60aa : a553                     lda ad1
60ac : f29a                     sbc (sbi2)      ;perform subtract
60ae : 08                       php          
60af : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
60b1 : f003            >        beq skip2858
                       >        trap            ;failed not equal (non zero)
60b3 : 20c761          >        jsr report_error
                       >
60b6 :                 >skip2858
                        
60b6 : 68                       pla             ;check flags
60b7 : 29c3                     and #$c3        ;mask NV----ZC
60b9 : c557                     cmp adrf
                                trap_ne         ;bad flags
60bb : f003            >        beq skip2860
                       >        trap            ;failed not equal (non zero)
60bd : 20c761          >        jsr report_error
                       >
60c0 :                 >skip2860
                        
60c0 : 28                       plp
60c1 : 60                       rts
                                
                        ; target for the jump indirect test
60c2 : c860             ji_adr  dw test_ji
60c4 : d94c                     dw ji_ret
                        
60c6 : 88                       dey
60c7 : 88                       dey
60c8 :                  test_ji
60c8 : 08                       php             ;either SP or Y count will fail, if we do not hit
60c9 : 88                       dey
60ca : 88                       dey
60cb : 88                       dey
60cc : 28                       plp
                                trap_cs         ;flags loaded?
60cd : 9003            >        bcc skip2862
                       >        trap            ;failed carry set
60cf : 20c761          >        jsr report_error
                       >
60d2 :                 >skip2862
                        
                                trap_vs
60d2 : 5003            >        bvc skip2864
                       >        trap            ;failed overflow set
60d4 : 20c761          >        jsr report_error
                       >
60d7 :                 >skip2864
                        
                                trap_mi
60d7 : 1003            >        bpl skip2866
                       >        trap            ;failed minus (bit 7 set)
60d9 : 20c761          >        jsr report_error
                       >
60dc :                 >skip2866
                        
                                trap_eq 
60dc : d003            >        bne skip2868
                       >        trap           ;failed equal (zero)
60de : 20c761          >        jsr report_error
                       >
60e1 :                 >skip2868
                        
60e1 : c949                     cmp #'I'        ;registers loaded?
                                trap_ne
60e3 : f003            >        beq skip2870
                       >        trap            ;failed not equal (non zero)
60e5 : 20c761          >        jsr report_error
                       >
60e8 :                 >skip2870
                        
60e8 : e04e                     cpx #'N'
                                trap_ne        
60ea : f003            >        beq skip2872
                       >        trap            ;failed not equal (non zero)
60ec : 20c761          >        jsr report_error
                       >
60ef :                 >skip2872
                        
60ef : c041                     cpy #('D'-3)
                                trap_ne
60f1 : f003            >        beq skip2874
                       >        trap            ;failed not equal (non zero)
60f3 : 20c761          >        jsr report_error
                       >
60f6 :                 >skip2874
                        
60f6 : 48                       pha             ;save a,x
60f7 : 8a                       txa
60f8 : 48                       pha
60f9 : ba                       tsx
60fa : e0fd                     cpx #$fd        ;check SP
                                trap_ne
60fc : f003            >        beq skip2876
                       >        trap            ;failed not equal (non zero)
60fe : 20c761          >        jsr report_error
                       >
6101 :                 >skip2876
                        
6101 : 68                       pla             ;restore x
6102 : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
6103 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
6105 : 48              >            pha         ;use stack to load status
6106 : 28              >            plp
                        
6107 : 68                       pla             ;restore a
6108 : e8                       inx             ;return registers with modifications
6109 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
610b : 6cff32                   jmp (ji_tab+2)
610e : ea                       nop
610f : ea                       nop
                                trap            ;runover protection
6110 : 20c761          >        jsr report_error
                        
6113 : 4c0034                   jmp start       ;catastrophic error - cannot continue
                        
                        ; target for the jump indirect test
6116 : 7561             jxi_adr dw  trap_ind
6118 : 7561                     dw  trap_ind
611a : 2461                     dw  test_jxi    ;+4
611c : 434d                     dw  jxi_ret     ;+6
611e : 7561                     dw  trap_ind
6120 : 7561                     dw  trap_ind
                        
6122 : 88                       dey
6123 : 88                       dey
6124 :                  test_jxi
6124 : 08                       php             ;either SP or Y count will fail, if we do not hit
6125 : 88                       dey
6126 : 88                       dey
6127 : 88                       dey
6128 : 28                       plp
                                trap_cs         ;flags loaded?
6129 : 9003            >        bcc skip2881
                       >        trap            ;failed carry set
612b : 20c761          >        jsr report_error
                       >
612e :                 >skip2881
                        
                                trap_vs
612e : 5003            >        bvc skip2883
                       >        trap            ;failed overflow set
6130 : 20c761          >        jsr report_error
                       >
6133 :                 >skip2883
                        
                                trap_mi
6133 : 1003            >        bpl skip2885
                       >        trap            ;failed minus (bit 7 set)
6135 : 20c761          >        jsr report_error
                       >
6138 :                 >skip2885
                        
                                trap_eq 
6138 : d003            >        bne skip2887
                       >        trap           ;failed equal (zero)
613a : 20c761          >        jsr report_error
                       >
613d :                 >skip2887
                        
613d : c958                     cmp #'X'        ;registers loaded?
                                trap_ne
613f : f003            >        beq skip2889
                       >        trap            ;failed not equal (non zero)
6141 : 20c761          >        jsr report_error
                       >
6144 :                 >skip2889
                        
6144 : e004                     cpx #4
                                trap_ne        
6146 : f003            >        beq skip2891
                       >        trap            ;failed not equal (non zero)
6148 : 20c761          >        jsr report_error
                       >
614b :                 >skip2891
                        
614b : c046                     cpy #('I'-3)
                                trap_ne
614d : f003            >        beq skip2893
                       >        trap            ;failed not equal (non zero)
614f : 20c761          >        jsr report_error
                       >
6152 :                 >skip2893
                        
6152 : 48                       pha             ;save a,x
6153 : 8a                       txa
6154 : 48                       pha
6155 : ba                       tsx
6156 : e0fd                     cpx #$fd        ;check SP
                                trap_ne
6158 : f003            >        beq skip2895
                       >        trap            ;failed not equal (non zero)
615a : 20c761          >        jsr report_error
                       >
615d :                 >skip2895
                        
615d : 68                       pla             ;restore x
615e : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
615f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
6161 : 48              >            pha         ;use stack to load status
6162 : 28              >            plp
                        
6163 : 68                       pla             ;restore a
6164 : e8                       inx             ;return registers with modifications
6165 : e8                       inx
6166 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
6168 : 7cf932                   jmp (jxi_tab,x)
616b : ea                       nop
616c : ea                       nop
                                trap            ;runover protection
616d : 20c761          >        jsr report_error
                        
6170 : 4c0034                   jmp start       ;catastrophic error - cannot continue
                        
                        ; JMP (abs,x) with bad x
6173 : ea                       nop
6174 : ea                       nop
6175 :                  trap_ind
6175 : ea                       nop
6176 : ea                       nop
                                trap            ;near miss indexed indirect jump
6177 : 20c761          >        jsr report_error
                        
617a : 4c0034                   jmp start       ;catastrophic error - cannot continue
                        
                        ;trap in case of unexpected IRQ, NMI, BRK, RESET
617d :                  nmi_trap
                                trap            ;check stack for conditions at NMI
617d : 20c761          >        jsr report_error
                        
6180 : 4c0034                   jmp start       ;catastrophic error - cannot continue
6183 :                  res_trap
                                trap            ;unexpected RESET
6183 : 20c761          >        jsr report_error
                        
6186 : 4c0034                   jmp start       ;catastrophic error - cannot continue
                        
6189 : 88                       dey
618a : 88                       dey
618b :                  irq_trap                ;BRK test or unextpected BRK or IRQ
618b : 08                       php             ;either SP or Y count will fail, if we do not hit
618c : 88                       dey
618d : 88                       dey
618e : 88                       dey
                                ;next traps could be caused by unexpected BRK or IRQ
                                ;check stack for BREAK and originating location
                                ;possible jump/branch into weeds (uninitialized space)
                            if ROM_vectors = 1
                                cmp #$ff-'B'    ;BRK pass 2 registers loaded?
                                beq break2
                            endif
618f : c942                     cmp #'B'        ;BRK pass 1 registers loaded?
                                trap_ne
6191 : f003            >        beq skip2903
                       >        trap            ;failed not equal (non zero)
6193 : 20c761          >        jsr report_error
                       >
6196 :                 >skip2903
                        
6196 : e052                     cpx #'R'
                                trap_ne        
6198 : f003            >        beq skip2905
                       >        trap            ;failed not equal (non zero)
619a : 20c761          >        jsr report_error
                       >
619d :                 >skip2905
                        
619d : c048                     cpy #'K'-3
                                trap_ne
619f : f003            >        beq skip2907
                       >        trap            ;failed not equal (non zero)
61a1 : 20c761          >        jsr report_error
                       >
61a4 :                 >skip2907
                        
61a4 : 8550                     sta irq_a       ;save registers during break test
61a6 : 8651                     stx irq_x
61a8 : ba                       tsx             ;test break on stack
61a9 : bd0201                   lda $102,x
                                cmp_flag 0      ;break test should have B=1 & unused=1 on stack
61ac : c930            >            cmp #(0      |fao)&m8    ;expected flags + always on bits
                        
                                trap_ne         ;possible no break flag on stack
61ae : f003            >        beq skip2910
                       >        trap            ;failed not equal (non zero)
61b0 : 20c761          >        jsr report_error
                       >
61b3 :                 >skip2910
                        
                            if ROM_vectors = 1
                                pla
                                cmp_flag intdis ;should have added interrupt disable
                                trap_ne
                                tsx
                                cpx #$fc        ;sp -3? (return addr, flags)
                                trap_ne
                                lda $1ff        ;propper return on stack
                                cmp #hi(brk_ret0)
                                trap_ne
                                lda $1fe
                                cmp #lo(brk_ret0)
                                trap_ne
                                load_flag $ff
                                pha
                                ldx irq_x
                                inx             ;return registers with modifications
                                lda irq_a
                                eor #$aa
                                plp             ;N=1, V=1, Z=1, C=1 but original flags should be restored
                                rti
                                trap            ;runover protection
                                jmp start       ;catastrophic error - cannot continue
                                
                        break2                  ;BRK pass 2        
                                cpx #$ff-'R'
                                trap_ne        
                                cpy #$ff-'K'-3
                                trap_ne
                                sta irq_a       ;save registers during break test
                                stx irq_x
                                tsx             ;test break on stack
                                lda $102,x
                                cmp_flag $ff    ;break test should have B=1
                                trap_ne         ;possibly no break flag on stack
                                pla
                                cmp_flag $ff-decmode ;actual passed flags should have decmode cleared
                                trap_ne
                                tsx
                                cpx #$fc        ;sp -3? (return addr, flags)
                                trap_ne
                                lda $1ff        ;propper return on stack
                                cmp #hi(brk_ret1)
                                trap_ne
                                lda $1fe
                                cmp #lo(brk_ret1)
                                trap_ne
                                load_flag intdis
                                pha      
                                ldx irq_x
                                inx             ;return registers with modifications
                                lda irq_a
                                eor #$aa
                                plp             ;N=0, V=0, Z=0, C=0 but original flags should be restored
                                rti
                                trap            ;runover protection
                                jmp start       ;catastrophic error - cannot continue
                            else
                                trap_eq         ;check stack for conditions at BRK
61b3 : d003            >        bne skip2912
                       >        trap           ;failed equal (zero)
61b5 : 20c761          >        jsr report_error
                       >
61b8 :                 >skip2912
                        
                            endif
                        
                            if report = 1
                                include "report.i65"
0001 =                  T_ATOM = 1
0002 =                  T_BEEB = 2
                        
                          if (TARGET = T_ATOM)
                        OSRDCH = $FFE3
                        OSWRCH = $FFF4
                          else
                            if (TARGET = T_BEEB)
ffe0 =                  OSRDCH = $FFE0
ffee =                  OSWRCH = $FFEE
                            else
                        ERROR TARGET must be 1 or 2
                            endif
                          endif
                        
                        
                        ;**** report 6502 funtional test errors to standard I/O ****
                        ;
                        ;this include file is part of the 6502 functional tests
                        ;it is used when you configure report = 1 in the tests
                        ;
                        ;to adopt the standard output vectors of your test environment
                        ;you must modify the rchar and rget subroutines in this include
                        ;
                        ;I/O hardware may have to be initialized in report_init
                        
                        ;print message macro - \1 = message location
                        rprt    macro
                                ldx #0
                                lda \1
                        loop\?
                                jsr rchar
                                inx
                                lda \1,x
                                bne loop\?
                                endm
                        
                        ;initialize I/O as required (example: configure & enable ACIA)
61b8 :                  report_init
                                ;nothing to initialize
                                rprt rmsg_start
61b8 : a200            >        ldx #0
61ba : add562          >        lda rmsg_start
61bd :                 >loop2914
61bd : 20d162          >        jsr rchar
61c0 : e8              >        inx
61c1 : bdd562          >        lda rmsg_start,x
61c4 : d0f7            >        bne loop2914
                        
61c6 : 60                       rts
                                
                        ;show stack (with saved registers), zeropage and absolute memory workspace
                        ;after an error was trapped in the test program
61c7 :                  report_error
                        ;save registers
61c7 : 08                       php
61c8 : 48                       pha
61c9 : 8a                       txa
61ca : 48                       pha
61cb : 98                       tya
61cc : 48                       pha
61cd : d8                       cld
                        ;show stack with index to registers at error
                                rprt rmsg_stack
61ce : a200            >        ldx #0
61d0 : ade962          >        lda rmsg_stack
61d3 :                 >loop2915
61d3 : 20d162          >        jsr rchar
61d6 : e8              >        inx
61d7 : bde962          >        lda rmsg_stack,x
61da : d0f7            >        bne loop2915
                        
61dc : ba                       tsx
61dd : e8                       inx
61de : a901                     lda #1      ;address high
61e0 : 20bd62                   jsr rhex
61e3 : 8a                       txa         ;address low
61e4 : 20bd62                   jsr rhex
61e7 : 20b962           rstack  jsr rspace
61ea : bd0001                   lda $100,x  ;stack data
61ed : 20bd62                   jsr rhex
61f0 : e8                       inx
61f1 : d0f4                     bne rstack
61f3 : 20b062                   jsr rcrlf   ;new line
                        ;show zero page workspace
61f6 : a900                     lda #0
61f8 : 20bd62                   jsr rhex
61fb : a952                     lda #zpt
61fd : aa                       tax
61fe : 20bd62                   jsr rhex
6201 : 20b962           rzp     jsr rspace
6204 : b500                     lda 0,x
6206 : 20bd62                   jsr rhex
6209 : e8                       inx
620a : e059                     cpx #zp_bss
620c : d0f3                     bne rzp
620e : 20b062                   jsr rcrlf
                        ;show absolute workspace
6211 : a932                     lda #hi(data_segment)
6213 : 20bd62                   jsr rhex
6216 : a900                     lda #lo(data_segment)
6218 : 20bd62                   jsr rhex
621b : a200                     ldx #0
621d : 20b962           rabs    jsr rspace
6220 : bd0032                   lda data_segment,x
6223 : 20bd62                   jsr rhex
6226 : e8                       inx
6227 : e00a                     cpx #(data_bss-data_segment)
6229 : d0f2                     bne rabs
                        ;ask to continue
                                rprt rmsg_cont
622b : a200            >        ldx #0
622d : ad0563          >        lda rmsg_cont
6230 :                 >loop2916
6230 : 20d162          >        jsr rchar
6233 : e8              >        inx
6234 : bd0563          >        lda rmsg_cont,x
6237 : d0f7            >        bne loop2916
                        
6239 : 20a662           rerr1   jsr rget
623c : c953                     cmp #'S'
623e : f00b                     beq rskip
6240 : c943                     cmp #'C'
6242 : d0f5                     bne rerr1        
                        ;restore registers
6244 : 68                       pla
6245 : a8                       tay
6246 : 68                       pla
6247 : aa                       tax
6248 : 68                       pla 
6249 : 28                       plp
624a : 60                       rts
                        ;skip the current test
624b : a9f0             rskip   lda #$f0            ;already end of tests?
624d : cd0232                   cmp test_case
6250 : f0e7                     beq rerr1           ;skip is not available
6252 : a2ff                     ldx #$ff            ;clear stack
6254 : 9a                       txs
6255 : ee0232                   inc test_case       ;next test
6258 : a900                     lda #lo(start)      ;find begin of test
625a : 8552                     sta zpt
625c : a934                     lda #hi(start)
625e : 8553                     sta zpt+1
6260 : a004             rskipl1 ldy #4              ;search pattern
6262 : b152             rskipl2 lda (zpt),y         ;next byte
6264 : d98b62                   cmp rmark,y
6267 : d00a                     bne rskipnx         ;no match
6269 : 88                       dey
626a : 300f                     bmi rskipf          ;found pattern        
626c : c001                     cpy #1              ;skip immediate value
626e : d0f2                     bne rskipl2
6270 : 88                       dey
6271 : f0ef                     beq rskipl2
                                
6273 : e652             rskipnx inc zpt             ;next RAM location
6275 : d0e9                     bne rskipl1
6277 : e653                     inc zpt+1
6279 : d0e5                     bne rskipl1
                        
627b : a001             rskipf  ldy #1              ;pattern found - check test number
627d : b152                     lda (zpt),y         ;test number
627f : c9f0                     cmp #$f0            ;end of last test?
6281 : f005                     beq rskipe          ;ask to rerun all
6283 : cd0232                   cmp test_case       ;is next test?
6286 : d0eb                     bne rskipnx         ;continue searching
6288 : 6c5200           rskipe  jmp (zpt)           ;start next test or rerun at end of tests
                                
628b : a900             rmark   lda #0              ;begin of test search pattern
628d : 8d0232                   sta test_case
                        
                        ;show test has ended, ask to repeat
6290 :                  report_success
                            if rep_int = 1
                                rprt rmsg_priority
                                lda data_segment    ;show interrupt sequence
                                jsr rhex
                                jsr rspace
                                lda data_segment+1
                                jsr rhex
                                jsr rspace
                                lda data_segment+2
                                jsr rhex
                            endif
                                rprt rmsg_success
6290 : a200            >        ldx #0
6292 : ad3763          >        lda rmsg_success
6295 :                 >loop2917
6295 : 20d162          >        jsr rchar
6298 : e8              >        inx
6299 : bd3763          >        lda rmsg_success,x
629c : d0f7            >        bne loop2917
                        
629e : 20a662           rsuc1   jsr rget
62a1 : c952                     cmp #'R'
62a3 : d0f9                     bne rsuc1        
62a5 : 60                       rts
                        
                        ;input subroutine
                        ;get a character from standard input 
                        ;adjust according to the needs in your test environment
62a6 :                  rget                ;get character in A
62a6 : 20e0ff                   jsr OSRDCH  ;example: OSRDCH on a Beeb/Atom
                        ;rget1
                        ;        lda $bff1   ;wait RDRF
                        ;        and #8
                        ;        beq rget1
                        ;not a real ACIA - so RDRF is not checked
                        ;        lda $bff0   ;read acia rx reg
                        ;       lda $f004   ;Kowalski simulator default
                        ;the load can be replaced by a call to a kernal routine
                        ;        jsr $ffcf   ;example: CHRIN for a C64
62a9 : c961                     cmp #'a'    ;lower case
62ab : 9002                     bcc rget1
62ad : 295f                     and #$5f    ;convert to upper case
62af : 60               rget1   rts
                        
                        ;output subroutines
62b0 : a90a             rcrlf   lda #10
62b2 : 20d162                   jsr rchar
62b5 : a90d                     lda #13
62b7 : d018                     bne rchar
                        
62b9 : a920             rspace  lda #' '
62bb : d014                     bne rchar
                                
62bd : 48               rhex    pha         ;report hex byte in A
62be : 4a                       lsr a       ;high nibble first
62bf : 4a                       lsr a
62c0 : 4a                       lsr a
62c1 : 4a                       lsr a
62c2 : 20c862                   jsr rnib
62c5 : 68                       pla         ;now low nibble
62c6 : 290f                     and #$f
                        
62c8 : 18               rnib    clc         ;report nibble in A
62c9 : 6930                     adc #'0'    ;make printable 0-9
62cb : c93a                     cmp #'9'+1
62cd : 9002                     bcc rchar
62cf : 6906                     adc #6      ;make printable A-F
                        
                        ;send a character to standard output 
                        ;adjust according to the needs in your test environment
                        ;register X needs to be preserved!
62d1 :                  rchar               ;report character in A
62d1 : 20eeff                   jsr OSWRCH  ;example: OSWRCH on a Beeb/Atom
                        ;        pha         ;wait TDRF
                        ;rchar1  lda $bff1
                        ;        and #$10
                        ;        beq rchar1
                        ;        pla
                        ;not a real ACIA - so TDRF is not checked
                        ;        sta $bff0   ;write acia tx reg
                        ;        sta $f001   ;Kowalski simulator default
                        ;the store can be replaced by a call to a kernal routine
                        ;        jsr $ffd2   ;example: CHROUT for a C64
62d4 : 60                       rts
                        
62d5 :                  rmsg_start
62d5 : 0a0d5374617274..         db  10,13,"Started testing",10,13,0
62e9 :                  rmsg_stack
62e9 : 0a0d7265677320..         db  10,13,"regs Y  X  A  PS PCLPCH",10,13,0
6305 :                  rmsg_cont
6305 : 0a0d7072657373..         db  10,13,"press C to continue or S to skip current test",10,13,0
6337 :                  rmsg_success
6337 : 0a0d416c6c2074..         db  10,13,"All tests completed, press R to repeat",10,13,0
                            if rep_int = 1
                        rmsg_priority
                                db  10,13,"interrupt sequence (NMI IRQ BRK) ",0
                            endif
                           
                            endif
                                    
                        ;copy of data to initialize BSS segment
                            if load_data_direct != 1
6362 :                  zp_init
6362 : c3824100         zp1_    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
6366 : 7f               zp7f_   db  $7f             ;test pattern for compare  
                        ;logical zeropage operands
6367 : 001f7180         zpOR_   db  0,$1f,$71,$80   ;test pattern for OR
636b : 0fff7f80         zpAN_   db  $0f,$ff,$7f,$80 ;test pattern for AND
636f : ff0f8f8f         zpEO_   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
6373 : 1032             ind1_   dw  abs1            ;indirect pointer to pattern in absolute memory
6375 : 1132                     dw  abs1+1
6377 : 1232                     dw  abs1+2
6379 : 1332                     dw  abs1+3
637b : 1432                     dw  abs7f
637d : 1831             inw1_   dw  abs1-$f8        ;indirect pointer for wrap-test pattern
637f : 0532             indt_   dw  abst            ;indirect pointer to store area in absolute memory
6381 : 0632                     dw  abst+1
6383 : 0732                     dw  abst+2
6385 : 0832                     dw  abst+3
6387 : 0d31             inwt_   dw  abst-$f8        ;indirect pointer for wrap-test store
6389 : 4732             indAN_  dw  absAN           ;indirect pointer to AND pattern in absolute memory
638b : 4832                     dw  absAN+1
638d : 4932                     dw  absAN+2
638f : 4a32                     dw  absAN+3
6391 : 4b32             indEO_  dw  absEO           ;indirect pointer to EOR pattern in absolute memory
6393 : 4c32                     dw  absEO+1
6395 : 4d32                     dw  absEO+2
6397 : 4e32                     dw  absEO+3
6399 : 4332             indOR_  dw  absOR           ;indirect pointer to OR pattern in absolute memory
639b : 4432                     dw  absOR+1
639d : 4532                     dw  absOR+2
639f : 4632                     dw  absOR+3
                        ;add/subtract indirect pointers
63a1 : 0532             adi2_   dw  ada2            ;indirect pointer to operand 2 in absolute memory
63a3 : 0632             sbi2_   dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
63a5 : 0631             adiy2_  dw  ada2-$ff        ;with offset for indirect indexed
63a7 : 0731             sbiy2_  dw  sba2-$ff
63a9 :                  zp_end
                            if (zp_end - zp_init) != (zp_bss_end - zp_bss)   
                                ;force assembler error if size is different   
                                ERROR ERROR ERROR   ;mismatch between bss and zeropage data
                            endif 
63a9 :                  data_init
63a9 : 6900             ex_adc_ adc #0              ;execute immediate opcodes
63ab : 60                       rts
63ac : e900             ex_sbc_ sbc #0              ;execute immediate opcodes
63ae : 60                       rts
63af : c3824100         abs1_   db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
63b3 : 7f               abs7f_  db  $7f             ;test pattern for compare
                        ;loads
63b4 : 80800002         fLDx_   db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
63b8 :                  rASL_                       ;expected result ASL & ROL -carry  
63b8 : 86048200         rROL_   db  $86,$04,$82,0   ; "
63bc : 87058301         rROLc_  db  $87,$05,$83,1   ;expected result ROL +carry
63c0 :                  rLSR_                       ;expected result LSR & ROR -carry
63c0 : 61412000         rROR_   db  $61,$41,$20,0   ; "
63c4 : e1c1a080         rRORc_  db  $e1,$c1,$a0,$80 ;expected result ROR +carry
63c8 :                  fASL_                       ;expected flags for shifts
63c8 : 81018002         fROL_   db  fnc,fc,fn,fz    ;no carry in
63cc : 81018000         fROLc_  db  fnc,fc,fn,0     ;carry in
63d0 :                  fLSR_
63d0 : 01000102         fROR_   db  fc,0,fc,fz      ;no carry in
63d4 : 81808180         fRORc_  db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
63d8 : 7f80ff0001       rINC_   db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
63dd : 0080800200       fINC_   db  0,fn,fn,fz,0    ;expected flags for INC/DEC
                        ;logical memory operand
63e2 : 001f7180         absOR_  db  0,$1f,$71,$80   ;test pattern for OR
63e6 : 0fff7f80         absAN_  db  $0f,$ff,$7f,$80 ;test pattern for AND
63ea : ff0f8f8f         absEO_  db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
63ee : 00f11f00         absORa_ db  0,$f1,$1f,0     ;test pattern for OR
63f2 : f0ffffff         absANa_ db  $f0,$ff,$ff,$ff ;test pattern for AND
63f6 : fff0f00f         absEOa_ db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
63fa : 00ff7f80         absrlo_ db  0,$ff,$7f,$80
63fe : 02800080         absflo_ db  fz,fn,0,fn
6402 :                  data_end
                            if (data_end - data_init) != (data_bss_end - data_bss)
                                ;force assembler error if size is different   
                                ERROR ERROR ERROR   ;mismatch between bss and data
                            endif 
                        
6402 :                  vec_init
6402 : 7d61                     dw  nmi_trap
6404 : 8361                     dw  res_trap
6406 : 8b61                     dw  irq_trap
fffa =                  vec_bss equ $fffa
                            endif                   ;end of RAM init data
                            
                        ; code at end of image due to the need to add blank space as required
                            if ($ff & (ji_ret - * - 2)) < ($ff & (jxi_ret - * - 2))
                        ; JMP (abs) when $xxff and $xx00 are from same page
                                ds  lo(ji_ret - * - 2)
                                nop
                                nop
                        ji_px   nop             ;low address byte matched with ji_ret 
                                nop
                                trap            ;jmp indirect page cross bug
                        
                        ; JMP (abs,x) when $xxff and $xx00 are from same page
                                ds  lo(jxi_ret - * - 2)
                                nop
                                nop
                        jxi_px  nop             ;low address byte matched with jxi_ret 
                                nop
                                trap            ;jmp indexed indirect page cross bug
                            else
                        ; JMP (abs,x) when $xxff and $xx00 are from same page
6408 : 00000000000000..         ds  lo(jxi_ret - * - 2)
6441 : ea                       nop
6442 : ea                       nop
6443 : ea               jxi_px  nop             ;low address byte matched with jxi_ret 
6444 : ea                       nop
                                trap            ;jmp indexed indirect page cross bug
6445 : 20c761          >        jsr report_error
                        
                        
                        ; JMP (abs) when $xxff and $xx00 are from same page
6448 : 00000000000000..         ds  lo(ji_ret - * - 2)
64d7 : ea                       nop
64d8 : ea                       nop
64d9 : ea               ji_px   nop             ;low address byte matched with ji_ret 
64da : ea                       nop
                                trap            ;jmp indirect page cross bug
64db : 20c761          >        jsr report_error
                        
                            endif
                            
                            if (load_data_direct = 1) & (ROM_vectors = 1)  
                                org $fffa       ;vectors
                                dw  nmi_trap
                                dw  res_trap
                                dw  irq_trap
                            endif
                        
64d9 =                          end start
                        
No errors in pass 2.
Wrote binary from address $3400 through $64dd.
Total size 12510 bytes.
Program start address is at $3400 (13312).
