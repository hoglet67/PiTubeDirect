AS65 Assembler for R6502 [1.42].  Copyright 1994-2007, Frank A. Kingswood                                                Page    1
------------------------------------------------ 65C02_extended_opcodes_test.a65c ------------------------------------------------

3125 lines read, no errors in pass 1.
                        ;
                        ; 6 5 C 0 2   E X T E N D E D   O P C O D E S   T E S T
                        ;
                        ; Copyright (C) 2013-2017  Klaus Dormann
                        ;
                        ; This program is free software: you can redistribute it and/or modify
                        ; it under the terms of the GNU General Public License as published by
                        ; the Free Software Foundation, either version 3 of the License, or
                        ; (at your option) any later version.
                        ;
                        ; This program is distributed in the hope that it will be useful,
                        ; but WITHOUT ANY WARRANTY; without even the implied warranty of
                        ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        ; GNU General Public License for more details.
                        ;
                        ; You should have received a copy of the GNU General Public License
                        ; along with this program.  If not, see <http://www.gnu.org/licenses/>.
                        
                        
                        ; This program is designed to test all additional 65C02 opcodes, addressing
                        ; modes and functionality not available in the NMOS version of the 6502.
                        ; The 6502_functional_test is a prerequisite to this test.
                        ; NMI, IRQ, STP & WAI are covered in the 6502_interrupt_test.
                        ;
                        ; version 04-dec-2017
                        ; contact info at http://2m5.de or email K@2m5.de
                        ;
                        ; assembled with AS65 from http://www.kingswood-consulting.co.uk/assemblers/
                        ; command line switches: -l -m -s2 -w -x -h0
                        ;                         |  |  |   |  |  no page headers in listing
                        ;                         |  |  |   |  65C02 extensions
                        ;                         |  |  |   wide listing (133 char/col)
                        ;                         |  |  write intel hex file instead of binary
                        ;                         |  expand macros in listing
                        ;                         generate pass2 listing
                        ;
                        ; No IO - should be run from a monitor with access to registers.
                        ; To run load intel hex image with a load command, than alter PC to 400 hex
                        ; (code_segment) and enter a go command.
                        ; Loop on program counter determines error or successful completion of test.
                        ; Check listing for relevant traps (jump/branch *).
                        ; Please note that in early tests some instructions will have to be used before
                        ; they are actually tested!
                        ;
                        ; RESET, NMI or IRQ should not occur and will be trapped if vectors are enabled.
                        ; Tests documented behavior of the original 65C02 only!
                        ; Decimal ops will only be tested with valid BCD operands and the V flag will
                        ; be ignored as it is absolutely useless in decimal mode.
                        ;
                        ; Debugging hints:
                        ;     Most of the code is written sequentially. if you hit a trap, check the
                        ;   immediately preceeding code for the instruction to be tested. Results are
                        ;   tested first, flags are checked second by pushing them onto the stack and
                        ;   pulling them to the accumulator after the result was checked. The "real"
                        ;   flags are no longer valid for the tested instruction at this time!
                        ;     If the tested instruction was indexed, the relevant index (X or Y) must
                        ;   also be checked. Opposed to the flags, X and Y registers are still valid.
                        ;
                        ; versions:
                        ;   19-jul-2013  1st version distributed for testing
                        ;   23-jul-2013  fixed BRA out of range due to larger trap macros
                        ;                added RAM integrity check
                        ;   16-aug-2013  added error report to standard output option
                        ;   23-aug-2015  change revoked
                        ;   24-aug-2015  all self modifying immediate opcodes now execute in data RAM
                        ;   28-aug-2015  fixed decimal adc/sbc immediate only testing carry
                        ;   09-feb-2017  fixed RMB/SMB tested when they shouldn't be tested
                        ;   04-dec-2017  fixed BRK not tested for actually going through the IRQ vector
                        ;                added option to skip the remainder of a failing test
                        ;                in report.i65
                        ;                added skip override to undefined opcode as NOP test
                        
                        
                        ; C O N F I G U R A T I O N
                        
                        ;ROM_vectors writable (0=no, 1=yes)
                        ;if ROM vectors can not be used interrupts will not be trapped
                        ;as a consequence BRK can not be tested but will be emulated to test RTI
0000 =                  ROM_vectors = 0
                        
                        ;load_data_direct (0=move from code segment, 1=load directly)
                        ;loading directly is preferred but may not be supported by your platform
                        ;0 produces only consecutive object code, 1 is not suitable for a binary image
0000 =                  load_data_direct = 0
                        
                        ;I_flag behavior (0=force enabled, 1=force disabled, 2=prohibit change, 3=allow
                        ;change) 2 requires extra code and is not recommended.
0003 =                  I_flag = 3
                        
                        ;configure memory - try to stay away from memory used by the system
                        ;zero_page memory start address, $4e (78) consecutive Bytes required
                        ;                                add 2 if I_flag = 2
0050 =                  zero_page = $50
                        
                        ;data_segment memory start address, $63 (99) consecutive Bytes required
                        ; + 12 Bytes at data_segment + $f9 (JMP indirect page cross test)
3200 =                  data_segment = $3200
                            if (data_segment & $ff) != 0
                                ERROR ERROR ERROR low byte of data_segment MUST be $00 !!
                            endif
                        
                        ;code_segment memory start address, 10kB of consecutive space required
                        ;                                   add 1 kB if I_flag = 2
c000 =                  code_segment = $c000
                        
                        ;added WDC only opcodes WAI & STP (0=test as NOPs, >0=no test)
0000 =                  wdc_op = WDC_OP
                        
                        ;added Rockwell & WDC opcodes BBR, BBS, RMB & SMB
                        ;(0=test as NOPs, 1=full test, >1=no test)
0001 =                  rkwl_wdc_op = RKWL_OP
                        
                        ;skip testing all undefined opcodes override
                        ;0=test as NOP, >0=skip
0000 =                  skip_nop = 0
                        
                        ;report errors through I/O channel (0=use standard self trap loops, 1=include
                        ;report.i65 as I/O channel, add 3 kB)
0001 =                  report = 1
                        
                        ;RAM integrity test option. Checks for undesired RAM writes.
                        ;set lowest non RAM or RAM mirror address page (-1=disable, 0=64k, $40=16k)
                        ;leave disabled if a monitor, OS or background interrupt is allowed to alter RAM
ffff =                  ram_top = -1
                        
                                noopt       ;do not take shortcuts
                        
                        ;macros for error & success traps to allow user modification
                        ;example:
                        ;trap    macro
                        ;        jsr my_error_handler
                        ;        endm
                        ;trap_eq macro
                        ;        bne skip\?
                        ;        trap           ;failed equal (zero)
                        ;skip\?
                        ;        endm
                        ;
                        ; my_error_handler should pop the calling address from the stack and report it.
                        ; putting larger portions of code (more than 3 bytes) inside the trap macro
                        ; may lead to branch range problems for some tests.
                            if report = 0
                        trap    macro
                                jmp *           ;failed anyway
                                endm
                        trap_eq macro
                                beq *           ;failed equal (zero)
                                endm
                        trap_ne macro
                                bne *           ;failed not equal (non zero)
                                endm
                        trap_cs macro
                                bcs *           ;failed carry set
                                endm
                        trap_cc macro
                                bcc *           ;failed carry clear
                                endm
                        trap_mi macro
                                bmi *           ;failed minus (bit 7 set)
                                endm
                        trap_pl macro
                                bpl *           ;failed plus (bit 7 clear)
                                endm
                        trap_vs macro
                                bvs *           ;failed overflow set
                                endm
                        trap_vc macro
                                bvc *           ;failed overflow clear
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                                jmp *           ;test passed, no errors
                                endm
                            endif
                            if report = 1
                        trap    macro
                                jsr report_error
                                endm
                        trap_eq macro
                                bne skip\?
                                trap           ;failed equal (zero)
                        skip\?
                                endm
                        trap_ne macro
                                beq skip\?
                                trap            ;failed not equal (non zero)
                        skip\?
                                endm
                        trap_cs macro
                                bcc skip\?
                                trap            ;failed carry set
                        skip\?
                                endm
                        trap_cc macro
                                bcs skip\?
                                trap            ;failed carry clear
                        skip\?
                                endm
                        trap_mi macro
                                bpl skip\?
                                trap            ;failed minus (bit 7 set)
                        skip\?
                                endm
                        trap_pl macro
                                bmi skip\?
                                trap            ;failed plus (bit 7 clear)
                        skip\?
                                endm
                        trap_vs macro
                                bvc skip\?
                                trap            ;failed overflow set
                        skip\?
                                endm
                        trap_vc macro
                                bvs skip\?
                                trap            ;failed overflow clear
                        skip\?
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                                jsr report_success
                                endm
                            endif
                        
                        
0001 =                  carry   equ %00000001   ;flag bits in status
0002 =                  zero    equ %00000010
0004 =                  intdis  equ %00000100
0008 =                  decmode equ %00001000
0010 =                  break   equ %00010000
0020 =                  reserv  equ %00100000
0040 =                  overfl  equ %01000000
0080 =                  minus   equ %10000000
                        
0001 =                  fc      equ carry
0002 =                  fz      equ zero
0003 =                  fzc     equ carry+zero
0040 =                  fv      equ overfl
0042 =                  fvz     equ overfl+zero
0080 =                  fn      equ minus
0081 =                  fnc     equ minus+carry
0082 =                  fnz     equ minus+zero
0083 =                  fnzc    equ minus+zero+carry
00c0 =                  fnv     equ minus+overfl
                        
0030 =                  fao     equ break+reserv    ;bits always on after PHP, BRK
0034 =                  fai     equ fao+intdis      ;+ forced interrupt disable
00ff =                  m8      equ $ff             ;8 bit mask
00fb =                  m8i     equ $ff&~intdis     ;8 bit mask - interrupt disable
                        
                        ;macros to allow masking of status bits.
                        ;masking of interrupt enable/disable on load and compare
                        ;masking of always on bits after PHP or BRK (unused & break) on compare
                                if I_flag = 0
                        load_flag   macro
                                    lda #\1&m8i         ;force enable interrupts (mask I)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8i   ;I_flag is always enabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 1
                        load_flag   macro
                                    lda #\1|intdis      ;force disable interrupts
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fai)&m8    ;I_flag is always disabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1|fai)       ;invert expected flags + always on bits + I
                                    endm
                                endif
                                if I_flag = 2
                        load_flag   macro
                                    lda #\1
                                    ora flag_I_on       ;restore I-flag
                                    and flag_I_off
                                    endm
                        cmp_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    cmp #(\1|fao)&m8i   ;expected flags + always on bits, mask I
                                    endm
                        eor_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 3
                        load_flag   macro
                                    lda #\1             ;allow test to change I-flag (no mask)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8    ;expected flags + always on bits
                                    endm
                        eor_flag    macro
                                    eor #\1|fao         ;invert expected flags + always on bits
                                    endm
                                endif
                        
                        ;macros to set (register|memory|zeropage) & status
                        set_stat    macro       ;setting flags in the processor status register
                                    load_flag \1
                                    pha         ;use stack to load status
                                    plp
                                    endm
                        
                        set_a       macro       ;precharging accu & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda #\1     ;precharge accu
                                    plp
                                    endm
                        
                        set_x       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldx #\1     ;precharge index x
                                    plp
                                    endm
                        
                        set_y       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldy #\1     ;precharge index y
                                    plp
                                    endm
                        
                        set_ax      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;precharge accu
                                    plp
                                    endm
                        
                        set_ay      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,y    ;precharge accu
                                    plp
                                    endm
                        
                        set_z       macro       ;precharging indexed zp & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to zeropage
                                    sta zpt
                                    plp
                                    endm
                        
                        set_zx      macro       ;precharging zp,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed zeropage
                                    sta zpt,x
                                    plp
                                    endm
                        
                        set_abs     macro       ;precharging indexed memory & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to memory
                                    sta abst
                                    plp
                                    endm
                        
                        set_absx    macro       ;precharging abs,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed memory
                                    sta abst,x
                                    plp
                                    endm
                        
                        ;macros to test (register|memory|zeropage) & status & (mask)
                        tst_stat    macro       ;testing flags in the processor status register
                                    php         ;save status
                                    pla         ;use stack to retrieve status
                                    pha
                                    cmp_flag \1
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_a       macro       ;testing result in accu & flags
                                    php         ;save flags
                                    cmp #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_as      macro       ;testing result in accu & flags, save accu
                                    pha
                                    php         ;save flags
                                    cmp #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    pla
                                    endm
                        
                        tst_x       macro       ;testing result in x index & flags
                                    php         ;save flags
                                    cpx #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_y       macro       ;testing result in y index & flags
                                    php         ;save flags
                                    cpy #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_ax      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne     ;
                                    endm
                        
                        tst_ay      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,y    ;test result
                                    trap_ne     ;
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,y    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_z       macro       ;indexed testing result in zp & flags
                                    php         ;save flags
                                    lda zpt
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_zx      macro       ;testing result in zp,x & flags
                                    php         ;save flags
                                    lda zpt,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_abs     macro       ;indexed testing result in memory & flags
                                    php         ;save flags
                                    lda abst
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_absx    macro       ;testing result in abs,x & flags
                                    php         ;save flags
                                    lda abst,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        ; RAM integrity test
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                        ;   uses zpt word as indirect pointer, zpt+2 word as checksum
                                if ram_top > -1
                        check_ram   macro
                                    cld
                                    lda #0
                                    sta zpt         ;set low byte of indirect pointer
                                    sta zpt+3       ;checksum high byte
                                    ldx #11         ;reset modifiable RAM
                        ccs1\?      sta jxi_tab,x   ;JMP indirect page cross area
                                    dex
                                    bpl ccs1\?
                                    clc
                                    ldx #zp_bss-zero_page ;zeropage - write test area
                        ccs3\?      adc zero_page,x
                                    bcc ccs2\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs2\?      inx
                                    bne ccs3\?
                                    ldx #hi(abs1)   ;set high byte of indirect pointer
                                    stx zpt+1
                                    ldy #lo(abs1)   ;data after write & execute test area
                        ccs5\?      adc (zpt),y
                                    bcc ccs4\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs4\?      iny
                                    bne ccs5\?
                                    inx             ;advance RAM high address
                                    stx zpt+1
                                    cpx #ram_top
                                    bne ccs5\?
                                    sta zpt+2       ;checksum low is
                                    cmp ram_chksm   ;checksum low expected
                                    trap_ne         ;checksum mismatch
                                    lda zpt+3       ;checksum high is
                                    cmp ram_chksm+1 ;checksum high expected
                                    trap_ne         ;checksum mismatch
                                    endm
                                else
                        check_ram   macro
                                    ;RAM check disabled - RAM size not set
                                    endm
                                endif
                        
                        next_test   macro           ;make sure, tests don't jump the fence
                                    lda test_case   ;previous test
                                    cmp #test_num
                                    trap_ne         ;test is out of sequence
                        test_num = test_num + 1
                                    lda #test_num   ;*** next tests' number
                                    sta test_case
                                    ;check_ram       ;uncomment to find altered RAM after each test
                                    endm
                        
                            if load_data_direct = 1
                                data
                            else
                                bss                 ;uninitialized segment, copy of data at end of code!
                            endif
0050 =                          org zero_page
                        ;break test interrupt save
0050 =                  irq_a   ds  1               ;a register
0051 =                  irq_x   ds  1               ;x register
                            if I_flag = 2
                        ;masking for I bit in status
                        flag_I_on   ds  1           ;or mask to load flags
                        flag_I_off  ds  1           ;and mask to load flags
                            endif
0052 =                  zpt                         ;5 bytes store/modify test area
                        ;add/subtract operand generation and result/flag prediction
0052 =                  adfc    ds  1               ;carry flag before op
0053 =                  ad1     ds  1               ;operand 1 - accumulator
0054 =                  ad2     ds  1               ;operand 2 - memory / immediate
0055 =                  adrl    ds  1               ;expected result bits 0-7
0056 =                  adrh    ds  1               ;expected result bit 8 (carry)
0057 =                  adrf    ds  1               ;expected flags NV0000ZC (-V in decimal mode)
0058 =                  sb2     ds  1               ;operand 2 complemented for subtract
0059 =                  zp_bss
0059 =                  zp1     db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
005d =                  zp7f    db  $7f             ;test pattern for compare
                        ;logical zeropage operands
005e =                  zpOR    db  0,$1f,$71,$80   ;test pattern for OR
0062 =                  zpAN    db  $0f,$ff,$7f,$80 ;test pattern for AND
0066 =                  zpEO    db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
006a =                  ind1    dw  abs1            ;indirect pointer to pattern in absolute memory
006c =                          dw  abs1+1
006e =                          dw  abs1+2
0070 =                          dw  abs1+3
0072 =                          dw  abs7f
0074 =                  inw1    dw  abs1-$f8        ;indirect pointer for wrap-test pattern
0076 =                  indt    dw  abst            ;indirect pointer to store area in absolute memory
0078 =                          dw  abst+1
007a =                          dw  abst+2
007c =                          dw  abst+3
007e =                  inwt    dw  abst-$f8        ;indirect pointer for wrap-test store
0080 =                  indAN   dw  absAN           ;indirect pointer to AND pattern in absolute memory
0082 =                          dw  absAN+1
0084 =                          dw  absAN+2
0086 =                          dw  absAN+3
0088 =                  indEO   dw  absEO           ;indirect pointer to EOR pattern in absolute memory
008a =                          dw  absEO+1
008c =                          dw  absEO+2
008e =                          dw  absEO+3
0090 =                  indOR   dw  absOR           ;indirect pointer to OR pattern in absolute memory
0092 =                          dw  absOR+1
0094 =                          dw  absOR+2
0096 =                          dw  absOR+3
                        ;add/subtract indirect pointers
0098 =                  adi2    dw  ada2            ;indirect pointer to operand 2 in absolute memory
009a =                  sbi2    dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
009c =                  adiy2   dw  ada2-$ff        ;with offset for indirect indexed
009e =                  sbiy2   dw  sba2-$ff
00a0 =                  zp_bss_end
                        
3200 =                          org data_segment
3200 =                  pg_x    ds  2               ;high JMP indirect address for page cross bug
3202 =                  test_case   ds  1           ;current test number
3203 =                  ram_chksm   ds  2           ;checksum for RAM integrity test
                        ;add/subtract operand copy - abs tests write area
3205 =                  abst                        ;5 bytes store/modify test area
3205 =                  ada2    ds  1               ;operand 2
3206 =                  sba2    ds  1               ;operand 2 complemented for subtract
3207 =                          ds  3               ;fill remaining bytes
320a =                  data_bss
                            if load_data_direct = 1
                        ex_adci adc #0              ;execute immediate opcodes
                                rts
                        ex_sbci sbc #0              ;execute immediate opcodes
                                rts
                            else
320a =                  ex_adci ds  3
320d =                  ex_sbci ds  3
                            endif
3210 =                  abs1    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
3214 =                  abs7f   db  $7f             ;test pattern for compare
                        ;loads
3215 =                  fLDx    db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
3219 =                  rASL                        ;expected result ASL & ROL -carry
3219 =                  rROL    db  $86,$04,$82,0   ; "
321d =                  rROLc   db  $87,$05,$83,1   ;expected result ROL +carry
3221 =                  rLSR                        ;expected result LSR & ROR -carry
3221 =                  rROR    db  $61,$41,$20,0   ; "
3225 =                  rRORc   db  $e1,$c1,$a0,$80 ;expected result ROR +carry
3229 =                  fASL                        ;expected flags for shifts
3229 =                  fROL    db  fnc,fc,fn,fz    ;no carry in
322d =                  fROLc   db  fnc,fc,fn,0     ;carry in
3231 =                  fLSR
3231 =                  fROR    db  fc,0,fc,fz      ;no carry in
3235 =                  fRORc   db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
3239 =                  rINC    db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
323e =                  fINC    db  0,fn,fn,fz,0    ;expected flags for INC/DEC
                        ;logical memory operand
3243 =                  absOR   db  0,$1f,$71,$80   ;test pattern for OR
3247 =                  absAN   db  $0f,$ff,$7f,$80 ;test pattern for AND
324b =                  absEO   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
324f =                  absORa  db  0,$f1,$1f,0     ;test pattern for OR
3253 =                  absANa  db  $f0,$ff,$ff,$ff ;test pattern for AND
3257 =                  absEOa  db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
325b =                  absrlo  db  0,$ff,$7f,$80
325f =                  absflo  db  fz,fn,0,fn
3263 =                  data_bss_end
                        ;define area for page crossing JMP (abs) & JMP (abs,x) test
32f9 =                  jxi_tab equ data_segment + $100 - 7     ;JMP (jxi_tab,x) x=6
32fd =                  ji_tab  equ data_segment + $100 - 3     ;JMP (ji_tab+2)
3300 =                  jxp_tab equ data_segment + $100         ;JMP (jxp_tab-255) x=255
                        
                        
                                code
c000 =                          org code_segment
c000 : d8               start   cld
c001 : a2ff                     ldx #$ff
c003 : 9a                       txs
c004 : a900                     lda #0          ;*** test 0 = initialize
c006 : 8d0232                   sta test_case
0000 =                  test_num = 0
                        
                        ;stop interrupts before initializing BSS
                            if I_flag = 1
                                sei
                            endif
                        
                        ;initialize I/O for report channel
                            if report = 1
c009 : 20b8ed                   jsr report_init
                            endif
                        
                        ;initialize BSS segment
                            if load_data_direct != 1
c00c : a246                     ldx #zp_end-zp_init-1
c00e : bd62ef           ld_zp   lda zp_init,x
c011 : 9559                     sta zp_bss,x
c013 : ca                       dex
c014 : 10f8                     bpl ld_zp
c016 : a258                     ldx #data_end-data_init-1
c018 : bda9ef           ld_data lda data_init,x
c01b : 9d0a32                   sta data_bss,x
c01e : ca                       dex
c01f : 10f7                     bpl ld_data
                              if ROM_vectors = 1
                                ldx #5
                        ld_vect lda vec_init,x
                                sta vec_bss,x
                                dex
                                bpl ld_vect
                              endif
                            endif
                        
                        ;retain status of interrupt flag
                            if I_flag = 2
                                php
                                pla
                                and #4          ;isolate flag
                                sta flag_I_on   ;or mask
                                eor #lo(~4)     ;reverse
                                sta flag_I_off  ;and mask
                            endif
                        
                        ;generate checksum for RAM integrity test
                            if ram_top > -1
                                lda #0
                                sta zpt         ;set low byte of indirect pointer
                                sta ram_chksm+1 ;checksum high byte
                                ldx #11         ;reset modifiable RAM
                        gcs1    sta jxi_tab,x   ;JMP indirect page cross area
                                dex
                                bpl gcs1
                                clc
                                ldx #zp_bss-zero_page ;zeropage - write test area
                        gcs3    adc zero_page,x
                                bcc gcs2
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs2    inx
                                bne gcs3
                                ldx #hi(abs1)   ;set high byte of indirect pointer
                                stx zpt+1
                                ldy #lo(abs1)   ;data after write & execute test area
                        gcs5    adc (zpt),y
                                bcc gcs4
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs4    iny
                                bne gcs5
                                inx             ;advance RAM high address
                                stx zpt+1
                                cpx #ram_top
                                bne gcs5
                                sta ram_chksm   ;checksum complete
                            endif
                                next_test
c021 : ad0232          >            lda test_case   ;previous test
c024 : c900            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
c026 : f003            >        beq skip0002
                       >        trap            ;failed not equal (non zero)
c028 : 20c7ed          >        jsr report_error
                       >
c02b :                 >skip0002
                       >
0001 =                 >test_num = test_num + 1
c02b : a901            >            lda #test_num   ;*** next tests' number
c02d : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ;testing stack operations PHX PHY PLX PLY
c030 : a999                     lda #$99        ;protect a
c032 : a2ff                     ldx #$ff        ;initialize stack
c034 : 9a                       txs
c035 : a255                     ldx #$55
c037 : da                       phx
c038 : a2aa                     ldx #$aa
c03a : da                       phx
c03b : ecfe01                   cpx $1fe        ;on stack ?
                                trap_ne
c03e : f003            >        beq skip0004
                       >        trap            ;failed not equal (non zero)
c040 : 20c7ed          >        jsr report_error
                       >
c043 :                 >skip0004
                        
c043 : ba                       tsx
c044 : e0fd                     cpx #$fd        ;sp decremented?
                                trap_ne
c046 : f003            >        beq skip0006
                       >        trap            ;failed not equal (non zero)
c048 : 20c7ed          >        jsr report_error
                       >
c04b :                 >skip0006
                        
c04b : 7a                       ply
c04c : c0aa                     cpy #$aa        ;successful retreived from stack?
                                trap_ne
c04e : f003            >        beq skip0008
                       >        trap            ;failed not equal (non zero)
c050 : 20c7ed          >        jsr report_error
                       >
c053 :                 >skip0008
                        
c053 : 7a                       ply
c054 : c055                     cpy #$55
                                trap_ne
c056 : f003            >        beq skip0010
                       >        trap            ;failed not equal (non zero)
c058 : 20c7ed          >        jsr report_error
                       >
c05b :                 >skip0010
                        
c05b : ccff01                   cpy $1ff        ;remains on stack?
                                trap_ne
c05e : f003            >        beq skip0012
                       >        trap            ;failed not equal (non zero)
c060 : 20c7ed          >        jsr report_error
                       >
c063 :                 >skip0012
                        
c063 : ba                       tsx
c064 : e0ff                     cpx #$ff        ;sp incremented?
                                trap_ne
c066 : f003            >        beq skip0014
                       >        trap            ;failed not equal (non zero)
c068 : 20c7ed          >        jsr report_error
                       >
c06b :                 >skip0014
                        
                        
c06b : a0a5                     ldy #$a5
c06d : 5a                       phy
c06e : a05a                     ldy #$5a
c070 : 5a                       phy
c071 : ccfe01                   cpy $1fe        ;on stack ?
                                trap_ne
c074 : f003            >        beq skip0016
                       >        trap            ;failed not equal (non zero)
c076 : 20c7ed          >        jsr report_error
                       >
c079 :                 >skip0016
                        
c079 : ba                       tsx
c07a : e0fd                     cpx #$fd        ;sp decremented?
                                trap_ne
c07c : f003            >        beq skip0018
                       >        trap            ;failed not equal (non zero)
c07e : 20c7ed          >        jsr report_error
                       >
c081 :                 >skip0018
                        
c081 : fa                       plx
c082 : e05a                     cpx #$5a        ;successful retreived from stack?
                                trap_ne
c084 : f003            >        beq skip0020
                       >        trap            ;failed not equal (non zero)
c086 : 20c7ed          >        jsr report_error
                       >
c089 :                 >skip0020
                        
c089 : fa                       plx
c08a : e0a5                     cpx #$a5
                                trap_ne
c08c : f003            >        beq skip0022
                       >        trap            ;failed not equal (non zero)
c08e : 20c7ed          >        jsr report_error
                       >
c091 :                 >skip0022
                        
c091 : ecff01                   cpx $1ff        ;remains on stack?
                                trap_ne
c094 : f003            >        beq skip0024
                       >        trap            ;failed not equal (non zero)
c096 : 20c7ed          >        jsr report_error
                       >
c099 :                 >skip0024
                        
c099 : ba                       tsx
c09a : e0ff                     cpx #$ff        ;sp incremented?
                                trap_ne
c09c : f003            >        beq skip0026
                       >        trap            ;failed not equal (non zero)
c09e : 20c7ed          >        jsr report_error
                       >
c0a1 :                 >skip0026
                        
c0a1 : c999                     cmp #$99        ;unchanged?
                                trap_ne
c0a3 : f003            >        beq skip0028
                       >        trap            ;failed not equal (non zero)
c0a5 : 20c7ed          >        jsr report_error
                       >
c0a8 :                 >skip0028
                        
                                next_test
c0a8 : ad0232          >            lda test_case   ;previous test
c0ab : c901            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
c0ad : f003            >        beq skip0031
                       >        trap            ;failed not equal (non zero)
c0af : 20c7ed          >        jsr report_error
                       >
c0b2 :                 >skip0031
                       >
0002 =                 >test_num = test_num + 1
c0b2 : a902            >            lda #test_num   ;*** next tests' number
c0b4 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; test PHX does not alter flags or X but PLX does
c0b7 : a0aa                     ldy #$aa        ;protect y
                                set_x 1,$ff     ;push
                       >            load_flag $ff     
c0b9 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
c0bb : 48              >            pha         ;use stack to load status
c0bc : a201            >            ldx #1     ;precharge index x
c0be : 28              >            plp
                        
c0bf : da                       phx
                                tst_x 1,$ff
c0c0 : 08              >            php         ;save flags
c0c1 : e001            >            cpx #1     ;test result
                       >            trap_ne
c0c3 : f003            >        beq skip0036
                       >        trap            ;failed not equal (non zero)
c0c5 : 20c7ed          >        jsr report_error
                       >
c0c8 :                 >skip0036
                       >
c0c8 : 68              >            pla         ;load status
c0c9 : 48              >            pha
                       >            cmp_flag $ff
c0ca : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c0cc : f003            >        beq skip0039
                       >        trap            ;failed not equal (non zero)
c0ce : 20c7ed          >        jsr report_error
                       >
c0d1 :                 >skip0039
                       >
c0d1 : 28              >            plp         ;restore status
                        
                                set_x 0,0
                       >            load_flag 0
c0d2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
c0d4 : 48              >            pha         ;use stack to load status
c0d5 : a200            >            ldx #0     ;precharge index x
c0d7 : 28              >            plp
                        
c0d8 : da                       phx
                                tst_x 0,0
c0d9 : 08              >            php         ;save flags
c0da : e000            >            cpx #0     ;test result
                       >            trap_ne
c0dc : f003            >        beq skip0044
                       >        trap            ;failed not equal (non zero)
c0de : 20c7ed          >        jsr report_error
                       >
c0e1 :                 >skip0044
                       >
c0e1 : 68              >            pla         ;load status
c0e2 : 48              >            pha
                       >            cmp_flag 0
c0e3 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c0e5 : f003            >        beq skip0047
                       >        trap            ;failed not equal (non zero)
c0e7 : 20c7ed          >        jsr report_error
                       >
c0ea :                 >skip0047
                       >
c0ea : 28              >            plp         ;restore status
                        
                                set_x $ff,$ff
                       >            load_flag $ff
c0eb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
c0ed : 48              >            pha         ;use stack to load status
c0ee : a2ff            >            ldx #$ff     ;precharge index x
c0f0 : 28              >            plp
                        
c0f1 : da                       phx
                                tst_x $ff,$ff
c0f2 : 08              >            php         ;save flags
c0f3 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
c0f5 : f003            >        beq skip0052
                       >        trap            ;failed not equal (non zero)
c0f7 : 20c7ed          >        jsr report_error
                       >
c0fa :                 >skip0052
                       >
c0fa : 68              >            pla         ;load status
c0fb : 48              >            pha
                       >            cmp_flag $ff
c0fc : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c0fe : f003            >        beq skip0055
                       >        trap            ;failed not equal (non zero)
c100 : 20c7ed          >        jsr report_error
                       >
c103 :                 >skip0055
                       >
c103 : 28              >            plp         ;restore status
                        
                                set_x 1,0
                       >            load_flag 0
c104 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
c106 : 48              >            pha         ;use stack to load status
c107 : a201            >            ldx #1     ;precharge index x
c109 : 28              >            plp
                        
c10a : da                       phx
                                tst_x 1,0
c10b : 08              >            php         ;save flags
c10c : e001            >            cpx #1     ;test result
                       >            trap_ne
c10e : f003            >        beq skip0060
                       >        trap            ;failed not equal (non zero)
c110 : 20c7ed          >        jsr report_error
                       >
c113 :                 >skip0060
                       >
c113 : 68              >            pla         ;load status
c114 : 48              >            pha
                       >            cmp_flag 0
c115 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c117 : f003            >        beq skip0063
                       >        trap            ;failed not equal (non zero)
c119 : 20c7ed          >        jsr report_error
                       >
c11c :                 >skip0063
                       >
c11c : 28              >            plp         ;restore status
                        
                                set_x 0,$ff
                       >            load_flag $ff
c11d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
c11f : 48              >            pha         ;use stack to load status
c120 : a200            >            ldx #0     ;precharge index x
c122 : 28              >            plp
                        
c123 : da                       phx
                                tst_x 0,$ff
c124 : 08              >            php         ;save flags
c125 : e000            >            cpx #0     ;test result
                       >            trap_ne
c127 : f003            >        beq skip0068
                       >        trap            ;failed not equal (non zero)
c129 : 20c7ed          >        jsr report_error
                       >
c12c :                 >skip0068
                       >
c12c : 68              >            pla         ;load status
c12d : 48              >            pha
                       >            cmp_flag $ff
c12e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c130 : f003            >        beq skip0071
                       >        trap            ;failed not equal (non zero)
c132 : 20c7ed          >        jsr report_error
                       >
c135 :                 >skip0071
                       >
c135 : 28              >            plp         ;restore status
                        
                                set_x $ff,0
                       >            load_flag 0
c136 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
c138 : 48              >            pha         ;use stack to load status
c139 : a2ff            >            ldx #$ff     ;precharge index x
c13b : 28              >            plp
                        
c13c : da                       phx
                                tst_x $ff,0
c13d : 08              >            php         ;save flags
c13e : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
c140 : f003            >        beq skip0076
                       >        trap            ;failed not equal (non zero)
c142 : 20c7ed          >        jsr report_error
                       >
c145 :                 >skip0076
                       >
c145 : 68              >            pla         ;load status
c146 : 48              >            pha
                       >            cmp_flag 0
c147 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c149 : f003            >        beq skip0079
                       >        trap            ;failed not equal (non zero)
c14b : 20c7ed          >        jsr report_error
                       >
c14e :                 >skip0079
                       >
c14e : 28              >            plp         ;restore status
                        
                                set_x 0,$ff     ;pull
                       >            load_flag $ff     
c14f : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
c151 : 48              >            pha         ;use stack to load status
c152 : a200            >            ldx #0     ;precharge index x
c154 : 28              >            plp
                        
c155 : fa                       plx
                                tst_x $ff,$ff-zero
c156 : 08              >            php         ;save flags
c157 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
c159 : f003            >        beq skip0084
                       >        trap            ;failed not equal (non zero)
c15b : 20c7ed          >        jsr report_error
                       >
c15e :                 >skip0084
                       >
c15e : 68              >            pla         ;load status
c15f : 48              >            pha
                       >            cmp_flag $ff-zero
c160 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c162 : f003            >        beq skip0087
                       >        trap            ;failed not equal (non zero)
c164 : 20c7ed          >        jsr report_error
                       >
c167 :                 >skip0087
                       >
c167 : 28              >            plp         ;restore status
                        
                                set_x $ff,0
                       >            load_flag 0
c168 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
c16a : 48              >            pha         ;use stack to load status
c16b : a2ff            >            ldx #$ff     ;precharge index x
c16d : 28              >            plp
                        
c16e : fa                       plx
                                tst_x 0,zero
c16f : 08              >            php         ;save flags
c170 : e000            >            cpx #0     ;test result
                       >            trap_ne
c172 : f003            >        beq skip0092
                       >        trap            ;failed not equal (non zero)
c174 : 20c7ed          >        jsr report_error
                       >
c177 :                 >skip0092
                       >
c177 : 68              >            pla         ;load status
c178 : 48              >            pha
                       >            cmp_flag zero
c179 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c17b : f003            >        beq skip0095
                       >        trap            ;failed not equal (non zero)
c17d : 20c7ed          >        jsr report_error
                       >
c180 :                 >skip0095
                       >
c180 : 28              >            plp         ;restore status
                        
                                set_x $fe,$ff
                       >            load_flag $ff
c181 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
c183 : 48              >            pha         ;use stack to load status
c184 : a2fe            >            ldx #$fe     ;precharge index x
c186 : 28              >            plp
                        
c187 : fa                       plx
                                tst_x 1,$ff-zero-minus
c188 : 08              >            php         ;save flags
c189 : e001            >            cpx #1     ;test result
                       >            trap_ne
c18b : f003            >        beq skip0100
                       >        trap            ;failed not equal (non zero)
c18d : 20c7ed          >        jsr report_error
                       >
c190 :                 >skip0100
                       >
c190 : 68              >            pla         ;load status
c191 : 48              >            pha
                       >            cmp_flag $ff-zero-minus
c192 : c97d            >            cmp #($ff-zero-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c194 : f003            >        beq skip0103
                       >        trap            ;failed not equal (non zero)
c196 : 20c7ed          >        jsr report_error
                       >
c199 :                 >skip0103
                       >
c199 : 28              >            plp         ;restore status
                        
                                set_x 0,0
                       >            load_flag 0
c19a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
c19c : 48              >            pha         ;use stack to load status
c19d : a200            >            ldx #0     ;precharge index x
c19f : 28              >            plp
                        
c1a0 : fa                       plx
                                tst_x $ff,minus
c1a1 : 08              >            php         ;save flags
c1a2 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
c1a4 : f003            >        beq skip0108
                       >        trap            ;failed not equal (non zero)
c1a6 : 20c7ed          >        jsr report_error
                       >
c1a9 :                 >skip0108
                       >
c1a9 : 68              >            pla         ;load status
c1aa : 48              >            pha
                       >            cmp_flag minus
c1ab : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c1ad : f003            >        beq skip0111
                       >        trap            ;failed not equal (non zero)
c1af : 20c7ed          >        jsr report_error
                       >
c1b2 :                 >skip0111
                       >
c1b2 : 28              >            plp         ;restore status
                        
                                set_x $ff,$ff
                       >            load_flag $ff
c1b3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
c1b5 : 48              >            pha         ;use stack to load status
c1b6 : a2ff            >            ldx #$ff     ;precharge index x
c1b8 : 28              >            plp
                        
c1b9 : fa                       plx
                                tst_x 0,$ff-minus
c1ba : 08              >            php         ;save flags
c1bb : e000            >            cpx #0     ;test result
                       >            trap_ne
c1bd : f003            >        beq skip0116
                       >        trap            ;failed not equal (non zero)
c1bf : 20c7ed          >        jsr report_error
                       >
c1c2 :                 >skip0116
                       >
c1c2 : 68              >            pla         ;load status
c1c3 : 48              >            pha
                       >            cmp_flag $ff-minus
c1c4 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c1c6 : f003            >        beq skip0119
                       >        trap            ;failed not equal (non zero)
c1c8 : 20c7ed          >        jsr report_error
                       >
c1cb :                 >skip0119
                       >
c1cb : 28              >            plp         ;restore status
                        
                                set_x $fe,0
                       >            load_flag 0
c1cc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
c1ce : 48              >            pha         ;use stack to load status
c1cf : a2fe            >            ldx #$fe     ;precharge index x
c1d1 : 28              >            plp
                        
c1d2 : fa                       plx
                                tst_x 1,0
c1d3 : 08              >            php         ;save flags
c1d4 : e001            >            cpx #1     ;test result
                       >            trap_ne
c1d6 : f003            >        beq skip0124
                       >        trap            ;failed not equal (non zero)
c1d8 : 20c7ed          >        jsr report_error
                       >
c1db :                 >skip0124
                       >
c1db : 68              >            pla         ;load status
c1dc : 48              >            pha
                       >            cmp_flag 0
c1dd : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c1df : f003            >        beq skip0127
                       >        trap            ;failed not equal (non zero)
c1e1 : 20c7ed          >        jsr report_error
                       >
c1e4 :                 >skip0127
                       >
c1e4 : 28              >            plp         ;restore status
                        
c1e5 : c0aa                     cpy #$aa        ;Y unchanged
                                trap_ne
c1e7 : f003            >        beq skip0129
                       >        trap            ;failed not equal (non zero)
c1e9 : 20c7ed          >        jsr report_error
                       >
c1ec :                 >skip0129
                        
                                next_test
c1ec : ad0232          >            lda test_case   ;previous test
c1ef : c902            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
c1f1 : f003            >        beq skip0132
                       >        trap            ;failed not equal (non zero)
c1f3 : 20c7ed          >        jsr report_error
                       >
c1f6 :                 >skip0132
                       >
0003 =                 >test_num = test_num + 1
c1f6 : a903            >            lda #test_num   ;*** next tests' number
c1f8 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; test PHY does not alter flags or Y but PLY does
c1fb : a255                     ldx #$55        ;x & a protected
                                set_y 1,$ff     ;push
                       >            load_flag $ff     
c1fd : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
c1ff : 48              >            pha         ;use stack to load status
c200 : a001            >            ldy #1     ;precharge index y
c202 : 28              >            plp
                        
c203 : 5a                       phy
                                tst_y 1,$ff
c204 : 08              >            php         ;save flags
c205 : c001            >            cpy #1     ;test result
                       >            trap_ne
c207 : f003            >        beq skip0137
                       >        trap            ;failed not equal (non zero)
c209 : 20c7ed          >        jsr report_error
                       >
c20c :                 >skip0137
                       >
c20c : 68              >            pla         ;load status
c20d : 48              >            pha
                       >            cmp_flag $ff
c20e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c210 : f003            >        beq skip0140
                       >        trap            ;failed not equal (non zero)
c212 : 20c7ed          >        jsr report_error
                       >
c215 :                 >skip0140
                       >
c215 : 28              >            plp         ;restore status
                        
                                set_y 0,0
                       >            load_flag 0
c216 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
c218 : 48              >            pha         ;use stack to load status
c219 : a000            >            ldy #0     ;precharge index y
c21b : 28              >            plp
                        
c21c : 5a                       phy
                                tst_y 0,0
c21d : 08              >            php         ;save flags
c21e : c000            >            cpy #0     ;test result
                       >            trap_ne
c220 : f003            >        beq skip0145
                       >        trap            ;failed not equal (non zero)
c222 : 20c7ed          >        jsr report_error
                       >
c225 :                 >skip0145
                       >
c225 : 68              >            pla         ;load status
c226 : 48              >            pha
                       >            cmp_flag 0
c227 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c229 : f003            >        beq skip0148
                       >        trap            ;failed not equal (non zero)
c22b : 20c7ed          >        jsr report_error
                       >
c22e :                 >skip0148
                       >
c22e : 28              >            plp         ;restore status
                        
                                set_y $ff,$ff
                       >            load_flag $ff
c22f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
c231 : 48              >            pha         ;use stack to load status
c232 : a0ff            >            ldy #$ff     ;precharge index y
c234 : 28              >            plp
                        
c235 : 5a                       phy
                                tst_y $ff,$ff
c236 : 08              >            php         ;save flags
c237 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
c239 : f003            >        beq skip0153
                       >        trap            ;failed not equal (non zero)
c23b : 20c7ed          >        jsr report_error
                       >
c23e :                 >skip0153
                       >
c23e : 68              >            pla         ;load status
c23f : 48              >            pha
                       >            cmp_flag $ff
c240 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c242 : f003            >        beq skip0156
                       >        trap            ;failed not equal (non zero)
c244 : 20c7ed          >        jsr report_error
                       >
c247 :                 >skip0156
                       >
c247 : 28              >            plp         ;restore status
                        
                                set_y 1,0
                       >            load_flag 0
c248 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
c24a : 48              >            pha         ;use stack to load status
c24b : a001            >            ldy #1     ;precharge index y
c24d : 28              >            plp
                        
c24e : 5a                       phy
                                tst_y 1,0
c24f : 08              >            php         ;save flags
c250 : c001            >            cpy #1     ;test result
                       >            trap_ne
c252 : f003            >        beq skip0161
                       >        trap            ;failed not equal (non zero)
c254 : 20c7ed          >        jsr report_error
                       >
c257 :                 >skip0161
                       >
c257 : 68              >            pla         ;load status
c258 : 48              >            pha
                       >            cmp_flag 0
c259 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c25b : f003            >        beq skip0164
                       >        trap            ;failed not equal (non zero)
c25d : 20c7ed          >        jsr report_error
                       >
c260 :                 >skip0164
                       >
c260 : 28              >            plp         ;restore status
                        
                                set_y 0,$ff
                       >            load_flag $ff
c261 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
c263 : 48              >            pha         ;use stack to load status
c264 : a000            >            ldy #0     ;precharge index y
c266 : 28              >            plp
                        
c267 : 5a                       phy
                                tst_y 0,$ff
c268 : 08              >            php         ;save flags
c269 : c000            >            cpy #0     ;test result
                       >            trap_ne
c26b : f003            >        beq skip0169
                       >        trap            ;failed not equal (non zero)
c26d : 20c7ed          >        jsr report_error
                       >
c270 :                 >skip0169
                       >
c270 : 68              >            pla         ;load status
c271 : 48              >            pha
                       >            cmp_flag $ff
c272 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c274 : f003            >        beq skip0172
                       >        trap            ;failed not equal (non zero)
c276 : 20c7ed          >        jsr report_error
                       >
c279 :                 >skip0172
                       >
c279 : 28              >            plp         ;restore status
                        
                                set_y $ff,0
                       >            load_flag 0
c27a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
c27c : 48              >            pha         ;use stack to load status
c27d : a0ff            >            ldy #$ff     ;precharge index y
c27f : 28              >            plp
                        
c280 : 5a                       phy
                                tst_y $ff,0
c281 : 08              >            php         ;save flags
c282 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
c284 : f003            >        beq skip0177
                       >        trap            ;failed not equal (non zero)
c286 : 20c7ed          >        jsr report_error
                       >
c289 :                 >skip0177
                       >
c289 : 68              >            pla         ;load status
c28a : 48              >            pha
                       >            cmp_flag 0
c28b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c28d : f003            >        beq skip0180
                       >        trap            ;failed not equal (non zero)
c28f : 20c7ed          >        jsr report_error
                       >
c292 :                 >skip0180
                       >
c292 : 28              >            plp         ;restore status
                        
                                set_y 0,$ff     ;pull
                       >            load_flag $ff     
c293 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
c295 : 48              >            pha         ;use stack to load status
c296 : a000            >            ldy #0     ;precharge index y
c298 : 28              >            plp
                        
c299 : 7a                       ply
                                tst_y $ff,$ff-zero
c29a : 08              >            php         ;save flags
c29b : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
c29d : f003            >        beq skip0185
                       >        trap            ;failed not equal (non zero)
c29f : 20c7ed          >        jsr report_error
                       >
c2a2 :                 >skip0185
                       >
c2a2 : 68              >            pla         ;load status
c2a3 : 48              >            pha
                       >            cmp_flag $ff-zero
c2a4 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c2a6 : f003            >        beq skip0188
                       >        trap            ;failed not equal (non zero)
c2a8 : 20c7ed          >        jsr report_error
                       >
c2ab :                 >skip0188
                       >
c2ab : 28              >            plp         ;restore status
                        
                                set_y $ff,0
                       >            load_flag 0
c2ac : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
c2ae : 48              >            pha         ;use stack to load status
c2af : a0ff            >            ldy #$ff     ;precharge index y
c2b1 : 28              >            plp
                        
c2b2 : 7a                       ply
                                tst_y 0,zero
c2b3 : 08              >            php         ;save flags
c2b4 : c000            >            cpy #0     ;test result
                       >            trap_ne
c2b6 : f003            >        beq skip0193
                       >        trap            ;failed not equal (non zero)
c2b8 : 20c7ed          >        jsr report_error
                       >
c2bb :                 >skip0193
                       >
c2bb : 68              >            pla         ;load status
c2bc : 48              >            pha
                       >            cmp_flag zero
c2bd : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c2bf : f003            >        beq skip0196
                       >        trap            ;failed not equal (non zero)
c2c1 : 20c7ed          >        jsr report_error
                       >
c2c4 :                 >skip0196
                       >
c2c4 : 28              >            plp         ;restore status
                        
                                set_y $fe,$ff
                       >            load_flag $ff
c2c5 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
c2c7 : 48              >            pha         ;use stack to load status
c2c8 : a0fe            >            ldy #$fe     ;precharge index y
c2ca : 28              >            plp
                        
c2cb : 7a                       ply
                                tst_y 1,$ff-zero-minus
c2cc : 08              >            php         ;save flags
c2cd : c001            >            cpy #1     ;test result
                       >            trap_ne
c2cf : f003            >        beq skip0201
                       >        trap            ;failed not equal (non zero)
c2d1 : 20c7ed          >        jsr report_error
                       >
c2d4 :                 >skip0201
                       >
c2d4 : 68              >            pla         ;load status
c2d5 : 48              >            pha
                       >            cmp_flag $ff-zero-minus
c2d6 : c97d            >            cmp #($ff-zero-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c2d8 : f003            >        beq skip0204
                       >        trap            ;failed not equal (non zero)
c2da : 20c7ed          >        jsr report_error
                       >
c2dd :                 >skip0204
                       >
c2dd : 28              >            plp         ;restore status
                        
                                set_y 0,0
                       >            load_flag 0
c2de : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
c2e0 : 48              >            pha         ;use stack to load status
c2e1 : a000            >            ldy #0     ;precharge index y
c2e3 : 28              >            plp
                        
c2e4 : 7a                       ply
                                tst_y $ff,minus
c2e5 : 08              >            php         ;save flags
c2e6 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
c2e8 : f003            >        beq skip0209
                       >        trap            ;failed not equal (non zero)
c2ea : 20c7ed          >        jsr report_error
                       >
c2ed :                 >skip0209
                       >
c2ed : 68              >            pla         ;load status
c2ee : 48              >            pha
                       >            cmp_flag minus
c2ef : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c2f1 : f003            >        beq skip0212
                       >        trap            ;failed not equal (non zero)
c2f3 : 20c7ed          >        jsr report_error
                       >
c2f6 :                 >skip0212
                       >
c2f6 : 28              >            plp         ;restore status
                        
                                set_y $ff,$ff
                       >            load_flag $ff
c2f7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
c2f9 : 48              >            pha         ;use stack to load status
c2fa : a0ff            >            ldy #$ff     ;precharge index y
c2fc : 28              >            plp
                        
c2fd : 7a                       ply
                                tst_y 0,$ff-minus
c2fe : 08              >            php         ;save flags
c2ff : c000            >            cpy #0     ;test result
                       >            trap_ne
c301 : f003            >        beq skip0217
                       >        trap            ;failed not equal (non zero)
c303 : 20c7ed          >        jsr report_error
                       >
c306 :                 >skip0217
                       >
c306 : 68              >            pla         ;load status
c307 : 48              >            pha
                       >            cmp_flag $ff-minus
c308 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c30a : f003            >        beq skip0220
                       >        trap            ;failed not equal (non zero)
c30c : 20c7ed          >        jsr report_error
                       >
c30f :                 >skip0220
                       >
c30f : 28              >            plp         ;restore status
                        
                                set_y $fe,0
                       >            load_flag 0
c310 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
c312 : 48              >            pha         ;use stack to load status
c313 : a0fe            >            ldy #$fe     ;precharge index y
c315 : 28              >            plp
                        
c316 : 7a                       ply
                                tst_y 1,0
c317 : 08              >            php         ;save flags
c318 : c001            >            cpy #1     ;test result
                       >            trap_ne
c31a : f003            >        beq skip0225
                       >        trap            ;failed not equal (non zero)
c31c : 20c7ed          >        jsr report_error
                       >
c31f :                 >skip0225
                       >
c31f : 68              >            pla         ;load status
c320 : 48              >            pha
                       >            cmp_flag 0
c321 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c323 : f003            >        beq skip0228
                       >        trap            ;failed not equal (non zero)
c325 : 20c7ed          >        jsr report_error
                       >
c328 :                 >skip0228
                       >
c328 : 28              >            plp         ;restore status
                        
c329 : e055                     cpx #$55        ;x unchanged?
                                trap_ne
c32b : f003            >        beq skip0230
                       >        trap            ;failed not equal (non zero)
c32d : 20c7ed          >        jsr report_error
                       >
c330 :                 >skip0230
                        
                                next_test
c330 : ad0232          >            lda test_case   ;previous test
c333 : c903            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
c335 : f003            >        beq skip0233
                       >        trap            ;failed not equal (non zero)
c337 : 20c7ed          >        jsr report_error
                       >
c33a :                 >skip0233
                       >
0004 =                 >test_num = test_num + 1
c33a : a904            >            lda #test_num   ;*** next tests' number
c33c : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; PC modifying instructions (BRA, BBR, BBS, 1, 2, 3 byte NOPs, JMP(abs,x))
                        ; testing unconditional branch BRA
                        
c33f : a281                     ldx #$81        ;protect unused registers
c341 : a07e                     ldy #$7e
                                set_a 0,$ff
                       >            load_flag $ff
c343 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
c345 : 48              >            pha         ;use stack to load status
c346 : a900            >            lda #0     ;precharge accu
c348 : 28              >            plp
                        
c349 : 8003                     bra br1         ;branch should always be taken
                                trap
c34b : 20c7ed          >        jsr report_error
                        
c34e :                  br1
                                tst_a 0,$ff
c34e : 08              >            php         ;save flags
c34f : c900            >            cmp #0     ;test result
                       >            trap_ne
c351 : f003            >        beq skip0239
                       >        trap            ;failed not equal (non zero)
c353 : 20c7ed          >        jsr report_error
                       >
c356 :                 >skip0239
                       >
c356 : 68              >            pla         ;load status
c357 : 48              >            pha
                       >            cmp_flag $ff
c358 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c35a : f003            >        beq skip0242
                       >        trap            ;failed not equal (non zero)
c35c : 20c7ed          >        jsr report_error
                       >
c35f :                 >skip0242
                       >
c35f : 28              >            plp         ;restore status
                        
                                set_a $ff,0
                       >            load_flag 0
c360 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
c362 : 48              >            pha         ;use stack to load status
c363 : a9ff            >            lda #$ff     ;precharge accu
c365 : 28              >            plp
                        
c366 : 8003                     bra br2         ;branch should always be taken
                                trap
c368 : 20c7ed          >        jsr report_error
                        
c36b :                  br2
                                tst_a $ff,0
c36b : 08              >            php         ;save flags
c36c : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
c36e : f003            >        beq skip0248
                       >        trap            ;failed not equal (non zero)
c370 : 20c7ed          >        jsr report_error
                       >
c373 :                 >skip0248
                       >
c373 : 68              >            pla         ;load status
c374 : 48              >            pha
                       >            cmp_flag 0
c375 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c377 : f003            >        beq skip0251
                       >        trap            ;failed not equal (non zero)
c379 : 20c7ed          >        jsr report_error
                       >
c37c :                 >skip0251
                       >
c37c : 28              >            plp         ;restore status
                        
c37d : e081                     cpx #$81
                                trap_ne
c37f : f003            >        beq skip0253
                       >        trap            ;failed not equal (non zero)
c381 : 20c7ed          >        jsr report_error
                       >
c384 :                 >skip0253
                        
c384 : c07e                     cpy #$7e
                                trap_ne
c386 : f003            >        beq skip0255
                       >        trap            ;failed not equal (non zero)
c388 : 20c7ed          >        jsr report_error
                       >
c38b :                 >skip0255
                        
                                next_test
c38b : ad0232          >            lda test_case   ;previous test
c38e : c904            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
c390 : f003            >        beq skip0258
                       >        trap            ;failed not equal (non zero)
c392 : 20c7ed          >        jsr report_error
                       >
c395 :                 >skip0258
                       >
0005 =                 >test_num = test_num + 1
c395 : a905            >            lda #test_num   ;*** next tests' number
c397 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
c39a : a000                     ldy #0          ;branch range test
c39c : 8076                     bra bra0
                        
c39e : c001             bra1    cpy #1
                                trap_ne         ;long range backward
c3a0 : f003            >        beq skip0260
                       >        trap            ;failed not equal (non zero)
c3a2 : 20c7ed          >        jsr report_error
                       >
c3a5 :                 >skip0260
                        
c3a5 : c8                       iny
c3a6 : 8062                     bra bra2
                        
c3a8 : c003             bra3    cpy #3
                                trap_ne         ;long range backward
c3aa : f003            >        beq skip0262
                       >        trap            ;failed not equal (non zero)
c3ac : 20c7ed          >        jsr report_error
                       >
c3af :                 >skip0262
                        
c3af : c8                       iny
c3b0 : 804e                     bra bra4
                        
c3b2 : c005             bra5    cpy #5
                                trap_ne         ;long range backward
c3b4 : f003            >        beq skip0264
                       >        trap            ;failed not equal (non zero)
c3b6 : 20c7ed          >        jsr report_error
                       >
c3b9 :                 >skip0264
                        
c3b9 : c8                       iny
c3ba : a000                     ldy #0
c3bc : 8004                     bra brf0
                        
c3be : c8                       iny
c3bf : c8                       iny
c3c0 : c8                       iny
c3c1 : c8                       iny
c3c2 : 8003             brf0    bra brf1
                        
c3c4 : c8                       iny
c3c5 : c8                       iny
c3c6 : c8                       iny
c3c7 : c8               brf1    iny
c3c8 : 8002                     bra brf2
                        
c3ca : c8                       iny
c3cb : c8                       iny
c3cc : c8               brf2    iny
c3cd : c8                       iny
c3ce : 8001                     bra brf3
                        
c3d0 : c8                       iny
c3d1 : c8               brf3    iny
c3d2 : c8                       iny
c3d3 : c8                       iny
c3d4 : 8000                     bra brf4
                        
c3d6 : c8               brf4    iny
c3d7 : c8                       iny
c3d8 : c8                       iny
c3d9 : c8                       iny
c3da : c00a                     cpy #10
                                trap_ne     ;short range forward
c3dc : f003            >        beq skip0266
                       >        trap            ;failed not equal (non zero)
c3de : 20c7ed          >        jsr report_error
                       >
c3e1 :                 >skip0266
                        
c3e1 : 8012                     bra brb0
                        
c3e3 : 88               brb4    dey
c3e4 : 88                       dey
c3e5 : 88                       dey
c3e6 : 88                       dey
c3e7 : 800e                     bra brb5
                        
c3e9 : 88               brb3    dey
c3ea : 88                       dey
c3eb : 88                       dey
c3ec : 80f5                     bra brb4
                        
c3ee : 88               brb2    dey
c3ef : 88                       dey
c3f0 : 80f7                     bra brb3
                        
c3f2 : 88               brb1    dey
c3f3 : 80f9                     bra brb2
                        
c3f5 : 80fb             brb0    bra brb1
                        
c3f7 : c000             brb5    cpy #0
                                trap_ne     ;short range backward
c3f9 : f003            >        beq skip0268
                       >        trap            ;failed not equal (non zero)
c3fb : 20c7ed          >        jsr report_error
                       >
c3fe :                 >skip0268
                        
c3fe : 801e                     bra bra6
                        
c400 : c004             bra4    cpy #4
                                trap_ne     ;long range forward
c402 : f003            >        beq skip0270
                       >        trap            ;failed not equal (non zero)
c404 : 20c7ed          >        jsr report_error
                       >
c407 :                 >skip0270
                        
c407 : c8                       iny
c408 : 80a8                     bra bra5
                        
c40a : c002             bra2    cpy #2
                                trap_ne     ;long range forward
c40c : f003            >        beq skip0272
                       >        trap            ;failed not equal (non zero)
c40e : 20c7ed          >        jsr report_error
                       >
c411 :                 >skip0272
                        
c411 : c8                       iny
c412 : 8094                     bra bra3
                        
c414 : c000             bra0    cpy #0
                                trap_ne     ;long range forward
c416 : f003            >        beq skip0274
                       >        trap            ;failed not equal (non zero)
c418 : 20c7ed          >        jsr report_error
                       >
c41b :                 >skip0274
                        
c41b : c8                       iny
c41c : 8080                     bra bra1
                        
c41e :                  bra6
                                next_test
c41e : ad0232          >            lda test_case   ;previous test
c421 : c905            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
c423 : f003            >        beq skip0277
                       >        trap            ;failed not equal (non zero)
c425 : 20c7ed          >        jsr report_error
                       >
c428 :                 >skip0277
                       >
0006 =                 >test_num = test_num + 1
c428 : a906            >            lda #test_num   ;*** next tests' number
c42a : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                            if rkwl_wdc_op = 1
                        ; testing BBR & BBS
                        
                        bbt     macro           ;\1 = bitnum
                                lda #(1<<\1)    ;testing 1 bit on
                                sta zpt
                                set_a $33,0     ;with flags off
                                bbr \1,zpt,fail1\?
                                bbs \1,zpt,ok1\?
                                trap            ;bbs branch not taken
                        fail1\?
                                trap            ;bbr branch taken
                        ok1\?
                                tst_a $33,0
                                set_a $cc,$ff   ;with flags on
                                bbr \1,zpt,fail2\?
                                bbs \1,zpt,ok2\?
                                trap            ;bbs branch not taken
                        fail2\?
                                trap            ;bbr branch taken
                        ok2\?
                                tst_a $cc,$ff
                                lda zpt
                                cmp #(1<<\1)
                                trap_ne         ;zp altered
                                lda #$ff-(1<<\1) ;testing 1 bit off
                                sta zpt
                                set_a $33,0     ;with flags off
                                bbs \1,zpt,fail3\?
                                bbr \1,zpt,ok3\?
                                trap            ;bbr branch not taken
                        fail3\?
                                trap            ;bbs branch taken
                        ok3\?
                                tst_a $33,0
                                set_a $cc,$ff   ;with flags on
                                bbs \1,zpt,fail4\?
                                bbr \1,zpt,ok4\?
                                trap            ;bbr branch not taken
                        fail4\?
                                trap            ;bbs branch taken
                        ok4\?
                                tst_a $cc,$ff
                                lda zpt
                                cmp #$ff-(1<<\1)
                                trap_ne         ;zp altered
                                endm
                        
c42d : a211                     ldx #$11        ;test bbr/bbs integrity
c42f : a022                     ldy #$22
                                bbt 0
c431 : a901            >        lda #(1<<0)    ;testing 1 bit on
c433 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
c435 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
c437 : 48              >            pha         ;use stack to load status
c438 : a933            >            lda #$33     ;precharge accu
c43a : 28              >            plp
                       >
c43b : 0f5206          >        bbr 0,zpt,fail10279
c43e : 8f5206          >        bbs 0,zpt,ok10279
                       >        trap            ;bbs branch not taken
c441 : 20c7ed          >        jsr report_error
                       >
c444 :                 >fail10279
                       >        trap            ;bbr branch taken
c444 : 20c7ed          >        jsr report_error
                       >
c447 :                 >ok10279
                       >        tst_a $33,0
c447 : 08              >            php         ;save flags
c448 : c933            >            cmp #$33     ;test result
                       >            trap_ne
c44a : f003            >        beq skip0285
                       >        trap            ;failed not equal (non zero)
c44c : 20c7ed          >        jsr report_error
                       >
c44f :                 >skip0285
                       >
c44f : 68              >            pla         ;load status
c450 : 48              >            pha
                       >            cmp_flag 0
c451 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c453 : f003            >        beq skip0288
                       >        trap            ;failed not equal (non zero)
c455 : 20c7ed          >        jsr report_error
                       >
c458 :                 >skip0288
                       >
c458 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
c459 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
c45b : 48              >            pha         ;use stack to load status
c45c : a9cc            >            lda #$cc     ;precharge accu
c45e : 28              >            plp
                       >
c45f : 0f5206          >        bbr 0,zpt,fail20279
c462 : 8f5206          >        bbs 0,zpt,ok20279
                       >        trap            ;bbs branch not taken
c465 : 20c7ed          >        jsr report_error
                       >
c468 :                 >fail20279
                       >        trap            ;bbr branch taken
c468 : 20c7ed          >        jsr report_error
                       >
c46b :                 >ok20279
                       >        tst_a $cc,$ff
c46b : 08              >            php         ;save flags
c46c : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
c46e : f003            >        beq skip0295
                       >        trap            ;failed not equal (non zero)
c470 : 20c7ed          >        jsr report_error
                       >
c473 :                 >skip0295
                       >
c473 : 68              >            pla         ;load status
c474 : 48              >            pha
                       >            cmp_flag $ff
c475 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c477 : f003            >        beq skip0298
                       >        trap            ;failed not equal (non zero)
c479 : 20c7ed          >        jsr report_error
                       >
c47c :                 >skip0298
                       >
c47c : 28              >            plp         ;restore status
                       >
c47d : a552            >        lda zpt
c47f : c901            >        cmp #(1<<0)
                       >        trap_ne         ;zp altered
c481 : f003            >        beq skip0300
                       >        trap            ;failed not equal (non zero)
c483 : 20c7ed          >        jsr report_error
                       >
c486 :                 >skip0300
                       >
c486 : a9fe            >        lda #$ff-(1<<0) ;testing 1 bit off
c488 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
c48a : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
c48c : 48              >            pha         ;use stack to load status
c48d : a933            >            lda #$33     ;precharge accu
c48f : 28              >            plp
                       >
c490 : 8f5206          >        bbs 0,zpt,fail30279
c493 : 0f5206          >        bbr 0,zpt,ok30279
                       >        trap            ;bbr branch not taken
c496 : 20c7ed          >        jsr report_error
                       >
c499 :                 >fail30279
                       >        trap            ;bbs branch taken
c499 : 20c7ed          >        jsr report_error
                       >
c49c :                 >ok30279
                       >        tst_a $33,0
c49c : 08              >            php         ;save flags
c49d : c933            >            cmp #$33     ;test result
                       >            trap_ne
c49f : f003            >        beq skip0307
                       >        trap            ;failed not equal (non zero)
c4a1 : 20c7ed          >        jsr report_error
                       >
c4a4 :                 >skip0307
                       >
c4a4 : 68              >            pla         ;load status
c4a5 : 48              >            pha
                       >            cmp_flag 0
c4a6 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c4a8 : f003            >        beq skip0310
                       >        trap            ;failed not equal (non zero)
c4aa : 20c7ed          >        jsr report_error
                       >
c4ad :                 >skip0310
                       >
c4ad : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
c4ae : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
c4b0 : 48              >            pha         ;use stack to load status
c4b1 : a9cc            >            lda #$cc     ;precharge accu
c4b3 : 28              >            plp
                       >
c4b4 : 8f5206          >        bbs 0,zpt,fail40279
c4b7 : 0f5206          >        bbr 0,zpt,ok40279
                       >        trap            ;bbr branch not taken
c4ba : 20c7ed          >        jsr report_error
                       >
c4bd :                 >fail40279
                       >        trap            ;bbs branch taken
c4bd : 20c7ed          >        jsr report_error
                       >
c4c0 :                 >ok40279
                       >        tst_a $cc,$ff
c4c0 : 08              >            php         ;save flags
c4c1 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
c4c3 : f003            >        beq skip0317
                       >        trap            ;failed not equal (non zero)
c4c5 : 20c7ed          >        jsr report_error
                       >
c4c8 :                 >skip0317
                       >
c4c8 : 68              >            pla         ;load status
c4c9 : 48              >            pha
                       >            cmp_flag $ff
c4ca : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c4cc : f003            >        beq skip0320
                       >        trap            ;failed not equal (non zero)
c4ce : 20c7ed          >        jsr report_error
                       >
c4d1 :                 >skip0320
                       >
c4d1 : 28              >            plp         ;restore status
                       >
c4d2 : a552            >        lda zpt
c4d4 : c9fe            >        cmp #$ff-(1<<0)
                       >        trap_ne         ;zp altered
c4d6 : f003            >        beq skip0322
                       >        trap            ;failed not equal (non zero)
c4d8 : 20c7ed          >        jsr report_error
                       >
c4db :                 >skip0322
                       >
                        
                                bbt 1
c4db : a902            >        lda #(1<<1)    ;testing 1 bit on
c4dd : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
c4df : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
c4e1 : 48              >            pha         ;use stack to load status
c4e2 : a933            >            lda #$33     ;precharge accu
c4e4 : 28              >            plp
                       >
c4e5 : 1f5206          >        bbr 1,zpt,fail10324
c4e8 : 9f5206          >        bbs 1,zpt,ok10324
                       >        trap            ;bbs branch not taken
c4eb : 20c7ed          >        jsr report_error
                       >
c4ee :                 >fail10324
                       >        trap            ;bbr branch taken
c4ee : 20c7ed          >        jsr report_error
                       >
c4f1 :                 >ok10324
                       >        tst_a $33,0
c4f1 : 08              >            php         ;save flags
c4f2 : c933            >            cmp #$33     ;test result
                       >            trap_ne
c4f4 : f003            >        beq skip0330
                       >        trap            ;failed not equal (non zero)
c4f6 : 20c7ed          >        jsr report_error
                       >
c4f9 :                 >skip0330
                       >
c4f9 : 68              >            pla         ;load status
c4fa : 48              >            pha
                       >            cmp_flag 0
c4fb : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c4fd : f003            >        beq skip0333
                       >        trap            ;failed not equal (non zero)
c4ff : 20c7ed          >        jsr report_error
                       >
c502 :                 >skip0333
                       >
c502 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
c503 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
c505 : 48              >            pha         ;use stack to load status
c506 : a9cc            >            lda #$cc     ;precharge accu
c508 : 28              >            plp
                       >
c509 : 1f5206          >        bbr 1,zpt,fail20324
c50c : 9f5206          >        bbs 1,zpt,ok20324
                       >        trap            ;bbs branch not taken
c50f : 20c7ed          >        jsr report_error
                       >
c512 :                 >fail20324
                       >        trap            ;bbr branch taken
c512 : 20c7ed          >        jsr report_error
                       >
c515 :                 >ok20324
                       >        tst_a $cc,$ff
c515 : 08              >            php         ;save flags
c516 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
c518 : f003            >        beq skip0340
                       >        trap            ;failed not equal (non zero)
c51a : 20c7ed          >        jsr report_error
                       >
c51d :                 >skip0340
                       >
c51d : 68              >            pla         ;load status
c51e : 48              >            pha
                       >            cmp_flag $ff
c51f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c521 : f003            >        beq skip0343
                       >        trap            ;failed not equal (non zero)
c523 : 20c7ed          >        jsr report_error
                       >
c526 :                 >skip0343
                       >
c526 : 28              >            plp         ;restore status
                       >
c527 : a552            >        lda zpt
c529 : c902            >        cmp #(1<<1)
                       >        trap_ne         ;zp altered
c52b : f003            >        beq skip0345
                       >        trap            ;failed not equal (non zero)
c52d : 20c7ed          >        jsr report_error
                       >
c530 :                 >skip0345
                       >
c530 : a9fd            >        lda #$ff-(1<<1) ;testing 1 bit off
c532 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
c534 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
c536 : 48              >            pha         ;use stack to load status
c537 : a933            >            lda #$33     ;precharge accu
c539 : 28              >            plp
                       >
c53a : 9f5206          >        bbs 1,zpt,fail30324
c53d : 1f5206          >        bbr 1,zpt,ok30324
                       >        trap            ;bbr branch not taken
c540 : 20c7ed          >        jsr report_error
                       >
c543 :                 >fail30324
                       >        trap            ;bbs branch taken
c543 : 20c7ed          >        jsr report_error
                       >
c546 :                 >ok30324
                       >        tst_a $33,0
c546 : 08              >            php         ;save flags
c547 : c933            >            cmp #$33     ;test result
                       >            trap_ne
c549 : f003            >        beq skip0352
                       >        trap            ;failed not equal (non zero)
c54b : 20c7ed          >        jsr report_error
                       >
c54e :                 >skip0352
                       >
c54e : 68              >            pla         ;load status
c54f : 48              >            pha
                       >            cmp_flag 0
c550 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c552 : f003            >        beq skip0355
                       >        trap            ;failed not equal (non zero)
c554 : 20c7ed          >        jsr report_error
                       >
c557 :                 >skip0355
                       >
c557 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
c558 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
c55a : 48              >            pha         ;use stack to load status
c55b : a9cc            >            lda #$cc     ;precharge accu
c55d : 28              >            plp
                       >
c55e : 9f5206          >        bbs 1,zpt,fail40324
c561 : 1f5206          >        bbr 1,zpt,ok40324
                       >        trap            ;bbr branch not taken
c564 : 20c7ed          >        jsr report_error
                       >
c567 :                 >fail40324
                       >        trap            ;bbs branch taken
c567 : 20c7ed          >        jsr report_error
                       >
c56a :                 >ok40324
                       >        tst_a $cc,$ff
c56a : 08              >            php         ;save flags
c56b : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
c56d : f003            >        beq skip0362
                       >        trap            ;failed not equal (non zero)
c56f : 20c7ed          >        jsr report_error
                       >
c572 :                 >skip0362
                       >
c572 : 68              >            pla         ;load status
c573 : 48              >            pha
                       >            cmp_flag $ff
c574 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c576 : f003            >        beq skip0365
                       >        trap            ;failed not equal (non zero)
c578 : 20c7ed          >        jsr report_error
                       >
c57b :                 >skip0365
                       >
c57b : 28              >            plp         ;restore status
                       >
c57c : a552            >        lda zpt
c57e : c9fd            >        cmp #$ff-(1<<1)
                       >        trap_ne         ;zp altered
c580 : f003            >        beq skip0367
                       >        trap            ;failed not equal (non zero)
c582 : 20c7ed          >        jsr report_error
                       >
c585 :                 >skip0367
                       >
                        
                                bbt 2
c585 : a904            >        lda #(1<<2)    ;testing 1 bit on
c587 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
c589 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
c58b : 48              >            pha         ;use stack to load status
c58c : a933            >            lda #$33     ;precharge accu
c58e : 28              >            plp
                       >
c58f : 2f5206          >        bbr 2,zpt,fail10369
c592 : af5206          >        bbs 2,zpt,ok10369
                       >        trap            ;bbs branch not taken
c595 : 20c7ed          >        jsr report_error
                       >
c598 :                 >fail10369
                       >        trap            ;bbr branch taken
c598 : 20c7ed          >        jsr report_error
                       >
c59b :                 >ok10369
                       >        tst_a $33,0
c59b : 08              >            php         ;save flags
c59c : c933            >            cmp #$33     ;test result
                       >            trap_ne
c59e : f003            >        beq skip0375
                       >        trap            ;failed not equal (non zero)
c5a0 : 20c7ed          >        jsr report_error
                       >
c5a3 :                 >skip0375
                       >
c5a3 : 68              >            pla         ;load status
c5a4 : 48              >            pha
                       >            cmp_flag 0
c5a5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c5a7 : f003            >        beq skip0378
                       >        trap            ;failed not equal (non zero)
c5a9 : 20c7ed          >        jsr report_error
                       >
c5ac :                 >skip0378
                       >
c5ac : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
c5ad : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
c5af : 48              >            pha         ;use stack to load status
c5b0 : a9cc            >            lda #$cc     ;precharge accu
c5b2 : 28              >            plp
                       >
c5b3 : 2f5206          >        bbr 2,zpt,fail20369
c5b6 : af5206          >        bbs 2,zpt,ok20369
                       >        trap            ;bbs branch not taken
c5b9 : 20c7ed          >        jsr report_error
                       >
c5bc :                 >fail20369
                       >        trap            ;bbr branch taken
c5bc : 20c7ed          >        jsr report_error
                       >
c5bf :                 >ok20369
                       >        tst_a $cc,$ff
c5bf : 08              >            php         ;save flags
c5c0 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
c5c2 : f003            >        beq skip0385
                       >        trap            ;failed not equal (non zero)
c5c4 : 20c7ed          >        jsr report_error
                       >
c5c7 :                 >skip0385
                       >
c5c7 : 68              >            pla         ;load status
c5c8 : 48              >            pha
                       >            cmp_flag $ff
c5c9 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c5cb : f003            >        beq skip0388
                       >        trap            ;failed not equal (non zero)
c5cd : 20c7ed          >        jsr report_error
                       >
c5d0 :                 >skip0388
                       >
c5d0 : 28              >            plp         ;restore status
                       >
c5d1 : a552            >        lda zpt
c5d3 : c904            >        cmp #(1<<2)
                       >        trap_ne         ;zp altered
c5d5 : f003            >        beq skip0390
                       >        trap            ;failed not equal (non zero)
c5d7 : 20c7ed          >        jsr report_error
                       >
c5da :                 >skip0390
                       >
c5da : a9fb            >        lda #$ff-(1<<2) ;testing 1 bit off
c5dc : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
c5de : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
c5e0 : 48              >            pha         ;use stack to load status
c5e1 : a933            >            lda #$33     ;precharge accu
c5e3 : 28              >            plp
                       >
c5e4 : af5206          >        bbs 2,zpt,fail30369
c5e7 : 2f5206          >        bbr 2,zpt,ok30369
                       >        trap            ;bbr branch not taken
c5ea : 20c7ed          >        jsr report_error
                       >
c5ed :                 >fail30369
                       >        trap            ;bbs branch taken
c5ed : 20c7ed          >        jsr report_error
                       >
c5f0 :                 >ok30369
                       >        tst_a $33,0
c5f0 : 08              >            php         ;save flags
c5f1 : c933            >            cmp #$33     ;test result
                       >            trap_ne
c5f3 : f003            >        beq skip0397
                       >        trap            ;failed not equal (non zero)
c5f5 : 20c7ed          >        jsr report_error
                       >
c5f8 :                 >skip0397
                       >
c5f8 : 68              >            pla         ;load status
c5f9 : 48              >            pha
                       >            cmp_flag 0
c5fa : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c5fc : f003            >        beq skip0400
                       >        trap            ;failed not equal (non zero)
c5fe : 20c7ed          >        jsr report_error
                       >
c601 :                 >skip0400
                       >
c601 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
c602 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
c604 : 48              >            pha         ;use stack to load status
c605 : a9cc            >            lda #$cc     ;precharge accu
c607 : 28              >            plp
                       >
c608 : af5206          >        bbs 2,zpt,fail40369
c60b : 2f5206          >        bbr 2,zpt,ok40369
                       >        trap            ;bbr branch not taken
c60e : 20c7ed          >        jsr report_error
                       >
c611 :                 >fail40369
                       >        trap            ;bbs branch taken
c611 : 20c7ed          >        jsr report_error
                       >
c614 :                 >ok40369
                       >        tst_a $cc,$ff
c614 : 08              >            php         ;save flags
c615 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
c617 : f003            >        beq skip0407
                       >        trap            ;failed not equal (non zero)
c619 : 20c7ed          >        jsr report_error
                       >
c61c :                 >skip0407
                       >
c61c : 68              >            pla         ;load status
c61d : 48              >            pha
                       >            cmp_flag $ff
c61e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c620 : f003            >        beq skip0410
                       >        trap            ;failed not equal (non zero)
c622 : 20c7ed          >        jsr report_error
                       >
c625 :                 >skip0410
                       >
c625 : 28              >            plp         ;restore status
                       >
c626 : a552            >        lda zpt
c628 : c9fb            >        cmp #$ff-(1<<2)
                       >        trap_ne         ;zp altered
c62a : f003            >        beq skip0412
                       >        trap            ;failed not equal (non zero)
c62c : 20c7ed          >        jsr report_error
                       >
c62f :                 >skip0412
                       >
                        
                                bbt 3
c62f : a908            >        lda #(1<<3)    ;testing 1 bit on
c631 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
c633 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
c635 : 48              >            pha         ;use stack to load status
c636 : a933            >            lda #$33     ;precharge accu
c638 : 28              >            plp
                       >
c639 : 3f5206          >        bbr 3,zpt,fail10414
c63c : bf5206          >        bbs 3,zpt,ok10414
                       >        trap            ;bbs branch not taken
c63f : 20c7ed          >        jsr report_error
                       >
c642 :                 >fail10414
                       >        trap            ;bbr branch taken
c642 : 20c7ed          >        jsr report_error
                       >
c645 :                 >ok10414
                       >        tst_a $33,0
c645 : 08              >            php         ;save flags
c646 : c933            >            cmp #$33     ;test result
                       >            trap_ne
c648 : f003            >        beq skip0420
                       >        trap            ;failed not equal (non zero)
c64a : 20c7ed          >        jsr report_error
                       >
c64d :                 >skip0420
                       >
c64d : 68              >            pla         ;load status
c64e : 48              >            pha
                       >            cmp_flag 0
c64f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c651 : f003            >        beq skip0423
                       >        trap            ;failed not equal (non zero)
c653 : 20c7ed          >        jsr report_error
                       >
c656 :                 >skip0423
                       >
c656 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
c657 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
c659 : 48              >            pha         ;use stack to load status
c65a : a9cc            >            lda #$cc     ;precharge accu
c65c : 28              >            plp
                       >
c65d : 3f5206          >        bbr 3,zpt,fail20414
c660 : bf5206          >        bbs 3,zpt,ok20414
                       >        trap            ;bbs branch not taken
c663 : 20c7ed          >        jsr report_error
                       >
c666 :                 >fail20414
                       >        trap            ;bbr branch taken
c666 : 20c7ed          >        jsr report_error
                       >
c669 :                 >ok20414
                       >        tst_a $cc,$ff
c669 : 08              >            php         ;save flags
c66a : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
c66c : f003            >        beq skip0430
                       >        trap            ;failed not equal (non zero)
c66e : 20c7ed          >        jsr report_error
                       >
c671 :                 >skip0430
                       >
c671 : 68              >            pla         ;load status
c672 : 48              >            pha
                       >            cmp_flag $ff
c673 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c675 : f003            >        beq skip0433
                       >        trap            ;failed not equal (non zero)
c677 : 20c7ed          >        jsr report_error
                       >
c67a :                 >skip0433
                       >
c67a : 28              >            plp         ;restore status
                       >
c67b : a552            >        lda zpt
c67d : c908            >        cmp #(1<<3)
                       >        trap_ne         ;zp altered
c67f : f003            >        beq skip0435
                       >        trap            ;failed not equal (non zero)
c681 : 20c7ed          >        jsr report_error
                       >
c684 :                 >skip0435
                       >
c684 : a9f7            >        lda #$ff-(1<<3) ;testing 1 bit off
c686 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
c688 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
c68a : 48              >            pha         ;use stack to load status
c68b : a933            >            lda #$33     ;precharge accu
c68d : 28              >            plp
                       >
c68e : bf5206          >        bbs 3,zpt,fail30414
c691 : 3f5206          >        bbr 3,zpt,ok30414
                       >        trap            ;bbr branch not taken
c694 : 20c7ed          >        jsr report_error
                       >
c697 :                 >fail30414
                       >        trap            ;bbs branch taken
c697 : 20c7ed          >        jsr report_error
                       >
c69a :                 >ok30414
                       >        tst_a $33,0
c69a : 08              >            php         ;save flags
c69b : c933            >            cmp #$33     ;test result
                       >            trap_ne
c69d : f003            >        beq skip0442
                       >        trap            ;failed not equal (non zero)
c69f : 20c7ed          >        jsr report_error
                       >
c6a2 :                 >skip0442
                       >
c6a2 : 68              >            pla         ;load status
c6a3 : 48              >            pha
                       >            cmp_flag 0
c6a4 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c6a6 : f003            >        beq skip0445
                       >        trap            ;failed not equal (non zero)
c6a8 : 20c7ed          >        jsr report_error
                       >
c6ab :                 >skip0445
                       >
c6ab : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
c6ac : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
c6ae : 48              >            pha         ;use stack to load status
c6af : a9cc            >            lda #$cc     ;precharge accu
c6b1 : 28              >            plp
                       >
c6b2 : bf5206          >        bbs 3,zpt,fail40414
c6b5 : 3f5206          >        bbr 3,zpt,ok40414
                       >        trap            ;bbr branch not taken
c6b8 : 20c7ed          >        jsr report_error
                       >
c6bb :                 >fail40414
                       >        trap            ;bbs branch taken
c6bb : 20c7ed          >        jsr report_error
                       >
c6be :                 >ok40414
                       >        tst_a $cc,$ff
c6be : 08              >            php         ;save flags
c6bf : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
c6c1 : f003            >        beq skip0452
                       >        trap            ;failed not equal (non zero)
c6c3 : 20c7ed          >        jsr report_error
                       >
c6c6 :                 >skip0452
                       >
c6c6 : 68              >            pla         ;load status
c6c7 : 48              >            pha
                       >            cmp_flag $ff
c6c8 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c6ca : f003            >        beq skip0455
                       >        trap            ;failed not equal (non zero)
c6cc : 20c7ed          >        jsr report_error
                       >
c6cf :                 >skip0455
                       >
c6cf : 28              >            plp         ;restore status
                       >
c6d0 : a552            >        lda zpt
c6d2 : c9f7            >        cmp #$ff-(1<<3)
                       >        trap_ne         ;zp altered
c6d4 : f003            >        beq skip0457
                       >        trap            ;failed not equal (non zero)
c6d6 : 20c7ed          >        jsr report_error
                       >
c6d9 :                 >skip0457
                       >
                        
                                bbt 4
c6d9 : a910            >        lda #(1<<4)    ;testing 1 bit on
c6db : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
c6dd : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
c6df : 48              >            pha         ;use stack to load status
c6e0 : a933            >            lda #$33     ;precharge accu
c6e2 : 28              >            plp
                       >
c6e3 : 4f5206          >        bbr 4,zpt,fail10459
c6e6 : cf5206          >        bbs 4,zpt,ok10459
                       >        trap            ;bbs branch not taken
c6e9 : 20c7ed          >        jsr report_error
                       >
c6ec :                 >fail10459
                       >        trap            ;bbr branch taken
c6ec : 20c7ed          >        jsr report_error
                       >
c6ef :                 >ok10459
                       >        tst_a $33,0
c6ef : 08              >            php         ;save flags
c6f0 : c933            >            cmp #$33     ;test result
                       >            trap_ne
c6f2 : f003            >        beq skip0465
                       >        trap            ;failed not equal (non zero)
c6f4 : 20c7ed          >        jsr report_error
                       >
c6f7 :                 >skip0465
                       >
c6f7 : 68              >            pla         ;load status
c6f8 : 48              >            pha
                       >            cmp_flag 0
c6f9 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c6fb : f003            >        beq skip0468
                       >        trap            ;failed not equal (non zero)
c6fd : 20c7ed          >        jsr report_error
                       >
c700 :                 >skip0468
                       >
c700 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
c701 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
c703 : 48              >            pha         ;use stack to load status
c704 : a9cc            >            lda #$cc     ;precharge accu
c706 : 28              >            plp
                       >
c707 : 4f5206          >        bbr 4,zpt,fail20459
c70a : cf5206          >        bbs 4,zpt,ok20459
                       >        trap            ;bbs branch not taken
c70d : 20c7ed          >        jsr report_error
                       >
c710 :                 >fail20459
                       >        trap            ;bbr branch taken
c710 : 20c7ed          >        jsr report_error
                       >
c713 :                 >ok20459
                       >        tst_a $cc,$ff
c713 : 08              >            php         ;save flags
c714 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
c716 : f003            >        beq skip0475
                       >        trap            ;failed not equal (non zero)
c718 : 20c7ed          >        jsr report_error
                       >
c71b :                 >skip0475
                       >
c71b : 68              >            pla         ;load status
c71c : 48              >            pha
                       >            cmp_flag $ff
c71d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c71f : f003            >        beq skip0478
                       >        trap            ;failed not equal (non zero)
c721 : 20c7ed          >        jsr report_error
                       >
c724 :                 >skip0478
                       >
c724 : 28              >            plp         ;restore status
                       >
c725 : a552            >        lda zpt
c727 : c910            >        cmp #(1<<4)
                       >        trap_ne         ;zp altered
c729 : f003            >        beq skip0480
                       >        trap            ;failed not equal (non zero)
c72b : 20c7ed          >        jsr report_error
                       >
c72e :                 >skip0480
                       >
c72e : a9ef            >        lda #$ff-(1<<4) ;testing 1 bit off
c730 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
c732 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
c734 : 48              >            pha         ;use stack to load status
c735 : a933            >            lda #$33     ;precharge accu
c737 : 28              >            plp
                       >
c738 : cf5206          >        bbs 4,zpt,fail30459
c73b : 4f5206          >        bbr 4,zpt,ok30459
                       >        trap            ;bbr branch not taken
c73e : 20c7ed          >        jsr report_error
                       >
c741 :                 >fail30459
                       >        trap            ;bbs branch taken
c741 : 20c7ed          >        jsr report_error
                       >
c744 :                 >ok30459
                       >        tst_a $33,0
c744 : 08              >            php         ;save flags
c745 : c933            >            cmp #$33     ;test result
                       >            trap_ne
c747 : f003            >        beq skip0487
                       >        trap            ;failed not equal (non zero)
c749 : 20c7ed          >        jsr report_error
                       >
c74c :                 >skip0487
                       >
c74c : 68              >            pla         ;load status
c74d : 48              >            pha
                       >            cmp_flag 0
c74e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c750 : f003            >        beq skip0490
                       >        trap            ;failed not equal (non zero)
c752 : 20c7ed          >        jsr report_error
                       >
c755 :                 >skip0490
                       >
c755 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
c756 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
c758 : 48              >            pha         ;use stack to load status
c759 : a9cc            >            lda #$cc     ;precharge accu
c75b : 28              >            plp
                       >
c75c : cf5206          >        bbs 4,zpt,fail40459
c75f : 4f5206          >        bbr 4,zpt,ok40459
                       >        trap            ;bbr branch not taken
c762 : 20c7ed          >        jsr report_error
                       >
c765 :                 >fail40459
                       >        trap            ;bbs branch taken
c765 : 20c7ed          >        jsr report_error
                       >
c768 :                 >ok40459
                       >        tst_a $cc,$ff
c768 : 08              >            php         ;save flags
c769 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
c76b : f003            >        beq skip0497
                       >        trap            ;failed not equal (non zero)
c76d : 20c7ed          >        jsr report_error
                       >
c770 :                 >skip0497
                       >
c770 : 68              >            pla         ;load status
c771 : 48              >            pha
                       >            cmp_flag $ff
c772 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c774 : f003            >        beq skip0500
                       >        trap            ;failed not equal (non zero)
c776 : 20c7ed          >        jsr report_error
                       >
c779 :                 >skip0500
                       >
c779 : 28              >            plp         ;restore status
                       >
c77a : a552            >        lda zpt
c77c : c9ef            >        cmp #$ff-(1<<4)
                       >        trap_ne         ;zp altered
c77e : f003            >        beq skip0502
                       >        trap            ;failed not equal (non zero)
c780 : 20c7ed          >        jsr report_error
                       >
c783 :                 >skip0502
                       >
                        
                                bbt 5
c783 : a920            >        lda #(1<<5)    ;testing 1 bit on
c785 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
c787 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
c789 : 48              >            pha         ;use stack to load status
c78a : a933            >            lda #$33     ;precharge accu
c78c : 28              >            plp
                       >
c78d : 5f5206          >        bbr 5,zpt,fail10504
c790 : df5206          >        bbs 5,zpt,ok10504
                       >        trap            ;bbs branch not taken
c793 : 20c7ed          >        jsr report_error
                       >
c796 :                 >fail10504
                       >        trap            ;bbr branch taken
c796 : 20c7ed          >        jsr report_error
                       >
c799 :                 >ok10504
                       >        tst_a $33,0
c799 : 08              >            php         ;save flags
c79a : c933            >            cmp #$33     ;test result
                       >            trap_ne
c79c : f003            >        beq skip0510
                       >        trap            ;failed not equal (non zero)
c79e : 20c7ed          >        jsr report_error
                       >
c7a1 :                 >skip0510
                       >
c7a1 : 68              >            pla         ;load status
c7a2 : 48              >            pha
                       >            cmp_flag 0
c7a3 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c7a5 : f003            >        beq skip0513
                       >        trap            ;failed not equal (non zero)
c7a7 : 20c7ed          >        jsr report_error
                       >
c7aa :                 >skip0513
                       >
c7aa : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
c7ab : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
c7ad : 48              >            pha         ;use stack to load status
c7ae : a9cc            >            lda #$cc     ;precharge accu
c7b0 : 28              >            plp
                       >
c7b1 : 5f5206          >        bbr 5,zpt,fail20504
c7b4 : df5206          >        bbs 5,zpt,ok20504
                       >        trap            ;bbs branch not taken
c7b7 : 20c7ed          >        jsr report_error
                       >
c7ba :                 >fail20504
                       >        trap            ;bbr branch taken
c7ba : 20c7ed          >        jsr report_error
                       >
c7bd :                 >ok20504
                       >        tst_a $cc,$ff
c7bd : 08              >            php         ;save flags
c7be : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
c7c0 : f003            >        beq skip0520
                       >        trap            ;failed not equal (non zero)
c7c2 : 20c7ed          >        jsr report_error
                       >
c7c5 :                 >skip0520
                       >
c7c5 : 68              >            pla         ;load status
c7c6 : 48              >            pha
                       >            cmp_flag $ff
c7c7 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c7c9 : f003            >        beq skip0523
                       >        trap            ;failed not equal (non zero)
c7cb : 20c7ed          >        jsr report_error
                       >
c7ce :                 >skip0523
                       >
c7ce : 28              >            plp         ;restore status
                       >
c7cf : a552            >        lda zpt
c7d1 : c920            >        cmp #(1<<5)
                       >        trap_ne         ;zp altered
c7d3 : f003            >        beq skip0525
                       >        trap            ;failed not equal (non zero)
c7d5 : 20c7ed          >        jsr report_error
                       >
c7d8 :                 >skip0525
                       >
c7d8 : a9df            >        lda #$ff-(1<<5) ;testing 1 bit off
c7da : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
c7dc : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
c7de : 48              >            pha         ;use stack to load status
c7df : a933            >            lda #$33     ;precharge accu
c7e1 : 28              >            plp
                       >
c7e2 : df5206          >        bbs 5,zpt,fail30504
c7e5 : 5f5206          >        bbr 5,zpt,ok30504
                       >        trap            ;bbr branch not taken
c7e8 : 20c7ed          >        jsr report_error
                       >
c7eb :                 >fail30504
                       >        trap            ;bbs branch taken
c7eb : 20c7ed          >        jsr report_error
                       >
c7ee :                 >ok30504
                       >        tst_a $33,0
c7ee : 08              >            php         ;save flags
c7ef : c933            >            cmp #$33     ;test result
                       >            trap_ne
c7f1 : f003            >        beq skip0532
                       >        trap            ;failed not equal (non zero)
c7f3 : 20c7ed          >        jsr report_error
                       >
c7f6 :                 >skip0532
                       >
c7f6 : 68              >            pla         ;load status
c7f7 : 48              >            pha
                       >            cmp_flag 0
c7f8 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c7fa : f003            >        beq skip0535
                       >        trap            ;failed not equal (non zero)
c7fc : 20c7ed          >        jsr report_error
                       >
c7ff :                 >skip0535
                       >
c7ff : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
c800 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
c802 : 48              >            pha         ;use stack to load status
c803 : a9cc            >            lda #$cc     ;precharge accu
c805 : 28              >            plp
                       >
c806 : df5206          >        bbs 5,zpt,fail40504
c809 : 5f5206          >        bbr 5,zpt,ok40504
                       >        trap            ;bbr branch not taken
c80c : 20c7ed          >        jsr report_error
                       >
c80f :                 >fail40504
                       >        trap            ;bbs branch taken
c80f : 20c7ed          >        jsr report_error
                       >
c812 :                 >ok40504
                       >        tst_a $cc,$ff
c812 : 08              >            php         ;save flags
c813 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
c815 : f003            >        beq skip0542
                       >        trap            ;failed not equal (non zero)
c817 : 20c7ed          >        jsr report_error
                       >
c81a :                 >skip0542
                       >
c81a : 68              >            pla         ;load status
c81b : 48              >            pha
                       >            cmp_flag $ff
c81c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c81e : f003            >        beq skip0545
                       >        trap            ;failed not equal (non zero)
c820 : 20c7ed          >        jsr report_error
                       >
c823 :                 >skip0545
                       >
c823 : 28              >            plp         ;restore status
                       >
c824 : a552            >        lda zpt
c826 : c9df            >        cmp #$ff-(1<<5)
                       >        trap_ne         ;zp altered
c828 : f003            >        beq skip0547
                       >        trap            ;failed not equal (non zero)
c82a : 20c7ed          >        jsr report_error
                       >
c82d :                 >skip0547
                       >
                        
                                bbt 6
c82d : a940            >        lda #(1<<6)    ;testing 1 bit on
c82f : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
c831 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
c833 : 48              >            pha         ;use stack to load status
c834 : a933            >            lda #$33     ;precharge accu
c836 : 28              >            plp
                       >
c837 : 6f5206          >        bbr 6,zpt,fail10549
c83a : ef5206          >        bbs 6,zpt,ok10549
                       >        trap            ;bbs branch not taken
c83d : 20c7ed          >        jsr report_error
                       >
c840 :                 >fail10549
                       >        trap            ;bbr branch taken
c840 : 20c7ed          >        jsr report_error
                       >
c843 :                 >ok10549
                       >        tst_a $33,0
c843 : 08              >            php         ;save flags
c844 : c933            >            cmp #$33     ;test result
                       >            trap_ne
c846 : f003            >        beq skip0555
                       >        trap            ;failed not equal (non zero)
c848 : 20c7ed          >        jsr report_error
                       >
c84b :                 >skip0555
                       >
c84b : 68              >            pla         ;load status
c84c : 48              >            pha
                       >            cmp_flag 0
c84d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c84f : f003            >        beq skip0558
                       >        trap            ;failed not equal (non zero)
c851 : 20c7ed          >        jsr report_error
                       >
c854 :                 >skip0558
                       >
c854 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
c855 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
c857 : 48              >            pha         ;use stack to load status
c858 : a9cc            >            lda #$cc     ;precharge accu
c85a : 28              >            plp
                       >
c85b : 6f5206          >        bbr 6,zpt,fail20549
c85e : ef5206          >        bbs 6,zpt,ok20549
                       >        trap            ;bbs branch not taken
c861 : 20c7ed          >        jsr report_error
                       >
c864 :                 >fail20549
                       >        trap            ;bbr branch taken
c864 : 20c7ed          >        jsr report_error
                       >
c867 :                 >ok20549
                       >        tst_a $cc,$ff
c867 : 08              >            php         ;save flags
c868 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
c86a : f003            >        beq skip0565
                       >        trap            ;failed not equal (non zero)
c86c : 20c7ed          >        jsr report_error
                       >
c86f :                 >skip0565
                       >
c86f : 68              >            pla         ;load status
c870 : 48              >            pha
                       >            cmp_flag $ff
c871 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c873 : f003            >        beq skip0568
                       >        trap            ;failed not equal (non zero)
c875 : 20c7ed          >        jsr report_error
                       >
c878 :                 >skip0568
                       >
c878 : 28              >            plp         ;restore status
                       >
c879 : a552            >        lda zpt
c87b : c940            >        cmp #(1<<6)
                       >        trap_ne         ;zp altered
c87d : f003            >        beq skip0570
                       >        trap            ;failed not equal (non zero)
c87f : 20c7ed          >        jsr report_error
                       >
c882 :                 >skip0570
                       >
c882 : a9bf            >        lda #$ff-(1<<6) ;testing 1 bit off
c884 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
c886 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
c888 : 48              >            pha         ;use stack to load status
c889 : a933            >            lda #$33     ;precharge accu
c88b : 28              >            plp
                       >
c88c : ef5206          >        bbs 6,zpt,fail30549
c88f : 6f5206          >        bbr 6,zpt,ok30549
                       >        trap            ;bbr branch not taken
c892 : 20c7ed          >        jsr report_error
                       >
c895 :                 >fail30549
                       >        trap            ;bbs branch taken
c895 : 20c7ed          >        jsr report_error
                       >
c898 :                 >ok30549
                       >        tst_a $33,0
c898 : 08              >            php         ;save flags
c899 : c933            >            cmp #$33     ;test result
                       >            trap_ne
c89b : f003            >        beq skip0577
                       >        trap            ;failed not equal (non zero)
c89d : 20c7ed          >        jsr report_error
                       >
c8a0 :                 >skip0577
                       >
c8a0 : 68              >            pla         ;load status
c8a1 : 48              >            pha
                       >            cmp_flag 0
c8a2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c8a4 : f003            >        beq skip0580
                       >        trap            ;failed not equal (non zero)
c8a6 : 20c7ed          >        jsr report_error
                       >
c8a9 :                 >skip0580
                       >
c8a9 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
c8aa : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
c8ac : 48              >            pha         ;use stack to load status
c8ad : a9cc            >            lda #$cc     ;precharge accu
c8af : 28              >            plp
                       >
c8b0 : ef5206          >        bbs 6,zpt,fail40549
c8b3 : 6f5206          >        bbr 6,zpt,ok40549
                       >        trap            ;bbr branch not taken
c8b6 : 20c7ed          >        jsr report_error
                       >
c8b9 :                 >fail40549
                       >        trap            ;bbs branch taken
c8b9 : 20c7ed          >        jsr report_error
                       >
c8bc :                 >ok40549
                       >        tst_a $cc,$ff
c8bc : 08              >            php         ;save flags
c8bd : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
c8bf : f003            >        beq skip0587
                       >        trap            ;failed not equal (non zero)
c8c1 : 20c7ed          >        jsr report_error
                       >
c8c4 :                 >skip0587
                       >
c8c4 : 68              >            pla         ;load status
c8c5 : 48              >            pha
                       >            cmp_flag $ff
c8c6 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c8c8 : f003            >        beq skip0590
                       >        trap            ;failed not equal (non zero)
c8ca : 20c7ed          >        jsr report_error
                       >
c8cd :                 >skip0590
                       >
c8cd : 28              >            plp         ;restore status
                       >
c8ce : a552            >        lda zpt
c8d0 : c9bf            >        cmp #$ff-(1<<6)
                       >        trap_ne         ;zp altered
c8d2 : f003            >        beq skip0592
                       >        trap            ;failed not equal (non zero)
c8d4 : 20c7ed          >        jsr report_error
                       >
c8d7 :                 >skip0592
                       >
                        
                                bbt 7
c8d7 : a980            >        lda #(1<<7)    ;testing 1 bit on
c8d9 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
c8db : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
c8dd : 48              >            pha         ;use stack to load status
c8de : a933            >            lda #$33     ;precharge accu
c8e0 : 28              >            plp
                       >
c8e1 : 7f5206          >        bbr 7,zpt,fail10594
c8e4 : ff5206          >        bbs 7,zpt,ok10594
                       >        trap            ;bbs branch not taken
c8e7 : 20c7ed          >        jsr report_error
                       >
c8ea :                 >fail10594
                       >        trap            ;bbr branch taken
c8ea : 20c7ed          >        jsr report_error
                       >
c8ed :                 >ok10594
                       >        tst_a $33,0
c8ed : 08              >            php         ;save flags
c8ee : c933            >            cmp #$33     ;test result
                       >            trap_ne
c8f0 : f003            >        beq skip0600
                       >        trap            ;failed not equal (non zero)
c8f2 : 20c7ed          >        jsr report_error
                       >
c8f5 :                 >skip0600
                       >
c8f5 : 68              >            pla         ;load status
c8f6 : 48              >            pha
                       >            cmp_flag 0
c8f7 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c8f9 : f003            >        beq skip0603
                       >        trap            ;failed not equal (non zero)
c8fb : 20c7ed          >        jsr report_error
                       >
c8fe :                 >skip0603
                       >
c8fe : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
c8ff : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
c901 : 48              >            pha         ;use stack to load status
c902 : a9cc            >            lda #$cc     ;precharge accu
c904 : 28              >            plp
                       >
c905 : 7f5206          >        bbr 7,zpt,fail20594
c908 : ff5206          >        bbs 7,zpt,ok20594
                       >        trap            ;bbs branch not taken
c90b : 20c7ed          >        jsr report_error
                       >
c90e :                 >fail20594
                       >        trap            ;bbr branch taken
c90e : 20c7ed          >        jsr report_error
                       >
c911 :                 >ok20594
                       >        tst_a $cc,$ff
c911 : 08              >            php         ;save flags
c912 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
c914 : f003            >        beq skip0610
                       >        trap            ;failed not equal (non zero)
c916 : 20c7ed          >        jsr report_error
                       >
c919 :                 >skip0610
                       >
c919 : 68              >            pla         ;load status
c91a : 48              >            pha
                       >            cmp_flag $ff
c91b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c91d : f003            >        beq skip0613
                       >        trap            ;failed not equal (non zero)
c91f : 20c7ed          >        jsr report_error
                       >
c922 :                 >skip0613
                       >
c922 : 28              >            plp         ;restore status
                       >
c923 : a552            >        lda zpt
c925 : c980            >        cmp #(1<<7)
                       >        trap_ne         ;zp altered
c927 : f003            >        beq skip0615
                       >        trap            ;failed not equal (non zero)
c929 : 20c7ed          >        jsr report_error
                       >
c92c :                 >skip0615
                       >
c92c : a97f            >        lda #$ff-(1<<7) ;testing 1 bit off
c92e : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
c930 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
c932 : 48              >            pha         ;use stack to load status
c933 : a933            >            lda #$33     ;precharge accu
c935 : 28              >            plp
                       >
c936 : ff5206          >        bbs 7,zpt,fail30594
c939 : 7f5206          >        bbr 7,zpt,ok30594
                       >        trap            ;bbr branch not taken
c93c : 20c7ed          >        jsr report_error
                       >
c93f :                 >fail30594
                       >        trap            ;bbs branch taken
c93f : 20c7ed          >        jsr report_error
                       >
c942 :                 >ok30594
                       >        tst_a $33,0
c942 : 08              >            php         ;save flags
c943 : c933            >            cmp #$33     ;test result
                       >            trap_ne
c945 : f003            >        beq skip0622
                       >        trap            ;failed not equal (non zero)
c947 : 20c7ed          >        jsr report_error
                       >
c94a :                 >skip0622
                       >
c94a : 68              >            pla         ;load status
c94b : 48              >            pha
                       >            cmp_flag 0
c94c : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c94e : f003            >        beq skip0625
                       >        trap            ;failed not equal (non zero)
c950 : 20c7ed          >        jsr report_error
                       >
c953 :                 >skip0625
                       >
c953 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
c954 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
c956 : 48              >            pha         ;use stack to load status
c957 : a9cc            >            lda #$cc     ;precharge accu
c959 : 28              >            plp
                       >
c95a : ff5206          >        bbs 7,zpt,fail40594
c95d : 7f5206          >        bbr 7,zpt,ok40594
                       >        trap            ;bbr branch not taken
c960 : 20c7ed          >        jsr report_error
                       >
c963 :                 >fail40594
                       >        trap            ;bbs branch taken
c963 : 20c7ed          >        jsr report_error
                       >
c966 :                 >ok40594
                       >        tst_a $cc,$ff
c966 : 08              >            php         ;save flags
c967 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
c969 : f003            >        beq skip0632
                       >        trap            ;failed not equal (non zero)
c96b : 20c7ed          >        jsr report_error
                       >
c96e :                 >skip0632
                       >
c96e : 68              >            pla         ;load status
c96f : 48              >            pha
                       >            cmp_flag $ff
c970 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
c972 : f003            >        beq skip0635
                       >        trap            ;failed not equal (non zero)
c974 : 20c7ed          >        jsr report_error
                       >
c977 :                 >skip0635
                       >
c977 : 28              >            plp         ;restore status
                       >
c978 : a552            >        lda zpt
c97a : c97f            >        cmp #$ff-(1<<7)
                       >        trap_ne         ;zp altered
c97c : f003            >        beq skip0637
                       >        trap            ;failed not equal (non zero)
c97e : 20c7ed          >        jsr report_error
                       >
c981 :                 >skip0637
                       >
                        
c981 : e011                     cpx #$11
                                trap_ne         ;x overwritten
c983 : f003            >        beq skip0639
                       >        trap            ;failed not equal (non zero)
c985 : 20c7ed          >        jsr report_error
                       >
c988 :                 >skip0639
                        
c988 : c022                     cpy #$22
                                trap_ne         ;y overwritten
c98a : f003            >        beq skip0641
                       >        trap            ;failed not equal (non zero)
c98c : 20c7ed          >        jsr report_error
                       >
c98f :                 >skip0641
                        
                                next_test
c98f : ad0232          >            lda test_case   ;previous test
c992 : c906            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
c994 : f003            >        beq skip0644
                       >        trap            ;failed not equal (non zero)
c996 : 20c7ed          >        jsr report_error
                       >
c999 :                 >skip0644
                       >
0007 =                 >test_num = test_num + 1
c999 : a907            >            lda #test_num   ;*** next tests' number
c99b : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        bbrc    macro           ;\1 = bitnum
                                bbr \1,zpt,skip\?
                                eor #(1<<\1)
                        skip\?
                                endm
                        bbsc    macro           ;\1 = bitnum
                                bbs \1,zpt,skip\?
                                eor #(1<<\1)
                        skip\?
                                endm
                        
c99e : a900                     lda #0          ;combined bit test
c9a0 : 8552                     sta zpt
c9a2 : a900             bbcl    lda #0
                                bbrc 0
c9a4 : 0f5202          >        bbr 0,zpt,skip0646
c9a7 : 4901            >        eor #(1<<0)
c9a9 :                 >skip0646
                        
                                bbrc 1
c9a9 : 1f5202          >        bbr 1,zpt,skip0647
c9ac : 4902            >        eor #(1<<1)
c9ae :                 >skip0647
                        
                                bbrc 2
c9ae : 2f5202          >        bbr 2,zpt,skip0648
c9b1 : 4904            >        eor #(1<<2)
c9b3 :                 >skip0648
                        
                                bbrc 3
c9b3 : 3f5202          >        bbr 3,zpt,skip0649
c9b6 : 4908            >        eor #(1<<3)
c9b8 :                 >skip0649
                        
                                bbrc 4
c9b8 : 4f5202          >        bbr 4,zpt,skip0650
c9bb : 4910            >        eor #(1<<4)
c9bd :                 >skip0650
                        
                                bbrc 5
c9bd : 5f5202          >        bbr 5,zpt,skip0651
c9c0 : 4920            >        eor #(1<<5)
c9c2 :                 >skip0651
                        
                                bbrc 6
c9c2 : 6f5202          >        bbr 6,zpt,skip0652
c9c5 : 4940            >        eor #(1<<6)
c9c7 :                 >skip0652
                        
                                bbrc 7
c9c7 : 7f5202          >        bbr 7,zpt,skip0653
c9ca : 4980            >        eor #(1<<7)
c9cc :                 >skip0653
                        
c9cc : 4552                     eor zpt
                                trap_ne         ;failed bbr bitnum in accu
c9ce : f003            >        beq skip0654
                       >        trap            ;failed not equal (non zero)
c9d0 : 20c7ed          >        jsr report_error
                       >
c9d3 :                 >skip0654
                        
c9d3 : a9ff                     lda #$ff
                                bbsc 0
c9d5 : 8f5202          >        bbs 0,zpt,skip0656
c9d8 : 4901            >        eor #(1<<0)
c9da :                 >skip0656
                        
                                bbsc 1
c9da : 9f5202          >        bbs 1,zpt,skip0657
c9dd : 4902            >        eor #(1<<1)
c9df :                 >skip0657
                        
                                bbsc 2
c9df : af5202          >        bbs 2,zpt,skip0658
c9e2 : 4904            >        eor #(1<<2)
c9e4 :                 >skip0658
                        
                                bbsc 3
c9e4 : bf5202          >        bbs 3,zpt,skip0659
c9e7 : 4908            >        eor #(1<<3)
c9e9 :                 >skip0659
                        
                                bbsc 4
c9e9 : cf5202          >        bbs 4,zpt,skip0660
c9ec : 4910            >        eor #(1<<4)
c9ee :                 >skip0660
                        
                                bbsc 5
c9ee : df5202          >        bbs 5,zpt,skip0661
c9f1 : 4920            >        eor #(1<<5)
c9f3 :                 >skip0661
                        
                                bbsc 6
c9f3 : ef5202          >        bbs 6,zpt,skip0662
c9f6 : 4940            >        eor #(1<<6)
c9f8 :                 >skip0662
                        
                                bbsc 7
c9f8 : ff5202          >        bbs 7,zpt,skip0663
c9fb : 4980            >        eor #(1<<7)
c9fd :                 >skip0663
                        
c9fd : 4552                     eor zpt
                                trap_ne         ;failed bbs bitnum in accu
c9ff : f003            >        beq skip0664
                       >        trap            ;failed not equal (non zero)
ca01 : 20c7ed          >        jsr report_error
                       >
ca04 :                 >skip0664
                        
ca04 : e652                     inc zpt
ca06 : d09a                     bne bbcl
                                next_test
ca08 : ad0232          >            lda test_case   ;previous test
ca0b : c907            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
ca0d : f003            >        beq skip0667
                       >        trap            ;failed not equal (non zero)
ca0f : 20c7ed          >        jsr report_error
                       >
ca12 :                 >skip0667
                       >
0008 =                 >test_num = test_num + 1
ca12 : a908            >            lda #test_num   ;*** next tests' number
ca14 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                            endif
                        
                        ; testing NOP
                        
                        nop_test    macro       ;\1 = opcode, \2 = # of bytes
                                    ldy #$42
                                    ldx #4-\2
                                    db  \1          ;test nop length
                                if \2 = 1
                                    dex
                                    dex
                                endif
                                if \2 = 2
                                    iny
                                    dex
                                endif
                                if \2 = 3
                                    iny
                                    iny
                                endif
                                    dex
                                    trap_ne         ;wrong number of bytes
                                    set_a $ff-\1,0
                                    db  \1          ;test nop integrity - flags off
                                    nop
                                    nop
                                    tst_a $ff-\1,0
                                    set_a $aa-\1,$ff
                                    db  \1          ;test nop integrity - flags on
                                    nop
                                    nop
                                    tst_a $aa-\1,$ff
                                    cpy #$42
                                    trap_ne         ;y changed
                                    cpx #0
                                    trap_ne         ;x changed
                                    endm
                        
                            if skip_nop = 0
                                nop_test $02,2
ca17 : a042            >            ldy #$42
ca19 : a202            >            ldx #4-2
ca1b : 02              >            db  $02          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
ca1c : c8              >            iny
ca1d : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
ca1e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
ca1f : f003            >        beq skip0670
                       >        trap            ;failed not equal (non zero)
ca21 : 20c7ed          >        jsr report_error
                       >
ca24 :                 >skip0670
                       >
                       >            set_a $ff-$02,0
                       >            load_flag 0
ca24 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
ca26 : 48              >            pha         ;use stack to load status
ca27 : a9fd            >            lda #$ff-$02     ;precharge accu
ca29 : 28              >            plp
                       >
ca2a : 02              >            db  $02          ;test nop integrity - flags off
ca2b : ea              >            nop
ca2c : ea              >            nop
                       >            tst_a $ff-$02,0
ca2d : 08              >            php         ;save flags
ca2e : c9fd            >            cmp #$ff-$02     ;test result
                       >            trap_ne
ca30 : f003            >        beq skip0675
                       >        trap            ;failed not equal (non zero)
ca32 : 20c7ed          >        jsr report_error
                       >
ca35 :                 >skip0675
                       >
ca35 : 68              >            pla         ;load status
ca36 : 48              >            pha
                       >            cmp_flag 0
ca37 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
ca39 : f003            >        beq skip0678
                       >        trap            ;failed not equal (non zero)
ca3b : 20c7ed          >        jsr report_error
                       >
ca3e :                 >skip0678
                       >
ca3e : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$02,$ff
                       >            load_flag $ff
ca3f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
ca41 : 48              >            pha         ;use stack to load status
ca42 : a9a8            >            lda #$aa-$02     ;precharge accu
ca44 : 28              >            plp
                       >
ca45 : 02              >            db  $02          ;test nop integrity - flags on
ca46 : ea              >            nop
ca47 : ea              >            nop
                       >            tst_a $aa-$02,$ff
ca48 : 08              >            php         ;save flags
ca49 : c9a8            >            cmp #$aa-$02     ;test result
                       >            trap_ne
ca4b : f003            >        beq skip0683
                       >        trap            ;failed not equal (non zero)
ca4d : 20c7ed          >        jsr report_error
                       >
ca50 :                 >skip0683
                       >
ca50 : 68              >            pla         ;load status
ca51 : 48              >            pha
                       >            cmp_flag $ff
ca52 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
ca54 : f003            >        beq skip0686
                       >        trap            ;failed not equal (non zero)
ca56 : 20c7ed          >        jsr report_error
                       >
ca59 :                 >skip0686
                       >
ca59 : 28              >            plp         ;restore status
                       >
ca5a : c042            >            cpy #$42
                       >            trap_ne         ;y changed
ca5c : f003            >        beq skip0688
                       >        trap            ;failed not equal (non zero)
ca5e : 20c7ed          >        jsr report_error
                       >
ca61 :                 >skip0688
                       >
ca61 : e000            >            cpx #0
                       >            trap_ne         ;x changed
ca63 : f003            >        beq skip0690
                       >        trap            ;failed not equal (non zero)
ca65 : 20c7ed          >        jsr report_error
                       >
ca68 :                 >skip0690
                       >
                        
                                nop_test $22,2
ca68 : a042            >            ldy #$42
ca6a : a202            >            ldx #4-2
ca6c : 22              >            db  $22          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
ca6d : c8              >            iny
ca6e : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
ca6f : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
ca70 : f003            >        beq skip0693
                       >        trap            ;failed not equal (non zero)
ca72 : 20c7ed          >        jsr report_error
                       >
ca75 :                 >skip0693
                       >
                       >            set_a $ff-$22,0
                       >            load_flag 0
ca75 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
ca77 : 48              >            pha         ;use stack to load status
ca78 : a9dd            >            lda #$ff-$22     ;precharge accu
ca7a : 28              >            plp
                       >
ca7b : 22              >            db  $22          ;test nop integrity - flags off
ca7c : ea              >            nop
ca7d : ea              >            nop
                       >            tst_a $ff-$22,0
ca7e : 08              >            php         ;save flags
ca7f : c9dd            >            cmp #$ff-$22     ;test result
                       >            trap_ne
ca81 : f003            >        beq skip0698
                       >        trap            ;failed not equal (non zero)
ca83 : 20c7ed          >        jsr report_error
                       >
ca86 :                 >skip0698
                       >
ca86 : 68              >            pla         ;load status
ca87 : 48              >            pha
                       >            cmp_flag 0
ca88 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
ca8a : f003            >        beq skip0701
                       >        trap            ;failed not equal (non zero)
ca8c : 20c7ed          >        jsr report_error
                       >
ca8f :                 >skip0701
                       >
ca8f : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$22,$ff
                       >            load_flag $ff
ca90 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
ca92 : 48              >            pha         ;use stack to load status
ca93 : a988            >            lda #$aa-$22     ;precharge accu
ca95 : 28              >            plp
                       >
ca96 : 22              >            db  $22          ;test nop integrity - flags on
ca97 : ea              >            nop
ca98 : ea              >            nop
                       >            tst_a $aa-$22,$ff
ca99 : 08              >            php         ;save flags
ca9a : c988            >            cmp #$aa-$22     ;test result
                       >            trap_ne
ca9c : f003            >        beq skip0706
                       >        trap            ;failed not equal (non zero)
ca9e : 20c7ed          >        jsr report_error
                       >
caa1 :                 >skip0706
                       >
caa1 : 68              >            pla         ;load status
caa2 : 48              >            pha
                       >            cmp_flag $ff
caa3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
caa5 : f003            >        beq skip0709
                       >        trap            ;failed not equal (non zero)
caa7 : 20c7ed          >        jsr report_error
                       >
caaa :                 >skip0709
                       >
caaa : 28              >            plp         ;restore status
                       >
caab : c042            >            cpy #$42
                       >            trap_ne         ;y changed
caad : f003            >        beq skip0711
                       >        trap            ;failed not equal (non zero)
caaf : 20c7ed          >        jsr report_error
                       >
cab2 :                 >skip0711
                       >
cab2 : e000            >            cpx #0
                       >            trap_ne         ;x changed
cab4 : f003            >        beq skip0713
                       >        trap            ;failed not equal (non zero)
cab6 : 20c7ed          >        jsr report_error
                       >
cab9 :                 >skip0713
                       >
                        
                                nop_test $42,2
cab9 : a042            >            ldy #$42
cabb : a202            >            ldx #4-2
cabd : 42              >            db  $42          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
cabe : c8              >            iny
cabf : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
cac0 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
cac1 : f003            >        beq skip0716
                       >        trap            ;failed not equal (non zero)
cac3 : 20c7ed          >        jsr report_error
                       >
cac6 :                 >skip0716
                       >
                       >            set_a $ff-$42,0
                       >            load_flag 0
cac6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
cac8 : 48              >            pha         ;use stack to load status
cac9 : a9bd            >            lda #$ff-$42     ;precharge accu
cacb : 28              >            plp
                       >
cacc : 42              >            db  $42          ;test nop integrity - flags off
cacd : ea              >            nop
cace : ea              >            nop
                       >            tst_a $ff-$42,0
cacf : 08              >            php         ;save flags
cad0 : c9bd            >            cmp #$ff-$42     ;test result
                       >            trap_ne
cad2 : f003            >        beq skip0721
                       >        trap            ;failed not equal (non zero)
cad4 : 20c7ed          >        jsr report_error
                       >
cad7 :                 >skip0721
                       >
cad7 : 68              >            pla         ;load status
cad8 : 48              >            pha
                       >            cmp_flag 0
cad9 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
cadb : f003            >        beq skip0724
                       >        trap            ;failed not equal (non zero)
cadd : 20c7ed          >        jsr report_error
                       >
cae0 :                 >skip0724
                       >
cae0 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$42,$ff
                       >            load_flag $ff
cae1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
cae3 : 48              >            pha         ;use stack to load status
cae4 : a968            >            lda #$aa-$42     ;precharge accu
cae6 : 28              >            plp
                       >
cae7 : 42              >            db  $42          ;test nop integrity - flags on
cae8 : ea              >            nop
cae9 : ea              >            nop
                       >            tst_a $aa-$42,$ff
caea : 08              >            php         ;save flags
caeb : c968            >            cmp #$aa-$42     ;test result
                       >            trap_ne
caed : f003            >        beq skip0729
                       >        trap            ;failed not equal (non zero)
caef : 20c7ed          >        jsr report_error
                       >
caf2 :                 >skip0729
                       >
caf2 : 68              >            pla         ;load status
caf3 : 48              >            pha
                       >            cmp_flag $ff
caf4 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
caf6 : f003            >        beq skip0732
                       >        trap            ;failed not equal (non zero)
caf8 : 20c7ed          >        jsr report_error
                       >
cafb :                 >skip0732
                       >
cafb : 28              >            plp         ;restore status
                       >
cafc : c042            >            cpy #$42
                       >            trap_ne         ;y changed
cafe : f003            >        beq skip0734
                       >        trap            ;failed not equal (non zero)
cb00 : 20c7ed          >        jsr report_error
                       >
cb03 :                 >skip0734
                       >
cb03 : e000            >            cpx #0
                       >            trap_ne         ;x changed
cb05 : f003            >        beq skip0736
                       >        trap            ;failed not equal (non zero)
cb07 : 20c7ed          >        jsr report_error
                       >
cb0a :                 >skip0736
                       >
                        
                                nop_test $62,2
cb0a : a042            >            ldy #$42
cb0c : a202            >            ldx #4-2
cb0e : 62              >            db  $62          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
cb0f : c8              >            iny
cb10 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
cb11 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
cb12 : f003            >        beq skip0739
                       >        trap            ;failed not equal (non zero)
cb14 : 20c7ed          >        jsr report_error
                       >
cb17 :                 >skip0739
                       >
                       >            set_a $ff-$62,0
                       >            load_flag 0
cb17 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
cb19 : 48              >            pha         ;use stack to load status
cb1a : a99d            >            lda #$ff-$62     ;precharge accu
cb1c : 28              >            plp
                       >
cb1d : 62              >            db  $62          ;test nop integrity - flags off
cb1e : ea              >            nop
cb1f : ea              >            nop
                       >            tst_a $ff-$62,0
cb20 : 08              >            php         ;save flags
cb21 : c99d            >            cmp #$ff-$62     ;test result
                       >            trap_ne
cb23 : f003            >        beq skip0744
                       >        trap            ;failed not equal (non zero)
cb25 : 20c7ed          >        jsr report_error
                       >
cb28 :                 >skip0744
                       >
cb28 : 68              >            pla         ;load status
cb29 : 48              >            pha
                       >            cmp_flag 0
cb2a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
cb2c : f003            >        beq skip0747
                       >        trap            ;failed not equal (non zero)
cb2e : 20c7ed          >        jsr report_error
                       >
cb31 :                 >skip0747
                       >
cb31 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$62,$ff
                       >            load_flag $ff
cb32 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
cb34 : 48              >            pha         ;use stack to load status
cb35 : a948            >            lda #$aa-$62     ;precharge accu
cb37 : 28              >            plp
                       >
cb38 : 62              >            db  $62          ;test nop integrity - flags on
cb39 : ea              >            nop
cb3a : ea              >            nop
                       >            tst_a $aa-$62,$ff
cb3b : 08              >            php         ;save flags
cb3c : c948            >            cmp #$aa-$62     ;test result
                       >            trap_ne
cb3e : f003            >        beq skip0752
                       >        trap            ;failed not equal (non zero)
cb40 : 20c7ed          >        jsr report_error
                       >
cb43 :                 >skip0752
                       >
cb43 : 68              >            pla         ;load status
cb44 : 48              >            pha
                       >            cmp_flag $ff
cb45 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
cb47 : f003            >        beq skip0755
                       >        trap            ;failed not equal (non zero)
cb49 : 20c7ed          >        jsr report_error
                       >
cb4c :                 >skip0755
                       >
cb4c : 28              >            plp         ;restore status
                       >
cb4d : c042            >            cpy #$42
                       >            trap_ne         ;y changed
cb4f : f003            >        beq skip0757
                       >        trap            ;failed not equal (non zero)
cb51 : 20c7ed          >        jsr report_error
                       >
cb54 :                 >skip0757
                       >
cb54 : e000            >            cpx #0
                       >            trap_ne         ;x changed
cb56 : f003            >        beq skip0759
                       >        trap            ;failed not equal (non zero)
cb58 : 20c7ed          >        jsr report_error
                       >
cb5b :                 >skip0759
                       >
                        
                                nop_test $82,2
cb5b : a042            >            ldy #$42
cb5d : a202            >            ldx #4-2
cb5f : 82              >            db  $82          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
cb60 : c8              >            iny
cb61 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
cb62 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
cb63 : f003            >        beq skip0762
                       >        trap            ;failed not equal (non zero)
cb65 : 20c7ed          >        jsr report_error
                       >
cb68 :                 >skip0762
                       >
                       >            set_a $ff-$82,0
                       >            load_flag 0
cb68 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
cb6a : 48              >            pha         ;use stack to load status
cb6b : a97d            >            lda #$ff-$82     ;precharge accu
cb6d : 28              >            plp
                       >
cb6e : 82              >            db  $82          ;test nop integrity - flags off
cb6f : ea              >            nop
cb70 : ea              >            nop
                       >            tst_a $ff-$82,0
cb71 : 08              >            php         ;save flags
cb72 : c97d            >            cmp #$ff-$82     ;test result
                       >            trap_ne
cb74 : f003            >        beq skip0767
                       >        trap            ;failed not equal (non zero)
cb76 : 20c7ed          >        jsr report_error
                       >
cb79 :                 >skip0767
                       >
cb79 : 68              >            pla         ;load status
cb7a : 48              >            pha
                       >            cmp_flag 0
cb7b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
cb7d : f003            >        beq skip0770
                       >        trap            ;failed not equal (non zero)
cb7f : 20c7ed          >        jsr report_error
                       >
cb82 :                 >skip0770
                       >
cb82 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$82,$ff
                       >            load_flag $ff
cb83 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
cb85 : 48              >            pha         ;use stack to load status
cb86 : a928            >            lda #$aa-$82     ;precharge accu
cb88 : 28              >            plp
                       >
cb89 : 82              >            db  $82          ;test nop integrity - flags on
cb8a : ea              >            nop
cb8b : ea              >            nop
                       >            tst_a $aa-$82,$ff
cb8c : 08              >            php         ;save flags
cb8d : c928            >            cmp #$aa-$82     ;test result
                       >            trap_ne
cb8f : f003            >        beq skip0775
                       >        trap            ;failed not equal (non zero)
cb91 : 20c7ed          >        jsr report_error
                       >
cb94 :                 >skip0775
                       >
cb94 : 68              >            pla         ;load status
cb95 : 48              >            pha
                       >            cmp_flag $ff
cb96 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
cb98 : f003            >        beq skip0778
                       >        trap            ;failed not equal (non zero)
cb9a : 20c7ed          >        jsr report_error
                       >
cb9d :                 >skip0778
                       >
cb9d : 28              >            plp         ;restore status
                       >
cb9e : c042            >            cpy #$42
                       >            trap_ne         ;y changed
cba0 : f003            >        beq skip0780
                       >        trap            ;failed not equal (non zero)
cba2 : 20c7ed          >        jsr report_error
                       >
cba5 :                 >skip0780
                       >
cba5 : e000            >            cpx #0
                       >            trap_ne         ;x changed
cba7 : f003            >        beq skip0782
                       >        trap            ;failed not equal (non zero)
cba9 : 20c7ed          >        jsr report_error
                       >
cbac :                 >skip0782
                       >
                        
                                nop_test $c2,2
cbac : a042            >            ldy #$42
cbae : a202            >            ldx #4-2
cbb0 : c2              >            db  $c2          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
cbb1 : c8              >            iny
cbb2 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
cbb3 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
cbb4 : f003            >        beq skip0785
                       >        trap            ;failed not equal (non zero)
cbb6 : 20c7ed          >        jsr report_error
                       >
cbb9 :                 >skip0785
                       >
                       >            set_a $ff-$c2,0
                       >            load_flag 0
cbb9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
cbbb : 48              >            pha         ;use stack to load status
cbbc : a93d            >            lda #$ff-$c2     ;precharge accu
cbbe : 28              >            plp
                       >
cbbf : c2              >            db  $c2          ;test nop integrity - flags off
cbc0 : ea              >            nop
cbc1 : ea              >            nop
                       >            tst_a $ff-$c2,0
cbc2 : 08              >            php         ;save flags
cbc3 : c93d            >            cmp #$ff-$c2     ;test result
                       >            trap_ne
cbc5 : f003            >        beq skip0790
                       >        trap            ;failed not equal (non zero)
cbc7 : 20c7ed          >        jsr report_error
                       >
cbca :                 >skip0790
                       >
cbca : 68              >            pla         ;load status
cbcb : 48              >            pha
                       >            cmp_flag 0
cbcc : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
cbce : f003            >        beq skip0793
                       >        trap            ;failed not equal (non zero)
cbd0 : 20c7ed          >        jsr report_error
                       >
cbd3 :                 >skip0793
                       >
cbd3 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$c2,$ff
                       >            load_flag $ff
cbd4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
cbd6 : 48              >            pha         ;use stack to load status
cbd7 : a9e8            >            lda #$aa-$c2     ;precharge accu
cbd9 : 28              >            plp
                       >
cbda : c2              >            db  $c2          ;test nop integrity - flags on
cbdb : ea              >            nop
cbdc : ea              >            nop
                       >            tst_a $aa-$c2,$ff
cbdd : 08              >            php         ;save flags
cbde : c9e8            >            cmp #$aa-$c2     ;test result
                       >            trap_ne
cbe0 : f003            >        beq skip0798
                       >        trap            ;failed not equal (non zero)
cbe2 : 20c7ed          >        jsr report_error
                       >
cbe5 :                 >skip0798
                       >
cbe5 : 68              >            pla         ;load status
cbe6 : 48              >            pha
                       >            cmp_flag $ff
cbe7 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
cbe9 : f003            >        beq skip0801
                       >        trap            ;failed not equal (non zero)
cbeb : 20c7ed          >        jsr report_error
                       >
cbee :                 >skip0801
                       >
cbee : 28              >            plp         ;restore status
                       >
cbef : c042            >            cpy #$42
                       >            trap_ne         ;y changed
cbf1 : f003            >        beq skip0803
                       >        trap            ;failed not equal (non zero)
cbf3 : 20c7ed          >        jsr report_error
                       >
cbf6 :                 >skip0803
                       >
cbf6 : e000            >            cpx #0
                       >            trap_ne         ;x changed
cbf8 : f003            >        beq skip0805
                       >        trap            ;failed not equal (non zero)
cbfa : 20c7ed          >        jsr report_error
                       >
cbfd :                 >skip0805
                       >
                        
                                nop_test $e2,2
cbfd : a042            >            ldy #$42
cbff : a202            >            ldx #4-2
cc01 : e2              >            db  $e2          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
cc02 : c8              >            iny
cc03 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
cc04 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
cc05 : f003            >        beq skip0808
                       >        trap            ;failed not equal (non zero)
cc07 : 20c7ed          >        jsr report_error
                       >
cc0a :                 >skip0808
                       >
                       >            set_a $ff-$e2,0
                       >            load_flag 0
cc0a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
cc0c : 48              >            pha         ;use stack to load status
cc0d : a91d            >            lda #$ff-$e2     ;precharge accu
cc0f : 28              >            plp
                       >
cc10 : e2              >            db  $e2          ;test nop integrity - flags off
cc11 : ea              >            nop
cc12 : ea              >            nop
                       >            tst_a $ff-$e2,0
cc13 : 08              >            php         ;save flags
cc14 : c91d            >            cmp #$ff-$e2     ;test result
                       >            trap_ne
cc16 : f003            >        beq skip0813
                       >        trap            ;failed not equal (non zero)
cc18 : 20c7ed          >        jsr report_error
                       >
cc1b :                 >skip0813
                       >
cc1b : 68              >            pla         ;load status
cc1c : 48              >            pha
                       >            cmp_flag 0
cc1d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
cc1f : f003            >        beq skip0816
                       >        trap            ;failed not equal (non zero)
cc21 : 20c7ed          >        jsr report_error
                       >
cc24 :                 >skip0816
                       >
cc24 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$e2,$ff
                       >            load_flag $ff
cc25 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
cc27 : 48              >            pha         ;use stack to load status
cc28 : a9c8            >            lda #$aa-$e2     ;precharge accu
cc2a : 28              >            plp
                       >
cc2b : e2              >            db  $e2          ;test nop integrity - flags on
cc2c : ea              >            nop
cc2d : ea              >            nop
                       >            tst_a $aa-$e2,$ff
cc2e : 08              >            php         ;save flags
cc2f : c9c8            >            cmp #$aa-$e2     ;test result
                       >            trap_ne
cc31 : f003            >        beq skip0821
                       >        trap            ;failed not equal (non zero)
cc33 : 20c7ed          >        jsr report_error
                       >
cc36 :                 >skip0821
                       >
cc36 : 68              >            pla         ;load status
cc37 : 48              >            pha
                       >            cmp_flag $ff
cc38 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
cc3a : f003            >        beq skip0824
                       >        trap            ;failed not equal (non zero)
cc3c : 20c7ed          >        jsr report_error
                       >
cc3f :                 >skip0824
                       >
cc3f : 28              >            plp         ;restore status
                       >
cc40 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
cc42 : f003            >        beq skip0826
                       >        trap            ;failed not equal (non zero)
cc44 : 20c7ed          >        jsr report_error
                       >
cc47 :                 >skip0826
                       >
cc47 : e000            >            cpx #0
                       >            trap_ne         ;x changed
cc49 : f003            >        beq skip0828
                       >        trap            ;failed not equal (non zero)
cc4b : 20c7ed          >        jsr report_error
                       >
cc4e :                 >skip0828
                       >
                        
                                nop_test $44,2
cc4e : a042            >            ldy #$42
cc50 : a202            >            ldx #4-2
cc52 : 44              >            db  $44          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
cc53 : c8              >            iny
cc54 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
cc55 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
cc56 : f003            >        beq skip0831
                       >        trap            ;failed not equal (non zero)
cc58 : 20c7ed          >        jsr report_error
                       >
cc5b :                 >skip0831
                       >
                       >            set_a $ff-$44,0
                       >            load_flag 0
cc5b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
cc5d : 48              >            pha         ;use stack to load status
cc5e : a9bb            >            lda #$ff-$44     ;precharge accu
cc60 : 28              >            plp
                       >
cc61 : 44              >            db  $44          ;test nop integrity - flags off
cc62 : ea              >            nop
cc63 : ea              >            nop
                       >            tst_a $ff-$44,0
cc64 : 08              >            php         ;save flags
cc65 : c9bb            >            cmp #$ff-$44     ;test result
                       >            trap_ne
cc67 : f003            >        beq skip0836
                       >        trap            ;failed not equal (non zero)
cc69 : 20c7ed          >        jsr report_error
                       >
cc6c :                 >skip0836
                       >
cc6c : 68              >            pla         ;load status
cc6d : 48              >            pha
                       >            cmp_flag 0
cc6e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
cc70 : f003            >        beq skip0839
                       >        trap            ;failed not equal (non zero)
cc72 : 20c7ed          >        jsr report_error
                       >
cc75 :                 >skip0839
                       >
cc75 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$44,$ff
                       >            load_flag $ff
cc76 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
cc78 : 48              >            pha         ;use stack to load status
cc79 : a966            >            lda #$aa-$44     ;precharge accu
cc7b : 28              >            plp
                       >
cc7c : 44              >            db  $44          ;test nop integrity - flags on
cc7d : ea              >            nop
cc7e : ea              >            nop
                       >            tst_a $aa-$44,$ff
cc7f : 08              >            php         ;save flags
cc80 : c966            >            cmp #$aa-$44     ;test result
                       >            trap_ne
cc82 : f003            >        beq skip0844
                       >        trap            ;failed not equal (non zero)
cc84 : 20c7ed          >        jsr report_error
                       >
cc87 :                 >skip0844
                       >
cc87 : 68              >            pla         ;load status
cc88 : 48              >            pha
                       >            cmp_flag $ff
cc89 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
cc8b : f003            >        beq skip0847
                       >        trap            ;failed not equal (non zero)
cc8d : 20c7ed          >        jsr report_error
                       >
cc90 :                 >skip0847
                       >
cc90 : 28              >            plp         ;restore status
                       >
cc91 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
cc93 : f003            >        beq skip0849
                       >        trap            ;failed not equal (non zero)
cc95 : 20c7ed          >        jsr report_error
                       >
cc98 :                 >skip0849
                       >
cc98 : e000            >            cpx #0
                       >            trap_ne         ;x changed
cc9a : f003            >        beq skip0851
                       >        trap            ;failed not equal (non zero)
cc9c : 20c7ed          >        jsr report_error
                       >
cc9f :                 >skip0851
                       >
                        
                                nop_test $54,2
cc9f : a042            >            ldy #$42
cca1 : a202            >            ldx #4-2
cca3 : 54              >            db  $54          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
cca4 : c8              >            iny
cca5 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
cca6 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
cca7 : f003            >        beq skip0854
                       >        trap            ;failed not equal (non zero)
cca9 : 20c7ed          >        jsr report_error
                       >
ccac :                 >skip0854
                       >
                       >            set_a $ff-$54,0
                       >            load_flag 0
ccac : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
ccae : 48              >            pha         ;use stack to load status
ccaf : a9ab            >            lda #$ff-$54     ;precharge accu
ccb1 : 28              >            plp
                       >
ccb2 : 54              >            db  $54          ;test nop integrity - flags off
ccb3 : ea              >            nop
ccb4 : ea              >            nop
                       >            tst_a $ff-$54,0
ccb5 : 08              >            php         ;save flags
ccb6 : c9ab            >            cmp #$ff-$54     ;test result
                       >            trap_ne
ccb8 : f003            >        beq skip0859
                       >        trap            ;failed not equal (non zero)
ccba : 20c7ed          >        jsr report_error
                       >
ccbd :                 >skip0859
                       >
ccbd : 68              >            pla         ;load status
ccbe : 48              >            pha
                       >            cmp_flag 0
ccbf : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
ccc1 : f003            >        beq skip0862
                       >        trap            ;failed not equal (non zero)
ccc3 : 20c7ed          >        jsr report_error
                       >
ccc6 :                 >skip0862
                       >
ccc6 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$54,$ff
                       >            load_flag $ff
ccc7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
ccc9 : 48              >            pha         ;use stack to load status
ccca : a956            >            lda #$aa-$54     ;precharge accu
cccc : 28              >            plp
                       >
cccd : 54              >            db  $54          ;test nop integrity - flags on
ccce : ea              >            nop
cccf : ea              >            nop
                       >            tst_a $aa-$54,$ff
ccd0 : 08              >            php         ;save flags
ccd1 : c956            >            cmp #$aa-$54     ;test result
                       >            trap_ne
ccd3 : f003            >        beq skip0867
                       >        trap            ;failed not equal (non zero)
ccd5 : 20c7ed          >        jsr report_error
                       >
ccd8 :                 >skip0867
                       >
ccd8 : 68              >            pla         ;load status
ccd9 : 48              >            pha
                       >            cmp_flag $ff
ccda : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
ccdc : f003            >        beq skip0870
                       >        trap            ;failed not equal (non zero)
ccde : 20c7ed          >        jsr report_error
                       >
cce1 :                 >skip0870
                       >
cce1 : 28              >            plp         ;restore status
                       >
cce2 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
cce4 : f003            >        beq skip0872
                       >        trap            ;failed not equal (non zero)
cce6 : 20c7ed          >        jsr report_error
                       >
cce9 :                 >skip0872
                       >
cce9 : e000            >            cpx #0
                       >            trap_ne         ;x changed
cceb : f003            >        beq skip0874
                       >        trap            ;failed not equal (non zero)
cced : 20c7ed          >        jsr report_error
                       >
ccf0 :                 >skip0874
                       >
                        
                                nop_test $d4,2
ccf0 : a042            >            ldy #$42
ccf2 : a202            >            ldx #4-2
ccf4 : d4              >            db  $d4          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
ccf5 : c8              >            iny
ccf6 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
ccf7 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
ccf8 : f003            >        beq skip0877
                       >        trap            ;failed not equal (non zero)
ccfa : 20c7ed          >        jsr report_error
                       >
ccfd :                 >skip0877
                       >
                       >            set_a $ff-$d4,0
                       >            load_flag 0
ccfd : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
ccff : 48              >            pha         ;use stack to load status
cd00 : a92b            >            lda #$ff-$d4     ;precharge accu
cd02 : 28              >            plp
                       >
cd03 : d4              >            db  $d4          ;test nop integrity - flags off
cd04 : ea              >            nop
cd05 : ea              >            nop
                       >            tst_a $ff-$d4,0
cd06 : 08              >            php         ;save flags
cd07 : c92b            >            cmp #$ff-$d4     ;test result
                       >            trap_ne
cd09 : f003            >        beq skip0882
                       >        trap            ;failed not equal (non zero)
cd0b : 20c7ed          >        jsr report_error
                       >
cd0e :                 >skip0882
                       >
cd0e : 68              >            pla         ;load status
cd0f : 48              >            pha
                       >            cmp_flag 0
cd10 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
cd12 : f003            >        beq skip0885
                       >        trap            ;failed not equal (non zero)
cd14 : 20c7ed          >        jsr report_error
                       >
cd17 :                 >skip0885
                       >
cd17 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$d4,$ff
                       >            load_flag $ff
cd18 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
cd1a : 48              >            pha         ;use stack to load status
cd1b : a9d6            >            lda #$aa-$d4     ;precharge accu
cd1d : 28              >            plp
                       >
cd1e : d4              >            db  $d4          ;test nop integrity - flags on
cd1f : ea              >            nop
cd20 : ea              >            nop
                       >            tst_a $aa-$d4,$ff
cd21 : 08              >            php         ;save flags
cd22 : c9d6            >            cmp #$aa-$d4     ;test result
                       >            trap_ne
cd24 : f003            >        beq skip0890
                       >        trap            ;failed not equal (non zero)
cd26 : 20c7ed          >        jsr report_error
                       >
cd29 :                 >skip0890
                       >
cd29 : 68              >            pla         ;load status
cd2a : 48              >            pha
                       >            cmp_flag $ff
cd2b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
cd2d : f003            >        beq skip0893
                       >        trap            ;failed not equal (non zero)
cd2f : 20c7ed          >        jsr report_error
                       >
cd32 :                 >skip0893
                       >
cd32 : 28              >            plp         ;restore status
                       >
cd33 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
cd35 : f003            >        beq skip0895
                       >        trap            ;failed not equal (non zero)
cd37 : 20c7ed          >        jsr report_error
                       >
cd3a :                 >skip0895
                       >
cd3a : e000            >            cpx #0
                       >            trap_ne         ;x changed
cd3c : f003            >        beq skip0897
                       >        trap            ;failed not equal (non zero)
cd3e : 20c7ed          >        jsr report_error
                       >
cd41 :                 >skip0897
                       >
                        
                                nop_test $f4,2
cd41 : a042            >            ldy #$42
cd43 : a202            >            ldx #4-2
cd45 : f4              >            db  $f4          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
cd46 : c8              >            iny
cd47 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
cd48 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
cd49 : f003            >        beq skip0900
                       >        trap            ;failed not equal (non zero)
cd4b : 20c7ed          >        jsr report_error
                       >
cd4e :                 >skip0900
                       >
                       >            set_a $ff-$f4,0
                       >            load_flag 0
cd4e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
cd50 : 48              >            pha         ;use stack to load status
cd51 : a90b            >            lda #$ff-$f4     ;precharge accu
cd53 : 28              >            plp
                       >
cd54 : f4              >            db  $f4          ;test nop integrity - flags off
cd55 : ea              >            nop
cd56 : ea              >            nop
                       >            tst_a $ff-$f4,0
cd57 : 08              >            php         ;save flags
cd58 : c90b            >            cmp #$ff-$f4     ;test result
                       >            trap_ne
cd5a : f003            >        beq skip0905
                       >        trap            ;failed not equal (non zero)
cd5c : 20c7ed          >        jsr report_error
                       >
cd5f :                 >skip0905
                       >
cd5f : 68              >            pla         ;load status
cd60 : 48              >            pha
                       >            cmp_flag 0
cd61 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
cd63 : f003            >        beq skip0908
                       >        trap            ;failed not equal (non zero)
cd65 : 20c7ed          >        jsr report_error
                       >
cd68 :                 >skip0908
                       >
cd68 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$f4,$ff
                       >            load_flag $ff
cd69 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
cd6b : 48              >            pha         ;use stack to load status
cd6c : a9b6            >            lda #$aa-$f4     ;precharge accu
cd6e : 28              >            plp
                       >
cd6f : f4              >            db  $f4          ;test nop integrity - flags on
cd70 : ea              >            nop
cd71 : ea              >            nop
                       >            tst_a $aa-$f4,$ff
cd72 : 08              >            php         ;save flags
cd73 : c9b6            >            cmp #$aa-$f4     ;test result
                       >            trap_ne
cd75 : f003            >        beq skip0913
                       >        trap            ;failed not equal (non zero)
cd77 : 20c7ed          >        jsr report_error
                       >
cd7a :                 >skip0913
                       >
cd7a : 68              >            pla         ;load status
cd7b : 48              >            pha
                       >            cmp_flag $ff
cd7c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
cd7e : f003            >        beq skip0916
                       >        trap            ;failed not equal (non zero)
cd80 : 20c7ed          >        jsr report_error
                       >
cd83 :                 >skip0916
                       >
cd83 : 28              >            plp         ;restore status
                       >
cd84 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
cd86 : f003            >        beq skip0918
                       >        trap            ;failed not equal (non zero)
cd88 : 20c7ed          >        jsr report_error
                       >
cd8b :                 >skip0918
                       >
cd8b : e000            >            cpx #0
                       >            trap_ne         ;x changed
cd8d : f003            >        beq skip0920
                       >        trap            ;failed not equal (non zero)
cd8f : 20c7ed          >        jsr report_error
                       >
cd92 :                 >skip0920
                       >
                        
                                nop_test $5c,3
cd92 : a042            >            ldy #$42
cd94 : a201            >            ldx #4-3
cd96 : 5c              >            db  $5c          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
cd97 : c8              >            iny
cd98 : c8              >            iny
                       >        endif
cd99 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
cd9a : f003            >        beq skip0923
                       >        trap            ;failed not equal (non zero)
cd9c : 20c7ed          >        jsr report_error
                       >
cd9f :                 >skip0923
                       >
                       >            set_a $ff-$5c,0
                       >            load_flag 0
cd9f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
cda1 : 48              >            pha         ;use stack to load status
cda2 : a9a3            >            lda #$ff-$5c     ;precharge accu
cda4 : 28              >            plp
                       >
cda5 : 5c              >            db  $5c          ;test nop integrity - flags off
cda6 : ea              >            nop
cda7 : ea              >            nop
                       >            tst_a $ff-$5c,0
cda8 : 08              >            php         ;save flags
cda9 : c9a3            >            cmp #$ff-$5c     ;test result
                       >            trap_ne
cdab : f003            >        beq skip0928
                       >        trap            ;failed not equal (non zero)
cdad : 20c7ed          >        jsr report_error
                       >
cdb0 :                 >skip0928
                       >
cdb0 : 68              >            pla         ;load status
cdb1 : 48              >            pha
                       >            cmp_flag 0
cdb2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
cdb4 : f003            >        beq skip0931
                       >        trap            ;failed not equal (non zero)
cdb6 : 20c7ed          >        jsr report_error
                       >
cdb9 :                 >skip0931
                       >
cdb9 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$5c,$ff
                       >            load_flag $ff
cdba : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
cdbc : 48              >            pha         ;use stack to load status
cdbd : a94e            >            lda #$aa-$5c     ;precharge accu
cdbf : 28              >            plp
                       >
cdc0 : 5c              >            db  $5c          ;test nop integrity - flags on
cdc1 : ea              >            nop
cdc2 : ea              >            nop
                       >            tst_a $aa-$5c,$ff
cdc3 : 08              >            php         ;save flags
cdc4 : c94e            >            cmp #$aa-$5c     ;test result
                       >            trap_ne
cdc6 : f003            >        beq skip0936
                       >        trap            ;failed not equal (non zero)
cdc8 : 20c7ed          >        jsr report_error
                       >
cdcb :                 >skip0936
                       >
cdcb : 68              >            pla         ;load status
cdcc : 48              >            pha
                       >            cmp_flag $ff
cdcd : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
cdcf : f003            >        beq skip0939
                       >        trap            ;failed not equal (non zero)
cdd1 : 20c7ed          >        jsr report_error
                       >
cdd4 :                 >skip0939
                       >
cdd4 : 28              >            plp         ;restore status
                       >
cdd5 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
cdd7 : f003            >        beq skip0941
                       >        trap            ;failed not equal (non zero)
cdd9 : 20c7ed          >        jsr report_error
                       >
cddc :                 >skip0941
                       >
cddc : e000            >            cpx #0
                       >            trap_ne         ;x changed
cdde : f003            >        beq skip0943
                       >        trap            ;failed not equal (non zero)
cde0 : 20c7ed          >        jsr report_error
                       >
cde3 :                 >skip0943
                       >
                        
                                nop_test $dc,3
cde3 : a042            >            ldy #$42
cde5 : a201            >            ldx #4-3
cde7 : dc              >            db  $dc          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
cde8 : c8              >            iny
cde9 : c8              >            iny
                       >        endif
cdea : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
cdeb : f003            >        beq skip0946
                       >        trap            ;failed not equal (non zero)
cded : 20c7ed          >        jsr report_error
                       >
cdf0 :                 >skip0946
                       >
                       >            set_a $ff-$dc,0
                       >            load_flag 0
cdf0 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
cdf2 : 48              >            pha         ;use stack to load status
cdf3 : a923            >            lda #$ff-$dc     ;precharge accu
cdf5 : 28              >            plp
                       >
cdf6 : dc              >            db  $dc          ;test nop integrity - flags off
cdf7 : ea              >            nop
cdf8 : ea              >            nop
                       >            tst_a $ff-$dc,0
cdf9 : 08              >            php         ;save flags
cdfa : c923            >            cmp #$ff-$dc     ;test result
                       >            trap_ne
cdfc : f003            >        beq skip0951
                       >        trap            ;failed not equal (non zero)
cdfe : 20c7ed          >        jsr report_error
                       >
ce01 :                 >skip0951
                       >
ce01 : 68              >            pla         ;load status
ce02 : 48              >            pha
                       >            cmp_flag 0
ce03 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
ce05 : f003            >        beq skip0954
                       >        trap            ;failed not equal (non zero)
ce07 : 20c7ed          >        jsr report_error
                       >
ce0a :                 >skip0954
                       >
ce0a : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$dc,$ff
                       >            load_flag $ff
ce0b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
ce0d : 48              >            pha         ;use stack to load status
ce0e : a9ce            >            lda #$aa-$dc     ;precharge accu
ce10 : 28              >            plp
                       >
ce11 : dc              >            db  $dc          ;test nop integrity - flags on
ce12 : ea              >            nop
ce13 : ea              >            nop
                       >            tst_a $aa-$dc,$ff
ce14 : 08              >            php         ;save flags
ce15 : c9ce            >            cmp #$aa-$dc     ;test result
                       >            trap_ne
ce17 : f003            >        beq skip0959
                       >        trap            ;failed not equal (non zero)
ce19 : 20c7ed          >        jsr report_error
                       >
ce1c :                 >skip0959
                       >
ce1c : 68              >            pla         ;load status
ce1d : 48              >            pha
                       >            cmp_flag $ff
ce1e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
ce20 : f003            >        beq skip0962
                       >        trap            ;failed not equal (non zero)
ce22 : 20c7ed          >        jsr report_error
                       >
ce25 :                 >skip0962
                       >
ce25 : 28              >            plp         ;restore status
                       >
ce26 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
ce28 : f003            >        beq skip0964
                       >        trap            ;failed not equal (non zero)
ce2a : 20c7ed          >        jsr report_error
                       >
ce2d :                 >skip0964
                       >
ce2d : e000            >            cpx #0
                       >            trap_ne         ;x changed
ce2f : f003            >        beq skip0966
                       >        trap            ;failed not equal (non zero)
ce31 : 20c7ed          >        jsr report_error
                       >
ce34 :                 >skip0966
                       >
                        
                                nop_test $fc,3
ce34 : a042            >            ldy #$42
ce36 : a201            >            ldx #4-3
ce38 : fc              >            db  $fc          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
ce39 : c8              >            iny
ce3a : c8              >            iny
                       >        endif
ce3b : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
ce3c : f003            >        beq skip0969
                       >        trap            ;failed not equal (non zero)
ce3e : 20c7ed          >        jsr report_error
                       >
ce41 :                 >skip0969
                       >
                       >            set_a $ff-$fc,0
                       >            load_flag 0
ce41 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
ce43 : 48              >            pha         ;use stack to load status
ce44 : a903            >            lda #$ff-$fc     ;precharge accu
ce46 : 28              >            plp
                       >
ce47 : fc              >            db  $fc          ;test nop integrity - flags off
ce48 : ea              >            nop
ce49 : ea              >            nop
                       >            tst_a $ff-$fc,0
ce4a : 08              >            php         ;save flags
ce4b : c903            >            cmp #$ff-$fc     ;test result
                       >            trap_ne
ce4d : f003            >        beq skip0974
                       >        trap            ;failed not equal (non zero)
ce4f : 20c7ed          >        jsr report_error
                       >
ce52 :                 >skip0974
                       >
ce52 : 68              >            pla         ;load status
ce53 : 48              >            pha
                       >            cmp_flag 0
ce54 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
ce56 : f003            >        beq skip0977
                       >        trap            ;failed not equal (non zero)
ce58 : 20c7ed          >        jsr report_error
                       >
ce5b :                 >skip0977
                       >
ce5b : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$fc,$ff
                       >            load_flag $ff
ce5c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
ce5e : 48              >            pha         ;use stack to load status
ce5f : a9ae            >            lda #$aa-$fc     ;precharge accu
ce61 : 28              >            plp
                       >
ce62 : fc              >            db  $fc          ;test nop integrity - flags on
ce63 : ea              >            nop
ce64 : ea              >            nop
                       >            tst_a $aa-$fc,$ff
ce65 : 08              >            php         ;save flags
ce66 : c9ae            >            cmp #$aa-$fc     ;test result
                       >            trap_ne
ce68 : f003            >        beq skip0982
                       >        trap            ;failed not equal (non zero)
ce6a : 20c7ed          >        jsr report_error
                       >
ce6d :                 >skip0982
                       >
ce6d : 68              >            pla         ;load status
ce6e : 48              >            pha
                       >            cmp_flag $ff
ce6f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
ce71 : f003            >        beq skip0985
                       >        trap            ;failed not equal (non zero)
ce73 : 20c7ed          >        jsr report_error
                       >
ce76 :                 >skip0985
                       >
ce76 : 28              >            plp         ;restore status
                       >
ce77 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
ce79 : f003            >        beq skip0987
                       >        trap            ;failed not equal (non zero)
ce7b : 20c7ed          >        jsr report_error
                       >
ce7e :                 >skip0987
                       >
ce7e : e000            >            cpx #0
                       >            trap_ne         ;x changed
ce80 : f003            >        beq skip0989
                       >        trap            ;failed not equal (non zero)
ce82 : 20c7ed          >        jsr report_error
                       >
ce85 :                 >skip0989
                       >
                        
                                nop_test $03,1
ce85 : a042            >            ldy #$42
ce87 : a203            >            ldx #4-1
ce89 : 03              >            db  $03          ;test nop length
                       >        if 1 = 1
ce8a : ca              >            dex
ce8b : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
ce8c : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
ce8d : f003            >        beq skip0992
                       >        trap            ;failed not equal (non zero)
ce8f : 20c7ed          >        jsr report_error
                       >
ce92 :                 >skip0992
                       >
                       >            set_a $ff-$03,0
                       >            load_flag 0
ce92 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
ce94 : 48              >            pha         ;use stack to load status
ce95 : a9fc            >            lda #$ff-$03     ;precharge accu
ce97 : 28              >            plp
                       >
ce98 : 03              >            db  $03          ;test nop integrity - flags off
ce99 : ea              >            nop
ce9a : ea              >            nop
                       >            tst_a $ff-$03,0
ce9b : 08              >            php         ;save flags
ce9c : c9fc            >            cmp #$ff-$03     ;test result
                       >            trap_ne
ce9e : f003            >        beq skip0997
                       >        trap            ;failed not equal (non zero)
cea0 : 20c7ed          >        jsr report_error
                       >
cea3 :                 >skip0997
                       >
cea3 : 68              >            pla         ;load status
cea4 : 48              >            pha
                       >            cmp_flag 0
cea5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
cea7 : f003            >        beq skip1000
                       >        trap            ;failed not equal (non zero)
cea9 : 20c7ed          >        jsr report_error
                       >
ceac :                 >skip1000
                       >
ceac : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$03,$ff
                       >            load_flag $ff
cead : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
ceaf : 48              >            pha         ;use stack to load status
ceb0 : a9a7            >            lda #$aa-$03     ;precharge accu
ceb2 : 28              >            plp
                       >
ceb3 : 03              >            db  $03          ;test nop integrity - flags on
ceb4 : ea              >            nop
ceb5 : ea              >            nop
                       >            tst_a $aa-$03,$ff
ceb6 : 08              >            php         ;save flags
ceb7 : c9a7            >            cmp #$aa-$03     ;test result
                       >            trap_ne
ceb9 : f003            >        beq skip1005
                       >        trap            ;failed not equal (non zero)
cebb : 20c7ed          >        jsr report_error
                       >
cebe :                 >skip1005
                       >
cebe : 68              >            pla         ;load status
cebf : 48              >            pha
                       >            cmp_flag $ff
cec0 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
cec2 : f003            >        beq skip1008
                       >        trap            ;failed not equal (non zero)
cec4 : 20c7ed          >        jsr report_error
                       >
cec7 :                 >skip1008
                       >
cec7 : 28              >            plp         ;restore status
                       >
cec8 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
ceca : f003            >        beq skip1010
                       >        trap            ;failed not equal (non zero)
cecc : 20c7ed          >        jsr report_error
                       >
cecf :                 >skip1010
                       >
cecf : e000            >            cpx #0
                       >            trap_ne         ;x changed
ced1 : f003            >        beq skip1012
                       >        trap            ;failed not equal (non zero)
ced3 : 20c7ed          >        jsr report_error
                       >
ced6 :                 >skip1012
                       >
                        
                                nop_test $13,1
ced6 : a042            >            ldy #$42
ced8 : a203            >            ldx #4-1
ceda : 13              >            db  $13          ;test nop length
                       >        if 1 = 1
cedb : ca              >            dex
cedc : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
cedd : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
cede : f003            >        beq skip1015
                       >        trap            ;failed not equal (non zero)
cee0 : 20c7ed          >        jsr report_error
                       >
cee3 :                 >skip1015
                       >
                       >            set_a $ff-$13,0
                       >            load_flag 0
cee3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
cee5 : 48              >            pha         ;use stack to load status
cee6 : a9ec            >            lda #$ff-$13     ;precharge accu
cee8 : 28              >            plp
                       >
cee9 : 13              >            db  $13          ;test nop integrity - flags off
ceea : ea              >            nop
ceeb : ea              >            nop
                       >            tst_a $ff-$13,0
ceec : 08              >            php         ;save flags
ceed : c9ec            >            cmp #$ff-$13     ;test result
                       >            trap_ne
ceef : f003            >        beq skip1020
                       >        trap            ;failed not equal (non zero)
cef1 : 20c7ed          >        jsr report_error
                       >
cef4 :                 >skip1020
                       >
cef4 : 68              >            pla         ;load status
cef5 : 48              >            pha
                       >            cmp_flag 0
cef6 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
cef8 : f003            >        beq skip1023
                       >        trap            ;failed not equal (non zero)
cefa : 20c7ed          >        jsr report_error
                       >
cefd :                 >skip1023
                       >
cefd : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$13,$ff
                       >            load_flag $ff
cefe : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
cf00 : 48              >            pha         ;use stack to load status
cf01 : a997            >            lda #$aa-$13     ;precharge accu
cf03 : 28              >            plp
                       >
cf04 : 13              >            db  $13          ;test nop integrity - flags on
cf05 : ea              >            nop
cf06 : ea              >            nop
                       >            tst_a $aa-$13,$ff
cf07 : 08              >            php         ;save flags
cf08 : c997            >            cmp #$aa-$13     ;test result
                       >            trap_ne
cf0a : f003            >        beq skip1028
                       >        trap            ;failed not equal (non zero)
cf0c : 20c7ed          >        jsr report_error
                       >
cf0f :                 >skip1028
                       >
cf0f : 68              >            pla         ;load status
cf10 : 48              >            pha
                       >            cmp_flag $ff
cf11 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
cf13 : f003            >        beq skip1031
                       >        trap            ;failed not equal (non zero)
cf15 : 20c7ed          >        jsr report_error
                       >
cf18 :                 >skip1031
                       >
cf18 : 28              >            plp         ;restore status
                       >
cf19 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
cf1b : f003            >        beq skip1033
                       >        trap            ;failed not equal (non zero)
cf1d : 20c7ed          >        jsr report_error
                       >
cf20 :                 >skip1033
                       >
cf20 : e000            >            cpx #0
                       >            trap_ne         ;x changed
cf22 : f003            >        beq skip1035
                       >        trap            ;failed not equal (non zero)
cf24 : 20c7ed          >        jsr report_error
                       >
cf27 :                 >skip1035
                       >
                        
                                nop_test $23,1
cf27 : a042            >            ldy #$42
cf29 : a203            >            ldx #4-1
cf2b : 23              >            db  $23          ;test nop length
                       >        if 1 = 1
cf2c : ca              >            dex
cf2d : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
cf2e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
cf2f : f003            >        beq skip1038
                       >        trap            ;failed not equal (non zero)
cf31 : 20c7ed          >        jsr report_error
                       >
cf34 :                 >skip1038
                       >
                       >            set_a $ff-$23,0
                       >            load_flag 0
cf34 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
cf36 : 48              >            pha         ;use stack to load status
cf37 : a9dc            >            lda #$ff-$23     ;precharge accu
cf39 : 28              >            plp
                       >
cf3a : 23              >            db  $23          ;test nop integrity - flags off
cf3b : ea              >            nop
cf3c : ea              >            nop
                       >            tst_a $ff-$23,0
cf3d : 08              >            php         ;save flags
cf3e : c9dc            >            cmp #$ff-$23     ;test result
                       >            trap_ne
cf40 : f003            >        beq skip1043
                       >        trap            ;failed not equal (non zero)
cf42 : 20c7ed          >        jsr report_error
                       >
cf45 :                 >skip1043
                       >
cf45 : 68              >            pla         ;load status
cf46 : 48              >            pha
                       >            cmp_flag 0
cf47 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
cf49 : f003            >        beq skip1046
                       >        trap            ;failed not equal (non zero)
cf4b : 20c7ed          >        jsr report_error
                       >
cf4e :                 >skip1046
                       >
cf4e : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$23,$ff
                       >            load_flag $ff
cf4f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
cf51 : 48              >            pha         ;use stack to load status
cf52 : a987            >            lda #$aa-$23     ;precharge accu
cf54 : 28              >            plp
                       >
cf55 : 23              >            db  $23          ;test nop integrity - flags on
cf56 : ea              >            nop
cf57 : ea              >            nop
                       >            tst_a $aa-$23,$ff
cf58 : 08              >            php         ;save flags
cf59 : c987            >            cmp #$aa-$23     ;test result
                       >            trap_ne
cf5b : f003            >        beq skip1051
                       >        trap            ;failed not equal (non zero)
cf5d : 20c7ed          >        jsr report_error
                       >
cf60 :                 >skip1051
                       >
cf60 : 68              >            pla         ;load status
cf61 : 48              >            pha
                       >            cmp_flag $ff
cf62 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
cf64 : f003            >        beq skip1054
                       >        trap            ;failed not equal (non zero)
cf66 : 20c7ed          >        jsr report_error
                       >
cf69 :                 >skip1054
                       >
cf69 : 28              >            plp         ;restore status
                       >
cf6a : c042            >            cpy #$42
                       >            trap_ne         ;y changed
cf6c : f003            >        beq skip1056
                       >        trap            ;failed not equal (non zero)
cf6e : 20c7ed          >        jsr report_error
                       >
cf71 :                 >skip1056
                       >
cf71 : e000            >            cpx #0
                       >            trap_ne         ;x changed
cf73 : f003            >        beq skip1058
                       >        trap            ;failed not equal (non zero)
cf75 : 20c7ed          >        jsr report_error
                       >
cf78 :                 >skip1058
                       >
                        
                                nop_test $33,1
cf78 : a042            >            ldy #$42
cf7a : a203            >            ldx #4-1
cf7c : 33              >            db  $33          ;test nop length
                       >        if 1 = 1
cf7d : ca              >            dex
cf7e : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
cf7f : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
cf80 : f003            >        beq skip1061
                       >        trap            ;failed not equal (non zero)
cf82 : 20c7ed          >        jsr report_error
                       >
cf85 :                 >skip1061
                       >
                       >            set_a $ff-$33,0
                       >            load_flag 0
cf85 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
cf87 : 48              >            pha         ;use stack to load status
cf88 : a9cc            >            lda #$ff-$33     ;precharge accu
cf8a : 28              >            plp
                       >
cf8b : 33              >            db  $33          ;test nop integrity - flags off
cf8c : ea              >            nop
cf8d : ea              >            nop
                       >            tst_a $ff-$33,0
cf8e : 08              >            php         ;save flags
cf8f : c9cc            >            cmp #$ff-$33     ;test result
                       >            trap_ne
cf91 : f003            >        beq skip1066
                       >        trap            ;failed not equal (non zero)
cf93 : 20c7ed          >        jsr report_error
                       >
cf96 :                 >skip1066
                       >
cf96 : 68              >            pla         ;load status
cf97 : 48              >            pha
                       >            cmp_flag 0
cf98 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
cf9a : f003            >        beq skip1069
                       >        trap            ;failed not equal (non zero)
cf9c : 20c7ed          >        jsr report_error
                       >
cf9f :                 >skip1069
                       >
cf9f : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$33,$ff
                       >            load_flag $ff
cfa0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
cfa2 : 48              >            pha         ;use stack to load status
cfa3 : a977            >            lda #$aa-$33     ;precharge accu
cfa5 : 28              >            plp
                       >
cfa6 : 33              >            db  $33          ;test nop integrity - flags on
cfa7 : ea              >            nop
cfa8 : ea              >            nop
                       >            tst_a $aa-$33,$ff
cfa9 : 08              >            php         ;save flags
cfaa : c977            >            cmp #$aa-$33     ;test result
                       >            trap_ne
cfac : f003            >        beq skip1074
                       >        trap            ;failed not equal (non zero)
cfae : 20c7ed          >        jsr report_error
                       >
cfb1 :                 >skip1074
                       >
cfb1 : 68              >            pla         ;load status
cfb2 : 48              >            pha
                       >            cmp_flag $ff
cfb3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
cfb5 : f003            >        beq skip1077
                       >        trap            ;failed not equal (non zero)
cfb7 : 20c7ed          >        jsr report_error
                       >
cfba :                 >skip1077
                       >
cfba : 28              >            plp         ;restore status
                       >
cfbb : c042            >            cpy #$42
                       >            trap_ne         ;y changed
cfbd : f003            >        beq skip1079
                       >        trap            ;failed not equal (non zero)
cfbf : 20c7ed          >        jsr report_error
                       >
cfc2 :                 >skip1079
                       >
cfc2 : e000            >            cpx #0
                       >            trap_ne         ;x changed
cfc4 : f003            >        beq skip1081
                       >        trap            ;failed not equal (non zero)
cfc6 : 20c7ed          >        jsr report_error
                       >
cfc9 :                 >skip1081
                       >
                        
                                nop_test $43,1
cfc9 : a042            >            ldy #$42
cfcb : a203            >            ldx #4-1
cfcd : 43              >            db  $43          ;test nop length
                       >        if 1 = 1
cfce : ca              >            dex
cfcf : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
cfd0 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
cfd1 : f003            >        beq skip1084
                       >        trap            ;failed not equal (non zero)
cfd3 : 20c7ed          >        jsr report_error
                       >
cfd6 :                 >skip1084
                       >
                       >            set_a $ff-$43,0
                       >            load_flag 0
cfd6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
cfd8 : 48              >            pha         ;use stack to load status
cfd9 : a9bc            >            lda #$ff-$43     ;precharge accu
cfdb : 28              >            plp
                       >
cfdc : 43              >            db  $43          ;test nop integrity - flags off
cfdd : ea              >            nop
cfde : ea              >            nop
                       >            tst_a $ff-$43,0
cfdf : 08              >            php         ;save flags
cfe0 : c9bc            >            cmp #$ff-$43     ;test result
                       >            trap_ne
cfe2 : f003            >        beq skip1089
                       >        trap            ;failed not equal (non zero)
cfe4 : 20c7ed          >        jsr report_error
                       >
cfe7 :                 >skip1089
                       >
cfe7 : 68              >            pla         ;load status
cfe8 : 48              >            pha
                       >            cmp_flag 0
cfe9 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
cfeb : f003            >        beq skip1092
                       >        trap            ;failed not equal (non zero)
cfed : 20c7ed          >        jsr report_error
                       >
cff0 :                 >skip1092
                       >
cff0 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$43,$ff
                       >            load_flag $ff
cff1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
cff3 : 48              >            pha         ;use stack to load status
cff4 : a967            >            lda #$aa-$43     ;precharge accu
cff6 : 28              >            plp
                       >
cff7 : 43              >            db  $43          ;test nop integrity - flags on
cff8 : ea              >            nop
cff9 : ea              >            nop
                       >            tst_a $aa-$43,$ff
cffa : 08              >            php         ;save flags
cffb : c967            >            cmp #$aa-$43     ;test result
                       >            trap_ne
cffd : f003            >        beq skip1097
                       >        trap            ;failed not equal (non zero)
cfff : 20c7ed          >        jsr report_error
                       >
d002 :                 >skip1097
                       >
d002 : 68              >            pla         ;load status
d003 : 48              >            pha
                       >            cmp_flag $ff
d004 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d006 : f003            >        beq skip1100
                       >        trap            ;failed not equal (non zero)
d008 : 20c7ed          >        jsr report_error
                       >
d00b :                 >skip1100
                       >
d00b : 28              >            plp         ;restore status
                       >
d00c : c042            >            cpy #$42
                       >            trap_ne         ;y changed
d00e : f003            >        beq skip1102
                       >        trap            ;failed not equal (non zero)
d010 : 20c7ed          >        jsr report_error
                       >
d013 :                 >skip1102
                       >
d013 : e000            >            cpx #0
                       >            trap_ne         ;x changed
d015 : f003            >        beq skip1104
                       >        trap            ;failed not equal (non zero)
d017 : 20c7ed          >        jsr report_error
                       >
d01a :                 >skip1104
                       >
                        
                                nop_test $53,1
d01a : a042            >            ldy #$42
d01c : a203            >            ldx #4-1
d01e : 53              >            db  $53          ;test nop length
                       >        if 1 = 1
d01f : ca              >            dex
d020 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
d021 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
d022 : f003            >        beq skip1107
                       >        trap            ;failed not equal (non zero)
d024 : 20c7ed          >        jsr report_error
                       >
d027 :                 >skip1107
                       >
                       >            set_a $ff-$53,0
                       >            load_flag 0
d027 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
d029 : 48              >            pha         ;use stack to load status
d02a : a9ac            >            lda #$ff-$53     ;precharge accu
d02c : 28              >            plp
                       >
d02d : 53              >            db  $53          ;test nop integrity - flags off
d02e : ea              >            nop
d02f : ea              >            nop
                       >            tst_a $ff-$53,0
d030 : 08              >            php         ;save flags
d031 : c9ac            >            cmp #$ff-$53     ;test result
                       >            trap_ne
d033 : f003            >        beq skip1112
                       >        trap            ;failed not equal (non zero)
d035 : 20c7ed          >        jsr report_error
                       >
d038 :                 >skip1112
                       >
d038 : 68              >            pla         ;load status
d039 : 48              >            pha
                       >            cmp_flag 0
d03a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d03c : f003            >        beq skip1115
                       >        trap            ;failed not equal (non zero)
d03e : 20c7ed          >        jsr report_error
                       >
d041 :                 >skip1115
                       >
d041 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$53,$ff
                       >            load_flag $ff
d042 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
d044 : 48              >            pha         ;use stack to load status
d045 : a957            >            lda #$aa-$53     ;precharge accu
d047 : 28              >            plp
                       >
d048 : 53              >            db  $53          ;test nop integrity - flags on
d049 : ea              >            nop
d04a : ea              >            nop
                       >            tst_a $aa-$53,$ff
d04b : 08              >            php         ;save flags
d04c : c957            >            cmp #$aa-$53     ;test result
                       >            trap_ne
d04e : f003            >        beq skip1120
                       >        trap            ;failed not equal (non zero)
d050 : 20c7ed          >        jsr report_error
                       >
d053 :                 >skip1120
                       >
d053 : 68              >            pla         ;load status
d054 : 48              >            pha
                       >            cmp_flag $ff
d055 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d057 : f003            >        beq skip1123
                       >        trap            ;failed not equal (non zero)
d059 : 20c7ed          >        jsr report_error
                       >
d05c :                 >skip1123
                       >
d05c : 28              >            plp         ;restore status
                       >
d05d : c042            >            cpy #$42
                       >            trap_ne         ;y changed
d05f : f003            >        beq skip1125
                       >        trap            ;failed not equal (non zero)
d061 : 20c7ed          >        jsr report_error
                       >
d064 :                 >skip1125
                       >
d064 : e000            >            cpx #0
                       >            trap_ne         ;x changed
d066 : f003            >        beq skip1127
                       >        trap            ;failed not equal (non zero)
d068 : 20c7ed          >        jsr report_error
                       >
d06b :                 >skip1127
                       >
                        
                                nop_test $63,1
d06b : a042            >            ldy #$42
d06d : a203            >            ldx #4-1
d06f : 63              >            db  $63          ;test nop length
                       >        if 1 = 1
d070 : ca              >            dex
d071 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
d072 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
d073 : f003            >        beq skip1130
                       >        trap            ;failed not equal (non zero)
d075 : 20c7ed          >        jsr report_error
                       >
d078 :                 >skip1130
                       >
                       >            set_a $ff-$63,0
                       >            load_flag 0
d078 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
d07a : 48              >            pha         ;use stack to load status
d07b : a99c            >            lda #$ff-$63     ;precharge accu
d07d : 28              >            plp
                       >
d07e : 63              >            db  $63          ;test nop integrity - flags off
d07f : ea              >            nop
d080 : ea              >            nop
                       >            tst_a $ff-$63,0
d081 : 08              >            php         ;save flags
d082 : c99c            >            cmp #$ff-$63     ;test result
                       >            trap_ne
d084 : f003            >        beq skip1135
                       >        trap            ;failed not equal (non zero)
d086 : 20c7ed          >        jsr report_error
                       >
d089 :                 >skip1135
                       >
d089 : 68              >            pla         ;load status
d08a : 48              >            pha
                       >            cmp_flag 0
d08b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d08d : f003            >        beq skip1138
                       >        trap            ;failed not equal (non zero)
d08f : 20c7ed          >        jsr report_error
                       >
d092 :                 >skip1138
                       >
d092 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$63,$ff
                       >            load_flag $ff
d093 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
d095 : 48              >            pha         ;use stack to load status
d096 : a947            >            lda #$aa-$63     ;precharge accu
d098 : 28              >            plp
                       >
d099 : 63              >            db  $63          ;test nop integrity - flags on
d09a : ea              >            nop
d09b : ea              >            nop
                       >            tst_a $aa-$63,$ff
d09c : 08              >            php         ;save flags
d09d : c947            >            cmp #$aa-$63     ;test result
                       >            trap_ne
d09f : f003            >        beq skip1143
                       >        trap            ;failed not equal (non zero)
d0a1 : 20c7ed          >        jsr report_error
                       >
d0a4 :                 >skip1143
                       >
d0a4 : 68              >            pla         ;load status
d0a5 : 48              >            pha
                       >            cmp_flag $ff
d0a6 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d0a8 : f003            >        beq skip1146
                       >        trap            ;failed not equal (non zero)
d0aa : 20c7ed          >        jsr report_error
                       >
d0ad :                 >skip1146
                       >
d0ad : 28              >            plp         ;restore status
                       >
d0ae : c042            >            cpy #$42
                       >            trap_ne         ;y changed
d0b0 : f003            >        beq skip1148
                       >        trap            ;failed not equal (non zero)
d0b2 : 20c7ed          >        jsr report_error
                       >
d0b5 :                 >skip1148
                       >
d0b5 : e000            >            cpx #0
                       >            trap_ne         ;x changed
d0b7 : f003            >        beq skip1150
                       >        trap            ;failed not equal (non zero)
d0b9 : 20c7ed          >        jsr report_error
                       >
d0bc :                 >skip1150
                       >
                        
                                nop_test $73,1
d0bc : a042            >            ldy #$42
d0be : a203            >            ldx #4-1
d0c0 : 73              >            db  $73          ;test nop length
                       >        if 1 = 1
d0c1 : ca              >            dex
d0c2 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
d0c3 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
d0c4 : f003            >        beq skip1153
                       >        trap            ;failed not equal (non zero)
d0c6 : 20c7ed          >        jsr report_error
                       >
d0c9 :                 >skip1153
                       >
                       >            set_a $ff-$73,0
                       >            load_flag 0
d0c9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
d0cb : 48              >            pha         ;use stack to load status
d0cc : a98c            >            lda #$ff-$73     ;precharge accu
d0ce : 28              >            plp
                       >
d0cf : 73              >            db  $73          ;test nop integrity - flags off
d0d0 : ea              >            nop
d0d1 : ea              >            nop
                       >            tst_a $ff-$73,0
d0d2 : 08              >            php         ;save flags
d0d3 : c98c            >            cmp #$ff-$73     ;test result
                       >            trap_ne
d0d5 : f003            >        beq skip1158
                       >        trap            ;failed not equal (non zero)
d0d7 : 20c7ed          >        jsr report_error
                       >
d0da :                 >skip1158
                       >
d0da : 68              >            pla         ;load status
d0db : 48              >            pha
                       >            cmp_flag 0
d0dc : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d0de : f003            >        beq skip1161
                       >        trap            ;failed not equal (non zero)
d0e0 : 20c7ed          >        jsr report_error
                       >
d0e3 :                 >skip1161
                       >
d0e3 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$73,$ff
                       >            load_flag $ff
d0e4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
d0e6 : 48              >            pha         ;use stack to load status
d0e7 : a937            >            lda #$aa-$73     ;precharge accu
d0e9 : 28              >            plp
                       >
d0ea : 73              >            db  $73          ;test nop integrity - flags on
d0eb : ea              >            nop
d0ec : ea              >            nop
                       >            tst_a $aa-$73,$ff
d0ed : 08              >            php         ;save flags
d0ee : c937            >            cmp #$aa-$73     ;test result
                       >            trap_ne
d0f0 : f003            >        beq skip1166
                       >        trap            ;failed not equal (non zero)
d0f2 : 20c7ed          >        jsr report_error
                       >
d0f5 :                 >skip1166
                       >
d0f5 : 68              >            pla         ;load status
d0f6 : 48              >            pha
                       >            cmp_flag $ff
d0f7 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d0f9 : f003            >        beq skip1169
                       >        trap            ;failed not equal (non zero)
d0fb : 20c7ed          >        jsr report_error
                       >
d0fe :                 >skip1169
                       >
d0fe : 28              >            plp         ;restore status
                       >
d0ff : c042            >            cpy #$42
                       >            trap_ne         ;y changed
d101 : f003            >        beq skip1171
                       >        trap            ;failed not equal (non zero)
d103 : 20c7ed          >        jsr report_error
                       >
d106 :                 >skip1171
                       >
d106 : e000            >            cpx #0
                       >            trap_ne         ;x changed
d108 : f003            >        beq skip1173
                       >        trap            ;failed not equal (non zero)
d10a : 20c7ed          >        jsr report_error
                       >
d10d :                 >skip1173
                       >
                        
                                nop_test $83,1
d10d : a042            >            ldy #$42
d10f : a203            >            ldx #4-1
d111 : 83              >            db  $83          ;test nop length
                       >        if 1 = 1
d112 : ca              >            dex
d113 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
d114 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
d115 : f003            >        beq skip1176
                       >        trap            ;failed not equal (non zero)
d117 : 20c7ed          >        jsr report_error
                       >
d11a :                 >skip1176
                       >
                       >            set_a $ff-$83,0
                       >            load_flag 0
d11a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
d11c : 48              >            pha         ;use stack to load status
d11d : a97c            >            lda #$ff-$83     ;precharge accu
d11f : 28              >            plp
                       >
d120 : 83              >            db  $83          ;test nop integrity - flags off
d121 : ea              >            nop
d122 : ea              >            nop
                       >            tst_a $ff-$83,0
d123 : 08              >            php         ;save flags
d124 : c97c            >            cmp #$ff-$83     ;test result
                       >            trap_ne
d126 : f003            >        beq skip1181
                       >        trap            ;failed not equal (non zero)
d128 : 20c7ed          >        jsr report_error
                       >
d12b :                 >skip1181
                       >
d12b : 68              >            pla         ;load status
d12c : 48              >            pha
                       >            cmp_flag 0
d12d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d12f : f003            >        beq skip1184
                       >        trap            ;failed not equal (non zero)
d131 : 20c7ed          >        jsr report_error
                       >
d134 :                 >skip1184
                       >
d134 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$83,$ff
                       >            load_flag $ff
d135 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
d137 : 48              >            pha         ;use stack to load status
d138 : a927            >            lda #$aa-$83     ;precharge accu
d13a : 28              >            plp
                       >
d13b : 83              >            db  $83          ;test nop integrity - flags on
d13c : ea              >            nop
d13d : ea              >            nop
                       >            tst_a $aa-$83,$ff
d13e : 08              >            php         ;save flags
d13f : c927            >            cmp #$aa-$83     ;test result
                       >            trap_ne
d141 : f003            >        beq skip1189
                       >        trap            ;failed not equal (non zero)
d143 : 20c7ed          >        jsr report_error
                       >
d146 :                 >skip1189
                       >
d146 : 68              >            pla         ;load status
d147 : 48              >            pha
                       >            cmp_flag $ff
d148 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d14a : f003            >        beq skip1192
                       >        trap            ;failed not equal (non zero)
d14c : 20c7ed          >        jsr report_error
                       >
d14f :                 >skip1192
                       >
d14f : 28              >            plp         ;restore status
                       >
d150 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
d152 : f003            >        beq skip1194
                       >        trap            ;failed not equal (non zero)
d154 : 20c7ed          >        jsr report_error
                       >
d157 :                 >skip1194
                       >
d157 : e000            >            cpx #0
                       >            trap_ne         ;x changed
d159 : f003            >        beq skip1196
                       >        trap            ;failed not equal (non zero)
d15b : 20c7ed          >        jsr report_error
                       >
d15e :                 >skip1196
                       >
                        
                                nop_test $93,1
d15e : a042            >            ldy #$42
d160 : a203            >            ldx #4-1
d162 : 93              >            db  $93          ;test nop length
                       >        if 1 = 1
d163 : ca              >            dex
d164 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
d165 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
d166 : f003            >        beq skip1199
                       >        trap            ;failed not equal (non zero)
d168 : 20c7ed          >        jsr report_error
                       >
d16b :                 >skip1199
                       >
                       >            set_a $ff-$93,0
                       >            load_flag 0
d16b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
d16d : 48              >            pha         ;use stack to load status
d16e : a96c            >            lda #$ff-$93     ;precharge accu
d170 : 28              >            plp
                       >
d171 : 93              >            db  $93          ;test nop integrity - flags off
d172 : ea              >            nop
d173 : ea              >            nop
                       >            tst_a $ff-$93,0
d174 : 08              >            php         ;save flags
d175 : c96c            >            cmp #$ff-$93     ;test result
                       >            trap_ne
d177 : f003            >        beq skip1204
                       >        trap            ;failed not equal (non zero)
d179 : 20c7ed          >        jsr report_error
                       >
d17c :                 >skip1204
                       >
d17c : 68              >            pla         ;load status
d17d : 48              >            pha
                       >            cmp_flag 0
d17e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d180 : f003            >        beq skip1207
                       >        trap            ;failed not equal (non zero)
d182 : 20c7ed          >        jsr report_error
                       >
d185 :                 >skip1207
                       >
d185 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$93,$ff
                       >            load_flag $ff
d186 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
d188 : 48              >            pha         ;use stack to load status
d189 : a917            >            lda #$aa-$93     ;precharge accu
d18b : 28              >            plp
                       >
d18c : 93              >            db  $93          ;test nop integrity - flags on
d18d : ea              >            nop
d18e : ea              >            nop
                       >            tst_a $aa-$93,$ff
d18f : 08              >            php         ;save flags
d190 : c917            >            cmp #$aa-$93     ;test result
                       >            trap_ne
d192 : f003            >        beq skip1212
                       >        trap            ;failed not equal (non zero)
d194 : 20c7ed          >        jsr report_error
                       >
d197 :                 >skip1212
                       >
d197 : 68              >            pla         ;load status
d198 : 48              >            pha
                       >            cmp_flag $ff
d199 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d19b : f003            >        beq skip1215
                       >        trap            ;failed not equal (non zero)
d19d : 20c7ed          >        jsr report_error
                       >
d1a0 :                 >skip1215
                       >
d1a0 : 28              >            plp         ;restore status
                       >
d1a1 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
d1a3 : f003            >        beq skip1217
                       >        trap            ;failed not equal (non zero)
d1a5 : 20c7ed          >        jsr report_error
                       >
d1a8 :                 >skip1217
                       >
d1a8 : e000            >            cpx #0
                       >            trap_ne         ;x changed
d1aa : f003            >        beq skip1219
                       >        trap            ;failed not equal (non zero)
d1ac : 20c7ed          >        jsr report_error
                       >
d1af :                 >skip1219
                       >
                        
                                nop_test $a3,1
d1af : a042            >            ldy #$42
d1b1 : a203            >            ldx #4-1
d1b3 : a3              >            db  $a3          ;test nop length
                       >        if 1 = 1
d1b4 : ca              >            dex
d1b5 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
d1b6 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
d1b7 : f003            >        beq skip1222
                       >        trap            ;failed not equal (non zero)
d1b9 : 20c7ed          >        jsr report_error
                       >
d1bc :                 >skip1222
                       >
                       >            set_a $ff-$a3,0
                       >            load_flag 0
d1bc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
d1be : 48              >            pha         ;use stack to load status
d1bf : a95c            >            lda #$ff-$a3     ;precharge accu
d1c1 : 28              >            plp
                       >
d1c2 : a3              >            db  $a3          ;test nop integrity - flags off
d1c3 : ea              >            nop
d1c4 : ea              >            nop
                       >            tst_a $ff-$a3,0
d1c5 : 08              >            php         ;save flags
d1c6 : c95c            >            cmp #$ff-$a3     ;test result
                       >            trap_ne
d1c8 : f003            >        beq skip1227
                       >        trap            ;failed not equal (non zero)
d1ca : 20c7ed          >        jsr report_error
                       >
d1cd :                 >skip1227
                       >
d1cd : 68              >            pla         ;load status
d1ce : 48              >            pha
                       >            cmp_flag 0
d1cf : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d1d1 : f003            >        beq skip1230
                       >        trap            ;failed not equal (non zero)
d1d3 : 20c7ed          >        jsr report_error
                       >
d1d6 :                 >skip1230
                       >
d1d6 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$a3,$ff
                       >            load_flag $ff
d1d7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
d1d9 : 48              >            pha         ;use stack to load status
d1da : a907            >            lda #$aa-$a3     ;precharge accu
d1dc : 28              >            plp
                       >
d1dd : a3              >            db  $a3          ;test nop integrity - flags on
d1de : ea              >            nop
d1df : ea              >            nop
                       >            tst_a $aa-$a3,$ff
d1e0 : 08              >            php         ;save flags
d1e1 : c907            >            cmp #$aa-$a3     ;test result
                       >            trap_ne
d1e3 : f003            >        beq skip1235
                       >        trap            ;failed not equal (non zero)
d1e5 : 20c7ed          >        jsr report_error
                       >
d1e8 :                 >skip1235
                       >
d1e8 : 68              >            pla         ;load status
d1e9 : 48              >            pha
                       >            cmp_flag $ff
d1ea : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d1ec : f003            >        beq skip1238
                       >        trap            ;failed not equal (non zero)
d1ee : 20c7ed          >        jsr report_error
                       >
d1f1 :                 >skip1238
                       >
d1f1 : 28              >            plp         ;restore status
                       >
d1f2 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
d1f4 : f003            >        beq skip1240
                       >        trap            ;failed not equal (non zero)
d1f6 : 20c7ed          >        jsr report_error
                       >
d1f9 :                 >skip1240
                       >
d1f9 : e000            >            cpx #0
                       >            trap_ne         ;x changed
d1fb : f003            >        beq skip1242
                       >        trap            ;failed not equal (non zero)
d1fd : 20c7ed          >        jsr report_error
                       >
d200 :                 >skip1242
                       >
                        
                                nop_test $b3,1
d200 : a042            >            ldy #$42
d202 : a203            >            ldx #4-1
d204 : b3              >            db  $b3          ;test nop length
                       >        if 1 = 1
d205 : ca              >            dex
d206 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
d207 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
d208 : f003            >        beq skip1245
                       >        trap            ;failed not equal (non zero)
d20a : 20c7ed          >        jsr report_error
                       >
d20d :                 >skip1245
                       >
                       >            set_a $ff-$b3,0
                       >            load_flag 0
d20d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
d20f : 48              >            pha         ;use stack to load status
d210 : a94c            >            lda #$ff-$b3     ;precharge accu
d212 : 28              >            plp
                       >
d213 : b3              >            db  $b3          ;test nop integrity - flags off
d214 : ea              >            nop
d215 : ea              >            nop
                       >            tst_a $ff-$b3,0
d216 : 08              >            php         ;save flags
d217 : c94c            >            cmp #$ff-$b3     ;test result
                       >            trap_ne
d219 : f003            >        beq skip1250
                       >        trap            ;failed not equal (non zero)
d21b : 20c7ed          >        jsr report_error
                       >
d21e :                 >skip1250
                       >
d21e : 68              >            pla         ;load status
d21f : 48              >            pha
                       >            cmp_flag 0
d220 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d222 : f003            >        beq skip1253
                       >        trap            ;failed not equal (non zero)
d224 : 20c7ed          >        jsr report_error
                       >
d227 :                 >skip1253
                       >
d227 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$b3,$ff
                       >            load_flag $ff
d228 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
d22a : 48              >            pha         ;use stack to load status
d22b : a9f7            >            lda #$aa-$b3     ;precharge accu
d22d : 28              >            plp
                       >
d22e : b3              >            db  $b3          ;test nop integrity - flags on
d22f : ea              >            nop
d230 : ea              >            nop
                       >            tst_a $aa-$b3,$ff
d231 : 08              >            php         ;save flags
d232 : c9f7            >            cmp #$aa-$b3     ;test result
                       >            trap_ne
d234 : f003            >        beq skip1258
                       >        trap            ;failed not equal (non zero)
d236 : 20c7ed          >        jsr report_error
                       >
d239 :                 >skip1258
                       >
d239 : 68              >            pla         ;load status
d23a : 48              >            pha
                       >            cmp_flag $ff
d23b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d23d : f003            >        beq skip1261
                       >        trap            ;failed not equal (non zero)
d23f : 20c7ed          >        jsr report_error
                       >
d242 :                 >skip1261
                       >
d242 : 28              >            plp         ;restore status
                       >
d243 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
d245 : f003            >        beq skip1263
                       >        trap            ;failed not equal (non zero)
d247 : 20c7ed          >        jsr report_error
                       >
d24a :                 >skip1263
                       >
d24a : e000            >            cpx #0
                       >            trap_ne         ;x changed
d24c : f003            >        beq skip1265
                       >        trap            ;failed not equal (non zero)
d24e : 20c7ed          >        jsr report_error
                       >
d251 :                 >skip1265
                       >
                        
                                nop_test $c3,1
d251 : a042            >            ldy #$42
d253 : a203            >            ldx #4-1
d255 : c3              >            db  $c3          ;test nop length
                       >        if 1 = 1
d256 : ca              >            dex
d257 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
d258 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
d259 : f003            >        beq skip1268
                       >        trap            ;failed not equal (non zero)
d25b : 20c7ed          >        jsr report_error
                       >
d25e :                 >skip1268
                       >
                       >            set_a $ff-$c3,0
                       >            load_flag 0
d25e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
d260 : 48              >            pha         ;use stack to load status
d261 : a93c            >            lda #$ff-$c3     ;precharge accu
d263 : 28              >            plp
                       >
d264 : c3              >            db  $c3          ;test nop integrity - flags off
d265 : ea              >            nop
d266 : ea              >            nop
                       >            tst_a $ff-$c3,0
d267 : 08              >            php         ;save flags
d268 : c93c            >            cmp #$ff-$c3     ;test result
                       >            trap_ne
d26a : f003            >        beq skip1273
                       >        trap            ;failed not equal (non zero)
d26c : 20c7ed          >        jsr report_error
                       >
d26f :                 >skip1273
                       >
d26f : 68              >            pla         ;load status
d270 : 48              >            pha
                       >            cmp_flag 0
d271 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d273 : f003            >        beq skip1276
                       >        trap            ;failed not equal (non zero)
d275 : 20c7ed          >        jsr report_error
                       >
d278 :                 >skip1276
                       >
d278 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$c3,$ff
                       >            load_flag $ff
d279 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
d27b : 48              >            pha         ;use stack to load status
d27c : a9e7            >            lda #$aa-$c3     ;precharge accu
d27e : 28              >            plp
                       >
d27f : c3              >            db  $c3          ;test nop integrity - flags on
d280 : ea              >            nop
d281 : ea              >            nop
                       >            tst_a $aa-$c3,$ff
d282 : 08              >            php         ;save flags
d283 : c9e7            >            cmp #$aa-$c3     ;test result
                       >            trap_ne
d285 : f003            >        beq skip1281
                       >        trap            ;failed not equal (non zero)
d287 : 20c7ed          >        jsr report_error
                       >
d28a :                 >skip1281
                       >
d28a : 68              >            pla         ;load status
d28b : 48              >            pha
                       >            cmp_flag $ff
d28c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d28e : f003            >        beq skip1284
                       >        trap            ;failed not equal (non zero)
d290 : 20c7ed          >        jsr report_error
                       >
d293 :                 >skip1284
                       >
d293 : 28              >            plp         ;restore status
                       >
d294 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
d296 : f003            >        beq skip1286
                       >        trap            ;failed not equal (non zero)
d298 : 20c7ed          >        jsr report_error
                       >
d29b :                 >skip1286
                       >
d29b : e000            >            cpx #0
                       >            trap_ne         ;x changed
d29d : f003            >        beq skip1288
                       >        trap            ;failed not equal (non zero)
d29f : 20c7ed          >        jsr report_error
                       >
d2a2 :                 >skip1288
                       >
                        
                                nop_test $d3,1
d2a2 : a042            >            ldy #$42
d2a4 : a203            >            ldx #4-1
d2a6 : d3              >            db  $d3          ;test nop length
                       >        if 1 = 1
d2a7 : ca              >            dex
d2a8 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
d2a9 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
d2aa : f003            >        beq skip1291
                       >        trap            ;failed not equal (non zero)
d2ac : 20c7ed          >        jsr report_error
                       >
d2af :                 >skip1291
                       >
                       >            set_a $ff-$d3,0
                       >            load_flag 0
d2af : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
d2b1 : 48              >            pha         ;use stack to load status
d2b2 : a92c            >            lda #$ff-$d3     ;precharge accu
d2b4 : 28              >            plp
                       >
d2b5 : d3              >            db  $d3          ;test nop integrity - flags off
d2b6 : ea              >            nop
d2b7 : ea              >            nop
                       >            tst_a $ff-$d3,0
d2b8 : 08              >            php         ;save flags
d2b9 : c92c            >            cmp #$ff-$d3     ;test result
                       >            trap_ne
d2bb : f003            >        beq skip1296
                       >        trap            ;failed not equal (non zero)
d2bd : 20c7ed          >        jsr report_error
                       >
d2c0 :                 >skip1296
                       >
d2c0 : 68              >            pla         ;load status
d2c1 : 48              >            pha
                       >            cmp_flag 0
d2c2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d2c4 : f003            >        beq skip1299
                       >        trap            ;failed not equal (non zero)
d2c6 : 20c7ed          >        jsr report_error
                       >
d2c9 :                 >skip1299
                       >
d2c9 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$d3,$ff
                       >            load_flag $ff
d2ca : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
d2cc : 48              >            pha         ;use stack to load status
d2cd : a9d7            >            lda #$aa-$d3     ;precharge accu
d2cf : 28              >            plp
                       >
d2d0 : d3              >            db  $d3          ;test nop integrity - flags on
d2d1 : ea              >            nop
d2d2 : ea              >            nop
                       >            tst_a $aa-$d3,$ff
d2d3 : 08              >            php         ;save flags
d2d4 : c9d7            >            cmp #$aa-$d3     ;test result
                       >            trap_ne
d2d6 : f003            >        beq skip1304
                       >        trap            ;failed not equal (non zero)
d2d8 : 20c7ed          >        jsr report_error
                       >
d2db :                 >skip1304
                       >
d2db : 68              >            pla         ;load status
d2dc : 48              >            pha
                       >            cmp_flag $ff
d2dd : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d2df : f003            >        beq skip1307
                       >        trap            ;failed not equal (non zero)
d2e1 : 20c7ed          >        jsr report_error
                       >
d2e4 :                 >skip1307
                       >
d2e4 : 28              >            plp         ;restore status
                       >
d2e5 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
d2e7 : f003            >        beq skip1309
                       >        trap            ;failed not equal (non zero)
d2e9 : 20c7ed          >        jsr report_error
                       >
d2ec :                 >skip1309
                       >
d2ec : e000            >            cpx #0
                       >            trap_ne         ;x changed
d2ee : f003            >        beq skip1311
                       >        trap            ;failed not equal (non zero)
d2f0 : 20c7ed          >        jsr report_error
                       >
d2f3 :                 >skip1311
                       >
                        
                                nop_test $e3,1
d2f3 : a042            >            ldy #$42
d2f5 : a203            >            ldx #4-1
d2f7 : e3              >            db  $e3          ;test nop length
                       >        if 1 = 1
d2f8 : ca              >            dex
d2f9 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
d2fa : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
d2fb : f003            >        beq skip1314
                       >        trap            ;failed not equal (non zero)
d2fd : 20c7ed          >        jsr report_error
                       >
d300 :                 >skip1314
                       >
                       >            set_a $ff-$e3,0
                       >            load_flag 0
d300 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
d302 : 48              >            pha         ;use stack to load status
d303 : a91c            >            lda #$ff-$e3     ;precharge accu
d305 : 28              >            plp
                       >
d306 : e3              >            db  $e3          ;test nop integrity - flags off
d307 : ea              >            nop
d308 : ea              >            nop
                       >            tst_a $ff-$e3,0
d309 : 08              >            php         ;save flags
d30a : c91c            >            cmp #$ff-$e3     ;test result
                       >            trap_ne
d30c : f003            >        beq skip1319
                       >        trap            ;failed not equal (non zero)
d30e : 20c7ed          >        jsr report_error
                       >
d311 :                 >skip1319
                       >
d311 : 68              >            pla         ;load status
d312 : 48              >            pha
                       >            cmp_flag 0
d313 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d315 : f003            >        beq skip1322
                       >        trap            ;failed not equal (non zero)
d317 : 20c7ed          >        jsr report_error
                       >
d31a :                 >skip1322
                       >
d31a : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$e3,$ff
                       >            load_flag $ff
d31b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
d31d : 48              >            pha         ;use stack to load status
d31e : a9c7            >            lda #$aa-$e3     ;precharge accu
d320 : 28              >            plp
                       >
d321 : e3              >            db  $e3          ;test nop integrity - flags on
d322 : ea              >            nop
d323 : ea              >            nop
                       >            tst_a $aa-$e3,$ff
d324 : 08              >            php         ;save flags
d325 : c9c7            >            cmp #$aa-$e3     ;test result
                       >            trap_ne
d327 : f003            >        beq skip1327
                       >        trap            ;failed not equal (non zero)
d329 : 20c7ed          >        jsr report_error
                       >
d32c :                 >skip1327
                       >
d32c : 68              >            pla         ;load status
d32d : 48              >            pha
                       >            cmp_flag $ff
d32e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d330 : f003            >        beq skip1330
                       >        trap            ;failed not equal (non zero)
d332 : 20c7ed          >        jsr report_error
                       >
d335 :                 >skip1330
                       >
d335 : 28              >            plp         ;restore status
                       >
d336 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
d338 : f003            >        beq skip1332
                       >        trap            ;failed not equal (non zero)
d33a : 20c7ed          >        jsr report_error
                       >
d33d :                 >skip1332
                       >
d33d : e000            >            cpx #0
                       >            trap_ne         ;x changed
d33f : f003            >        beq skip1334
                       >        trap            ;failed not equal (non zero)
d341 : 20c7ed          >        jsr report_error
                       >
d344 :                 >skip1334
                       >
                        
                                nop_test $f3,1
d344 : a042            >            ldy #$42
d346 : a203            >            ldx #4-1
d348 : f3              >            db  $f3          ;test nop length
                       >        if 1 = 1
d349 : ca              >            dex
d34a : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
d34b : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
d34c : f003            >        beq skip1337
                       >        trap            ;failed not equal (non zero)
d34e : 20c7ed          >        jsr report_error
                       >
d351 :                 >skip1337
                       >
                       >            set_a $ff-$f3,0
                       >            load_flag 0
d351 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
d353 : 48              >            pha         ;use stack to load status
d354 : a90c            >            lda #$ff-$f3     ;precharge accu
d356 : 28              >            plp
                       >
d357 : f3              >            db  $f3          ;test nop integrity - flags off
d358 : ea              >            nop
d359 : ea              >            nop
                       >            tst_a $ff-$f3,0
d35a : 08              >            php         ;save flags
d35b : c90c            >            cmp #$ff-$f3     ;test result
                       >            trap_ne
d35d : f003            >        beq skip1342
                       >        trap            ;failed not equal (non zero)
d35f : 20c7ed          >        jsr report_error
                       >
d362 :                 >skip1342
                       >
d362 : 68              >            pla         ;load status
d363 : 48              >            pha
                       >            cmp_flag 0
d364 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d366 : f003            >        beq skip1345
                       >        trap            ;failed not equal (non zero)
d368 : 20c7ed          >        jsr report_error
                       >
d36b :                 >skip1345
                       >
d36b : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$f3,$ff
                       >            load_flag $ff
d36c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
d36e : 48              >            pha         ;use stack to load status
d36f : a9b7            >            lda #$aa-$f3     ;precharge accu
d371 : 28              >            plp
                       >
d372 : f3              >            db  $f3          ;test nop integrity - flags on
d373 : ea              >            nop
d374 : ea              >            nop
                       >            tst_a $aa-$f3,$ff
d375 : 08              >            php         ;save flags
d376 : c9b7            >            cmp #$aa-$f3     ;test result
                       >            trap_ne
d378 : f003            >        beq skip1350
                       >        trap            ;failed not equal (non zero)
d37a : 20c7ed          >        jsr report_error
                       >
d37d :                 >skip1350
                       >
d37d : 68              >            pla         ;load status
d37e : 48              >            pha
                       >            cmp_flag $ff
d37f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d381 : f003            >        beq skip1353
                       >        trap            ;failed not equal (non zero)
d383 : 20c7ed          >        jsr report_error
                       >
d386 :                 >skip1353
                       >
d386 : 28              >            plp         ;restore status
                       >
d387 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
d389 : f003            >        beq skip1355
                       >        trap            ;failed not equal (non zero)
d38b : 20c7ed          >        jsr report_error
                       >
d38e :                 >skip1355
                       >
d38e : e000            >            cpx #0
                       >            trap_ne         ;x changed
d390 : f003            >        beq skip1357
                       >        trap            ;failed not equal (non zero)
d392 : 20c7ed          >        jsr report_error
                       >
d395 :                 >skip1357
                       >
                        
                                nop_test $0b,1
d395 : a042            >            ldy #$42
d397 : a203            >            ldx #4-1
d399 : 0b              >            db  $0b          ;test nop length
                       >        if 1 = 1
d39a : ca              >            dex
d39b : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
d39c : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
d39d : f003            >        beq skip1360
                       >        trap            ;failed not equal (non zero)
d39f : 20c7ed          >        jsr report_error
                       >
d3a2 :                 >skip1360
                       >
                       >            set_a $ff-$0b,0
                       >            load_flag 0
d3a2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
d3a4 : 48              >            pha         ;use stack to load status
d3a5 : a9f4            >            lda #$ff-$0b     ;precharge accu
d3a7 : 28              >            plp
                       >
d3a8 : 0b              >            db  $0b          ;test nop integrity - flags off
d3a9 : ea              >            nop
d3aa : ea              >            nop
                       >            tst_a $ff-$0b,0
d3ab : 08              >            php         ;save flags
d3ac : c9f4            >            cmp #$ff-$0b     ;test result
                       >            trap_ne
d3ae : f003            >        beq skip1365
                       >        trap            ;failed not equal (non zero)
d3b0 : 20c7ed          >        jsr report_error
                       >
d3b3 :                 >skip1365
                       >
d3b3 : 68              >            pla         ;load status
d3b4 : 48              >            pha
                       >            cmp_flag 0
d3b5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d3b7 : f003            >        beq skip1368
                       >        trap            ;failed not equal (non zero)
d3b9 : 20c7ed          >        jsr report_error
                       >
d3bc :                 >skip1368
                       >
d3bc : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$0b,$ff
                       >            load_flag $ff
d3bd : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
d3bf : 48              >            pha         ;use stack to load status
d3c0 : a99f            >            lda #$aa-$0b     ;precharge accu
d3c2 : 28              >            plp
                       >
d3c3 : 0b              >            db  $0b          ;test nop integrity - flags on
d3c4 : ea              >            nop
d3c5 : ea              >            nop
                       >            tst_a $aa-$0b,$ff
d3c6 : 08              >            php         ;save flags
d3c7 : c99f            >            cmp #$aa-$0b     ;test result
                       >            trap_ne
d3c9 : f003            >        beq skip1373
                       >        trap            ;failed not equal (non zero)
d3cb : 20c7ed          >        jsr report_error
                       >
d3ce :                 >skip1373
                       >
d3ce : 68              >            pla         ;load status
d3cf : 48              >            pha
                       >            cmp_flag $ff
d3d0 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d3d2 : f003            >        beq skip1376
                       >        trap            ;failed not equal (non zero)
d3d4 : 20c7ed          >        jsr report_error
                       >
d3d7 :                 >skip1376
                       >
d3d7 : 28              >            plp         ;restore status
                       >
d3d8 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
d3da : f003            >        beq skip1378
                       >        trap            ;failed not equal (non zero)
d3dc : 20c7ed          >        jsr report_error
                       >
d3df :                 >skip1378
                       >
d3df : e000            >            cpx #0
                       >            trap_ne         ;x changed
d3e1 : f003            >        beq skip1380
                       >        trap            ;failed not equal (non zero)
d3e3 : 20c7ed          >        jsr report_error
                       >
d3e6 :                 >skip1380
                       >
                        
                                nop_test $1b,1
d3e6 : a042            >            ldy #$42
d3e8 : a203            >            ldx #4-1
d3ea : 1b              >            db  $1b          ;test nop length
                       >        if 1 = 1
d3eb : ca              >            dex
d3ec : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
d3ed : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
d3ee : f003            >        beq skip1383
                       >        trap            ;failed not equal (non zero)
d3f0 : 20c7ed          >        jsr report_error
                       >
d3f3 :                 >skip1383
                       >
                       >            set_a $ff-$1b,0
                       >            load_flag 0
d3f3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
d3f5 : 48              >            pha         ;use stack to load status
d3f6 : a9e4            >            lda #$ff-$1b     ;precharge accu
d3f8 : 28              >            plp
                       >
d3f9 : 1b              >            db  $1b          ;test nop integrity - flags off
d3fa : ea              >            nop
d3fb : ea              >            nop
                       >            tst_a $ff-$1b,0
d3fc : 08              >            php         ;save flags
d3fd : c9e4            >            cmp #$ff-$1b     ;test result
                       >            trap_ne
d3ff : f003            >        beq skip1388
                       >        trap            ;failed not equal (non zero)
d401 : 20c7ed          >        jsr report_error
                       >
d404 :                 >skip1388
                       >
d404 : 68              >            pla         ;load status
d405 : 48              >            pha
                       >            cmp_flag 0
d406 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d408 : f003            >        beq skip1391
                       >        trap            ;failed not equal (non zero)
d40a : 20c7ed          >        jsr report_error
                       >
d40d :                 >skip1391
                       >
d40d : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$1b,$ff
                       >            load_flag $ff
d40e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
d410 : 48              >            pha         ;use stack to load status
d411 : a98f            >            lda #$aa-$1b     ;precharge accu
d413 : 28              >            plp
                       >
d414 : 1b              >            db  $1b          ;test nop integrity - flags on
d415 : ea              >            nop
d416 : ea              >            nop
                       >            tst_a $aa-$1b,$ff
d417 : 08              >            php         ;save flags
d418 : c98f            >            cmp #$aa-$1b     ;test result
                       >            trap_ne
d41a : f003            >        beq skip1396
                       >        trap            ;failed not equal (non zero)
d41c : 20c7ed          >        jsr report_error
                       >
d41f :                 >skip1396
                       >
d41f : 68              >            pla         ;load status
d420 : 48              >            pha
                       >            cmp_flag $ff
d421 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d423 : f003            >        beq skip1399
                       >        trap            ;failed not equal (non zero)
d425 : 20c7ed          >        jsr report_error
                       >
d428 :                 >skip1399
                       >
d428 : 28              >            plp         ;restore status
                       >
d429 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
d42b : f003            >        beq skip1401
                       >        trap            ;failed not equal (non zero)
d42d : 20c7ed          >        jsr report_error
                       >
d430 :                 >skip1401
                       >
d430 : e000            >            cpx #0
                       >            trap_ne         ;x changed
d432 : f003            >        beq skip1403
                       >        trap            ;failed not equal (non zero)
d434 : 20c7ed          >        jsr report_error
                       >
d437 :                 >skip1403
                       >
                        
                                nop_test $2b,1
d437 : a042            >            ldy #$42
d439 : a203            >            ldx #4-1
d43b : 2b              >            db  $2b          ;test nop length
                       >        if 1 = 1
d43c : ca              >            dex
d43d : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
d43e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
d43f : f003            >        beq skip1406
                       >        trap            ;failed not equal (non zero)
d441 : 20c7ed          >        jsr report_error
                       >
d444 :                 >skip1406
                       >
                       >            set_a $ff-$2b,0
                       >            load_flag 0
d444 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
d446 : 48              >            pha         ;use stack to load status
d447 : a9d4            >            lda #$ff-$2b     ;precharge accu
d449 : 28              >            plp
                       >
d44a : 2b              >            db  $2b          ;test nop integrity - flags off
d44b : ea              >            nop
d44c : ea              >            nop
                       >            tst_a $ff-$2b,0
d44d : 08              >            php         ;save flags
d44e : c9d4            >            cmp #$ff-$2b     ;test result
                       >            trap_ne
d450 : f003            >        beq skip1411
                       >        trap            ;failed not equal (non zero)
d452 : 20c7ed          >        jsr report_error
                       >
d455 :                 >skip1411
                       >
d455 : 68              >            pla         ;load status
d456 : 48              >            pha
                       >            cmp_flag 0
d457 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d459 : f003            >        beq skip1414
                       >        trap            ;failed not equal (non zero)
d45b : 20c7ed          >        jsr report_error
                       >
d45e :                 >skip1414
                       >
d45e : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$2b,$ff
                       >            load_flag $ff
d45f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
d461 : 48              >            pha         ;use stack to load status
d462 : a97f            >            lda #$aa-$2b     ;precharge accu
d464 : 28              >            plp
                       >
d465 : 2b              >            db  $2b          ;test nop integrity - flags on
d466 : ea              >            nop
d467 : ea              >            nop
                       >            tst_a $aa-$2b,$ff
d468 : 08              >            php         ;save flags
d469 : c97f            >            cmp #$aa-$2b     ;test result
                       >            trap_ne
d46b : f003            >        beq skip1419
                       >        trap            ;failed not equal (non zero)
d46d : 20c7ed          >        jsr report_error
                       >
d470 :                 >skip1419
                       >
d470 : 68              >            pla         ;load status
d471 : 48              >            pha
                       >            cmp_flag $ff
d472 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d474 : f003            >        beq skip1422
                       >        trap            ;failed not equal (non zero)
d476 : 20c7ed          >        jsr report_error
                       >
d479 :                 >skip1422
                       >
d479 : 28              >            plp         ;restore status
                       >
d47a : c042            >            cpy #$42
                       >            trap_ne         ;y changed
d47c : f003            >        beq skip1424
                       >        trap            ;failed not equal (non zero)
d47e : 20c7ed          >        jsr report_error
                       >
d481 :                 >skip1424
                       >
d481 : e000            >            cpx #0
                       >            trap_ne         ;x changed
d483 : f003            >        beq skip1426
                       >        trap            ;failed not equal (non zero)
d485 : 20c7ed          >        jsr report_error
                       >
d488 :                 >skip1426
                       >
                        
                                nop_test $3b,1
d488 : a042            >            ldy #$42
d48a : a203            >            ldx #4-1
d48c : 3b              >            db  $3b          ;test nop length
                       >        if 1 = 1
d48d : ca              >            dex
d48e : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
d48f : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
d490 : f003            >        beq skip1429
                       >        trap            ;failed not equal (non zero)
d492 : 20c7ed          >        jsr report_error
                       >
d495 :                 >skip1429
                       >
                       >            set_a $ff-$3b,0
                       >            load_flag 0
d495 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
d497 : 48              >            pha         ;use stack to load status
d498 : a9c4            >            lda #$ff-$3b     ;precharge accu
d49a : 28              >            plp
                       >
d49b : 3b              >            db  $3b          ;test nop integrity - flags off
d49c : ea              >            nop
d49d : ea              >            nop
                       >            tst_a $ff-$3b,0
d49e : 08              >            php         ;save flags
d49f : c9c4            >            cmp #$ff-$3b     ;test result
                       >            trap_ne
d4a1 : f003            >        beq skip1434
                       >        trap            ;failed not equal (non zero)
d4a3 : 20c7ed          >        jsr report_error
                       >
d4a6 :                 >skip1434
                       >
d4a6 : 68              >            pla         ;load status
d4a7 : 48              >            pha
                       >            cmp_flag 0
d4a8 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d4aa : f003            >        beq skip1437
                       >        trap            ;failed not equal (non zero)
d4ac : 20c7ed          >        jsr report_error
                       >
d4af :                 >skip1437
                       >
d4af : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$3b,$ff
                       >            load_flag $ff
d4b0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
d4b2 : 48              >            pha         ;use stack to load status
d4b3 : a96f            >            lda #$aa-$3b     ;precharge accu
d4b5 : 28              >            plp
                       >
d4b6 : 3b              >            db  $3b          ;test nop integrity - flags on
d4b7 : ea              >            nop
d4b8 : ea              >            nop
                       >            tst_a $aa-$3b,$ff
d4b9 : 08              >            php         ;save flags
d4ba : c96f            >            cmp #$aa-$3b     ;test result
                       >            trap_ne
d4bc : f003            >        beq skip1442
                       >        trap            ;failed not equal (non zero)
d4be : 20c7ed          >        jsr report_error
                       >
d4c1 :                 >skip1442
                       >
d4c1 : 68              >            pla         ;load status
d4c2 : 48              >            pha
                       >            cmp_flag $ff
d4c3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d4c5 : f003            >        beq skip1445
                       >        trap            ;failed not equal (non zero)
d4c7 : 20c7ed          >        jsr report_error
                       >
d4ca :                 >skip1445
                       >
d4ca : 28              >            plp         ;restore status
                       >
d4cb : c042            >            cpy #$42
                       >            trap_ne         ;y changed
d4cd : f003            >        beq skip1447
                       >        trap            ;failed not equal (non zero)
d4cf : 20c7ed          >        jsr report_error
                       >
d4d2 :                 >skip1447
                       >
d4d2 : e000            >            cpx #0
                       >            trap_ne         ;x changed
d4d4 : f003            >        beq skip1449
                       >        trap            ;failed not equal (non zero)
d4d6 : 20c7ed          >        jsr report_error
                       >
d4d9 :                 >skip1449
                       >
                        
                                nop_test $4b,1
d4d9 : a042            >            ldy #$42
d4db : a203            >            ldx #4-1
d4dd : 4b              >            db  $4b          ;test nop length
                       >        if 1 = 1
d4de : ca              >            dex
d4df : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
d4e0 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
d4e1 : f003            >        beq skip1452
                       >        trap            ;failed not equal (non zero)
d4e3 : 20c7ed          >        jsr report_error
                       >
d4e6 :                 >skip1452
                       >
                       >            set_a $ff-$4b,0
                       >            load_flag 0
d4e6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
d4e8 : 48              >            pha         ;use stack to load status
d4e9 : a9b4            >            lda #$ff-$4b     ;precharge accu
d4eb : 28              >            plp
                       >
d4ec : 4b              >            db  $4b          ;test nop integrity - flags off
d4ed : ea              >            nop
d4ee : ea              >            nop
                       >            tst_a $ff-$4b,0
d4ef : 08              >            php         ;save flags
d4f0 : c9b4            >            cmp #$ff-$4b     ;test result
                       >            trap_ne
d4f2 : f003            >        beq skip1457
                       >        trap            ;failed not equal (non zero)
d4f4 : 20c7ed          >        jsr report_error
                       >
d4f7 :                 >skip1457
                       >
d4f7 : 68              >            pla         ;load status
d4f8 : 48              >            pha
                       >            cmp_flag 0
d4f9 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d4fb : f003            >        beq skip1460
                       >        trap            ;failed not equal (non zero)
d4fd : 20c7ed          >        jsr report_error
                       >
d500 :                 >skip1460
                       >
d500 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$4b,$ff
                       >            load_flag $ff
d501 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
d503 : 48              >            pha         ;use stack to load status
d504 : a95f            >            lda #$aa-$4b     ;precharge accu
d506 : 28              >            plp
                       >
d507 : 4b              >            db  $4b          ;test nop integrity - flags on
d508 : ea              >            nop
d509 : ea              >            nop
                       >            tst_a $aa-$4b,$ff
d50a : 08              >            php         ;save flags
d50b : c95f            >            cmp #$aa-$4b     ;test result
                       >            trap_ne
d50d : f003            >        beq skip1465
                       >        trap            ;failed not equal (non zero)
d50f : 20c7ed          >        jsr report_error
                       >
d512 :                 >skip1465
                       >
d512 : 68              >            pla         ;load status
d513 : 48              >            pha
                       >            cmp_flag $ff
d514 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d516 : f003            >        beq skip1468
                       >        trap            ;failed not equal (non zero)
d518 : 20c7ed          >        jsr report_error
                       >
d51b :                 >skip1468
                       >
d51b : 28              >            plp         ;restore status
                       >
d51c : c042            >            cpy #$42
                       >            trap_ne         ;y changed
d51e : f003            >        beq skip1470
                       >        trap            ;failed not equal (non zero)
d520 : 20c7ed          >        jsr report_error
                       >
d523 :                 >skip1470
                       >
d523 : e000            >            cpx #0
                       >            trap_ne         ;x changed
d525 : f003            >        beq skip1472
                       >        trap            ;failed not equal (non zero)
d527 : 20c7ed          >        jsr report_error
                       >
d52a :                 >skip1472
                       >
                        
                                nop_test $5b,1
d52a : a042            >            ldy #$42
d52c : a203            >            ldx #4-1
d52e : 5b              >            db  $5b          ;test nop length
                       >        if 1 = 1
d52f : ca              >            dex
d530 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
d531 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
d532 : f003            >        beq skip1475
                       >        trap            ;failed not equal (non zero)
d534 : 20c7ed          >        jsr report_error
                       >
d537 :                 >skip1475
                       >
                       >            set_a $ff-$5b,0
                       >            load_flag 0
d537 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
d539 : 48              >            pha         ;use stack to load status
d53a : a9a4            >            lda #$ff-$5b     ;precharge accu
d53c : 28              >            plp
                       >
d53d : 5b              >            db  $5b          ;test nop integrity - flags off
d53e : ea              >            nop
d53f : ea              >            nop
                       >            tst_a $ff-$5b,0
d540 : 08              >            php         ;save flags
d541 : c9a4            >            cmp #$ff-$5b     ;test result
                       >            trap_ne
d543 : f003            >        beq skip1480
                       >        trap            ;failed not equal (non zero)
d545 : 20c7ed          >        jsr report_error
                       >
d548 :                 >skip1480
                       >
d548 : 68              >            pla         ;load status
d549 : 48              >            pha
                       >            cmp_flag 0
d54a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d54c : f003            >        beq skip1483
                       >        trap            ;failed not equal (non zero)
d54e : 20c7ed          >        jsr report_error
                       >
d551 :                 >skip1483
                       >
d551 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$5b,$ff
                       >            load_flag $ff
d552 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
d554 : 48              >            pha         ;use stack to load status
d555 : a94f            >            lda #$aa-$5b     ;precharge accu
d557 : 28              >            plp
                       >
d558 : 5b              >            db  $5b          ;test nop integrity - flags on
d559 : ea              >            nop
d55a : ea              >            nop
                       >            tst_a $aa-$5b,$ff
d55b : 08              >            php         ;save flags
d55c : c94f            >            cmp #$aa-$5b     ;test result
                       >            trap_ne
d55e : f003            >        beq skip1488
                       >        trap            ;failed not equal (non zero)
d560 : 20c7ed          >        jsr report_error
                       >
d563 :                 >skip1488
                       >
d563 : 68              >            pla         ;load status
d564 : 48              >            pha
                       >            cmp_flag $ff
d565 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d567 : f003            >        beq skip1491
                       >        trap            ;failed not equal (non zero)
d569 : 20c7ed          >        jsr report_error
                       >
d56c :                 >skip1491
                       >
d56c : 28              >            plp         ;restore status
                       >
d56d : c042            >            cpy #$42
                       >            trap_ne         ;y changed
d56f : f003            >        beq skip1493
                       >        trap            ;failed not equal (non zero)
d571 : 20c7ed          >        jsr report_error
                       >
d574 :                 >skip1493
                       >
d574 : e000            >            cpx #0
                       >            trap_ne         ;x changed
d576 : f003            >        beq skip1495
                       >        trap            ;failed not equal (non zero)
d578 : 20c7ed          >        jsr report_error
                       >
d57b :                 >skip1495
                       >
                        
                                nop_test $6b,1
d57b : a042            >            ldy #$42
d57d : a203            >            ldx #4-1
d57f : 6b              >            db  $6b          ;test nop length
                       >        if 1 = 1
d580 : ca              >            dex
d581 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
d582 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
d583 : f003            >        beq skip1498
                       >        trap            ;failed not equal (non zero)
d585 : 20c7ed          >        jsr report_error
                       >
d588 :                 >skip1498
                       >
                       >            set_a $ff-$6b,0
                       >            load_flag 0
d588 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
d58a : 48              >            pha         ;use stack to load status
d58b : a994            >            lda #$ff-$6b     ;precharge accu
d58d : 28              >            plp
                       >
d58e : 6b              >            db  $6b          ;test nop integrity - flags off
d58f : ea              >            nop
d590 : ea              >            nop
                       >            tst_a $ff-$6b,0
d591 : 08              >            php         ;save flags
d592 : c994            >            cmp #$ff-$6b     ;test result
                       >            trap_ne
d594 : f003            >        beq skip1503
                       >        trap            ;failed not equal (non zero)
d596 : 20c7ed          >        jsr report_error
                       >
d599 :                 >skip1503
                       >
d599 : 68              >            pla         ;load status
d59a : 48              >            pha
                       >            cmp_flag 0
d59b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d59d : f003            >        beq skip1506
                       >        trap            ;failed not equal (non zero)
d59f : 20c7ed          >        jsr report_error
                       >
d5a2 :                 >skip1506
                       >
d5a2 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$6b,$ff
                       >            load_flag $ff
d5a3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
d5a5 : 48              >            pha         ;use stack to load status
d5a6 : a93f            >            lda #$aa-$6b     ;precharge accu
d5a8 : 28              >            plp
                       >
d5a9 : 6b              >            db  $6b          ;test nop integrity - flags on
d5aa : ea              >            nop
d5ab : ea              >            nop
                       >            tst_a $aa-$6b,$ff
d5ac : 08              >            php         ;save flags
d5ad : c93f            >            cmp #$aa-$6b     ;test result
                       >            trap_ne
d5af : f003            >        beq skip1511
                       >        trap            ;failed not equal (non zero)
d5b1 : 20c7ed          >        jsr report_error
                       >
d5b4 :                 >skip1511
                       >
d5b4 : 68              >            pla         ;load status
d5b5 : 48              >            pha
                       >            cmp_flag $ff
d5b6 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d5b8 : f003            >        beq skip1514
                       >        trap            ;failed not equal (non zero)
d5ba : 20c7ed          >        jsr report_error
                       >
d5bd :                 >skip1514
                       >
d5bd : 28              >            plp         ;restore status
                       >
d5be : c042            >            cpy #$42
                       >            trap_ne         ;y changed
d5c0 : f003            >        beq skip1516
                       >        trap            ;failed not equal (non zero)
d5c2 : 20c7ed          >        jsr report_error
                       >
d5c5 :                 >skip1516
                       >
d5c5 : e000            >            cpx #0
                       >            trap_ne         ;x changed
d5c7 : f003            >        beq skip1518
                       >        trap            ;failed not equal (non zero)
d5c9 : 20c7ed          >        jsr report_error
                       >
d5cc :                 >skip1518
                       >
                        
                                nop_test $7b,1
d5cc : a042            >            ldy #$42
d5ce : a203            >            ldx #4-1
d5d0 : 7b              >            db  $7b          ;test nop length
                       >        if 1 = 1
d5d1 : ca              >            dex
d5d2 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
d5d3 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
d5d4 : f003            >        beq skip1521
                       >        trap            ;failed not equal (non zero)
d5d6 : 20c7ed          >        jsr report_error
                       >
d5d9 :                 >skip1521
                       >
                       >            set_a $ff-$7b,0
                       >            load_flag 0
d5d9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
d5db : 48              >            pha         ;use stack to load status
d5dc : a984            >            lda #$ff-$7b     ;precharge accu
d5de : 28              >            plp
                       >
d5df : 7b              >            db  $7b          ;test nop integrity - flags off
d5e0 : ea              >            nop
d5e1 : ea              >            nop
                       >            tst_a $ff-$7b,0
d5e2 : 08              >            php         ;save flags
d5e3 : c984            >            cmp #$ff-$7b     ;test result
                       >            trap_ne
d5e5 : f003            >        beq skip1526
                       >        trap            ;failed not equal (non zero)
d5e7 : 20c7ed          >        jsr report_error
                       >
d5ea :                 >skip1526
                       >
d5ea : 68              >            pla         ;load status
d5eb : 48              >            pha
                       >            cmp_flag 0
d5ec : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d5ee : f003            >        beq skip1529
                       >        trap            ;failed not equal (non zero)
d5f0 : 20c7ed          >        jsr report_error
                       >
d5f3 :                 >skip1529
                       >
d5f3 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$7b,$ff
                       >            load_flag $ff
d5f4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
d5f6 : 48              >            pha         ;use stack to load status
d5f7 : a92f            >            lda #$aa-$7b     ;precharge accu
d5f9 : 28              >            plp
                       >
d5fa : 7b              >            db  $7b          ;test nop integrity - flags on
d5fb : ea              >            nop
d5fc : ea              >            nop
                       >            tst_a $aa-$7b,$ff
d5fd : 08              >            php         ;save flags
d5fe : c92f            >            cmp #$aa-$7b     ;test result
                       >            trap_ne
d600 : f003            >        beq skip1534
                       >        trap            ;failed not equal (non zero)
d602 : 20c7ed          >        jsr report_error
                       >
d605 :                 >skip1534
                       >
d605 : 68              >            pla         ;load status
d606 : 48              >            pha
                       >            cmp_flag $ff
d607 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d609 : f003            >        beq skip1537
                       >        trap            ;failed not equal (non zero)
d60b : 20c7ed          >        jsr report_error
                       >
d60e :                 >skip1537
                       >
d60e : 28              >            plp         ;restore status
                       >
d60f : c042            >            cpy #$42
                       >            trap_ne         ;y changed
d611 : f003            >        beq skip1539
                       >        trap            ;failed not equal (non zero)
d613 : 20c7ed          >        jsr report_error
                       >
d616 :                 >skip1539
                       >
d616 : e000            >            cpx #0
                       >            trap_ne         ;x changed
d618 : f003            >        beq skip1541
                       >        trap            ;failed not equal (non zero)
d61a : 20c7ed          >        jsr report_error
                       >
d61d :                 >skip1541
                       >
                        
                                nop_test $8b,1
d61d : a042            >            ldy #$42
d61f : a203            >            ldx #4-1
d621 : 8b              >            db  $8b          ;test nop length
                       >        if 1 = 1
d622 : ca              >            dex
d623 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
d624 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
d625 : f003            >        beq skip1544
                       >        trap            ;failed not equal (non zero)
d627 : 20c7ed          >        jsr report_error
                       >
d62a :                 >skip1544
                       >
                       >            set_a $ff-$8b,0
                       >            load_flag 0
d62a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
d62c : 48              >            pha         ;use stack to load status
d62d : a974            >            lda #$ff-$8b     ;precharge accu
d62f : 28              >            plp
                       >
d630 : 8b              >            db  $8b          ;test nop integrity - flags off
d631 : ea              >            nop
d632 : ea              >            nop
                       >            tst_a $ff-$8b,0
d633 : 08              >            php         ;save flags
d634 : c974            >            cmp #$ff-$8b     ;test result
                       >            trap_ne
d636 : f003            >        beq skip1549
                       >        trap            ;failed not equal (non zero)
d638 : 20c7ed          >        jsr report_error
                       >
d63b :                 >skip1549
                       >
d63b : 68              >            pla         ;load status
d63c : 48              >            pha
                       >            cmp_flag 0
d63d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d63f : f003            >        beq skip1552
                       >        trap            ;failed not equal (non zero)
d641 : 20c7ed          >        jsr report_error
                       >
d644 :                 >skip1552
                       >
d644 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$8b,$ff
                       >            load_flag $ff
d645 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
d647 : 48              >            pha         ;use stack to load status
d648 : a91f            >            lda #$aa-$8b     ;precharge accu
d64a : 28              >            plp
                       >
d64b : 8b              >            db  $8b          ;test nop integrity - flags on
d64c : ea              >            nop
d64d : ea              >            nop
                       >            tst_a $aa-$8b,$ff
d64e : 08              >            php         ;save flags
d64f : c91f            >            cmp #$aa-$8b     ;test result
                       >            trap_ne
d651 : f003            >        beq skip1557
                       >        trap            ;failed not equal (non zero)
d653 : 20c7ed          >        jsr report_error
                       >
d656 :                 >skip1557
                       >
d656 : 68              >            pla         ;load status
d657 : 48              >            pha
                       >            cmp_flag $ff
d658 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d65a : f003            >        beq skip1560
                       >        trap            ;failed not equal (non zero)
d65c : 20c7ed          >        jsr report_error
                       >
d65f :                 >skip1560
                       >
d65f : 28              >            plp         ;restore status
                       >
d660 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
d662 : f003            >        beq skip1562
                       >        trap            ;failed not equal (non zero)
d664 : 20c7ed          >        jsr report_error
                       >
d667 :                 >skip1562
                       >
d667 : e000            >            cpx #0
                       >            trap_ne         ;x changed
d669 : f003            >        beq skip1564
                       >        trap            ;failed not equal (non zero)
d66b : 20c7ed          >        jsr report_error
                       >
d66e :                 >skip1564
                       >
                        
                                nop_test $9b,1
d66e : a042            >            ldy #$42
d670 : a203            >            ldx #4-1
d672 : 9b              >            db  $9b          ;test nop length
                       >        if 1 = 1
d673 : ca              >            dex
d674 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
d675 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
d676 : f003            >        beq skip1567
                       >        trap            ;failed not equal (non zero)
d678 : 20c7ed          >        jsr report_error
                       >
d67b :                 >skip1567
                       >
                       >            set_a $ff-$9b,0
                       >            load_flag 0
d67b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
d67d : 48              >            pha         ;use stack to load status
d67e : a964            >            lda #$ff-$9b     ;precharge accu
d680 : 28              >            plp
                       >
d681 : 9b              >            db  $9b          ;test nop integrity - flags off
d682 : ea              >            nop
d683 : ea              >            nop
                       >            tst_a $ff-$9b,0
d684 : 08              >            php         ;save flags
d685 : c964            >            cmp #$ff-$9b     ;test result
                       >            trap_ne
d687 : f003            >        beq skip1572
                       >        trap            ;failed not equal (non zero)
d689 : 20c7ed          >        jsr report_error
                       >
d68c :                 >skip1572
                       >
d68c : 68              >            pla         ;load status
d68d : 48              >            pha
                       >            cmp_flag 0
d68e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d690 : f003            >        beq skip1575
                       >        trap            ;failed not equal (non zero)
d692 : 20c7ed          >        jsr report_error
                       >
d695 :                 >skip1575
                       >
d695 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$9b,$ff
                       >            load_flag $ff
d696 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
d698 : 48              >            pha         ;use stack to load status
d699 : a90f            >            lda #$aa-$9b     ;precharge accu
d69b : 28              >            plp
                       >
d69c : 9b              >            db  $9b          ;test nop integrity - flags on
d69d : ea              >            nop
d69e : ea              >            nop
                       >            tst_a $aa-$9b,$ff
d69f : 08              >            php         ;save flags
d6a0 : c90f            >            cmp #$aa-$9b     ;test result
                       >            trap_ne
d6a2 : f003            >        beq skip1580
                       >        trap            ;failed not equal (non zero)
d6a4 : 20c7ed          >        jsr report_error
                       >
d6a7 :                 >skip1580
                       >
d6a7 : 68              >            pla         ;load status
d6a8 : 48              >            pha
                       >            cmp_flag $ff
d6a9 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d6ab : f003            >        beq skip1583
                       >        trap            ;failed not equal (non zero)
d6ad : 20c7ed          >        jsr report_error
                       >
d6b0 :                 >skip1583
                       >
d6b0 : 28              >            plp         ;restore status
                       >
d6b1 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
d6b3 : f003            >        beq skip1585
                       >        trap            ;failed not equal (non zero)
d6b5 : 20c7ed          >        jsr report_error
                       >
d6b8 :                 >skip1585
                       >
d6b8 : e000            >            cpx #0
                       >            trap_ne         ;x changed
d6ba : f003            >        beq skip1587
                       >        trap            ;failed not equal (non zero)
d6bc : 20c7ed          >        jsr report_error
                       >
d6bf :                 >skip1587
                       >
                        
                                nop_test $ab,1
d6bf : a042            >            ldy #$42
d6c1 : a203            >            ldx #4-1
d6c3 : ab              >            db  $ab          ;test nop length
                       >        if 1 = 1
d6c4 : ca              >            dex
d6c5 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
d6c6 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
d6c7 : f003            >        beq skip1590
                       >        trap            ;failed not equal (non zero)
d6c9 : 20c7ed          >        jsr report_error
                       >
d6cc :                 >skip1590
                       >
                       >            set_a $ff-$ab,0
                       >            load_flag 0
d6cc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
d6ce : 48              >            pha         ;use stack to load status
d6cf : a954            >            lda #$ff-$ab     ;precharge accu
d6d1 : 28              >            plp
                       >
d6d2 : ab              >            db  $ab          ;test nop integrity - flags off
d6d3 : ea              >            nop
d6d4 : ea              >            nop
                       >            tst_a $ff-$ab,0
d6d5 : 08              >            php         ;save flags
d6d6 : c954            >            cmp #$ff-$ab     ;test result
                       >            trap_ne
d6d8 : f003            >        beq skip1595
                       >        trap            ;failed not equal (non zero)
d6da : 20c7ed          >        jsr report_error
                       >
d6dd :                 >skip1595
                       >
d6dd : 68              >            pla         ;load status
d6de : 48              >            pha
                       >            cmp_flag 0
d6df : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d6e1 : f003            >        beq skip1598
                       >        trap            ;failed not equal (non zero)
d6e3 : 20c7ed          >        jsr report_error
                       >
d6e6 :                 >skip1598
                       >
d6e6 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$ab,$ff
                       >            load_flag $ff
d6e7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
d6e9 : 48              >            pha         ;use stack to load status
d6ea : a9ff            >            lda #$aa-$ab     ;precharge accu
d6ec : 28              >            plp
                       >
d6ed : ab              >            db  $ab          ;test nop integrity - flags on
d6ee : ea              >            nop
d6ef : ea              >            nop
                       >            tst_a $aa-$ab,$ff
d6f0 : 08              >            php         ;save flags
d6f1 : c9ff            >            cmp #$aa-$ab     ;test result
                       >            trap_ne
d6f3 : f003            >        beq skip1603
                       >        trap            ;failed not equal (non zero)
d6f5 : 20c7ed          >        jsr report_error
                       >
d6f8 :                 >skip1603
                       >
d6f8 : 68              >            pla         ;load status
d6f9 : 48              >            pha
                       >            cmp_flag $ff
d6fa : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d6fc : f003            >        beq skip1606
                       >        trap            ;failed not equal (non zero)
d6fe : 20c7ed          >        jsr report_error
                       >
d701 :                 >skip1606
                       >
d701 : 28              >            plp         ;restore status
                       >
d702 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
d704 : f003            >        beq skip1608
                       >        trap            ;failed not equal (non zero)
d706 : 20c7ed          >        jsr report_error
                       >
d709 :                 >skip1608
                       >
d709 : e000            >            cpx #0
                       >            trap_ne         ;x changed
d70b : f003            >        beq skip1610
                       >        trap            ;failed not equal (non zero)
d70d : 20c7ed          >        jsr report_error
                       >
d710 :                 >skip1610
                       >
                        
                                nop_test $bb,1
d710 : a042            >            ldy #$42
d712 : a203            >            ldx #4-1
d714 : bb              >            db  $bb          ;test nop length
                       >        if 1 = 1
d715 : ca              >            dex
d716 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
d717 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
d718 : f003            >        beq skip1613
                       >        trap            ;failed not equal (non zero)
d71a : 20c7ed          >        jsr report_error
                       >
d71d :                 >skip1613
                       >
                       >            set_a $ff-$bb,0
                       >            load_flag 0
d71d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
d71f : 48              >            pha         ;use stack to load status
d720 : a944            >            lda #$ff-$bb     ;precharge accu
d722 : 28              >            plp
                       >
d723 : bb              >            db  $bb          ;test nop integrity - flags off
d724 : ea              >            nop
d725 : ea              >            nop
                       >            tst_a $ff-$bb,0
d726 : 08              >            php         ;save flags
d727 : c944            >            cmp #$ff-$bb     ;test result
                       >            trap_ne
d729 : f003            >        beq skip1618
                       >        trap            ;failed not equal (non zero)
d72b : 20c7ed          >        jsr report_error
                       >
d72e :                 >skip1618
                       >
d72e : 68              >            pla         ;load status
d72f : 48              >            pha
                       >            cmp_flag 0
d730 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d732 : f003            >        beq skip1621
                       >        trap            ;failed not equal (non zero)
d734 : 20c7ed          >        jsr report_error
                       >
d737 :                 >skip1621
                       >
d737 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$bb,$ff
                       >            load_flag $ff
d738 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
d73a : 48              >            pha         ;use stack to load status
d73b : a9ef            >            lda #$aa-$bb     ;precharge accu
d73d : 28              >            plp
                       >
d73e : bb              >            db  $bb          ;test nop integrity - flags on
d73f : ea              >            nop
d740 : ea              >            nop
                       >            tst_a $aa-$bb,$ff
d741 : 08              >            php         ;save flags
d742 : c9ef            >            cmp #$aa-$bb     ;test result
                       >            trap_ne
d744 : f003            >        beq skip1626
                       >        trap            ;failed not equal (non zero)
d746 : 20c7ed          >        jsr report_error
                       >
d749 :                 >skip1626
                       >
d749 : 68              >            pla         ;load status
d74a : 48              >            pha
                       >            cmp_flag $ff
d74b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d74d : f003            >        beq skip1629
                       >        trap            ;failed not equal (non zero)
d74f : 20c7ed          >        jsr report_error
                       >
d752 :                 >skip1629
                       >
d752 : 28              >            plp         ;restore status
                       >
d753 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
d755 : f003            >        beq skip1631
                       >        trap            ;failed not equal (non zero)
d757 : 20c7ed          >        jsr report_error
                       >
d75a :                 >skip1631
                       >
d75a : e000            >            cpx #0
                       >            trap_ne         ;x changed
d75c : f003            >        beq skip1633
                       >        trap            ;failed not equal (non zero)
d75e : 20c7ed          >        jsr report_error
                       >
d761 :                 >skip1633
                       >
                        
                                nop_test $eb,1
d761 : a042            >            ldy #$42
d763 : a203            >            ldx #4-1
d765 : eb              >            db  $eb          ;test nop length
                       >        if 1 = 1
d766 : ca              >            dex
d767 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
d768 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
d769 : f003            >        beq skip1636
                       >        trap            ;failed not equal (non zero)
d76b : 20c7ed          >        jsr report_error
                       >
d76e :                 >skip1636
                       >
                       >            set_a $ff-$eb,0
                       >            load_flag 0
d76e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
d770 : 48              >            pha         ;use stack to load status
d771 : a914            >            lda #$ff-$eb     ;precharge accu
d773 : 28              >            plp
                       >
d774 : eb              >            db  $eb          ;test nop integrity - flags off
d775 : ea              >            nop
d776 : ea              >            nop
                       >            tst_a $ff-$eb,0
d777 : 08              >            php         ;save flags
d778 : c914            >            cmp #$ff-$eb     ;test result
                       >            trap_ne
d77a : f003            >        beq skip1641
                       >        trap            ;failed not equal (non zero)
d77c : 20c7ed          >        jsr report_error
                       >
d77f :                 >skip1641
                       >
d77f : 68              >            pla         ;load status
d780 : 48              >            pha
                       >            cmp_flag 0
d781 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d783 : f003            >        beq skip1644
                       >        trap            ;failed not equal (non zero)
d785 : 20c7ed          >        jsr report_error
                       >
d788 :                 >skip1644
                       >
d788 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$eb,$ff
                       >            load_flag $ff
d789 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
d78b : 48              >            pha         ;use stack to load status
d78c : a9bf            >            lda #$aa-$eb     ;precharge accu
d78e : 28              >            plp
                       >
d78f : eb              >            db  $eb          ;test nop integrity - flags on
d790 : ea              >            nop
d791 : ea              >            nop
                       >            tst_a $aa-$eb,$ff
d792 : 08              >            php         ;save flags
d793 : c9bf            >            cmp #$aa-$eb     ;test result
                       >            trap_ne
d795 : f003            >        beq skip1649
                       >        trap            ;failed not equal (non zero)
d797 : 20c7ed          >        jsr report_error
                       >
d79a :                 >skip1649
                       >
d79a : 68              >            pla         ;load status
d79b : 48              >            pha
                       >            cmp_flag $ff
d79c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d79e : f003            >        beq skip1652
                       >        trap            ;failed not equal (non zero)
d7a0 : 20c7ed          >        jsr report_error
                       >
d7a3 :                 >skip1652
                       >
d7a3 : 28              >            plp         ;restore status
                       >
d7a4 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
d7a6 : f003            >        beq skip1654
                       >        trap            ;failed not equal (non zero)
d7a8 : 20c7ed          >        jsr report_error
                       >
d7ab :                 >skip1654
                       >
d7ab : e000            >            cpx #0
                       >            trap_ne         ;x changed
d7ad : f003            >        beq skip1656
                       >        trap            ;failed not equal (non zero)
d7af : 20c7ed          >        jsr report_error
                       >
d7b2 :                 >skip1656
                       >
                        
                                nop_test $fb,1
d7b2 : a042            >            ldy #$42
d7b4 : a203            >            ldx #4-1
d7b6 : fb              >            db  $fb          ;test nop length
                       >        if 1 = 1
d7b7 : ca              >            dex
d7b8 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
d7b9 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
d7ba : f003            >        beq skip1659
                       >        trap            ;failed not equal (non zero)
d7bc : 20c7ed          >        jsr report_error
                       >
d7bf :                 >skip1659
                       >
                       >            set_a $ff-$fb,0
                       >            load_flag 0
d7bf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
d7c1 : 48              >            pha         ;use stack to load status
d7c2 : a904            >            lda #$ff-$fb     ;precharge accu
d7c4 : 28              >            plp
                       >
d7c5 : fb              >            db  $fb          ;test nop integrity - flags off
d7c6 : ea              >            nop
d7c7 : ea              >            nop
                       >            tst_a $ff-$fb,0
d7c8 : 08              >            php         ;save flags
d7c9 : c904            >            cmp #$ff-$fb     ;test result
                       >            trap_ne
d7cb : f003            >        beq skip1664
                       >        trap            ;failed not equal (non zero)
d7cd : 20c7ed          >        jsr report_error
                       >
d7d0 :                 >skip1664
                       >
d7d0 : 68              >            pla         ;load status
d7d1 : 48              >            pha
                       >            cmp_flag 0
d7d2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d7d4 : f003            >        beq skip1667
                       >        trap            ;failed not equal (non zero)
d7d6 : 20c7ed          >        jsr report_error
                       >
d7d9 :                 >skip1667
                       >
d7d9 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$fb,$ff
                       >            load_flag $ff
d7da : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
d7dc : 48              >            pha         ;use stack to load status
d7dd : a9af            >            lda #$aa-$fb     ;precharge accu
d7df : 28              >            plp
                       >
d7e0 : fb              >            db  $fb          ;test nop integrity - flags on
d7e1 : ea              >            nop
d7e2 : ea              >            nop
                       >            tst_a $aa-$fb,$ff
d7e3 : 08              >            php         ;save flags
d7e4 : c9af            >            cmp #$aa-$fb     ;test result
                       >            trap_ne
d7e6 : f003            >        beq skip1672
                       >        trap            ;failed not equal (non zero)
d7e8 : 20c7ed          >        jsr report_error
                       >
d7eb :                 >skip1672
                       >
d7eb : 68              >            pla         ;load status
d7ec : 48              >            pha
                       >            cmp_flag $ff
d7ed : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d7ef : f003            >        beq skip1675
                       >        trap            ;failed not equal (non zero)
d7f1 : 20c7ed          >        jsr report_error
                       >
d7f4 :                 >skip1675
                       >
d7f4 : 28              >            plp         ;restore status
                       >
d7f5 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
d7f7 : f003            >        beq skip1677
                       >        trap            ;failed not equal (non zero)
d7f9 : 20c7ed          >        jsr report_error
                       >
d7fc :                 >skip1677
                       >
d7fc : e000            >            cpx #0
                       >            trap_ne         ;x changed
d7fe : f003            >        beq skip1679
                       >        trap            ;failed not equal (non zero)
d800 : 20c7ed          >        jsr report_error
                       >
d803 :                 >skip1679
                       >
                        
                            if rkwl_wdc_op = 0      ;NOPs not available on Rockwell & WDC 65C02
                                nop_test $07,1
                                nop_test $17,1
                                nop_test $27,1
                                nop_test $37,1
                                nop_test $47,1
                                nop_test $57,1
                                nop_test $67,1
                                nop_test $77,1
                                nop_test $87,1
                                nop_test $97,1
                                nop_test $a7,1
                                nop_test $b7,1
                                nop_test $c7,1
                                nop_test $d7,1
                                nop_test $e7,1
                                nop_test $f7,1
                                nop_test $0f,1
                                nop_test $1f,1
                                nop_test $2f,1
                                nop_test $3f,1
                                nop_test $4f,1
                                nop_test $5f,1
                                nop_test $6f,1
                                nop_test $7f,1
                                nop_test $8f,1
                                nop_test $9f,1
                                nop_test $af,1
                                nop_test $bf,1
                                nop_test $cf,1
                                nop_test $df,1
                                nop_test $ef,1
                                nop_test $ff,1
                            endif
                            if  wdc_op = 0          ;NOPs not available on WDC 65C02 (WAI, STP)
                                nop_test $cb,1
d803 : a042            >            ldy #$42
d805 : a203            >            ldx #4-1
d807 : cb              >            db  $cb          ;test nop length
                       >        if 1 = 1
d808 : ca              >            dex
d809 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
d80a : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
d80b : f003            >        beq skip1682
                       >        trap            ;failed not equal (non zero)
d80d : 20c7ed          >        jsr report_error
                       >
d810 :                 >skip1682
                       >
                       >            set_a $ff-$cb,0
                       >            load_flag 0
d810 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
d812 : 48              >            pha         ;use stack to load status
d813 : a934            >            lda #$ff-$cb     ;precharge accu
d815 : 28              >            plp
                       >
d816 : cb              >            db  $cb          ;test nop integrity - flags off
d817 : ea              >            nop
d818 : ea              >            nop
                       >            tst_a $ff-$cb,0
d819 : 08              >            php         ;save flags
d81a : c934            >            cmp #$ff-$cb     ;test result
                       >            trap_ne
d81c : f003            >        beq skip1687
                       >        trap            ;failed not equal (non zero)
d81e : 20c7ed          >        jsr report_error
                       >
d821 :                 >skip1687
                       >
d821 : 68              >            pla         ;load status
d822 : 48              >            pha
                       >            cmp_flag 0
d823 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d825 : f003            >        beq skip1690
                       >        trap            ;failed not equal (non zero)
d827 : 20c7ed          >        jsr report_error
                       >
d82a :                 >skip1690
                       >
d82a : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$cb,$ff
                       >            load_flag $ff
d82b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
d82d : 48              >            pha         ;use stack to load status
d82e : a9df            >            lda #$aa-$cb     ;precharge accu
d830 : 28              >            plp
                       >
d831 : cb              >            db  $cb          ;test nop integrity - flags on
d832 : ea              >            nop
d833 : ea              >            nop
                       >            tst_a $aa-$cb,$ff
d834 : 08              >            php         ;save flags
d835 : c9df            >            cmp #$aa-$cb     ;test result
                       >            trap_ne
d837 : f003            >        beq skip1695
                       >        trap            ;failed not equal (non zero)
d839 : 20c7ed          >        jsr report_error
                       >
d83c :                 >skip1695
                       >
d83c : 68              >            pla         ;load status
d83d : 48              >            pha
                       >            cmp_flag $ff
d83e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d840 : f003            >        beq skip1698
                       >        trap            ;failed not equal (non zero)
d842 : 20c7ed          >        jsr report_error
                       >
d845 :                 >skip1698
                       >
d845 : 28              >            plp         ;restore status
                       >
d846 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
d848 : f003            >        beq skip1700
                       >        trap            ;failed not equal (non zero)
d84a : 20c7ed          >        jsr report_error
                       >
d84d :                 >skip1700
                       >
d84d : e000            >            cpx #0
                       >            trap_ne         ;x changed
d84f : f003            >        beq skip1702
                       >        trap            ;failed not equal (non zero)
d851 : 20c7ed          >        jsr report_error
                       >
d854 :                 >skip1702
                       >
                        
                                nop_test $db,1
d854 : a042            >            ldy #$42
d856 : a203            >            ldx #4-1
d858 : db              >            db  $db          ;test nop length
                       >        if 1 = 1
d859 : ca              >            dex
d85a : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
d85b : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
d85c : f003            >        beq skip1705
                       >        trap            ;failed not equal (non zero)
d85e : 20c7ed          >        jsr report_error
                       >
d861 :                 >skip1705
                       >
                       >            set_a $ff-$db,0
                       >            load_flag 0
d861 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
d863 : 48              >            pha         ;use stack to load status
d864 : a924            >            lda #$ff-$db     ;precharge accu
d866 : 28              >            plp
                       >
d867 : db              >            db  $db          ;test nop integrity - flags off
d868 : ea              >            nop
d869 : ea              >            nop
                       >            tst_a $ff-$db,0
d86a : 08              >            php         ;save flags
d86b : c924            >            cmp #$ff-$db     ;test result
                       >            trap_ne
d86d : f003            >        beq skip1710
                       >        trap            ;failed not equal (non zero)
d86f : 20c7ed          >        jsr report_error
                       >
d872 :                 >skip1710
                       >
d872 : 68              >            pla         ;load status
d873 : 48              >            pha
                       >            cmp_flag 0
d874 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d876 : f003            >        beq skip1713
                       >        trap            ;failed not equal (non zero)
d878 : 20c7ed          >        jsr report_error
                       >
d87b :                 >skip1713
                       >
d87b : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$db,$ff
                       >            load_flag $ff
d87c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
d87e : 48              >            pha         ;use stack to load status
d87f : a9cf            >            lda #$aa-$db     ;precharge accu
d881 : 28              >            plp
                       >
d882 : db              >            db  $db          ;test nop integrity - flags on
d883 : ea              >            nop
d884 : ea              >            nop
                       >            tst_a $aa-$db,$ff
d885 : 08              >            php         ;save flags
d886 : c9cf            >            cmp #$aa-$db     ;test result
                       >            trap_ne
d888 : f003            >        beq skip1718
                       >        trap            ;failed not equal (non zero)
d88a : 20c7ed          >        jsr report_error
                       >
d88d :                 >skip1718
                       >
d88d : 68              >            pla         ;load status
d88e : 48              >            pha
                       >            cmp_flag $ff
d88f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d891 : f003            >        beq skip1721
                       >        trap            ;failed not equal (non zero)
d893 : 20c7ed          >        jsr report_error
                       >
d896 :                 >skip1721
                       >
d896 : 28              >            plp         ;restore status
                       >
d897 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
d899 : f003            >        beq skip1723
                       >        trap            ;failed not equal (non zero)
d89b : 20c7ed          >        jsr report_error
                       >
d89e :                 >skip1723
                       >
d89e : e000            >            cpx #0
                       >            trap_ne         ;x changed
d8a0 : f003            >        beq skip1725
                       >        trap            ;failed not equal (non zero)
d8a2 : 20c7ed          >        jsr report_error
                       >
d8a5 :                 >skip1725
                       >
                        
                            endif
                                next_test
d8a5 : ad0232          >            lda test_case   ;previous test
d8a8 : c908            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
d8aa : f003            >        beq skip1728
                       >        trap            ;failed not equal (non zero)
d8ac : 20c7ed          >        jsr report_error
                       >
d8af :                 >skip1728
                       >
0009 =                 >test_num = test_num + 1
d8af : a909            >            lda #test_num   ;*** next tests' number
d8b1 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                            endif
                        
                        ; jump indirect (test page cross bug is fixed)
d8b4 : a203                     ldx #3          ;prepare table
d8b6 : bdc2ec           ji1     lda ji_adr,x
d8b9 : 9dfd32                   sta ji_tab,x
d8bc : ca                       dex
d8bd : 10f7                     bpl ji1
d8bf : a9f0                     lda #hi(ji_px) ;high address if page cross bug
d8c1 : 8d0032                   sta pg_x
                                set_stat 0
                       >            load_flag 0
d8c4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
d8c6 : 48              >            pha         ;use stack to load status
d8c7 : 28              >            plp
                        
d8c8 : a949                     lda #'I'
d8ca : a24e                     ldx #'N'
d8cc : a044                     ldy #'D'        ;N=0, V=0, Z=0, C=0
d8ce : 6cfd32                   jmp (ji_tab)
d8d1 : ea                       nop
                                trap_ne         ;runover protection
d8d2 : f003            >        beq skip1732
                       >        trap            ;failed not equal (non zero)
d8d4 : 20c7ed          >        jsr report_error
                       >
d8d7 :                 >skip1732
                        
                        
d8d7 : 88                       dey
d8d8 : 88                       dey
d8d9 : 08               ji_ret  php             ;either SP or Y count will fail, if we do not hit
d8da : 88                       dey
d8db : 88                       dey
d8dc : 88                       dey
d8dd : 28                       plp
                                trap_eq         ;returned flags OK?
d8de : d003            >        bne skip1734
                       >        trap           ;failed equal (zero)
d8e0 : 20c7ed          >        jsr report_error
                       >
d8e3 :                 >skip1734
                        
                                trap_pl
d8e3 : 3003            >        bmi skip1736
                       >        trap            ;failed plus (bit 7 clear)
d8e5 : 20c7ed          >        jsr report_error
                       >
d8e8 :                 >skip1736
                        
                                trap_cc
d8e8 : b003            >        bcs skip1738
                       >        trap            ;failed carry clear
d8ea : 20c7ed          >        jsr report_error
                       >
d8ed :                 >skip1738
                        
                                trap_vc
d8ed : 7003            >        bvs skip1740
                       >        trap            ;failed overflow clear
d8ef : 20c7ed          >        jsr report_error
                       >
d8f2 :                 >skip1740
                        
d8f2 : c9e3                     cmp #('I'^$aa)  ;returned registers OK?
                                trap_ne
d8f4 : f003            >        beq skip1742
                       >        trap            ;failed not equal (non zero)
d8f6 : 20c7ed          >        jsr report_error
                       >
d8f9 :                 >skip1742
                        
d8f9 : e04f                     cpx #('N'+1)
                                trap_ne
d8fb : f003            >        beq skip1744
                       >        trap            ;failed not equal (non zero)
d8fd : 20c7ed          >        jsr report_error
                       >
d900 :                 >skip1744
                        
d900 : c03e                     cpy #('D'-6)
                                trap_ne
d902 : f003            >        beq skip1746
                       >        trap            ;failed not equal (non zero)
d904 : 20c7ed          >        jsr report_error
                       >
d907 :                 >skip1746
                        
d907 : ba                       tsx             ;SP check
d908 : e0ff                     cpx #$ff
                                trap_ne
d90a : f003            >        beq skip1748
                       >        trap            ;failed not equal (non zero)
d90c : 20c7ed          >        jsr report_error
                       >
d90f :                 >skip1748
                        
                                next_test
d90f : ad0232          >            lda test_case   ;previous test
d912 : c909            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
d914 : f003            >        beq skip1751
                       >        trap            ;failed not equal (non zero)
d916 : 20c7ed          >        jsr report_error
                       >
d919 :                 >skip1751
                       >
000a =                 >test_num = test_num + 1
d919 : a90a            >            lda #test_num   ;*** next tests' number
d91b : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; jump indexed indirect
d91e : a20b                     ldx #11         ;prepare table
d920 : bd16ed           jxi1    lda jxi_adr,x
d923 : 9df932                   sta jxi_tab,x
d926 : ca                       dex
d927 : 10f7                     bpl jxi1
d929 : a9f0                     lda #hi(jxi_px) ;high address if page cross bug
d92b : 8d0032                   sta pg_x
                                set_stat 0
                       >            load_flag 0
d92e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
d930 : 48              >            pha         ;use stack to load status
d931 : 28              >            plp
                        
d932 : a958                     lda #'X'
d934 : a204                     ldx #4
d936 : a049                     ldy #'I'        ;N=0, V=0, Z=0, C=0
d938 : 7cf932                   jmp (jxi_tab,x)
d93b : ea                       nop
                                trap_ne         ;runover protection
d93c : f003            >        beq skip1755
                       >        trap            ;failed not equal (non zero)
d93e : 20c7ed          >        jsr report_error
                       >
d941 :                 >skip1755
                        
                        
d941 : 88                       dey
d942 : 88                       dey
d943 : 08               jxi_ret php             ;either SP or Y count will fail, if we do not hit
d944 : 88                       dey
d945 : 88                       dey
d946 : 88                       dey
d947 : 28                       plp
                                trap_eq         ;returned flags OK?
d948 : d003            >        bne skip1757
                       >        trap           ;failed equal (zero)
d94a : 20c7ed          >        jsr report_error
                       >
d94d :                 >skip1757
                        
                                trap_pl
d94d : 3003            >        bmi skip1759
                       >        trap            ;failed plus (bit 7 clear)
d94f : 20c7ed          >        jsr report_error
                       >
d952 :                 >skip1759
                        
                                trap_cc
d952 : b003            >        bcs skip1761
                       >        trap            ;failed carry clear
d954 : 20c7ed          >        jsr report_error
                       >
d957 :                 >skip1761
                        
                                trap_vc
d957 : 7003            >        bvs skip1763
                       >        trap            ;failed overflow clear
d959 : 20c7ed          >        jsr report_error
                       >
d95c :                 >skip1763
                        
d95c : c9f2                     cmp #('X'^$aa)  ;returned registers OK?
                                trap_ne
d95e : f003            >        beq skip1765
                       >        trap            ;failed not equal (non zero)
d960 : 20c7ed          >        jsr report_error
                       >
d963 :                 >skip1765
                        
d963 : e006                     cpx #6
                                trap_ne
d965 : f003            >        beq skip1767
                       >        trap            ;failed not equal (non zero)
d967 : 20c7ed          >        jsr report_error
                       >
d96a :                 >skip1767
                        
d96a : c043                     cpy #('I'-6)
                                trap_ne
d96c : f003            >        beq skip1769
                       >        trap            ;failed not equal (non zero)
d96e : 20c7ed          >        jsr report_error
                       >
d971 :                 >skip1769
                        
d971 : ba                       tsx             ;SP check
d972 : e0ff                     cpx #$ff
                                trap_ne
d974 : f003            >        beq skip1771
                       >        trap            ;failed not equal (non zero)
d976 : 20c7ed          >        jsr report_error
                       >
d979 :                 >skip1771
                        
                        
d979 : a995                     lda #lo(jxp_ok) ;test with index causing a page cross
d97b : 8d0033                   sta jxp_tab
d97e : a9d9                     lda #hi(jxp_ok)
d980 : 8d0133                   sta jxp_tab+1
d983 : a992                     lda #lo(jxp_px)
d985 : 8d0032                   sta pg_x
d988 : a9d9                     lda #hi(jxp_px)
d98a : 8d0132                   sta pg_x+1
d98d : a2ff                     ldx #$ff
d98f : 7c0132                   jmp (jxp_tab-$ff,x)
                        
d992 :                  jxp_px
                                trap            ;page cross by index to wrong page
d992 : 20c7ed          >        jsr report_error
                        
                        
d995 :                  jxp_ok
                                next_test
d995 : ad0232          >            lda test_case   ;previous test
d998 : c90a            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
d99a : f003            >        beq skip1775
                       >        trap            ;failed not equal (non zero)
d99c : 20c7ed          >        jsr report_error
                       >
d99f :                 >skip1775
                       >
000b =                 >test_num = test_num + 1
d99f : a90b            >            lda #test_num   ;*** next tests' number
d9a1 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                            if ROM_vectors = 1
                        ; test BRK clears decimal mode
                                load_flag 0     ;with interrupts enabled if allowed!
                                pha
                                lda #'B'
                                ldx #'R'
                                ldy #'K'
                                plp             ;N=0, V=0, Z=0, C=0
                                brk
                                dey             ;should not be executed
                        brk_ret0                ;address of break return
                                php             ;either SP or Y count will fail, if we do not hit
                                dey
                                dey
                                dey
                                cmp #'B'^$aa    ;returned registers OK?
                                ;the IRQ vector was never executed if A & X stay unmodified
                                trap_ne
                                cpx #'R'+1
                                trap_ne
                                cpy #'K'-6
                                trap_ne
                                pla             ;returned flags OK (unchanged)?
                                cmp_flag 0
                                trap_ne
                                tsx             ;sp?
                                cpx #$ff
                                trap_ne
                        ;pass 2
                                load_flag $ff   ;with interrupts disabled if allowed!
                                pha
                                lda #$ff-'B'
                                ldx #$ff-'R'
                                ldy #$ff-'K'
                                plp             ;N=1, V=1, Z=1, C=1
                                brk
                                dey             ;should not be executed
                        brk_ret1                ;address of break return
                                php             ;either SP or Y count will fail, if we do not hit
                                dey
                                dey
                                dey
                                cmp #($ff-'B')^$aa  ;returned registers OK?
                                ;the IRQ vector was never executed if A & X stay unmodified
                                trap_ne
                                cpx #$ff-'R'+1
                                trap_ne
                                cpy #$ff-'K'-6
                                trap_ne
                                pla             ;returned flags OK (unchanged)?
                                cmp_flag $ff
                                trap_ne
                                tsx             ;sp?
                                cpx #$ff
                                trap_ne
                                next_test
                            endif
                        
                        ; testing accumulator increment/decrement INC A & DEC A
d9a4 : a2ac                     ldx #$ac    ;protect x & y
d9a6 : a0dc                     ldy #$dc
                                set_a $fe,$ff
                       >            load_flag $ff
d9a8 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
d9aa : 48              >            pha         ;use stack to load status
d9ab : a9fe            >            lda #$fe     ;precharge accu
d9ad : 28              >            plp
                        
d9ae : 1a                       inc a           ;ff
                                tst_as $ff,$ff-zero
d9af : 48              >            pha
d9b0 : 08              >            php         ;save flags
d9b1 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
d9b3 : f003            >        beq skip1780
                       >        trap            ;failed not equal (non zero)
d9b5 : 20c7ed          >        jsr report_error
                       >
d9b8 :                 >skip1780
                       >
d9b8 : 68              >            pla         ;load status
d9b9 : 48              >            pha
                       >            cmp_flag $ff-zero
d9ba : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d9bc : f003            >        beq skip1783
                       >        trap            ;failed not equal (non zero)
d9be : 20c7ed          >        jsr report_error
                       >
d9c1 :                 >skip1783
                       >
d9c1 : 28              >            plp         ;restore status
d9c2 : 68              >            pla
                        
d9c3 : 1a                       inc a           ;00
                                tst_as 0,$ff-minus
d9c4 : 48              >            pha
d9c5 : 08              >            php         ;save flags
d9c6 : c900            >            cmp #0     ;test result
                       >            trap_ne
d9c8 : f003            >        beq skip1786
                       >        trap            ;failed not equal (non zero)
d9ca : 20c7ed          >        jsr report_error
                       >
d9cd :                 >skip1786
                       >
d9cd : 68              >            pla         ;load status
d9ce : 48              >            pha
                       >            cmp_flag $ff-minus
d9cf : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d9d1 : f003            >        beq skip1789
                       >        trap            ;failed not equal (non zero)
d9d3 : 20c7ed          >        jsr report_error
                       >
d9d6 :                 >skip1789
                       >
d9d6 : 28              >            plp         ;restore status
d9d7 : 68              >            pla
                        
d9d8 : 1a                       inc a           ;01
                                tst_as 1,$ff-minus-zero
d9d9 : 48              >            pha
d9da : 08              >            php         ;save flags
d9db : c901            >            cmp #1     ;test result
                       >            trap_ne
d9dd : f003            >        beq skip1792
                       >        trap            ;failed not equal (non zero)
d9df : 20c7ed          >        jsr report_error
                       >
d9e2 :                 >skip1792
                       >
d9e2 : 68              >            pla         ;load status
d9e3 : 48              >            pha
                       >            cmp_flag $ff-minus-zero
d9e4 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d9e6 : f003            >        beq skip1795
                       >        trap            ;failed not equal (non zero)
d9e8 : 20c7ed          >        jsr report_error
                       >
d9eb :                 >skip1795
                       >
d9eb : 28              >            plp         ;restore status
d9ec : 68              >            pla
                        
d9ed : 3a                       dec a           ;00
                                tst_as 0,$ff-minus
d9ee : 48              >            pha
d9ef : 08              >            php         ;save flags
d9f0 : c900            >            cmp #0     ;test result
                       >            trap_ne
d9f2 : f003            >        beq skip1798
                       >        trap            ;failed not equal (non zero)
d9f4 : 20c7ed          >        jsr report_error
                       >
d9f7 :                 >skip1798
                       >
d9f7 : 68              >            pla         ;load status
d9f8 : 48              >            pha
                       >            cmp_flag $ff-minus
d9f9 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
d9fb : f003            >        beq skip1801
                       >        trap            ;failed not equal (non zero)
d9fd : 20c7ed          >        jsr report_error
                       >
da00 :                 >skip1801
                       >
da00 : 28              >            plp         ;restore status
da01 : 68              >            pla
                        
da02 : 3a                       dec a           ;ff
                                tst_as $ff,$ff-zero
da03 : 48              >            pha
da04 : 08              >            php         ;save flags
da05 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
da07 : f003            >        beq skip1804
                       >        trap            ;failed not equal (non zero)
da09 : 20c7ed          >        jsr report_error
                       >
da0c :                 >skip1804
                       >
da0c : 68              >            pla         ;load status
da0d : 48              >            pha
                       >            cmp_flag $ff-zero
da0e : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
da10 : f003            >        beq skip1807
                       >        trap            ;failed not equal (non zero)
da12 : 20c7ed          >        jsr report_error
                       >
da15 :                 >skip1807
                       >
da15 : 28              >            plp         ;restore status
da16 : 68              >            pla
                        
da17 : 3a                       dec a           ;fe
                                set_a $fe,0
                       >            load_flag 0
da18 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
da1a : 48              >            pha         ;use stack to load status
da1b : a9fe            >            lda #$fe     ;precharge accu
da1d : 28              >            plp
                        
da1e : 1a                       inc a           ;ff
                                tst_as $ff,minus
da1f : 48              >            pha
da20 : 08              >            php         ;save flags
da21 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
da23 : f003            >        beq skip1812
                       >        trap            ;failed not equal (non zero)
da25 : 20c7ed          >        jsr report_error
                       >
da28 :                 >skip1812
                       >
da28 : 68              >            pla         ;load status
da29 : 48              >            pha
                       >            cmp_flag minus
da2a : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
da2c : f003            >        beq skip1815
                       >        trap            ;failed not equal (non zero)
da2e : 20c7ed          >        jsr report_error
                       >
da31 :                 >skip1815
                       >
da31 : 28              >            plp         ;restore status
da32 : 68              >            pla
                        
da33 : 1a                       inc a           ;00
                                tst_as 0,zero
da34 : 48              >            pha
da35 : 08              >            php         ;save flags
da36 : c900            >            cmp #0     ;test result
                       >            trap_ne
da38 : f003            >        beq skip1818
                       >        trap            ;failed not equal (non zero)
da3a : 20c7ed          >        jsr report_error
                       >
da3d :                 >skip1818
                       >
da3d : 68              >            pla         ;load status
da3e : 48              >            pha
                       >            cmp_flag zero
da3f : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
da41 : f003            >        beq skip1821
                       >        trap            ;failed not equal (non zero)
da43 : 20c7ed          >        jsr report_error
                       >
da46 :                 >skip1821
                       >
da46 : 28              >            plp         ;restore status
da47 : 68              >            pla
                        
da48 : 1a                       inc a           ;01
                                tst_as 1,0
da49 : 48              >            pha
da4a : 08              >            php         ;save flags
da4b : c901            >            cmp #1     ;test result
                       >            trap_ne
da4d : f003            >        beq skip1824
                       >        trap            ;failed not equal (non zero)
da4f : 20c7ed          >        jsr report_error
                       >
da52 :                 >skip1824
                       >
da52 : 68              >            pla         ;load status
da53 : 48              >            pha
                       >            cmp_flag 0
da54 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
da56 : f003            >        beq skip1827
                       >        trap            ;failed not equal (non zero)
da58 : 20c7ed          >        jsr report_error
                       >
da5b :                 >skip1827
                       >
da5b : 28              >            plp         ;restore status
da5c : 68              >            pla
                        
da5d : 3a                       dec a           ;00
                                tst_as 0,zero
da5e : 48              >            pha
da5f : 08              >            php         ;save flags
da60 : c900            >            cmp #0     ;test result
                       >            trap_ne
da62 : f003            >        beq skip1830
                       >        trap            ;failed not equal (non zero)
da64 : 20c7ed          >        jsr report_error
                       >
da67 :                 >skip1830
                       >
da67 : 68              >            pla         ;load status
da68 : 48              >            pha
                       >            cmp_flag zero
da69 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
da6b : f003            >        beq skip1833
                       >        trap            ;failed not equal (non zero)
da6d : 20c7ed          >        jsr report_error
                       >
da70 :                 >skip1833
                       >
da70 : 28              >            plp         ;restore status
da71 : 68              >            pla
                        
da72 : 3a                       dec a           ;ff
                                tst_as $ff,minus
da73 : 48              >            pha
da74 : 08              >            php         ;save flags
da75 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
da77 : f003            >        beq skip1836
                       >        trap            ;failed not equal (non zero)
da79 : 20c7ed          >        jsr report_error
                       >
da7c :                 >skip1836
                       >
da7c : 68              >            pla         ;load status
da7d : 48              >            pha
                       >            cmp_flag minus
da7e : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
da80 : f003            >        beq skip1839
                       >        trap            ;failed not equal (non zero)
da82 : 20c7ed          >        jsr report_error
                       >
da85 :                 >skip1839
                       >
da85 : 28              >            plp         ;restore status
da86 : 68              >            pla
                        
da87 : e0ac                     cpx #$ac
                                trap_ne     ;x altered during test
da89 : f003            >        beq skip1841
                       >        trap            ;failed not equal (non zero)
da8b : 20c7ed          >        jsr report_error
                       >
da8e :                 >skip1841
                        
da8e : c0dc                     cpy #$dc
                                trap_ne     ;y altered during test
da90 : f003            >        beq skip1843
                       >        trap            ;failed not equal (non zero)
da92 : 20c7ed          >        jsr report_error
                       >
da95 :                 >skip1843
                        
da95 : ba                       tsx
da96 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
da98 : f003            >        beq skip1845
                       >        trap            ;failed not equal (non zero)
da9a : 20c7ed          >        jsr report_error
                       >
da9d :                 >skip1845
                        
                                next_test
da9d : ad0232          >            lda test_case   ;previous test
daa0 : c90b            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
daa2 : f003            >        beq skip1848
                       >        trap            ;failed not equal (non zero)
daa4 : 20c7ed          >        jsr report_error
                       >
daa7 :                 >skip1848
                       >
000c =                 >test_num = test_num + 1
daa7 : a90c            >            lda #test_num   ;*** next tests' number
daa9 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing load / store accumulator LDA / STA (zp)
daac : a299                     ldx #$99    ;protect x & y
daae : a066                     ldy #$66
                                set_stat 0
                       >            load_flag 0
dab0 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
dab2 : 48              >            pha         ;use stack to load status
dab3 : 28              >            plp
                        
dab4 : b26a                     lda (ind1)
dab6 : 08                       php         ;test stores do not alter flags
dab7 : 49c3                     eor #$c3
dab9 : 28                       plp
daba : 9276                     sta (indt)
dabc : 08                       php         ;flags after load/store sequence
dabd : 49c3                     eor #$c3
dabf : c9c3                     cmp #$c3    ;test result
                                trap_ne
dac1 : f003            >        beq skip1852
                       >        trap            ;failed not equal (non zero)
dac3 : 20c7ed          >        jsr report_error
                       >
dac6 :                 >skip1852
                        
dac6 : 68                       pla         ;load status
                                eor_flag 0
dac7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
dac9 : cd1532                   cmp fLDx    ;test flags
                                trap_ne
dacc : f003            >        beq skip1855
                       >        trap            ;failed not equal (non zero)
dace : 20c7ed          >        jsr report_error
                       >
dad1 :                 >skip1855
                        
                                set_stat 0
                       >            load_flag 0
dad1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
dad3 : 48              >            pha         ;use stack to load status
dad4 : 28              >            plp
                        
dad5 : b26c                     lda (ind1+2)
dad7 : 08                       php         ;test stores do not alter flags
dad8 : 49c3                     eor #$c3
dada : 28                       plp
dadb : 9278                     sta (indt+2)
dadd : 08                       php         ;flags after load/store sequence
dade : 49c3                     eor #$c3
dae0 : c982                     cmp #$82    ;test result
                                trap_ne
dae2 : f003            >        beq skip1859
                       >        trap            ;failed not equal (non zero)
dae4 : 20c7ed          >        jsr report_error
                       >
dae7 :                 >skip1859
                        
dae7 : 68                       pla         ;load status
                                eor_flag 0
dae8 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
daea : cd1632                   cmp fLDx+1  ;test flags
                                trap_ne
daed : f003            >        beq skip1862
                       >        trap            ;failed not equal (non zero)
daef : 20c7ed          >        jsr report_error
                       >
daf2 :                 >skip1862
                        
                                set_stat 0
                       >            load_flag 0
daf2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
daf4 : 48              >            pha         ;use stack to load status
daf5 : 28              >            plp
                        
daf6 : b26e                     lda (ind1+4)
daf8 : 08                       php         ;test stores do not alter flags
daf9 : 49c3                     eor #$c3
dafb : 28                       plp
dafc : 927a                     sta (indt+4)
dafe : 08                       php         ;flags after load/store sequence
daff : 49c3                     eor #$c3
db01 : c941                     cmp #$41    ;test result
                                trap_ne
db03 : f003            >        beq skip1866
                       >        trap            ;failed not equal (non zero)
db05 : 20c7ed          >        jsr report_error
                       >
db08 :                 >skip1866
                        
db08 : 68                       pla         ;load status
                                eor_flag 0
db09 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
db0b : cd1732                   cmp fLDx+2  ;test flags
                                trap_ne
db0e : f003            >        beq skip1869
                       >        trap            ;failed not equal (non zero)
db10 : 20c7ed          >        jsr report_error
                       >
db13 :                 >skip1869
                        
                                set_stat 0
                       >            load_flag 0
db13 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
db15 : 48              >            pha         ;use stack to load status
db16 : 28              >            plp
                        
db17 : b270                     lda (ind1+6)
db19 : 08                       php         ;test stores do not alter flags
db1a : 49c3                     eor #$c3
db1c : 28                       plp
db1d : 927c                     sta (indt+6)
db1f : 08                       php         ;flags after load/store sequence
db20 : 49c3                     eor #$c3
db22 : c900                     cmp #0      ;test result
                                trap_ne
db24 : f003            >        beq skip1873
                       >        trap            ;failed not equal (non zero)
db26 : 20c7ed          >        jsr report_error
                       >
db29 :                 >skip1873
                        
db29 : 68                       pla         ;load status
                                eor_flag 0
db2a : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
db2c : cd1832                   cmp fLDx+3  ;test flags
                                trap_ne
db2f : f003            >        beq skip1876
                       >        trap            ;failed not equal (non zero)
db31 : 20c7ed          >        jsr report_error
                       >
db34 :                 >skip1876
                        
db34 : e099                     cpx #$99
                                trap_ne     ;x altered during test
db36 : f003            >        beq skip1878
                       >        trap            ;failed not equal (non zero)
db38 : 20c7ed          >        jsr report_error
                       >
db3b :                 >skip1878
                        
db3b : c066                     cpy #$66
                                trap_ne     ;y altered during test
db3d : f003            >        beq skip1880
                       >        trap            ;failed not equal (non zero)
db3f : 20c7ed          >        jsr report_error
                       >
db42 :                 >skip1880
                        
                        
db42 : a003                     ldy #3      ;testing store result
db44 : a200                     ldx #0
db46 : b90532           tstai1  lda abst,y
db49 : 49c3                     eor #$c3
db4b : d91032                   cmp abs1,y
                                trap_ne     ;store to indirect data
db4e : f003            >        beq skip1882
                       >        trap            ;failed not equal (non zero)
db50 : 20c7ed          >        jsr report_error
                       >
db53 :                 >skip1882
                        
db53 : 8a                       txa
db54 : 990532                   sta abst,y  ;clear
db57 : 88                       dey
db58 : 10ec                     bpl tstai1
                        
db5a : a299                     ldx #$99    ;protect x & y
db5c : a066                     ldy #$66
                                set_stat $ff
                       >            load_flag $ff
db5e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
db60 : 48              >            pha         ;use stack to load status
db61 : 28              >            plp
                        
db62 : b26a                     lda (ind1)
db64 : 08                       php         ;test stores do not alter flags
db65 : 49c3                     eor #$c3
db67 : 28                       plp
db68 : 9276                     sta (indt)
db6a : 08                       php         ;flags after load/store sequence
db6b : 49c3                     eor #$c3
db6d : c9c3                     cmp #$c3    ;test result
                                trap_ne
db6f : f003            >        beq skip1886
                       >        trap            ;failed not equal (non zero)
db71 : 20c7ed          >        jsr report_error
                       >
db74 :                 >skip1886
                        
db74 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
db75 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
db77 : cd1532                   cmp fLDx    ;test flags
                                trap_ne
db7a : f003            >        beq skip1889
                       >        trap            ;failed not equal (non zero)
db7c : 20c7ed          >        jsr report_error
                       >
db7f :                 >skip1889
                        
                                set_stat $ff
                       >            load_flag $ff
db7f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
db81 : 48              >            pha         ;use stack to load status
db82 : 28              >            plp
                        
db83 : b26c                     lda (ind1+2)
db85 : 08                       php         ;test stores do not alter flags
db86 : 49c3                     eor #$c3
db88 : 28                       plp
db89 : 9278                     sta (indt+2)
db8b : 08                       php         ;flags after load/store sequence
db8c : 49c3                     eor #$c3
db8e : c982                     cmp #$82    ;test result
                                trap_ne
db90 : f003            >        beq skip1893
                       >        trap            ;failed not equal (non zero)
db92 : 20c7ed          >        jsr report_error
                       >
db95 :                 >skip1893
                        
db95 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
db96 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
db98 : cd1632                   cmp fLDx+1  ;test flags
                                trap_ne
db9b : f003            >        beq skip1896
                       >        trap            ;failed not equal (non zero)
db9d : 20c7ed          >        jsr report_error
                       >
dba0 :                 >skip1896
                        
                                set_stat $ff
                       >            load_flag $ff
dba0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
dba2 : 48              >            pha         ;use stack to load status
dba3 : 28              >            plp
                        
dba4 : b26e                     lda (ind1+4)
dba6 : 08                       php         ;test stores do not alter flags
dba7 : 49c3                     eor #$c3
dba9 : 28                       plp
dbaa : 927a                     sta (indt+4)
dbac : 08                       php         ;flags after load/store sequence
dbad : 49c3                     eor #$c3
dbaf : c941                     cmp #$41    ;test result
                                trap_ne
dbb1 : f003            >        beq skip1900
                       >        trap            ;failed not equal (non zero)
dbb3 : 20c7ed          >        jsr report_error
                       >
dbb6 :                 >skip1900
                        
dbb6 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
dbb7 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
dbb9 : cd1732                   cmp fLDx+2  ;test flags
                                trap_ne
dbbc : f003            >        beq skip1903
                       >        trap            ;failed not equal (non zero)
dbbe : 20c7ed          >        jsr report_error
                       >
dbc1 :                 >skip1903
                        
                                set_stat $ff
                       >            load_flag $ff
dbc1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
dbc3 : 48              >            pha         ;use stack to load status
dbc4 : 28              >            plp
                        
dbc5 : b270                     lda (ind1+6)
dbc7 : 08                       php         ;test stores do not alter flags
dbc8 : 49c3                     eor #$c3
dbca : 28                       plp
dbcb : 927c                     sta (indt+6)
dbcd : 08                       php         ;flags after load/store sequence
dbce : 49c3                     eor #$c3
dbd0 : c900                     cmp #0      ;test result
                                trap_ne
dbd2 : f003            >        beq skip1907
                       >        trap            ;failed not equal (non zero)
dbd4 : 20c7ed          >        jsr report_error
                       >
dbd7 :                 >skip1907
                        
dbd7 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
dbd8 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
dbda : cd1832                   cmp fLDx+3  ;test flags
                                trap_ne
dbdd : f003            >        beq skip1910
                       >        trap            ;failed not equal (non zero)
dbdf : 20c7ed          >        jsr report_error
                       >
dbe2 :                 >skip1910
                        
dbe2 : e099                     cpx #$99
                                trap_ne     ;x altered during test
dbe4 : f003            >        beq skip1912
                       >        trap            ;failed not equal (non zero)
dbe6 : 20c7ed          >        jsr report_error
                       >
dbe9 :                 >skip1912
                        
dbe9 : c066                     cpy #$66
                                trap_ne     ;y altered during test
dbeb : f003            >        beq skip1914
                       >        trap            ;failed not equal (non zero)
dbed : 20c7ed          >        jsr report_error
                       >
dbf0 :                 >skip1914
                        
                        
dbf0 : a003                     ldy #3      ;testing store result
dbf2 : a200                     ldx #0
dbf4 : b90532           tstai2  lda abst,y
dbf7 : 49c3                     eor #$c3
dbf9 : d91032                   cmp abs1,y
                                trap_ne     ;store to indirect data
dbfc : f003            >        beq skip1916
                       >        trap            ;failed not equal (non zero)
dbfe : 20c7ed          >        jsr report_error
                       >
dc01 :                 >skip1916
                        
dc01 : 8a                       txa
dc02 : 990532                   sta abst,y  ;clear
dc05 : 88                       dey
dc06 : 10ec                     bpl tstai2
dc08 : ba                       tsx
dc09 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
dc0b : f003            >        beq skip1918
                       >        trap            ;failed not equal (non zero)
dc0d : 20c7ed          >        jsr report_error
                       >
dc10 :                 >skip1918
                        
                                next_test
dc10 : ad0232          >            lda test_case   ;previous test
dc13 : c90c            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
dc15 : f003            >        beq skip1921
                       >        trap            ;failed not equal (non zero)
dc17 : 20c7ed          >        jsr report_error
                       >
dc1a :                 >skip1921
                       >
000d =                 >test_num = test_num + 1
dc1a : a90d            >            lda #test_num   ;*** next tests' number
dc1c : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing STZ - zp / abs / zp,x / abs,x
dc1f : a07b                     ldy #123    ;protect y
dc21 : a204                     ldx #4      ;precharge test area
dc23 : a907                     lda #7
dc25 : 9552             tstz1   sta zpt,x
dc27 : 0a                       asl a
dc28 : ca                       dex
dc29 : 10fa                     bpl tstz1
dc2b : a204                     ldx #4
                                set_a $55,$ff
                       >            load_flag $ff
dc2d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
dc2f : 48              >            pha         ;use stack to load status
dc30 : a955            >            lda #$55     ;precharge accu
dc32 : 28              >            plp
                        
dc33 : 6452                     stz zpt
dc35 : 6453                     stz zpt+1
dc37 : 6454                     stz zpt+2
dc39 : 6455                     stz zpt+3
dc3b : 6456                     stz zpt+4
                                tst_a $55,$ff
dc3d : 08              >            php         ;save flags
dc3e : c955            >            cmp #$55     ;test result
                       >            trap_ne
dc40 : f003            >        beq skip1926
                       >        trap            ;failed not equal (non zero)
dc42 : 20c7ed          >        jsr report_error
                       >
dc45 :                 >skip1926
                       >
dc45 : 68              >            pla         ;load status
dc46 : 48              >            pha
                       >            cmp_flag $ff
dc47 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
dc49 : f003            >        beq skip1929
                       >        trap            ;failed not equal (non zero)
dc4b : 20c7ed          >        jsr report_error
                       >
dc4e :                 >skip1929
                       >
dc4e : 28              >            plp         ;restore status
                        
dc4f : b552             tstz2   lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
dc51 : f003            >        beq skip1931
                       >        trap            ;failed not equal (non zero)
dc53 : 20c7ed          >        jsr report_error
                       >
dc56 :                 >skip1931
                        
dc56 : ca                       dex
dc57 : 10f6                     bpl tstz2
dc59 : a204                     ldx #4      ;precharge test area
dc5b : a907                     lda #7
dc5d : 9552             tstz3   sta zpt,x
dc5f : 0a                       asl a
dc60 : ca                       dex
dc61 : 10fa                     bpl tstz3
dc63 : a204                     ldx #4
                                set_a $aa,0
                       >            load_flag 0
dc65 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
dc67 : 48              >            pha         ;use stack to load status
dc68 : a9aa            >            lda #$aa     ;precharge accu
dc6a : 28              >            plp
                        
dc6b : 6452                     stz zpt
dc6d : 6453                     stz zpt+1
dc6f : 6454                     stz zpt+2
dc71 : 6455                     stz zpt+3
dc73 : 6456                     stz zpt+4
                                tst_a $aa,0
dc75 : 08              >            php         ;save flags
dc76 : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
dc78 : f003            >        beq skip1936
                       >        trap            ;failed not equal (non zero)
dc7a : 20c7ed          >        jsr report_error
                       >
dc7d :                 >skip1936
                       >
dc7d : 68              >            pla         ;load status
dc7e : 48              >            pha
                       >            cmp_flag 0
dc7f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
dc81 : f003            >        beq skip1939
                       >        trap            ;failed not equal (non zero)
dc83 : 20c7ed          >        jsr report_error
                       >
dc86 :                 >skip1939
                       >
dc86 : 28              >            plp         ;restore status
                        
dc87 : b552             tstz4   lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
dc89 : f003            >        beq skip1941
                       >        trap            ;failed not equal (non zero)
dc8b : 20c7ed          >        jsr report_error
                       >
dc8e :                 >skip1941
                        
dc8e : ca                       dex
dc8f : 10f6                     bpl tstz4
                        
dc91 : a204                     ldx #4      ;precharge test area
dc93 : a907                     lda #7
dc95 : 9d0532           tstz5   sta abst,x
dc98 : 0a                       asl a
dc99 : ca                       dex
dc9a : 10f9                     bpl tstz5
dc9c : a204                     ldx #4
                                set_a $55,$ff
                       >            load_flag $ff
dc9e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
dca0 : 48              >            pha         ;use stack to load status
dca1 : a955            >            lda #$55     ;precharge accu
dca3 : 28              >            plp
                        
dca4 : 9c0532                   stz abst
dca7 : 9c0632                   stz abst+1
dcaa : 9c0732                   stz abst+2
dcad : 9c0832                   stz abst+3
dcb0 : 9c0932                   stz abst+4
                                tst_a $55,$ff
dcb3 : 08              >            php         ;save flags
dcb4 : c955            >            cmp #$55     ;test result
                       >            trap_ne
dcb6 : f003            >        beq skip1946
                       >        trap            ;failed not equal (non zero)
dcb8 : 20c7ed          >        jsr report_error
                       >
dcbb :                 >skip1946
                       >
dcbb : 68              >            pla         ;load status
dcbc : 48              >            pha
                       >            cmp_flag $ff
dcbd : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
dcbf : f003            >        beq skip1949
                       >        trap            ;failed not equal (non zero)
dcc1 : 20c7ed          >        jsr report_error
                       >
dcc4 :                 >skip1949
                       >
dcc4 : 28              >            plp         ;restore status
                        
dcc5 : bd0532           tstz6   lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ abs
dcc8 : f003            >        beq skip1951
                       >        trap            ;failed not equal (non zero)
dcca : 20c7ed          >        jsr report_error
                       >
dccd :                 >skip1951
                        
dccd : ca                       dex
dcce : 10f5                     bpl tstz6
dcd0 : a204                     ldx #4      ;precharge test area
dcd2 : a907                     lda #7
dcd4 : 9d0532           tstz7   sta abst,x
dcd7 : 0a                       asl a
dcd8 : ca                       dex
dcd9 : 10f9                     bpl tstz7
dcdb : a204                     ldx #4
                                set_a $aa,0
                       >            load_flag 0
dcdd : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
dcdf : 48              >            pha         ;use stack to load status
dce0 : a9aa            >            lda #$aa     ;precharge accu
dce2 : 28              >            plp
                        
dce3 : 9c0532                   stz abst
dce6 : 9c0632                   stz abst+1
dce9 : 9c0732                   stz abst+2
dcec : 9c0832                   stz abst+3
dcef : 9c0932                   stz abst+4
                                tst_a $aa,0
dcf2 : 08              >            php         ;save flags
dcf3 : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
dcf5 : f003            >        beq skip1956
                       >        trap            ;failed not equal (non zero)
dcf7 : 20c7ed          >        jsr report_error
                       >
dcfa :                 >skip1956
                       >
dcfa : 68              >            pla         ;load status
dcfb : 48              >            pha
                       >            cmp_flag 0
dcfc : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
dcfe : f003            >        beq skip1959
                       >        trap            ;failed not equal (non zero)
dd00 : 20c7ed          >        jsr report_error
                       >
dd03 :                 >skip1959
                       >
dd03 : 28              >            plp         ;restore status
                        
dd04 : bd0532           tstz8   lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ abs
dd07 : f003            >        beq skip1961
                       >        trap            ;failed not equal (non zero)
dd09 : 20c7ed          >        jsr report_error
                       >
dd0c :                 >skip1961
                        
dd0c : ca                       dex
dd0d : 10f5                     bpl tstz8
                        
dd0f : a204                     ldx #4      ;precharge test area
dd11 : a907                     lda #7
dd13 : 9552             tstz11  sta zpt,x
dd15 : 0a                       asl a
dd16 : ca                       dex
dd17 : 10fa                     bpl tstz11
dd19 : a204                     ldx #4
dd1b :                  tstz15
                                set_a $55,$ff
                       >            load_flag $ff
dd1b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
dd1d : 48              >            pha         ;use stack to load status
dd1e : a955            >            lda #$55     ;precharge accu
dd20 : 28              >            plp
                        
dd21 : 7452                     stz zpt,x
                                tst_a $55,$ff
dd23 : 08              >            php         ;save flags
dd24 : c955            >            cmp #$55     ;test result
                       >            trap_ne
dd26 : f003            >        beq skip1966
                       >        trap            ;failed not equal (non zero)
dd28 : 20c7ed          >        jsr report_error
                       >
dd2b :                 >skip1966
                       >
dd2b : 68              >            pla         ;load status
dd2c : 48              >            pha
                       >            cmp_flag $ff
dd2d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
dd2f : f003            >        beq skip1969
                       >        trap            ;failed not equal (non zero)
dd31 : 20c7ed          >        jsr report_error
                       >
dd34 :                 >skip1969
                       >
dd34 : 28              >            plp         ;restore status
                        
dd35 : ca                       dex
dd36 : 10e3                     bpl tstz15
dd38 : a204                     ldx #4
dd3a : b552             tstz12  lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
dd3c : f003            >        beq skip1971
                       >        trap            ;failed not equal (non zero)
dd3e : 20c7ed          >        jsr report_error
                       >
dd41 :                 >skip1971
                        
dd41 : ca                       dex
dd42 : 10f6                     bpl tstz12
dd44 : a204                     ldx #4      ;precharge test area
dd46 : a907                     lda #7
dd48 : 9552             tstz13  sta zpt,x
dd4a : 0a                       asl a
dd4b : ca                       dex
dd4c : 10fa                     bpl tstz13
dd4e : a204                     ldx #4
dd50 :                  tstz16
                                set_a $aa,0
                       >            load_flag 0
dd50 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
dd52 : 48              >            pha         ;use stack to load status
dd53 : a9aa            >            lda #$aa     ;precharge accu
dd55 : 28              >            plp
                        
dd56 : 7452                     stz zpt,x
                                tst_a $aa,0
dd58 : 08              >            php         ;save flags
dd59 : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
dd5b : f003            >        beq skip1976
                       >        trap            ;failed not equal (non zero)
dd5d : 20c7ed          >        jsr report_error
                       >
dd60 :                 >skip1976
                       >
dd60 : 68              >            pla         ;load status
dd61 : 48              >            pha
                       >            cmp_flag 0
dd62 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
dd64 : f003            >        beq skip1979
                       >        trap            ;failed not equal (non zero)
dd66 : 20c7ed          >        jsr report_error
                       >
dd69 :                 >skip1979
                       >
dd69 : 28              >            plp         ;restore status
                        
dd6a : ca                       dex
dd6b : 10e3                     bpl tstz16
dd6d : a204                     ldx #4
dd6f : b552             tstz14  lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
dd71 : f003            >        beq skip1981
                       >        trap            ;failed not equal (non zero)
dd73 : 20c7ed          >        jsr report_error
                       >
dd76 :                 >skip1981
                        
dd76 : ca                       dex
dd77 : 10f6                     bpl tstz14
                        
dd79 : a204                     ldx #4      ;precharge test area
dd7b : a907                     lda #7
dd7d : 9d0532           tstz21  sta abst,x
dd80 : 0a                       asl a
dd81 : ca                       dex
dd82 : 10f9                     bpl tstz21
dd84 : a204                     ldx #4
dd86 :                  tstz25
                                set_a $55,$ff
                       >            load_flag $ff
dd86 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
dd88 : 48              >            pha         ;use stack to load status
dd89 : a955            >            lda #$55     ;precharge accu
dd8b : 28              >            plp
                        
dd8c : 9e0532                   stz abst,x
                                tst_a $55,$ff
dd8f : 08              >            php         ;save flags
dd90 : c955            >            cmp #$55     ;test result
                       >            trap_ne
dd92 : f003            >        beq skip1986
                       >        trap            ;failed not equal (non zero)
dd94 : 20c7ed          >        jsr report_error
                       >
dd97 :                 >skip1986
                       >
dd97 : 68              >            pla         ;load status
dd98 : 48              >            pha
                       >            cmp_flag $ff
dd99 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
dd9b : f003            >        beq skip1989
                       >        trap            ;failed not equal (non zero)
dd9d : 20c7ed          >        jsr report_error
                       >
dda0 :                 >skip1989
                       >
dda0 : 28              >            plp         ;restore status
                        
dda1 : ca                       dex
dda2 : 10e2                     bpl tstz25
dda4 : a204                     ldx #4
dda6 : bd0532           tstz22  lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
dda9 : f003            >        beq skip1991
                       >        trap            ;failed not equal (non zero)
ddab : 20c7ed          >        jsr report_error
                       >
ddae :                 >skip1991
                        
ddae : ca                       dex
ddaf : 10f5                     bpl tstz22
ddb1 : a204                     ldx #4      ;precharge test area
ddb3 : a907                     lda #7
ddb5 : 9d0532           tstz23  sta abst,x
ddb8 : 0a                       asl a
ddb9 : ca                       dex
ddba : 10f9                     bpl tstz23
ddbc : a204                     ldx #4
ddbe :                  tstz26
                                set_a $aa,0
                       >            load_flag 0
ddbe : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
ddc0 : 48              >            pha         ;use stack to load status
ddc1 : a9aa            >            lda #$aa     ;precharge accu
ddc3 : 28              >            plp
                        
ddc4 : 9e0532                   stz abst,x
                                tst_a $aa,0
ddc7 : 08              >            php         ;save flags
ddc8 : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
ddca : f003            >        beq skip1996
                       >        trap            ;failed not equal (non zero)
ddcc : 20c7ed          >        jsr report_error
                       >
ddcf :                 >skip1996
                       >
ddcf : 68              >            pla         ;load status
ddd0 : 48              >            pha
                       >            cmp_flag 0
ddd1 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
ddd3 : f003            >        beq skip1999
                       >        trap            ;failed not equal (non zero)
ddd5 : 20c7ed          >        jsr report_error
                       >
ddd8 :                 >skip1999
                       >
ddd8 : 28              >            plp         ;restore status
                        
ddd9 : ca                       dex
ddda : 10e2                     bpl tstz26
dddc : a204                     ldx #4
ddde : bd0532           tstz24  lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
dde1 : f003            >        beq skip2001
                       >        trap            ;failed not equal (non zero)
dde3 : 20c7ed          >        jsr report_error
                       >
dde6 :                 >skip2001
                        
dde6 : ca                       dex
dde7 : 10f5                     bpl tstz24
                        
dde9 : c07b                     cpy #123
                                trap_ne     ;y altered during test
ddeb : f003            >        beq skip2003
                       >        trap            ;failed not equal (non zero)
dded : 20c7ed          >        jsr report_error
                       >
ddf0 :                 >skip2003
                        
ddf0 : ba                       tsx
ddf1 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
ddf3 : f003            >        beq skip2005
                       >        trap            ;failed not equal (non zero)
ddf5 : 20c7ed          >        jsr report_error
                       >
ddf8 :                 >skip2005
                        
                                next_test
ddf8 : ad0232          >            lda test_case   ;previous test
ddfb : c90d            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
ddfd : f003            >        beq skip2008
                       >        trap            ;failed not equal (non zero)
ddff : 20c7ed          >        jsr report_error
                       >
de02 :                 >skip2008
                       >
000e =                 >test_num = test_num + 1
de02 : a90e            >            lda #test_num   ;*** next tests' number
de04 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing BIT - zp,x / abs,x / #
de07 : a042                     ldy #$42
de09 : a203                     ldx #3
                                set_a $ff,0
                       >            load_flag 0
de0b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
de0d : 48              >            pha         ;use stack to load status
de0e : a9ff            >            lda #$ff     ;precharge accu
de10 : 28              >            plp
                        
de11 : 3459                     bit zp1,x   ;00 - should set Z / clear  NV
                                tst_a $ff,fz
de13 : 08              >            php         ;save flags
de14 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
de16 : f003            >        beq skip2013
                       >        trap            ;failed not equal (non zero)
de18 : 20c7ed          >        jsr report_error
                       >
de1b :                 >skip2013
                       >
de1b : 68              >            pla         ;load status
de1c : 48              >            pha
                       >            cmp_flag fz
de1d : c932            >            cmp #(fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
de1f : f003            >        beq skip2016
                       >        trap            ;failed not equal (non zero)
de21 : 20c7ed          >        jsr report_error
                       >
de24 :                 >skip2016
                       >
de24 : 28              >            plp         ;restore status
                        
de25 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
de26 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
de28 : 48              >            pha         ;use stack to load status
de29 : a901            >            lda #1     ;precharge accu
de2b : 28              >            plp
                        
de2c : 3459                     bit zp1,x   ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
de2e : 08              >            php         ;save flags
de2f : c901            >            cmp #1     ;test result
                       >            trap_ne
de31 : f003            >        beq skip2021
                       >        trap            ;failed not equal (non zero)
de33 : 20c7ed          >        jsr report_error
                       >
de36 :                 >skip2021
                       >
de36 : 68              >            pla         ;load status
de37 : 48              >            pha
                       >            cmp_flag fv
de38 : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
de3a : f003            >        beq skip2024
                       >        trap            ;failed not equal (non zero)
de3c : 20c7ed          >        jsr report_error
                       >
de3f :                 >skip2024
                       >
de3f : 28              >            plp         ;restore status
                        
de40 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
de41 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
de43 : 48              >            pha         ;use stack to load status
de44 : a901            >            lda #1     ;precharge accu
de46 : 28              >            plp
                        
de47 : 3459                     bit zp1,x   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
de49 : 08              >            php         ;save flags
de4a : c901            >            cmp #1     ;test result
                       >            trap_ne
de4c : f003            >        beq skip2029
                       >        trap            ;failed not equal (non zero)
de4e : 20c7ed          >        jsr report_error
                       >
de51 :                 >skip2029
                       >
de51 : 68              >            pla         ;load status
de52 : 48              >            pha
                       >            cmp_flag fnz
de53 : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
de55 : f003            >        beq skip2032
                       >        trap            ;failed not equal (non zero)
de57 : 20c7ed          >        jsr report_error
                       >
de5a :                 >skip2032
                       >
de5a : 28              >            plp         ;restore status
                        
de5b : ca                       dex
                                set_a 1,0
                       >            load_flag 0
de5c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
de5e : 48              >            pha         ;use stack to load status
de5f : a901            >            lda #1     ;precharge accu
de61 : 28              >            plp
                        
de62 : 3459                     bit zp1,x   ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
de64 : 08              >            php         ;save flags
de65 : c901            >            cmp #1     ;test result
                       >            trap_ne
de67 : f003            >        beq skip2037
                       >        trap            ;failed not equal (non zero)
de69 : 20c7ed          >        jsr report_error
                       >
de6c :                 >skip2037
                       >
de6c : 68              >            pla         ;load status
de6d : 48              >            pha
                       >            cmp_flag fnv
de6e : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
de70 : f003            >        beq skip2040
                       >        trap            ;failed not equal (non zero)
de72 : 20c7ed          >        jsr report_error
                       >
de75 :                 >skip2040
                       >
de75 : 28              >            plp         ;restore status
                        
                        
                                set_a 1,$ff
                       >            load_flag $ff
de76 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
de78 : 48              >            pha         ;use stack to load status
de79 : a901            >            lda #1     ;precharge accu
de7b : 28              >            plp
                        
de7c : 3459                     bit zp1,x   ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
de7e : 08              >            php         ;save flags
de7f : c901            >            cmp #1     ;test result
                       >            trap_ne
de81 : f003            >        beq skip2045
                       >        trap            ;failed not equal (non zero)
de83 : 20c7ed          >        jsr report_error
                       >
de86 :                 >skip2045
                       >
de86 : 68              >            pla         ;load status
de87 : 48              >            pha
                       >            cmp_flag ~fz
de88 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
de8a : f003            >        beq skip2048
                       >        trap            ;failed not equal (non zero)
de8c : 20c7ed          >        jsr report_error
                       >
de8f :                 >skip2048
                       >
de8f : 28              >            plp         ;restore status
                        
de90 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
de91 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
de93 : 48              >            pha         ;use stack to load status
de94 : a901            >            lda #1     ;precharge accu
de96 : 28              >            plp
                        
de97 : 3459                     bit zp1,x   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
de99 : 08              >            php         ;save flags
de9a : c901            >            cmp #1     ;test result
                       >            trap_ne
de9c : f003            >        beq skip2053
                       >        trap            ;failed not equal (non zero)
de9e : 20c7ed          >        jsr report_error
                       >
dea1 :                 >skip2053
                       >
dea1 : 68              >            pla         ;load status
dea2 : 48              >            pha
                       >            cmp_flag ~fv
dea3 : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
dea5 : f003            >        beq skip2056
                       >        trap            ;failed not equal (non zero)
dea7 : 20c7ed          >        jsr report_error
                       >
deaa :                 >skip2056
                       >
deaa : 28              >            plp         ;restore status
                        
deab : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
deac : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
deae : 48              >            pha         ;use stack to load status
deaf : a901            >            lda #1     ;precharge accu
deb1 : 28              >            plp
                        
deb2 : 3459                     bit zp1,x   ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
deb4 : 08              >            php         ;save flags
deb5 : c901            >            cmp #1     ;test result
                       >            trap_ne
deb7 : f003            >        beq skip2061
                       >        trap            ;failed not equal (non zero)
deb9 : 20c7ed          >        jsr report_error
                       >
debc :                 >skip2061
                       >
debc : 68              >            pla         ;load status
debd : 48              >            pha
                       >            cmp_flag ~fnz
debe : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
dec0 : f003            >        beq skip2064
                       >        trap            ;failed not equal (non zero)
dec2 : 20c7ed          >        jsr report_error
                       >
dec5 :                 >skip2064
                       >
dec5 : 28              >            plp         ;restore status
                        
dec6 : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
dec7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
dec9 : 48              >            pha         ;use stack to load status
deca : a9ff            >            lda #$ff     ;precharge accu
decc : 28              >            plp
                        
decd : 3459                     bit zp1,x   ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv
decf : 08              >            php         ;save flags
ded0 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
ded2 : f003            >        beq skip2069
                       >        trap            ;failed not equal (non zero)
ded4 : 20c7ed          >        jsr report_error
                       >
ded7 :                 >skip2069
                       >
ded7 : 68              >            pla         ;load status
ded8 : 48              >            pha
                       >            cmp_flag ~fnv
ded9 : c93f            >            cmp #(~fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
dedb : f003            >        beq skip2072
                       >        trap            ;failed not equal (non zero)
dedd : 20c7ed          >        jsr report_error
                       >
dee0 :                 >skip2072
                       >
dee0 : 28              >            plp         ;restore status
                        
                        
                                set_a $ff,0
                       >            load_flag 0
dee1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
dee3 : 48              >            pha         ;use stack to load status
dee4 : a9ff            >            lda #$ff     ;precharge accu
dee6 : 28              >            plp
                        
dee7 : 3c1032                   bit abs1,x  ;00 - should set Z / clear  NV
                                tst_a $ff,fz
deea : 08              >            php         ;save flags
deeb : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
deed : f003            >        beq skip2077
                       >        trap            ;failed not equal (non zero)
deef : 20c7ed          >        jsr report_error
                       >
def2 :                 >skip2077
                       >
def2 : 68              >            pla         ;load status
def3 : 48              >            pha
                       >            cmp_flag fz
def4 : c932            >            cmp #(fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
def6 : f003            >        beq skip2080
                       >        trap            ;failed not equal (non zero)
def8 : 20c7ed          >        jsr report_error
                       >
defb :                 >skip2080
                       >
defb : 28              >            plp         ;restore status
                        
defc : ca                       dex
                                set_a 1,0
                       >            load_flag 0
defd : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
deff : 48              >            pha         ;use stack to load status
df00 : a901            >            lda #1     ;precharge accu
df02 : 28              >            plp
                        
df03 : 3c1032                   bit abs1,x  ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
df06 : 08              >            php         ;save flags
df07 : c901            >            cmp #1     ;test result
                       >            trap_ne
df09 : f003            >        beq skip2085
                       >        trap            ;failed not equal (non zero)
df0b : 20c7ed          >        jsr report_error
                       >
df0e :                 >skip2085
                       >
df0e : 68              >            pla         ;load status
df0f : 48              >            pha
                       >            cmp_flag fv
df10 : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
df12 : f003            >        beq skip2088
                       >        trap            ;failed not equal (non zero)
df14 : 20c7ed          >        jsr report_error
                       >
df17 :                 >skip2088
                       >
df17 : 28              >            plp         ;restore status
                        
df18 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
df19 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
df1b : 48              >            pha         ;use stack to load status
df1c : a901            >            lda #1     ;precharge accu
df1e : 28              >            plp
                        
df1f : 3c1032                   bit abs1,x  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
df22 : 08              >            php         ;save flags
df23 : c901            >            cmp #1     ;test result
                       >            trap_ne
df25 : f003            >        beq skip2093
                       >        trap            ;failed not equal (non zero)
df27 : 20c7ed          >        jsr report_error
                       >
df2a :                 >skip2093
                       >
df2a : 68              >            pla         ;load status
df2b : 48              >            pha
                       >            cmp_flag fnz
df2c : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
df2e : f003            >        beq skip2096
                       >        trap            ;failed not equal (non zero)
df30 : 20c7ed          >        jsr report_error
                       >
df33 :                 >skip2096
                       >
df33 : 28              >            plp         ;restore status
                        
df34 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
df35 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
df37 : 48              >            pha         ;use stack to load status
df38 : a901            >            lda #1     ;precharge accu
df3a : 28              >            plp
                        
df3b : 3c1032                   bit abs1,x  ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
df3e : 08              >            php         ;save flags
df3f : c901            >            cmp #1     ;test result
                       >            trap_ne
df41 : f003            >        beq skip2101
                       >        trap            ;failed not equal (non zero)
df43 : 20c7ed          >        jsr report_error
                       >
df46 :                 >skip2101
                       >
df46 : 68              >            pla         ;load status
df47 : 48              >            pha
                       >            cmp_flag fnv
df48 : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
df4a : f003            >        beq skip2104
                       >        trap            ;failed not equal (non zero)
df4c : 20c7ed          >        jsr report_error
                       >
df4f :                 >skip2104
                       >
df4f : 28              >            plp         ;restore status
                        
                        
                                set_a 1,$ff
                       >            load_flag $ff
df50 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
df52 : 48              >            pha         ;use stack to load status
df53 : a901            >            lda #1     ;precharge accu
df55 : 28              >            plp
                        
df56 : 3c1032                   bit abs1,x  ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
df59 : 08              >            php         ;save flags
df5a : c901            >            cmp #1     ;test result
                       >            trap_ne
df5c : f003            >        beq skip2109
                       >        trap            ;failed not equal (non zero)
df5e : 20c7ed          >        jsr report_error
                       >
df61 :                 >skip2109
                       >
df61 : 68              >            pla         ;load status
df62 : 48              >            pha
                       >            cmp_flag ~fz
df63 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
df65 : f003            >        beq skip2112
                       >        trap            ;failed not equal (non zero)
df67 : 20c7ed          >        jsr report_error
                       >
df6a :                 >skip2112
                       >
df6a : 28              >            plp         ;restore status
                        
df6b : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
df6c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
df6e : 48              >            pha         ;use stack to load status
df6f : a901            >            lda #1     ;precharge accu
df71 : 28              >            plp
                        
df72 : 3c1032                   bit abs1,x  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
df75 : 08              >            php         ;save flags
df76 : c901            >            cmp #1     ;test result
                       >            trap_ne
df78 : f003            >        beq skip2117
                       >        trap            ;failed not equal (non zero)
df7a : 20c7ed          >        jsr report_error
                       >
df7d :                 >skip2117
                       >
df7d : 68              >            pla         ;load status
df7e : 48              >            pha
                       >            cmp_flag ~fv
df7f : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
df81 : f003            >        beq skip2120
                       >        trap            ;failed not equal (non zero)
df83 : 20c7ed          >        jsr report_error
                       >
df86 :                 >skip2120
                       >
df86 : 28              >            plp         ;restore status
                        
df87 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
df88 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
df8a : 48              >            pha         ;use stack to load status
df8b : a901            >            lda #1     ;precharge accu
df8d : 28              >            plp
                        
df8e : 3c1032                   bit abs1,x  ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
df91 : 08              >            php         ;save flags
df92 : c901            >            cmp #1     ;test result
                       >            trap_ne
df94 : f003            >        beq skip2125
                       >        trap            ;failed not equal (non zero)
df96 : 20c7ed          >        jsr report_error
                       >
df99 :                 >skip2125
                       >
df99 : 68              >            pla         ;load status
df9a : 48              >            pha
                       >            cmp_flag ~fnz
df9b : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
df9d : f003            >        beq skip2128
                       >        trap            ;failed not equal (non zero)
df9f : 20c7ed          >        jsr report_error
                       >
dfa2 :                 >skip2128
                       >
dfa2 : 28              >            plp         ;restore status
                        
dfa3 : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
dfa4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
dfa6 : 48              >            pha         ;use stack to load status
dfa7 : a9ff            >            lda #$ff     ;precharge accu
dfa9 : 28              >            plp
                        
dfaa : 3c1032                   bit abs1,x  ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv
dfad : 08              >            php         ;save flags
dfae : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
dfb0 : f003            >        beq skip2133
                       >        trap            ;failed not equal (non zero)
dfb2 : 20c7ed          >        jsr report_error
                       >
dfb5 :                 >skip2133
                       >
dfb5 : 68              >            pla         ;load status
dfb6 : 48              >            pha
                       >            cmp_flag ~fnv
dfb7 : c93f            >            cmp #(~fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
dfb9 : f003            >        beq skip2136
                       >        trap            ;failed not equal (non zero)
dfbb : 20c7ed          >        jsr report_error
                       >
dfbe :                 >skip2136
                       >
dfbe : 28              >            plp         ;restore status
                        
                        
                                set_a $ff,0
                       >            load_flag 0
dfbf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
dfc1 : 48              >            pha         ;use stack to load status
dfc2 : a9ff            >            lda #$ff     ;precharge accu
dfc4 : 28              >            plp
                        
dfc5 : 8900                     bit #$00    ;00 - should set Z
                                tst_a $ff,fz
dfc7 : 08              >            php         ;save flags
dfc8 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
dfca : f003            >        beq skip2141
                       >        trap            ;failed not equal (non zero)
dfcc : 20c7ed          >        jsr report_error
                       >
dfcf :                 >skip2141
                       >
dfcf : 68              >            pla         ;load status
dfd0 : 48              >            pha
                       >            cmp_flag fz
dfd1 : c932            >            cmp #(fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
dfd3 : f003            >        beq skip2144
                       >        trap            ;failed not equal (non zero)
dfd5 : 20c7ed          >        jsr report_error
                       >
dfd8 :                 >skip2144
                       >
dfd8 : 28              >            plp         ;restore status
                        
dfd9 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
dfda : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
dfdc : 48              >            pha         ;use stack to load status
dfdd : a901            >            lda #1     ;precharge accu
dfdf : 28              >            plp
                        
dfe0 : 8941                     bit #$41    ;41 - should clear Z
                                tst_a 1,0
dfe2 : 08              >            php         ;save flags
dfe3 : c901            >            cmp #1     ;test result
                       >            trap_ne
dfe5 : f003            >        beq skip2149
                       >        trap            ;failed not equal (non zero)
dfe7 : 20c7ed          >        jsr report_error
                       >
dfea :                 >skip2149
                       >
dfea : 68              >            pla         ;load status
dfeb : 48              >            pha
                       >            cmp_flag 0
dfec : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
dfee : f003            >        beq skip2152
                       >        trap            ;failed not equal (non zero)
dff0 : 20c7ed          >        jsr report_error
                       >
dff3 :                 >skip2152
                       >
dff3 : 28              >            plp         ;restore status
                        
                        ; *** DEBUG INFO ***
                        ; if it fails the previous test and your BIT # has set the V flag
                        ; see http://forum.6502.org/viewtopic.php?f=2&t=2241&p=27243#p27239
                        ; why it shouldn't alter N or V flags on a BIT #
dff4 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
dff5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
dff7 : 48              >            pha         ;use stack to load status
dff8 : a901            >            lda #1     ;precharge accu
dffa : 28              >            plp
                        
dffb : 8982                     bit #$82    ;82 - should set Z
                                tst_a 1,fz
dffd : 08              >            php         ;save flags
dffe : c901            >            cmp #1     ;test result
                       >            trap_ne
e000 : f003            >        beq skip2157
                       >        trap            ;failed not equal (non zero)
e002 : 20c7ed          >        jsr report_error
                       >
e005 :                 >skip2157
                       >
e005 : 68              >            pla         ;load status
e006 : 48              >            pha
                       >            cmp_flag fz
e007 : c932            >            cmp #(fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e009 : f003            >        beq skip2160
                       >        trap            ;failed not equal (non zero)
e00b : 20c7ed          >        jsr report_error
                       >
e00e :                 >skip2160
                       >
e00e : 28              >            plp         ;restore status
                        
e00f : ca                       dex
                                set_a 1,0
                       >            load_flag 0
e010 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
e012 : 48              >            pha         ;use stack to load status
e013 : a901            >            lda #1     ;precharge accu
e015 : 28              >            plp
                        
e016 : 89c3                     bit #$c3    ;c3 - should clear Z
                                tst_a 1,0
e018 : 08              >            php         ;save flags
e019 : c901            >            cmp #1     ;test result
                       >            trap_ne
e01b : f003            >        beq skip2165
                       >        trap            ;failed not equal (non zero)
e01d : 20c7ed          >        jsr report_error
                       >
e020 :                 >skip2165
                       >
e020 : 68              >            pla         ;load status
e021 : 48              >            pha
                       >            cmp_flag 0
e022 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e024 : f003            >        beq skip2168
                       >        trap            ;failed not equal (non zero)
e026 : 20c7ed          >        jsr report_error
                       >
e029 :                 >skip2168
                       >
e029 : 28              >            plp         ;restore status
                        
                        
                                set_a 1,$ff
                       >            load_flag $ff
e02a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e02c : 48              >            pha         ;use stack to load status
e02d : a901            >            lda #1     ;precharge accu
e02f : 28              >            plp
                        
e030 : 89c3                     bit #$c3    ;c3 - clear Z
                                tst_a 1,~fz
e032 : 08              >            php         ;save flags
e033 : c901            >            cmp #1     ;test result
                       >            trap_ne
e035 : f003            >        beq skip2173
                       >        trap            ;failed not equal (non zero)
e037 : 20c7ed          >        jsr report_error
                       >
e03a :                 >skip2173
                       >
e03a : 68              >            pla         ;load status
e03b : 48              >            pha
                       >            cmp_flag ~fz
e03c : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e03e : f003            >        beq skip2176
                       >        trap            ;failed not equal (non zero)
e040 : 20c7ed          >        jsr report_error
                       >
e043 :                 >skip2176
                       >
e043 : 28              >            plp         ;restore status
                        
e044 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
e045 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e047 : 48              >            pha         ;use stack to load status
e048 : a901            >            lda #1     ;precharge accu
e04a : 28              >            plp
                        
e04b : 8982                     bit #$82    ;82 - should set Z
                                tst_a 1,$ff
e04d : 08              >            php         ;save flags
e04e : c901            >            cmp #1     ;test result
                       >            trap_ne
e050 : f003            >        beq skip2181
                       >        trap            ;failed not equal (non zero)
e052 : 20c7ed          >        jsr report_error
                       >
e055 :                 >skip2181
                       >
e055 : 68              >            pla         ;load status
e056 : 48              >            pha
                       >            cmp_flag $ff
e057 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e059 : f003            >        beq skip2184
                       >        trap            ;failed not equal (non zero)
e05b : 20c7ed          >        jsr report_error
                       >
e05e :                 >skip2184
                       >
e05e : 28              >            plp         ;restore status
                        
e05f : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
e060 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e062 : 48              >            pha         ;use stack to load status
e063 : a901            >            lda #1     ;precharge accu
e065 : 28              >            plp
                        
e066 : 8941                     bit #$41    ;41 - should clear Z
                                tst_a 1,~fz
e068 : 08              >            php         ;save flags
e069 : c901            >            cmp #1     ;test result
                       >            trap_ne
e06b : f003            >        beq skip2189
                       >        trap            ;failed not equal (non zero)
e06d : 20c7ed          >        jsr report_error
                       >
e070 :                 >skip2189
                       >
e070 : 68              >            pla         ;load status
e071 : 48              >            pha
                       >            cmp_flag ~fz
e072 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e074 : f003            >        beq skip2192
                       >        trap            ;failed not equal (non zero)
e076 : 20c7ed          >        jsr report_error
                       >
e079 :                 >skip2192
                       >
e079 : 28              >            plp         ;restore status
                        
e07a : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
e07b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e07d : 48              >            pha         ;use stack to load status
e07e : a9ff            >            lda #$ff     ;precharge accu
e080 : 28              >            plp
                        
e081 : 8900                     bit #$00   ;00 - should set Z
                                tst_a $ff,$ff
e083 : 08              >            php         ;save flags
e084 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
e086 : f003            >        beq skip2197
                       >        trap            ;failed not equal (non zero)
e088 : 20c7ed          >        jsr report_error
                       >
e08b :                 >skip2197
                       >
e08b : 68              >            pla         ;load status
e08c : 48              >            pha
                       >            cmp_flag $ff
e08d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e08f : f003            >        beq skip2200
                       >        trap            ;failed not equal (non zero)
e091 : 20c7ed          >        jsr report_error
                       >
e094 :                 >skip2200
                       >
e094 : 28              >            plp         ;restore status
                        
                        
e095 : e003                     cpx #3
                                trap_ne     ;x altered during test
e097 : f003            >        beq skip2202
                       >        trap            ;failed not equal (non zero)
e099 : 20c7ed          >        jsr report_error
                       >
e09c :                 >skip2202
                        
e09c : c042                     cpy #$42
                                trap_ne     ;y altered during test
e09e : f003            >        beq skip2204
                       >        trap            ;failed not equal (non zero)
e0a0 : 20c7ed          >        jsr report_error
                       >
e0a3 :                 >skip2204
                        
e0a3 : ba                       tsx
e0a4 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
e0a6 : f003            >        beq skip2206
                       >        trap            ;failed not equal (non zero)
e0a8 : 20c7ed          >        jsr report_error
                       >
e0ab :                 >skip2206
                        
                                next_test
e0ab : ad0232          >            lda test_case   ;previous test
e0ae : c90e            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
e0b0 : f003            >        beq skip2209
                       >        trap            ;failed not equal (non zero)
e0b2 : 20c7ed          >        jsr report_error
                       >
e0b5 :                 >skip2209
                       >
000f =                 >test_num = test_num + 1
e0b5 : a90f            >            lda #test_num   ;*** next tests' number
e0b7 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing TRB, TSB - zp / abs
                        
                        trbt    macro       ;\1 = memory, \2 = flags
                                sty \1
                                load_flag \2
                                pha
                                lda zpt+1
                                plp
                                trb \1
                                php
                                cmp zpt+1
                                trap_ne     ;accu was changed
                                pla
                                pha
                                ora #fz     ;mask Z
                                cmp_flag \2|fz
                                trap_ne     ;flags changed except Z
                                pla
                                and #fz
                                cmp zpt+2
                                trap_ne     ;Z flag invalid
                                lda zpt+3
                                cmp zpt
                                trap_ne     ;altered bits in memory wrong
                                endm
                        
                        tsbt    macro       ;\1 = memory, \2 = flags
                                sty \1
                                load_flag \2
                                pha
                                lda zpt+1
                                plp
                                tsb \1
                                php
                                cmp zpt+1
                                trap_ne     ;accu was changed
                                pla
                                pha
                                ora #fz     ;mask Z
                                cmp_flag \2|fz
                                trap_ne     ;flags changed except Z
                                pla
                                and #fz
                                cmp zpt+2
                                trap_ne     ;Z flag invalid
                                lda zpt+4
                                cmp zpt
                                trap_ne     ;altered bits in memory wrong
                                endm
                        
e0ba : a2c0                     ldx #$c0
e0bc : a000                     ldy #0      ;op1 - memory save
                                ;   zpt     ;op1 - memory modifiable
e0be : 6453                     stz zpt+1   ;op2 - accu
                                ;   zpt+2   ;and flags
                                ;   zpt+3   ;memory after reset
                                ;   zpt+4   ;memory after set
                        
e0c0 : 98               tbt1    tya
e0c1 : 2553                     and zpt+1   ;set Z by anding the 2 operands
e0c3 : 08                       php
e0c4 : 68                       pla
e0c5 : 2902                     and #fz     ;mask Z
e0c7 : 8554                     sta zpt+2
e0c9 : 98                       tya         ;reset op1 bits by op2
e0ca : 49ff                     eor #$ff
e0cc : 0553                     ora zpt+1
e0ce : 49ff                     eor #$ff
e0d0 : 8555                     sta zpt+3
e0d2 : 98                       tya         ;set op1 bits by op2
e0d3 : 0553                     ora zpt+1
e0d5 : 8556                     sta zpt+4
                        
                                trbt zpt,$ff
e0d7 : 8452            >        sty zpt
                       >        load_flag $ff
e0d9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e0db : 48              >        pha
e0dc : a553            >        lda zpt+1
e0de : 28              >        plp
e0df : 1452            >        trb zpt
e0e1 : 08              >        php
e0e2 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
e0e4 : f003            >        beq skip2213
                       >        trap            ;failed not equal (non zero)
e0e6 : 20c7ed          >        jsr report_error
                       >
e0e9 :                 >skip2213
                       >
e0e9 : 68              >        pla
e0ea : 48              >        pha
e0eb : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
e0ed : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
e0ef : f003            >        beq skip2216
                       >        trap            ;failed not equal (non zero)
e0f1 : 20c7ed          >        jsr report_error
                       >
e0f4 :                 >skip2216
                       >
e0f4 : 68              >        pla
e0f5 : 2902            >        and #fz
e0f7 : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
e0f9 : f003            >        beq skip2218
                       >        trap            ;failed not equal (non zero)
e0fb : 20c7ed          >        jsr report_error
                       >
e0fe :                 >skip2218
                       >
e0fe : a555            >        lda zpt+3
e100 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong
e102 : f003            >        beq skip2220
                       >        trap            ;failed not equal (non zero)
e104 : 20c7ed          >        jsr report_error
                       >
e107 :                 >skip2220
                       >
                        
                                trbt abst,$ff
e107 : 8c0532          >        sty abst
                       >        load_flag $ff
e10a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e10c : 48              >        pha
e10d : a553            >        lda zpt+1
e10f : 28              >        plp
e110 : 1c0532          >        trb abst
e113 : 08              >        php
e114 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
e116 : f003            >        beq skip2224
                       >        trap            ;failed not equal (non zero)
e118 : 20c7ed          >        jsr report_error
                       >
e11b :                 >skip2224
                       >
e11b : 68              >        pla
e11c : 48              >        pha
e11d : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
e11f : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
e121 : f003            >        beq skip2227
                       >        trap            ;failed not equal (non zero)
e123 : 20c7ed          >        jsr report_error
                       >
e126 :                 >skip2227
                       >
e126 : 68              >        pla
e127 : 2902            >        and #fz
e129 : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
e12b : f003            >        beq skip2229
                       >        trap            ;failed not equal (non zero)
e12d : 20c7ed          >        jsr report_error
                       >
e130 :                 >skip2229
                       >
e130 : a555            >        lda zpt+3
e132 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong
e134 : f003            >        beq skip2231
                       >        trap            ;failed not equal (non zero)
e136 : 20c7ed          >        jsr report_error
                       >
e139 :                 >skip2231
                       >
                        
                                trbt zpt,0
e139 : 8452            >        sty zpt
                       >        load_flag 0
e13b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
e13d : 48              >        pha
e13e : a553            >        lda zpt+1
e140 : 28              >        plp
e141 : 1452            >        trb zpt
e143 : 08              >        php
e144 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
e146 : f003            >        beq skip2235
                       >        trap            ;failed not equal (non zero)
e148 : 20c7ed          >        jsr report_error
                       >
e14b :                 >skip2235
                       >
e14b : 68              >        pla
e14c : 48              >        pha
e14d : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
e14f : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
e151 : f003            >        beq skip2238
                       >        trap            ;failed not equal (non zero)
e153 : 20c7ed          >        jsr report_error
                       >
e156 :                 >skip2238
                       >
e156 : 68              >        pla
e157 : 2902            >        and #fz
e159 : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
e15b : f003            >        beq skip2240
                       >        trap            ;failed not equal (non zero)
e15d : 20c7ed          >        jsr report_error
                       >
e160 :                 >skip2240
                       >
e160 : a555            >        lda zpt+3
e162 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong
e164 : f003            >        beq skip2242
                       >        trap            ;failed not equal (non zero)
e166 : 20c7ed          >        jsr report_error
                       >
e169 :                 >skip2242
                       >
                        
                                trbt abst,0
e169 : 8c0532          >        sty abst
                       >        load_flag 0
e16c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
e16e : 48              >        pha
e16f : a553            >        lda zpt+1
e171 : 28              >        plp
e172 : 1c0532          >        trb abst
e175 : 08              >        php
e176 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
e178 : f003            >        beq skip2246
                       >        trap            ;failed not equal (non zero)
e17a : 20c7ed          >        jsr report_error
                       >
e17d :                 >skip2246
                       >
e17d : 68              >        pla
e17e : 48              >        pha
e17f : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
e181 : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
e183 : f003            >        beq skip2249
                       >        trap            ;failed not equal (non zero)
e185 : 20c7ed          >        jsr report_error
                       >
e188 :                 >skip2249
                       >
e188 : 68              >        pla
e189 : 2902            >        and #fz
e18b : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
e18d : f003            >        beq skip2251
                       >        trap            ;failed not equal (non zero)
e18f : 20c7ed          >        jsr report_error
                       >
e192 :                 >skip2251
                       >
e192 : a555            >        lda zpt+3
e194 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong
e196 : f003            >        beq skip2253
                       >        trap            ;failed not equal (non zero)
e198 : 20c7ed          >        jsr report_error
                       >
e19b :                 >skip2253
                       >
                        
                                tsbt zpt,$ff
e19b : 8452            >        sty zpt
                       >        load_flag $ff
e19d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e19f : 48              >        pha
e1a0 : a553            >        lda zpt+1
e1a2 : 28              >        plp
e1a3 : 0452            >        tsb zpt
e1a5 : 08              >        php
e1a6 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
e1a8 : f003            >        beq skip2257
                       >        trap            ;failed not equal (non zero)
e1aa : 20c7ed          >        jsr report_error
                       >
e1ad :                 >skip2257
                       >
e1ad : 68              >        pla
e1ae : 48              >        pha
e1af : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
e1b1 : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
e1b3 : f003            >        beq skip2260
                       >        trap            ;failed not equal (non zero)
e1b5 : 20c7ed          >        jsr report_error
                       >
e1b8 :                 >skip2260
                       >
e1b8 : 68              >        pla
e1b9 : 2902            >        and #fz
e1bb : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
e1bd : f003            >        beq skip2262
                       >        trap            ;failed not equal (non zero)
e1bf : 20c7ed          >        jsr report_error
                       >
e1c2 :                 >skip2262
                       >
e1c2 : a556            >        lda zpt+4
e1c4 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong
e1c6 : f003            >        beq skip2264
                       >        trap            ;failed not equal (non zero)
e1c8 : 20c7ed          >        jsr report_error
                       >
e1cb :                 >skip2264
                       >
                        
                                tsbt abst,$ff
e1cb : 8c0532          >        sty abst
                       >        load_flag $ff
e1ce : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e1d0 : 48              >        pha
e1d1 : a553            >        lda zpt+1
e1d3 : 28              >        plp
e1d4 : 0c0532          >        tsb abst
e1d7 : 08              >        php
e1d8 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
e1da : f003            >        beq skip2268
                       >        trap            ;failed not equal (non zero)
e1dc : 20c7ed          >        jsr report_error
                       >
e1df :                 >skip2268
                       >
e1df : 68              >        pla
e1e0 : 48              >        pha
e1e1 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
e1e3 : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
e1e5 : f003            >        beq skip2271
                       >        trap            ;failed not equal (non zero)
e1e7 : 20c7ed          >        jsr report_error
                       >
e1ea :                 >skip2271
                       >
e1ea : 68              >        pla
e1eb : 2902            >        and #fz
e1ed : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
e1ef : f003            >        beq skip2273
                       >        trap            ;failed not equal (non zero)
e1f1 : 20c7ed          >        jsr report_error
                       >
e1f4 :                 >skip2273
                       >
e1f4 : a556            >        lda zpt+4
e1f6 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong
e1f8 : f003            >        beq skip2275
                       >        trap            ;failed not equal (non zero)
e1fa : 20c7ed          >        jsr report_error
                       >
e1fd :                 >skip2275
                       >
                        
                                tsbt zpt,0
e1fd : 8452            >        sty zpt
                       >        load_flag 0
e1ff : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
e201 : 48              >        pha
e202 : a553            >        lda zpt+1
e204 : 28              >        plp
e205 : 0452            >        tsb zpt
e207 : 08              >        php
e208 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
e20a : f003            >        beq skip2279
                       >        trap            ;failed not equal (non zero)
e20c : 20c7ed          >        jsr report_error
                       >
e20f :                 >skip2279
                       >
e20f : 68              >        pla
e210 : 48              >        pha
e211 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
e213 : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
e215 : f003            >        beq skip2282
                       >        trap            ;failed not equal (non zero)
e217 : 20c7ed          >        jsr report_error
                       >
e21a :                 >skip2282
                       >
e21a : 68              >        pla
e21b : 2902            >        and #fz
e21d : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
e21f : f003            >        beq skip2284
                       >        trap            ;failed not equal (non zero)
e221 : 20c7ed          >        jsr report_error
                       >
e224 :                 >skip2284
                       >
e224 : a556            >        lda zpt+4
e226 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong
e228 : f003            >        beq skip2286
                       >        trap            ;failed not equal (non zero)
e22a : 20c7ed          >        jsr report_error
                       >
e22d :                 >skip2286
                       >
                        
                                tsbt abst,0
e22d : 8c0532          >        sty abst
                       >        load_flag 0
e230 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
e232 : 48              >        pha
e233 : a553            >        lda zpt+1
e235 : 28              >        plp
e236 : 0c0532          >        tsb abst
e239 : 08              >        php
e23a : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
e23c : f003            >        beq skip2290
                       >        trap            ;failed not equal (non zero)
e23e : 20c7ed          >        jsr report_error
                       >
e241 :                 >skip2290
                       >
e241 : 68              >        pla
e242 : 48              >        pha
e243 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
e245 : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
e247 : f003            >        beq skip2293
                       >        trap            ;failed not equal (non zero)
e249 : 20c7ed          >        jsr report_error
                       >
e24c :                 >skip2293
                       >
e24c : 68              >        pla
e24d : 2902            >        and #fz
e24f : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
e251 : f003            >        beq skip2295
                       >        trap            ;failed not equal (non zero)
e253 : 20c7ed          >        jsr report_error
                       >
e256 :                 >skip2295
                       >
e256 : a556            >        lda zpt+4
e258 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong
e25a : f003            >        beq skip2297
                       >        trap            ;failed not equal (non zero)
e25c : 20c7ed          >        jsr report_error
                       >
e25f :                 >skip2297
                       >
                        
                        
e25f : c8                       iny         ;iterate op1
e260 : d004                     bne tbt3
e262 : e653                     inc zpt+1   ;iterate op2
e264 : f003                     beq tbt2
e266 : 4cc0e0           tbt3    jmp tbt1
e269 :                  tbt2
e269 : e0c0                     cpx #$c0
                                trap_ne     ;x altered during test
e26b : f003            >        beq skip2299
                       >        trap            ;failed not equal (non zero)
e26d : 20c7ed          >        jsr report_error
                       >
e270 :                 >skip2299
                        
e270 : ba                       tsx
e271 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
e273 : f003            >        beq skip2301
                       >        trap            ;failed not equal (non zero)
e275 : 20c7ed          >        jsr report_error
                       >
e278 :                 >skip2301
                        
                                next_test
e278 : ad0232          >            lda test_case   ;previous test
e27b : c90f            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
e27d : f003            >        beq skip2304
                       >        trap            ;failed not equal (non zero)
e27f : 20c7ed          >        jsr report_error
                       >
e282 :                 >skip2304
                       >
0010 =                 >test_num = test_num + 1
e282 : a910            >            lda #test_num   ;*** next tests' number
e284 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                            if rkwl_wdc_op = 1
                        ; testing RMB, SMB - zp
                        rmbt    macro       ;\1 = bitnum
                                lda #$ff
                                sta zpt
                                set_a $a5,0
                                rmb \1,zpt
                                tst_a $a5,0
                                lda zpt
                                cmp #$ff-(1<<\1)
                                trap_ne     ;wrong bits set or cleared
                                lda #1<<\1
                                sta zpt
                                set_a $5a,$ff
                                rmb \1,zpt
                                tst_a $5a,$ff
                                lda zpt
                                trap_ne     ;wrong bits set or cleared
                                endm
                        smbt    macro       ;\1 = bitnum
                                lda #$ff-(1<<\1)
                                sta zpt
                                set_a $a5,0
                                smb \1,zpt
                                tst_a $a5,0
                                lda zpt
                                cmp #$ff
                                trap_ne     ;wrong bits set or cleared
                                lda #0
                                sta zpt
                                set_a $5a,$ff
                                smb \1,zpt
                                tst_a $5a,$ff
                                lda zpt
                                cmp #1<<\1
                                trap_ne     ;wrong bits set or cleared
                                endm
                        
e287 : a2ba                     ldx #$ba    ;protect x & y
e289 : a0d0                     ldy #$d0
                                rmbt 0
e28b : a9ff            >        lda #$ff
e28d : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
e28f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
e291 : 48              >            pha         ;use stack to load status
e292 : a9a5            >            lda #$a5     ;precharge accu
e294 : 28              >            plp
                       >
e295 : 0752            >        rmb 0,zpt
                       >        tst_a $a5,0
e297 : 08              >            php         ;save flags
e298 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
e29a : f003            >        beq skip2310
                       >        trap            ;failed not equal (non zero)
e29c : 20c7ed          >        jsr report_error
                       >
e29f :                 >skip2310
                       >
e29f : 68              >            pla         ;load status
e2a0 : 48              >            pha
                       >            cmp_flag 0
e2a1 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e2a3 : f003            >        beq skip2313
                       >        trap            ;failed not equal (non zero)
e2a5 : 20c7ed          >        jsr report_error
                       >
e2a8 :                 >skip2313
                       >
e2a8 : 28              >            plp         ;restore status
                       >
e2a9 : a552            >        lda zpt
e2ab : c9fe            >        cmp #$ff-(1<<0)
                       >        trap_ne     ;wrong bits set or cleared
e2ad : f003            >        beq skip2315
                       >        trap            ;failed not equal (non zero)
e2af : 20c7ed          >        jsr report_error
                       >
e2b2 :                 >skip2315
                       >
e2b2 : a901            >        lda #1<<0
e2b4 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
e2b6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e2b8 : 48              >            pha         ;use stack to load status
e2b9 : a95a            >            lda #$5a     ;precharge accu
e2bb : 28              >            plp
                       >
e2bc : 0752            >        rmb 0,zpt
                       >        tst_a $5a,$ff
e2be : 08              >            php         ;save flags
e2bf : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
e2c1 : f003            >        beq skip2320
                       >        trap            ;failed not equal (non zero)
e2c3 : 20c7ed          >        jsr report_error
                       >
e2c6 :                 >skip2320
                       >
e2c6 : 68              >            pla         ;load status
e2c7 : 48              >            pha
                       >            cmp_flag $ff
e2c8 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e2ca : f003            >        beq skip2323
                       >        trap            ;failed not equal (non zero)
e2cc : 20c7ed          >        jsr report_error
                       >
e2cf :                 >skip2323
                       >
e2cf : 28              >            plp         ;restore status
                       >
e2d0 : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
e2d2 : f003            >        beq skip2325
                       >        trap            ;failed not equal (non zero)
e2d4 : 20c7ed          >        jsr report_error
                       >
e2d7 :                 >skip2325
                       >
                        
                                rmbt 1
e2d7 : a9ff            >        lda #$ff
e2d9 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
e2db : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
e2dd : 48              >            pha         ;use stack to load status
e2de : a9a5            >            lda #$a5     ;precharge accu
e2e0 : 28              >            plp
                       >
e2e1 : 1752            >        rmb 1,zpt
                       >        tst_a $a5,0
e2e3 : 08              >            php         ;save flags
e2e4 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
e2e6 : f003            >        beq skip2331
                       >        trap            ;failed not equal (non zero)
e2e8 : 20c7ed          >        jsr report_error
                       >
e2eb :                 >skip2331
                       >
e2eb : 68              >            pla         ;load status
e2ec : 48              >            pha
                       >            cmp_flag 0
e2ed : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e2ef : f003            >        beq skip2334
                       >        trap            ;failed not equal (non zero)
e2f1 : 20c7ed          >        jsr report_error
                       >
e2f4 :                 >skip2334
                       >
e2f4 : 28              >            plp         ;restore status
                       >
e2f5 : a552            >        lda zpt
e2f7 : c9fd            >        cmp #$ff-(1<<1)
                       >        trap_ne     ;wrong bits set or cleared
e2f9 : f003            >        beq skip2336
                       >        trap            ;failed not equal (non zero)
e2fb : 20c7ed          >        jsr report_error
                       >
e2fe :                 >skip2336
                       >
e2fe : a902            >        lda #1<<1
e300 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
e302 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e304 : 48              >            pha         ;use stack to load status
e305 : a95a            >            lda #$5a     ;precharge accu
e307 : 28              >            plp
                       >
e308 : 1752            >        rmb 1,zpt
                       >        tst_a $5a,$ff
e30a : 08              >            php         ;save flags
e30b : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
e30d : f003            >        beq skip2341
                       >        trap            ;failed not equal (non zero)
e30f : 20c7ed          >        jsr report_error
                       >
e312 :                 >skip2341
                       >
e312 : 68              >            pla         ;load status
e313 : 48              >            pha
                       >            cmp_flag $ff
e314 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e316 : f003            >        beq skip2344
                       >        trap            ;failed not equal (non zero)
e318 : 20c7ed          >        jsr report_error
                       >
e31b :                 >skip2344
                       >
e31b : 28              >            plp         ;restore status
                       >
e31c : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
e31e : f003            >        beq skip2346
                       >        trap            ;failed not equal (non zero)
e320 : 20c7ed          >        jsr report_error
                       >
e323 :                 >skip2346
                       >
                        
                                rmbt 2
e323 : a9ff            >        lda #$ff
e325 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
e327 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
e329 : 48              >            pha         ;use stack to load status
e32a : a9a5            >            lda #$a5     ;precharge accu
e32c : 28              >            plp
                       >
e32d : 2752            >        rmb 2,zpt
                       >        tst_a $a5,0
e32f : 08              >            php         ;save flags
e330 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
e332 : f003            >        beq skip2352
                       >        trap            ;failed not equal (non zero)
e334 : 20c7ed          >        jsr report_error
                       >
e337 :                 >skip2352
                       >
e337 : 68              >            pla         ;load status
e338 : 48              >            pha
                       >            cmp_flag 0
e339 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e33b : f003            >        beq skip2355
                       >        trap            ;failed not equal (non zero)
e33d : 20c7ed          >        jsr report_error
                       >
e340 :                 >skip2355
                       >
e340 : 28              >            plp         ;restore status
                       >
e341 : a552            >        lda zpt
e343 : c9fb            >        cmp #$ff-(1<<2)
                       >        trap_ne     ;wrong bits set or cleared
e345 : f003            >        beq skip2357
                       >        trap            ;failed not equal (non zero)
e347 : 20c7ed          >        jsr report_error
                       >
e34a :                 >skip2357
                       >
e34a : a904            >        lda #1<<2
e34c : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
e34e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e350 : 48              >            pha         ;use stack to load status
e351 : a95a            >            lda #$5a     ;precharge accu
e353 : 28              >            plp
                       >
e354 : 2752            >        rmb 2,zpt
                       >        tst_a $5a,$ff
e356 : 08              >            php         ;save flags
e357 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
e359 : f003            >        beq skip2362
                       >        trap            ;failed not equal (non zero)
e35b : 20c7ed          >        jsr report_error
                       >
e35e :                 >skip2362
                       >
e35e : 68              >            pla         ;load status
e35f : 48              >            pha
                       >            cmp_flag $ff
e360 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e362 : f003            >        beq skip2365
                       >        trap            ;failed not equal (non zero)
e364 : 20c7ed          >        jsr report_error
                       >
e367 :                 >skip2365
                       >
e367 : 28              >            plp         ;restore status
                       >
e368 : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
e36a : f003            >        beq skip2367
                       >        trap            ;failed not equal (non zero)
e36c : 20c7ed          >        jsr report_error
                       >
e36f :                 >skip2367
                       >
                        
                                rmbt 3
e36f : a9ff            >        lda #$ff
e371 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
e373 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
e375 : 48              >            pha         ;use stack to load status
e376 : a9a5            >            lda #$a5     ;precharge accu
e378 : 28              >            plp
                       >
e379 : 3752            >        rmb 3,zpt
                       >        tst_a $a5,0
e37b : 08              >            php         ;save flags
e37c : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
e37e : f003            >        beq skip2373
                       >        trap            ;failed not equal (non zero)
e380 : 20c7ed          >        jsr report_error
                       >
e383 :                 >skip2373
                       >
e383 : 68              >            pla         ;load status
e384 : 48              >            pha
                       >            cmp_flag 0
e385 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e387 : f003            >        beq skip2376
                       >        trap            ;failed not equal (non zero)
e389 : 20c7ed          >        jsr report_error
                       >
e38c :                 >skip2376
                       >
e38c : 28              >            plp         ;restore status
                       >
e38d : a552            >        lda zpt
e38f : c9f7            >        cmp #$ff-(1<<3)
                       >        trap_ne     ;wrong bits set or cleared
e391 : f003            >        beq skip2378
                       >        trap            ;failed not equal (non zero)
e393 : 20c7ed          >        jsr report_error
                       >
e396 :                 >skip2378
                       >
e396 : a908            >        lda #1<<3
e398 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
e39a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e39c : 48              >            pha         ;use stack to load status
e39d : a95a            >            lda #$5a     ;precharge accu
e39f : 28              >            plp
                       >
e3a0 : 3752            >        rmb 3,zpt
                       >        tst_a $5a,$ff
e3a2 : 08              >            php         ;save flags
e3a3 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
e3a5 : f003            >        beq skip2383
                       >        trap            ;failed not equal (non zero)
e3a7 : 20c7ed          >        jsr report_error
                       >
e3aa :                 >skip2383
                       >
e3aa : 68              >            pla         ;load status
e3ab : 48              >            pha
                       >            cmp_flag $ff
e3ac : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e3ae : f003            >        beq skip2386
                       >        trap            ;failed not equal (non zero)
e3b0 : 20c7ed          >        jsr report_error
                       >
e3b3 :                 >skip2386
                       >
e3b3 : 28              >            plp         ;restore status
                       >
e3b4 : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
e3b6 : f003            >        beq skip2388
                       >        trap            ;failed not equal (non zero)
e3b8 : 20c7ed          >        jsr report_error
                       >
e3bb :                 >skip2388
                       >
                        
                                rmbt 4
e3bb : a9ff            >        lda #$ff
e3bd : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
e3bf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
e3c1 : 48              >            pha         ;use stack to load status
e3c2 : a9a5            >            lda #$a5     ;precharge accu
e3c4 : 28              >            plp
                       >
e3c5 : 4752            >        rmb 4,zpt
                       >        tst_a $a5,0
e3c7 : 08              >            php         ;save flags
e3c8 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
e3ca : f003            >        beq skip2394
                       >        trap            ;failed not equal (non zero)
e3cc : 20c7ed          >        jsr report_error
                       >
e3cf :                 >skip2394
                       >
e3cf : 68              >            pla         ;load status
e3d0 : 48              >            pha
                       >            cmp_flag 0
e3d1 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e3d3 : f003            >        beq skip2397
                       >        trap            ;failed not equal (non zero)
e3d5 : 20c7ed          >        jsr report_error
                       >
e3d8 :                 >skip2397
                       >
e3d8 : 28              >            plp         ;restore status
                       >
e3d9 : a552            >        lda zpt
e3db : c9ef            >        cmp #$ff-(1<<4)
                       >        trap_ne     ;wrong bits set or cleared
e3dd : f003            >        beq skip2399
                       >        trap            ;failed not equal (non zero)
e3df : 20c7ed          >        jsr report_error
                       >
e3e2 :                 >skip2399
                       >
e3e2 : a910            >        lda #1<<4
e3e4 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
e3e6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e3e8 : 48              >            pha         ;use stack to load status
e3e9 : a95a            >            lda #$5a     ;precharge accu
e3eb : 28              >            plp
                       >
e3ec : 4752            >        rmb 4,zpt
                       >        tst_a $5a,$ff
e3ee : 08              >            php         ;save flags
e3ef : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
e3f1 : f003            >        beq skip2404
                       >        trap            ;failed not equal (non zero)
e3f3 : 20c7ed          >        jsr report_error
                       >
e3f6 :                 >skip2404
                       >
e3f6 : 68              >            pla         ;load status
e3f7 : 48              >            pha
                       >            cmp_flag $ff
e3f8 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e3fa : f003            >        beq skip2407
                       >        trap            ;failed not equal (non zero)
e3fc : 20c7ed          >        jsr report_error
                       >
e3ff :                 >skip2407
                       >
e3ff : 28              >            plp         ;restore status
                       >
e400 : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
e402 : f003            >        beq skip2409
                       >        trap            ;failed not equal (non zero)
e404 : 20c7ed          >        jsr report_error
                       >
e407 :                 >skip2409
                       >
                        
                                rmbt 5
e407 : a9ff            >        lda #$ff
e409 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
e40b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
e40d : 48              >            pha         ;use stack to load status
e40e : a9a5            >            lda #$a5     ;precharge accu
e410 : 28              >            plp
                       >
e411 : 5752            >        rmb 5,zpt
                       >        tst_a $a5,0
e413 : 08              >            php         ;save flags
e414 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
e416 : f003            >        beq skip2415
                       >        trap            ;failed not equal (non zero)
e418 : 20c7ed          >        jsr report_error
                       >
e41b :                 >skip2415
                       >
e41b : 68              >            pla         ;load status
e41c : 48              >            pha
                       >            cmp_flag 0
e41d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e41f : f003            >        beq skip2418
                       >        trap            ;failed not equal (non zero)
e421 : 20c7ed          >        jsr report_error
                       >
e424 :                 >skip2418
                       >
e424 : 28              >            plp         ;restore status
                       >
e425 : a552            >        lda zpt
e427 : c9df            >        cmp #$ff-(1<<5)
                       >        trap_ne     ;wrong bits set or cleared
e429 : f003            >        beq skip2420
                       >        trap            ;failed not equal (non zero)
e42b : 20c7ed          >        jsr report_error
                       >
e42e :                 >skip2420
                       >
e42e : a920            >        lda #1<<5
e430 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
e432 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e434 : 48              >            pha         ;use stack to load status
e435 : a95a            >            lda #$5a     ;precharge accu
e437 : 28              >            plp
                       >
e438 : 5752            >        rmb 5,zpt
                       >        tst_a $5a,$ff
e43a : 08              >            php         ;save flags
e43b : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
e43d : f003            >        beq skip2425
                       >        trap            ;failed not equal (non zero)
e43f : 20c7ed          >        jsr report_error
                       >
e442 :                 >skip2425
                       >
e442 : 68              >            pla         ;load status
e443 : 48              >            pha
                       >            cmp_flag $ff
e444 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e446 : f003            >        beq skip2428
                       >        trap            ;failed not equal (non zero)
e448 : 20c7ed          >        jsr report_error
                       >
e44b :                 >skip2428
                       >
e44b : 28              >            plp         ;restore status
                       >
e44c : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
e44e : f003            >        beq skip2430
                       >        trap            ;failed not equal (non zero)
e450 : 20c7ed          >        jsr report_error
                       >
e453 :                 >skip2430
                       >
                        
                                rmbt 6
e453 : a9ff            >        lda #$ff
e455 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
e457 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
e459 : 48              >            pha         ;use stack to load status
e45a : a9a5            >            lda #$a5     ;precharge accu
e45c : 28              >            plp
                       >
e45d : 6752            >        rmb 6,zpt
                       >        tst_a $a5,0
e45f : 08              >            php         ;save flags
e460 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
e462 : f003            >        beq skip2436
                       >        trap            ;failed not equal (non zero)
e464 : 20c7ed          >        jsr report_error
                       >
e467 :                 >skip2436
                       >
e467 : 68              >            pla         ;load status
e468 : 48              >            pha
                       >            cmp_flag 0
e469 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e46b : f003            >        beq skip2439
                       >        trap            ;failed not equal (non zero)
e46d : 20c7ed          >        jsr report_error
                       >
e470 :                 >skip2439
                       >
e470 : 28              >            plp         ;restore status
                       >
e471 : a552            >        lda zpt
e473 : c9bf            >        cmp #$ff-(1<<6)
                       >        trap_ne     ;wrong bits set or cleared
e475 : f003            >        beq skip2441
                       >        trap            ;failed not equal (non zero)
e477 : 20c7ed          >        jsr report_error
                       >
e47a :                 >skip2441
                       >
e47a : a940            >        lda #1<<6
e47c : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
e47e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e480 : 48              >            pha         ;use stack to load status
e481 : a95a            >            lda #$5a     ;precharge accu
e483 : 28              >            plp
                       >
e484 : 6752            >        rmb 6,zpt
                       >        tst_a $5a,$ff
e486 : 08              >            php         ;save flags
e487 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
e489 : f003            >        beq skip2446
                       >        trap            ;failed not equal (non zero)
e48b : 20c7ed          >        jsr report_error
                       >
e48e :                 >skip2446
                       >
e48e : 68              >            pla         ;load status
e48f : 48              >            pha
                       >            cmp_flag $ff
e490 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e492 : f003            >        beq skip2449
                       >        trap            ;failed not equal (non zero)
e494 : 20c7ed          >        jsr report_error
                       >
e497 :                 >skip2449
                       >
e497 : 28              >            plp         ;restore status
                       >
e498 : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
e49a : f003            >        beq skip2451
                       >        trap            ;failed not equal (non zero)
e49c : 20c7ed          >        jsr report_error
                       >
e49f :                 >skip2451
                       >
                        
                                rmbt 7
e49f : a9ff            >        lda #$ff
e4a1 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
e4a3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
e4a5 : 48              >            pha         ;use stack to load status
e4a6 : a9a5            >            lda #$a5     ;precharge accu
e4a8 : 28              >            plp
                       >
e4a9 : 7752            >        rmb 7,zpt
                       >        tst_a $a5,0
e4ab : 08              >            php         ;save flags
e4ac : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
e4ae : f003            >        beq skip2457
                       >        trap            ;failed not equal (non zero)
e4b0 : 20c7ed          >        jsr report_error
                       >
e4b3 :                 >skip2457
                       >
e4b3 : 68              >            pla         ;load status
e4b4 : 48              >            pha
                       >            cmp_flag 0
e4b5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e4b7 : f003            >        beq skip2460
                       >        trap            ;failed not equal (non zero)
e4b9 : 20c7ed          >        jsr report_error
                       >
e4bc :                 >skip2460
                       >
e4bc : 28              >            plp         ;restore status
                       >
e4bd : a552            >        lda zpt
e4bf : c97f            >        cmp #$ff-(1<<7)
                       >        trap_ne     ;wrong bits set or cleared
e4c1 : f003            >        beq skip2462
                       >        trap            ;failed not equal (non zero)
e4c3 : 20c7ed          >        jsr report_error
                       >
e4c6 :                 >skip2462
                       >
e4c6 : a980            >        lda #1<<7
e4c8 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
e4ca : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e4cc : 48              >            pha         ;use stack to load status
e4cd : a95a            >            lda #$5a     ;precharge accu
e4cf : 28              >            plp
                       >
e4d0 : 7752            >        rmb 7,zpt
                       >        tst_a $5a,$ff
e4d2 : 08              >            php         ;save flags
e4d3 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
e4d5 : f003            >        beq skip2467
                       >        trap            ;failed not equal (non zero)
e4d7 : 20c7ed          >        jsr report_error
                       >
e4da :                 >skip2467
                       >
e4da : 68              >            pla         ;load status
e4db : 48              >            pha
                       >            cmp_flag $ff
e4dc : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e4de : f003            >        beq skip2470
                       >        trap            ;failed not equal (non zero)
e4e0 : 20c7ed          >        jsr report_error
                       >
e4e3 :                 >skip2470
                       >
e4e3 : 28              >            plp         ;restore status
                       >
e4e4 : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
e4e6 : f003            >        beq skip2472
                       >        trap            ;failed not equal (non zero)
e4e8 : 20c7ed          >        jsr report_error
                       >
e4eb :                 >skip2472
                       >
                        
                                smbt 0
e4eb : a9fe            >        lda #$ff-(1<<0)
e4ed : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
e4ef : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
e4f1 : 48              >            pha         ;use stack to load status
e4f2 : a9a5            >            lda #$a5     ;precharge accu
e4f4 : 28              >            plp
                       >
e4f5 : 8752            >        smb 0,zpt
                       >        tst_a $a5,0
e4f7 : 08              >            php         ;save flags
e4f8 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
e4fa : f003            >        beq skip2478
                       >        trap            ;failed not equal (non zero)
e4fc : 20c7ed          >        jsr report_error
                       >
e4ff :                 >skip2478
                       >
e4ff : 68              >            pla         ;load status
e500 : 48              >            pha
                       >            cmp_flag 0
e501 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e503 : f003            >        beq skip2481
                       >        trap            ;failed not equal (non zero)
e505 : 20c7ed          >        jsr report_error
                       >
e508 :                 >skip2481
                       >
e508 : 28              >            plp         ;restore status
                       >
e509 : a552            >        lda zpt
e50b : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
e50d : f003            >        beq skip2483
                       >        trap            ;failed not equal (non zero)
e50f : 20c7ed          >        jsr report_error
                       >
e512 :                 >skip2483
                       >
e512 : a900            >        lda #0
e514 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
e516 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e518 : 48              >            pha         ;use stack to load status
e519 : a95a            >            lda #$5a     ;precharge accu
e51b : 28              >            plp
                       >
e51c : 8752            >        smb 0,zpt
                       >        tst_a $5a,$ff
e51e : 08              >            php         ;save flags
e51f : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
e521 : f003            >        beq skip2488
                       >        trap            ;failed not equal (non zero)
e523 : 20c7ed          >        jsr report_error
                       >
e526 :                 >skip2488
                       >
e526 : 68              >            pla         ;load status
e527 : 48              >            pha
                       >            cmp_flag $ff
e528 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e52a : f003            >        beq skip2491
                       >        trap            ;failed not equal (non zero)
e52c : 20c7ed          >        jsr report_error
                       >
e52f :                 >skip2491
                       >
e52f : 28              >            plp         ;restore status
                       >
e530 : a552            >        lda zpt
e532 : c901            >        cmp #1<<0
                       >        trap_ne     ;wrong bits set or cleared
e534 : f003            >        beq skip2493
                       >        trap            ;failed not equal (non zero)
e536 : 20c7ed          >        jsr report_error
                       >
e539 :                 >skip2493
                       >
                        
                                smbt 1
e539 : a9fd            >        lda #$ff-(1<<1)
e53b : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
e53d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
e53f : 48              >            pha         ;use stack to load status
e540 : a9a5            >            lda #$a5     ;precharge accu
e542 : 28              >            plp
                       >
e543 : 9752            >        smb 1,zpt
                       >        tst_a $a5,0
e545 : 08              >            php         ;save flags
e546 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
e548 : f003            >        beq skip2499
                       >        trap            ;failed not equal (non zero)
e54a : 20c7ed          >        jsr report_error
                       >
e54d :                 >skip2499
                       >
e54d : 68              >            pla         ;load status
e54e : 48              >            pha
                       >            cmp_flag 0
e54f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e551 : f003            >        beq skip2502
                       >        trap            ;failed not equal (non zero)
e553 : 20c7ed          >        jsr report_error
                       >
e556 :                 >skip2502
                       >
e556 : 28              >            plp         ;restore status
                       >
e557 : a552            >        lda zpt
e559 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
e55b : f003            >        beq skip2504
                       >        trap            ;failed not equal (non zero)
e55d : 20c7ed          >        jsr report_error
                       >
e560 :                 >skip2504
                       >
e560 : a900            >        lda #0
e562 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
e564 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e566 : 48              >            pha         ;use stack to load status
e567 : a95a            >            lda #$5a     ;precharge accu
e569 : 28              >            plp
                       >
e56a : 9752            >        smb 1,zpt
                       >        tst_a $5a,$ff
e56c : 08              >            php         ;save flags
e56d : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
e56f : f003            >        beq skip2509
                       >        trap            ;failed not equal (non zero)
e571 : 20c7ed          >        jsr report_error
                       >
e574 :                 >skip2509
                       >
e574 : 68              >            pla         ;load status
e575 : 48              >            pha
                       >            cmp_flag $ff
e576 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e578 : f003            >        beq skip2512
                       >        trap            ;failed not equal (non zero)
e57a : 20c7ed          >        jsr report_error
                       >
e57d :                 >skip2512
                       >
e57d : 28              >            plp         ;restore status
                       >
e57e : a552            >        lda zpt
e580 : c902            >        cmp #1<<1
                       >        trap_ne     ;wrong bits set or cleared
e582 : f003            >        beq skip2514
                       >        trap            ;failed not equal (non zero)
e584 : 20c7ed          >        jsr report_error
                       >
e587 :                 >skip2514
                       >
                        
                                smbt 2
e587 : a9fb            >        lda #$ff-(1<<2)
e589 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
e58b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
e58d : 48              >            pha         ;use stack to load status
e58e : a9a5            >            lda #$a5     ;precharge accu
e590 : 28              >            plp
                       >
e591 : a752            >        smb 2,zpt
                       >        tst_a $a5,0
e593 : 08              >            php         ;save flags
e594 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
e596 : f003            >        beq skip2520
                       >        trap            ;failed not equal (non zero)
e598 : 20c7ed          >        jsr report_error
                       >
e59b :                 >skip2520
                       >
e59b : 68              >            pla         ;load status
e59c : 48              >            pha
                       >            cmp_flag 0
e59d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e59f : f003            >        beq skip2523
                       >        trap            ;failed not equal (non zero)
e5a1 : 20c7ed          >        jsr report_error
                       >
e5a4 :                 >skip2523
                       >
e5a4 : 28              >            plp         ;restore status
                       >
e5a5 : a552            >        lda zpt
e5a7 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
e5a9 : f003            >        beq skip2525
                       >        trap            ;failed not equal (non zero)
e5ab : 20c7ed          >        jsr report_error
                       >
e5ae :                 >skip2525
                       >
e5ae : a900            >        lda #0
e5b0 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
e5b2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e5b4 : 48              >            pha         ;use stack to load status
e5b5 : a95a            >            lda #$5a     ;precharge accu
e5b7 : 28              >            plp
                       >
e5b8 : a752            >        smb 2,zpt
                       >        tst_a $5a,$ff
e5ba : 08              >            php         ;save flags
e5bb : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
e5bd : f003            >        beq skip2530
                       >        trap            ;failed not equal (non zero)
e5bf : 20c7ed          >        jsr report_error
                       >
e5c2 :                 >skip2530
                       >
e5c2 : 68              >            pla         ;load status
e5c3 : 48              >            pha
                       >            cmp_flag $ff
e5c4 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e5c6 : f003            >        beq skip2533
                       >        trap            ;failed not equal (non zero)
e5c8 : 20c7ed          >        jsr report_error
                       >
e5cb :                 >skip2533
                       >
e5cb : 28              >            plp         ;restore status
                       >
e5cc : a552            >        lda zpt
e5ce : c904            >        cmp #1<<2
                       >        trap_ne     ;wrong bits set or cleared
e5d0 : f003            >        beq skip2535
                       >        trap            ;failed not equal (non zero)
e5d2 : 20c7ed          >        jsr report_error
                       >
e5d5 :                 >skip2535
                       >
                        
                                smbt 3
e5d5 : a9f7            >        lda #$ff-(1<<3)
e5d7 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
e5d9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
e5db : 48              >            pha         ;use stack to load status
e5dc : a9a5            >            lda #$a5     ;precharge accu
e5de : 28              >            plp
                       >
e5df : b752            >        smb 3,zpt
                       >        tst_a $a5,0
e5e1 : 08              >            php         ;save flags
e5e2 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
e5e4 : f003            >        beq skip2541
                       >        trap            ;failed not equal (non zero)
e5e6 : 20c7ed          >        jsr report_error
                       >
e5e9 :                 >skip2541
                       >
e5e9 : 68              >            pla         ;load status
e5ea : 48              >            pha
                       >            cmp_flag 0
e5eb : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e5ed : f003            >        beq skip2544
                       >        trap            ;failed not equal (non zero)
e5ef : 20c7ed          >        jsr report_error
                       >
e5f2 :                 >skip2544
                       >
e5f2 : 28              >            plp         ;restore status
                       >
e5f3 : a552            >        lda zpt
e5f5 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
e5f7 : f003            >        beq skip2546
                       >        trap            ;failed not equal (non zero)
e5f9 : 20c7ed          >        jsr report_error
                       >
e5fc :                 >skip2546
                       >
e5fc : a900            >        lda #0
e5fe : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
e600 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e602 : 48              >            pha         ;use stack to load status
e603 : a95a            >            lda #$5a     ;precharge accu
e605 : 28              >            plp
                       >
e606 : b752            >        smb 3,zpt
                       >        tst_a $5a,$ff
e608 : 08              >            php         ;save flags
e609 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
e60b : f003            >        beq skip2551
                       >        trap            ;failed not equal (non zero)
e60d : 20c7ed          >        jsr report_error
                       >
e610 :                 >skip2551
                       >
e610 : 68              >            pla         ;load status
e611 : 48              >            pha
                       >            cmp_flag $ff
e612 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e614 : f003            >        beq skip2554
                       >        trap            ;failed not equal (non zero)
e616 : 20c7ed          >        jsr report_error
                       >
e619 :                 >skip2554
                       >
e619 : 28              >            plp         ;restore status
                       >
e61a : a552            >        lda zpt
e61c : c908            >        cmp #1<<3
                       >        trap_ne     ;wrong bits set or cleared
e61e : f003            >        beq skip2556
                       >        trap            ;failed not equal (non zero)
e620 : 20c7ed          >        jsr report_error
                       >
e623 :                 >skip2556
                       >
                        
                                smbt 4
e623 : a9ef            >        lda #$ff-(1<<4)
e625 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
e627 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
e629 : 48              >            pha         ;use stack to load status
e62a : a9a5            >            lda #$a5     ;precharge accu
e62c : 28              >            plp
                       >
e62d : c752            >        smb 4,zpt
                       >        tst_a $a5,0
e62f : 08              >            php         ;save flags
e630 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
e632 : f003            >        beq skip2562
                       >        trap            ;failed not equal (non zero)
e634 : 20c7ed          >        jsr report_error
                       >
e637 :                 >skip2562
                       >
e637 : 68              >            pla         ;load status
e638 : 48              >            pha
                       >            cmp_flag 0
e639 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e63b : f003            >        beq skip2565
                       >        trap            ;failed not equal (non zero)
e63d : 20c7ed          >        jsr report_error
                       >
e640 :                 >skip2565
                       >
e640 : 28              >            plp         ;restore status
                       >
e641 : a552            >        lda zpt
e643 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
e645 : f003            >        beq skip2567
                       >        trap            ;failed not equal (non zero)
e647 : 20c7ed          >        jsr report_error
                       >
e64a :                 >skip2567
                       >
e64a : a900            >        lda #0
e64c : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
e64e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e650 : 48              >            pha         ;use stack to load status
e651 : a95a            >            lda #$5a     ;precharge accu
e653 : 28              >            plp
                       >
e654 : c752            >        smb 4,zpt
                       >        tst_a $5a,$ff
e656 : 08              >            php         ;save flags
e657 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
e659 : f003            >        beq skip2572
                       >        trap            ;failed not equal (non zero)
e65b : 20c7ed          >        jsr report_error
                       >
e65e :                 >skip2572
                       >
e65e : 68              >            pla         ;load status
e65f : 48              >            pha
                       >            cmp_flag $ff
e660 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e662 : f003            >        beq skip2575
                       >        trap            ;failed not equal (non zero)
e664 : 20c7ed          >        jsr report_error
                       >
e667 :                 >skip2575
                       >
e667 : 28              >            plp         ;restore status
                       >
e668 : a552            >        lda zpt
e66a : c910            >        cmp #1<<4
                       >        trap_ne     ;wrong bits set or cleared
e66c : f003            >        beq skip2577
                       >        trap            ;failed not equal (non zero)
e66e : 20c7ed          >        jsr report_error
                       >
e671 :                 >skip2577
                       >
                        
                                smbt 5
e671 : a9df            >        lda #$ff-(1<<5)
e673 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
e675 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
e677 : 48              >            pha         ;use stack to load status
e678 : a9a5            >            lda #$a5     ;precharge accu
e67a : 28              >            plp
                       >
e67b : d752            >        smb 5,zpt
                       >        tst_a $a5,0
e67d : 08              >            php         ;save flags
e67e : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
e680 : f003            >        beq skip2583
                       >        trap            ;failed not equal (non zero)
e682 : 20c7ed          >        jsr report_error
                       >
e685 :                 >skip2583
                       >
e685 : 68              >            pla         ;load status
e686 : 48              >            pha
                       >            cmp_flag 0
e687 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e689 : f003            >        beq skip2586
                       >        trap            ;failed not equal (non zero)
e68b : 20c7ed          >        jsr report_error
                       >
e68e :                 >skip2586
                       >
e68e : 28              >            plp         ;restore status
                       >
e68f : a552            >        lda zpt
e691 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
e693 : f003            >        beq skip2588
                       >        trap            ;failed not equal (non zero)
e695 : 20c7ed          >        jsr report_error
                       >
e698 :                 >skip2588
                       >
e698 : a900            >        lda #0
e69a : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
e69c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e69e : 48              >            pha         ;use stack to load status
e69f : a95a            >            lda #$5a     ;precharge accu
e6a1 : 28              >            plp
                       >
e6a2 : d752            >        smb 5,zpt
                       >        tst_a $5a,$ff
e6a4 : 08              >            php         ;save flags
e6a5 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
e6a7 : f003            >        beq skip2593
                       >        trap            ;failed not equal (non zero)
e6a9 : 20c7ed          >        jsr report_error
                       >
e6ac :                 >skip2593
                       >
e6ac : 68              >            pla         ;load status
e6ad : 48              >            pha
                       >            cmp_flag $ff
e6ae : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e6b0 : f003            >        beq skip2596
                       >        trap            ;failed not equal (non zero)
e6b2 : 20c7ed          >        jsr report_error
                       >
e6b5 :                 >skip2596
                       >
e6b5 : 28              >            plp         ;restore status
                       >
e6b6 : a552            >        lda zpt
e6b8 : c920            >        cmp #1<<5
                       >        trap_ne     ;wrong bits set or cleared
e6ba : f003            >        beq skip2598
                       >        trap            ;failed not equal (non zero)
e6bc : 20c7ed          >        jsr report_error
                       >
e6bf :                 >skip2598
                       >
                        
                                smbt 6
e6bf : a9bf            >        lda #$ff-(1<<6)
e6c1 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
e6c3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
e6c5 : 48              >            pha         ;use stack to load status
e6c6 : a9a5            >            lda #$a5     ;precharge accu
e6c8 : 28              >            plp
                       >
e6c9 : e752            >        smb 6,zpt
                       >        tst_a $a5,0
e6cb : 08              >            php         ;save flags
e6cc : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
e6ce : f003            >        beq skip2604
                       >        trap            ;failed not equal (non zero)
e6d0 : 20c7ed          >        jsr report_error
                       >
e6d3 :                 >skip2604
                       >
e6d3 : 68              >            pla         ;load status
e6d4 : 48              >            pha
                       >            cmp_flag 0
e6d5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e6d7 : f003            >        beq skip2607
                       >        trap            ;failed not equal (non zero)
e6d9 : 20c7ed          >        jsr report_error
                       >
e6dc :                 >skip2607
                       >
e6dc : 28              >            plp         ;restore status
                       >
e6dd : a552            >        lda zpt
e6df : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
e6e1 : f003            >        beq skip2609
                       >        trap            ;failed not equal (non zero)
e6e3 : 20c7ed          >        jsr report_error
                       >
e6e6 :                 >skip2609
                       >
e6e6 : a900            >        lda #0
e6e8 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
e6ea : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e6ec : 48              >            pha         ;use stack to load status
e6ed : a95a            >            lda #$5a     ;precharge accu
e6ef : 28              >            plp
                       >
e6f0 : e752            >        smb 6,zpt
                       >        tst_a $5a,$ff
e6f2 : 08              >            php         ;save flags
e6f3 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
e6f5 : f003            >        beq skip2614
                       >        trap            ;failed not equal (non zero)
e6f7 : 20c7ed          >        jsr report_error
                       >
e6fa :                 >skip2614
                       >
e6fa : 68              >            pla         ;load status
e6fb : 48              >            pha
                       >            cmp_flag $ff
e6fc : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e6fe : f003            >        beq skip2617
                       >        trap            ;failed not equal (non zero)
e700 : 20c7ed          >        jsr report_error
                       >
e703 :                 >skip2617
                       >
e703 : 28              >            plp         ;restore status
                       >
e704 : a552            >        lda zpt
e706 : c940            >        cmp #1<<6
                       >        trap_ne     ;wrong bits set or cleared
e708 : f003            >        beq skip2619
                       >        trap            ;failed not equal (non zero)
e70a : 20c7ed          >        jsr report_error
                       >
e70d :                 >skip2619
                       >
                        
                                smbt 7
e70d : a97f            >        lda #$ff-(1<<7)
e70f : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
e711 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
e713 : 48              >            pha         ;use stack to load status
e714 : a9a5            >            lda #$a5     ;precharge accu
e716 : 28              >            plp
                       >
e717 : f752            >        smb 7,zpt
                       >        tst_a $a5,0
e719 : 08              >            php         ;save flags
e71a : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
e71c : f003            >        beq skip2625
                       >        trap            ;failed not equal (non zero)
e71e : 20c7ed          >        jsr report_error
                       >
e721 :                 >skip2625
                       >
e721 : 68              >            pla         ;load status
e722 : 48              >            pha
                       >            cmp_flag 0
e723 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e725 : f003            >        beq skip2628
                       >        trap            ;failed not equal (non zero)
e727 : 20c7ed          >        jsr report_error
                       >
e72a :                 >skip2628
                       >
e72a : 28              >            plp         ;restore status
                       >
e72b : a552            >        lda zpt
e72d : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
e72f : f003            >        beq skip2630
                       >        trap            ;failed not equal (non zero)
e731 : 20c7ed          >        jsr report_error
                       >
e734 :                 >skip2630
                       >
e734 : a900            >        lda #0
e736 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
e738 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e73a : 48              >            pha         ;use stack to load status
e73b : a95a            >            lda #$5a     ;precharge accu
e73d : 28              >            plp
                       >
e73e : f752            >        smb 7,zpt
                       >        tst_a $5a,$ff
e740 : 08              >            php         ;save flags
e741 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
e743 : f003            >        beq skip2635
                       >        trap            ;failed not equal (non zero)
e745 : 20c7ed          >        jsr report_error
                       >
e748 :                 >skip2635
                       >
e748 : 68              >            pla         ;load status
e749 : 48              >            pha
                       >            cmp_flag $ff
e74a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e74c : f003            >        beq skip2638
                       >        trap            ;failed not equal (non zero)
e74e : 20c7ed          >        jsr report_error
                       >
e751 :                 >skip2638
                       >
e751 : 28              >            plp         ;restore status
                       >
e752 : a552            >        lda zpt
e754 : c980            >        cmp #1<<7
                       >        trap_ne     ;wrong bits set or cleared
e756 : f003            >        beq skip2640
                       >        trap            ;failed not equal (non zero)
e758 : 20c7ed          >        jsr report_error
                       >
e75b :                 >skip2640
                       >
                        
e75b : e0ba                     cpx #$ba
                                trap_ne     ;x altered during test
e75d : f003            >        beq skip2642
                       >        trap            ;failed not equal (non zero)
e75f : 20c7ed          >        jsr report_error
                       >
e762 :                 >skip2642
                        
e762 : c0d0                     cpy #$d0
                                trap_ne     ;y altered during test
e764 : f003            >        beq skip2644
                       >        trap            ;failed not equal (non zero)
e766 : 20c7ed          >        jsr report_error
                       >
e769 :                 >skip2644
                        
e769 : ba                       tsx
e76a : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
e76c : f003            >        beq skip2646
                       >        trap            ;failed not equal (non zero)
e76e : 20c7ed          >        jsr report_error
                       >
e771 :                 >skip2646
                        
                                next_test
e771 : ad0232          >            lda test_case   ;previous test
e774 : c910            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
e776 : f003            >        beq skip2649
                       >        trap            ;failed not equal (non zero)
e778 : 20c7ed          >        jsr report_error
                       >
e77b :                 >skip2649
                       >
0011 =                 >test_num = test_num + 1
e77b : a911            >            lda #test_num   ;*** next tests' number
e77d : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                            endif
                        
                        ; testing CMP - (zp)
e780 : a2de                     ldx #$de    ;protect x & y
e782 : a0ad                     ldy #$ad
                                set_a $80,0
                       >            load_flag 0
e784 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
e786 : 48              >            pha         ;use stack to load status
e787 : a980            >            lda #$80     ;precharge accu
e789 : 28              >            plp
                        
e78a : d272                     cmp (ind1+8)
                                tst_a $80,fc
e78c : 08              >            php         ;save flags
e78d : c980            >            cmp #$80     ;test result
                       >            trap_ne
e78f : f003            >        beq skip2654
                       >        trap            ;failed not equal (non zero)
e791 : 20c7ed          >        jsr report_error
                       >
e794 :                 >skip2654
                       >
e794 : 68              >            pla         ;load status
e795 : 48              >            pha
                       >            cmp_flag fc
e796 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e798 : f003            >        beq skip2657
                       >        trap            ;failed not equal (non zero)
e79a : 20c7ed          >        jsr report_error
                       >
e79d :                 >skip2657
                       >
e79d : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
e79e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
e7a0 : 48              >            pha         ;use stack to load status
e7a1 : a97f            >            lda #$7f     ;precharge accu
e7a3 : 28              >            plp
                        
e7a4 : d272                     cmp (ind1+8)
                                tst_a $7f,fzc
e7a6 : 08              >            php         ;save flags
e7a7 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
e7a9 : f003            >        beq skip2662
                       >        trap            ;failed not equal (non zero)
e7ab : 20c7ed          >        jsr report_error
                       >
e7ae :                 >skip2662
                       >
e7ae : 68              >            pla         ;load status
e7af : 48              >            pha
                       >            cmp_flag fzc
e7b0 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e7b2 : f003            >        beq skip2665
                       >        trap            ;failed not equal (non zero)
e7b4 : 20c7ed          >        jsr report_error
                       >
e7b7 :                 >skip2665
                       >
e7b7 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
e7b8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
e7ba : 48              >            pha         ;use stack to load status
e7bb : a97e            >            lda #$7e     ;precharge accu
e7bd : 28              >            plp
                        
e7be : d272                     cmp (ind1+8)
                                tst_a $7e,fn
e7c0 : 08              >            php         ;save flags
e7c1 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
e7c3 : f003            >        beq skip2670
                       >        trap            ;failed not equal (non zero)
e7c5 : 20c7ed          >        jsr report_error
                       >
e7c8 :                 >skip2670
                       >
e7c8 : 68              >            pla         ;load status
e7c9 : 48              >            pha
                       >            cmp_flag fn
e7ca : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e7cc : f003            >        beq skip2673
                       >        trap            ;failed not equal (non zero)
e7ce : 20c7ed          >        jsr report_error
                       >
e7d1 :                 >skip2673
                       >
e7d1 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
e7d2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e7d4 : 48              >            pha         ;use stack to load status
e7d5 : a980            >            lda #$80     ;precharge accu
e7d7 : 28              >            plp
                        
e7d8 : d272                     cmp (ind1+8)
                                tst_a $80,~fnz
e7da : 08              >            php         ;save flags
e7db : c980            >            cmp #$80     ;test result
                       >            trap_ne
e7dd : f003            >        beq skip2678
                       >        trap            ;failed not equal (non zero)
e7df : 20c7ed          >        jsr report_error
                       >
e7e2 :                 >skip2678
                       >
e7e2 : 68              >            pla         ;load status
e7e3 : 48              >            pha
                       >            cmp_flag ~fnz
e7e4 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e7e6 : f003            >        beq skip2681
                       >        trap            ;failed not equal (non zero)
e7e8 : 20c7ed          >        jsr report_error
                       >
e7eb :                 >skip2681
                       >
e7eb : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
e7ec : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e7ee : 48              >            pha         ;use stack to load status
e7ef : a97f            >            lda #$7f     ;precharge accu
e7f1 : 28              >            plp
                        
e7f2 : d272                     cmp (ind1+8)
                                tst_a $7f,~fn
e7f4 : 08              >            php         ;save flags
e7f5 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
e7f7 : f003            >        beq skip2686
                       >        trap            ;failed not equal (non zero)
e7f9 : 20c7ed          >        jsr report_error
                       >
e7fc :                 >skip2686
                       >
e7fc : 68              >            pla         ;load status
e7fd : 48              >            pha
                       >            cmp_flag ~fn
e7fe : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e800 : f003            >        beq skip2689
                       >        trap            ;failed not equal (non zero)
e802 : 20c7ed          >        jsr report_error
                       >
e805 :                 >skip2689
                       >
e805 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
e806 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e808 : 48              >            pha         ;use stack to load status
e809 : a97e            >            lda #$7e     ;precharge accu
e80b : 28              >            plp
                        
e80c : d272                     cmp (ind1+8)
                                tst_a $7e,~fzc
e80e : 08              >            php         ;save flags
e80f : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
e811 : f003            >        beq skip2694
                       >        trap            ;failed not equal (non zero)
e813 : 20c7ed          >        jsr report_error
                       >
e816 :                 >skip2694
                       >
e816 : 68              >            pla         ;load status
e817 : 48              >            pha
                       >            cmp_flag ~fzc
e818 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
e81a : f003            >        beq skip2697
                       >        trap            ;failed not equal (non zero)
e81c : 20c7ed          >        jsr report_error
                       >
e81f :                 >skip2697
                       >
e81f : 28              >            plp         ;restore status
                        
e820 : e0de                     cpx #$de
                                trap_ne     ;x altered during test
e822 : f003            >        beq skip2699
                       >        trap            ;failed not equal (non zero)
e824 : 20c7ed          >        jsr report_error
                       >
e827 :                 >skip2699
                        
e827 : c0ad                     cpy #$ad
                                trap_ne     ;y altered during test
e829 : f003            >        beq skip2701
                       >        trap            ;failed not equal (non zero)
e82b : 20c7ed          >        jsr report_error
                       >
e82e :                 >skip2701
                        
e82e : ba                       tsx
e82f : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
e831 : f003            >        beq skip2703
                       >        trap            ;failed not equal (non zero)
e833 : 20c7ed          >        jsr report_error
                       >
e836 :                 >skip2703
                        
                                next_test
e836 : ad0232          >            lda test_case   ;previous test
e839 : c911            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
e83b : f003            >        beq skip2706
                       >        trap            ;failed not equal (non zero)
e83d : 20c7ed          >        jsr report_error
                       >
e840 :                 >skip2706
                       >
0012 =                 >test_num = test_num + 1
e840 : a912            >            lda #test_num   ;*** next tests' number
e842 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing logical instructions - AND EOR ORA (zp)
e845 : a242                     ldx #$42    ;protect x & y
                        
e847 : a000                     ldy #0      ;AND
e849 : a580                     lda indAN   ;set indirect address
e84b : 8552                     sta zpt
e84d : a581                     lda indAN+1
e84f : 8553                     sta zpt+1
e851 :                  tand1
                                set_ay  absANa,0
                       >            load_flag 0
e851 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
e853 : 48              >            pha         ;use stack to load status
e854 : b95332          >            lda absANa,y    ;precharge accu
e857 : 28              >            plp
                        
e858 : 3252                     and (zpt)
                                tst_ay  absrlo,absflo,0
e85a : 08              >            php         ;save flags
e85b : d95b32          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
e85e : f003            >        beq skip2711
                       >        trap            ;failed not equal (non zero)
e860 : 20c7ed          >        jsr report_error
                       >
e863 :                 >skip2711
                       >
e863 : 68              >            pla         ;load status
                       >            eor_flag 0
e864 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
e866 : d95f32          >            cmp absflo,y    ;test flags
                       >            trap_ne
e869 : f003            >        beq skip2714
                       >        trap            ;failed not equal (non zero)
e86b : 20c7ed          >        jsr report_error
                       >
e86e :                 >skip2714
                       >
                        
e86e : e652                     inc zpt
e870 : c8                       iny
e871 : c004                     cpy #4
e873 : d0dc                     bne tand1
e875 : 88                       dey
e876 : c652                     dec zpt
e878 :                  tand2
                                set_ay  absANa,$ff
                       >            load_flag $ff
e878 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e87a : 48              >            pha         ;use stack to load status
e87b : b95332          >            lda absANa,y    ;precharge accu
e87e : 28              >            plp
                        
e87f : 3252                     and (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
e881 : 08              >            php         ;save flags
e882 : d95b32          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
e885 : f003            >        beq skip2719
                       >        trap            ;failed not equal (non zero)
e887 : 20c7ed          >        jsr report_error
                       >
e88a :                 >skip2719
                       >
e88a : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
e88b : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
e88d : d95f32          >            cmp absflo,y    ;test flags
                       >            trap_ne
e890 : f003            >        beq skip2722
                       >        trap            ;failed not equal (non zero)
e892 : 20c7ed          >        jsr report_error
                       >
e895 :                 >skip2722
                       >
                        
e895 : c652                     dec zpt
e897 : 88                       dey
e898 : 10de                     bpl tand2
                        
e89a : a000                     ldy #0      ;EOR
e89c : a588                     lda indEO   ;set indirect address
e89e : 8552                     sta zpt
e8a0 : a589                     lda indEO+1
e8a2 : 8553                     sta zpt+1
e8a4 :                  teor1
                                set_ay  absEOa,0
                       >            load_flag 0
e8a4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
e8a6 : 48              >            pha         ;use stack to load status
e8a7 : b95732          >            lda absEOa,y    ;precharge accu
e8aa : 28              >            plp
                        
e8ab : 5252                     eor (zpt)
                                tst_ay  absrlo,absflo,0
e8ad : 08              >            php         ;save flags
e8ae : d95b32          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
e8b1 : f003            >        beq skip2727
                       >        trap            ;failed not equal (non zero)
e8b3 : 20c7ed          >        jsr report_error
                       >
e8b6 :                 >skip2727
                       >
e8b6 : 68              >            pla         ;load status
                       >            eor_flag 0
e8b7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
e8b9 : d95f32          >            cmp absflo,y    ;test flags
                       >            trap_ne
e8bc : f003            >        beq skip2730
                       >        trap            ;failed not equal (non zero)
e8be : 20c7ed          >        jsr report_error
                       >
e8c1 :                 >skip2730
                       >
                        
e8c1 : e652                     inc zpt
e8c3 : c8                       iny
e8c4 : c004                     cpy #4
e8c6 : d0dc                     bne teor1
e8c8 : 88                       dey
e8c9 : c652                     dec zpt
e8cb :                  teor2
                                set_ay  absEOa,$ff
                       >            load_flag $ff
e8cb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e8cd : 48              >            pha         ;use stack to load status
e8ce : b95732          >            lda absEOa,y    ;precharge accu
e8d1 : 28              >            plp
                        
e8d2 : 5252                     eor (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
e8d4 : 08              >            php         ;save flags
e8d5 : d95b32          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
e8d8 : f003            >        beq skip2735
                       >        trap            ;failed not equal (non zero)
e8da : 20c7ed          >        jsr report_error
                       >
e8dd :                 >skip2735
                       >
e8dd : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
e8de : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
e8e0 : d95f32          >            cmp absflo,y    ;test flags
                       >            trap_ne
e8e3 : f003            >        beq skip2738
                       >        trap            ;failed not equal (non zero)
e8e5 : 20c7ed          >        jsr report_error
                       >
e8e8 :                 >skip2738
                       >
                        
e8e8 : c652                     dec zpt
e8ea : 88                       dey
e8eb : 10de                     bpl teor2
                        
e8ed : a000                     ldy #0      ;ORA
e8ef : a590                     lda indOR   ;set indirect address
e8f1 : 8552                     sta zpt
e8f3 : a591                     lda indOR+1
e8f5 : 8553                     sta zpt+1
e8f7 :                  tora1
                                set_ay  absORa,0
                       >            load_flag 0
e8f7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
e8f9 : 48              >            pha         ;use stack to load status
e8fa : b94f32          >            lda absORa,y    ;precharge accu
e8fd : 28              >            plp
                        
e8fe : 1252                     ora (zpt)
                                tst_ay  absrlo,absflo,0
e900 : 08              >            php         ;save flags
e901 : d95b32          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
e904 : f003            >        beq skip2743
                       >        trap            ;failed not equal (non zero)
e906 : 20c7ed          >        jsr report_error
                       >
e909 :                 >skip2743
                       >
e909 : 68              >            pla         ;load status
                       >            eor_flag 0
e90a : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
e90c : d95f32          >            cmp absflo,y    ;test flags
                       >            trap_ne
e90f : f003            >        beq skip2746
                       >        trap            ;failed not equal (non zero)
e911 : 20c7ed          >        jsr report_error
                       >
e914 :                 >skip2746
                       >
                        
e914 : e652                     inc zpt
e916 : c8                       iny
e917 : c004                     cpy #4
e919 : d0dc                     bne tora1
e91b : 88                       dey
e91c : c652                     dec zpt
e91e :                  tora2
                                set_ay  absORa,$ff
                       >            load_flag $ff
e91e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
e920 : 48              >            pha         ;use stack to load status
e921 : b94f32          >            lda absORa,y    ;precharge accu
e924 : 28              >            plp
                        
e925 : 1252                     ora (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
e927 : 08              >            php         ;save flags
e928 : d95b32          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
e92b : f003            >        beq skip2751
                       >        trap            ;failed not equal (non zero)
e92d : 20c7ed          >        jsr report_error
                       >
e930 :                 >skip2751
                       >
e930 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
e931 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
e933 : d95f32          >            cmp absflo,y    ;test flags
                       >            trap_ne
e936 : f003            >        beq skip2754
                       >        trap            ;failed not equal (non zero)
e938 : 20c7ed          >        jsr report_error
                       >
e93b :                 >skip2754
                       >
                        
e93b : c652                     dec zpt
e93d : 88                       dey
e93e : 10de                     bpl tora2
                        
e940 : e042                     cpx #$42
                                trap_ne     ;x altered during test
e942 : f003            >        beq skip2756
                       >        trap            ;failed not equal (non zero)
e944 : 20c7ed          >        jsr report_error
                       >
e947 :                 >skip2756
                        
e947 : ba                       tsx
e948 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
e94a : f003            >        beq skip2758
                       >        trap            ;failed not equal (non zero)
e94c : 20c7ed          >        jsr report_error
                       >
e94f :                 >skip2758
                        
                                next_test
e94f : ad0232          >            lda test_case   ;previous test
e952 : c912            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
e954 : f003            >        beq skip2761
                       >        trap            ;failed not equal (non zero)
e956 : 20c7ed          >        jsr report_error
                       >
e959 :                 >skip2761
                       >
0013 =                 >test_num = test_num + 1
e959 : a913            >            lda #test_num   ;*** next tests' number
e95b : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                            if I_flag = 3
e95e : 58                       cli
                            endif
                        
                        ; full binary add/subtract test - (zp) only
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
e95f : d8                       cld
e960 : a254                     ldx #ad2        ;for indexed test
e962 : a0ff                     ldy #$ff        ;max range
e964 : a900                     lda #0          ;start with adding zeroes & no carry
e966 : 8552                     sta adfc        ;carry in - for diag
e968 : 8553                     sta ad1         ;operand 1 - accumulator
e96a : 8554                     sta ad2         ;operand 2 - memory or immediate
e96c : 8d0532                   sta ada2        ;non zp
e96f : 8555                     sta adrl        ;expected result bits 0-7
e971 : 8556                     sta adrh        ;expected result bit 8 (carry out)
e973 : a9ff                     lda #$ff        ;complemented operand 2 for subtract
e975 : 8558                     sta sb2
e977 : 8d0632                   sta sba2        ;non zp
e97a : a902                     lda #2          ;expected Z-flag
e97c : 8557                     sta adrf
e97e : 18               tadd    clc             ;test with carry clear
e97f : 2079ec                   jsr chkadd
e982 : e652                     inc adfc        ;now with carry
e984 : e655                     inc adrl        ;result +1
e986 : 08                       php             ;save N & Z from low result
e987 : 08                       php
e988 : 68                       pla             ;accu holds expected flags
e989 : 2982                     and #$82        ;mask N & Z
e98b : 28                       plp
e98c : d002                     bne tadd1
e98e : e656                     inc adrh        ;result bit 8 - carry
e990 : 0556             tadd1   ora adrh        ;merge C to expected flags
e992 : 8557                     sta adrf        ;save expected flags except overflow
e994 : 38                       sec             ;test with carry set
e995 : 2079ec                   jsr chkadd
e998 : c652                     dec adfc        ;same for operand +1 but no carry
e99a : e653                     inc ad1
e99c : d0e0                     bne tadd        ;iterate op1
e99e : a900                     lda #0          ;preset result to op2 when op1 = 0
e9a0 : 8556                     sta adrh
e9a2 : ee0532                   inc ada2
e9a5 : e654                     inc ad2
e9a7 : 08                       php             ;save NZ as operand 2 becomes the new result
e9a8 : 68                       pla
e9a9 : 2982                     and #$82        ;mask N00000Z0
e9ab : 8557                     sta adrf        ;no need to check carry as we are adding to 0
e9ad : c658                     dec sb2         ;complement subtract operand 2
e9af : ce0632                   dec sba2
e9b2 : a554                     lda ad2
e9b4 : 8555                     sta adrl
e9b6 : d0c6                     bne tadd        ;iterate op2
                        
e9b8 : e054                     cpx #ad2
                                trap_ne         ;x altered during test
e9ba : f003            >        beq skip2763
                       >        trap            ;failed not equal (non zero)
e9bc : 20c7ed          >        jsr report_error
                       >
e9bf :                 >skip2763
                        
e9bf : c0ff                     cpy #$ff
                                trap_ne         ;y altered during test
e9c1 : f003            >        beq skip2765
                       >        trap            ;failed not equal (non zero)
e9c3 : 20c7ed          >        jsr report_error
                       >
e9c6 :                 >skip2765
                        
e9c6 : ba                       tsx
e9c7 : e0ff                     cpx #$ff
                                trap_ne         ;sp push/pop mismatch
e9c9 : f003            >        beq skip2767
                       >        trap            ;failed not equal (non zero)
e9cb : 20c7ed          >        jsr report_error
                       >
e9ce :                 >skip2767
                        
                                next_test
e9ce : ad0232          >            lda test_case   ;previous test
e9d1 : c913            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
e9d3 : f003            >        beq skip2770
                       >        trap            ;failed not equal (non zero)
e9d5 : 20c7ed          >        jsr report_error
                       >
e9d8 :                 >skip2770
                       >
0014 =                 >test_num = test_num + 1
e9d8 : a914            >            lda #test_num   ;*** next tests' number
e9da : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, the V flag is ignored
                        ;   although V is declared as beeing valid on the 65C02 it has absolutely
                        ;   no use in BCD math. No sign = no overflow!
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
e9dd : f8                       sed
e9de : a254                     ldx #ad2        ;for indexed test
e9e0 : a0ff                     ldy #$ff        ;max range
e9e2 : a999                     lda #$99        ;start with adding 99 to 99 with carry
e9e4 : 8553                     sta ad1         ;operand 1 - accumulator
e9e6 : 8554                     sta ad2         ;operand 2 - memory or immediate
e9e8 : 8d0532                   sta ada2        ;non zp
e9eb : 8555                     sta adrl        ;expected result bits 0-7
e9ed : a901                     lda #1          ;set carry in & out
e9ef : 8552                     sta adfc        ;carry in - for diag
e9f1 : 8556                     sta adrh        ;expected result bit 8 (carry out)
e9f3 : a981                     lda #$81        ;set N & C (99 + 99 + C = 99 + C)
e9f5 : 8557                     sta adrf
e9f7 : a900                     lda #0          ;complemented operand 2 for subtract
e9f9 : 8558                     sta sb2
e9fb : 8d0632                   sta sba2        ;non zp
e9fe : 38               tdad    sec             ;test with carry set
e9ff : 20b6ea                   jsr chkdad
ea02 : c652                     dec adfc        ;now with carry clear
ea04 : a555                     lda adrl        ;decimal adjust result
ea06 : d008                     bne tdad1       ;skip clear carry & preset result 99 (9A-1)
ea08 : c656                     dec adrh
ea0a : a999                     lda #$99
ea0c : 8555                     sta adrl
ea0e : d012                     bne tdad3
ea10 : 290f             tdad1   and #$f         ;lower nibble mask
ea12 : d00c                     bne tdad2       ;no decimal adjust needed
ea14 : c655                     dec adrl        ;decimal adjust (?0-6)
ea16 : c655                     dec adrl
ea18 : c655                     dec adrl
ea1a : c655                     dec adrl
ea1c : c655                     dec adrl
ea1e : c655                     dec adrl
ea20 : c655             tdad2   dec adrl        ;result -1
ea22 : 08               tdad3   php             ;save valid flags
ea23 : 68                       pla
ea24 : 2982                     and #$82        ;N-----Z-
ea26 : 0556                     ora adrh        ;N-----ZC
ea28 : 8557                     sta adrf
ea2a : 18                       clc             ;test with carry clear
ea2b : 20b6ea                   jsr chkdad
ea2e : e652                     inc adfc        ;same for operand -1 but with carry
ea30 : a553                     lda ad1         ;decimal adjust operand 1
ea32 : f015                     beq tdad5       ;iterate operand 2
ea34 : 290f                     and #$f         ;lower nibble mask
ea36 : d00c                     bne tdad4       ;skip decimal adjust
ea38 : c653                     dec ad1         ;decimal adjust (?0-6)
ea3a : c653                     dec ad1
ea3c : c653                     dec ad1
ea3e : c653                     dec ad1
ea40 : c653                     dec ad1
ea42 : c653                     dec ad1
ea44 : c653             tdad4   dec ad1         ;operand 1 -1
ea46 : 4cfee9                   jmp tdad        ;iterate op1
                        
ea49 : a999             tdad5   lda #$99        ;precharge op1 max
ea4b : 8553                     sta ad1
ea4d : a554                     lda ad2         ;decimal adjust operand 2
ea4f : f039                     beq tdad7       ;end of iteration
ea51 : 290f                     and #$f         ;lower nibble mask
ea53 : d018                     bne tdad6       ;skip decimal adjust
ea55 : c654                     dec ad2         ;decimal adjust (?0-6)
ea57 : c654                     dec ad2
ea59 : c654                     dec ad2
ea5b : c654                     dec ad2
ea5d : c654                     dec ad2
ea5f : c654                     dec ad2
ea61 : e658                     inc sb2         ;complemented decimal adjust for subtract (?9+6)
ea63 : e658                     inc sb2
ea65 : e658                     inc sb2
ea67 : e658                     inc sb2
ea69 : e658                     inc sb2
ea6b : e658                     inc sb2
ea6d : c654             tdad6   dec ad2         ;operand 2 -1
ea6f : e658                     inc sb2         ;complemented operand for subtract
ea71 : a558                     lda sb2
ea73 : 8d0632                   sta sba2        ;copy as non zp operand
ea76 : a554                     lda ad2
ea78 : 8d0532                   sta ada2        ;copy as non zp operand
ea7b : 8555                     sta adrl        ;new result since op1+carry=00+carry +op2=op2
ea7d : 08                       php             ;save flags
ea7e : 68                       pla
ea7f : 2982                     and #$82        ;N-----Z-
ea81 : 0901                     ora #1          ;N-----ZC
ea83 : 8557                     sta adrf
ea85 : e656                     inc adrh        ;result carry
ea87 : 4cfee9                   jmp tdad        ;iterate op2
                        
ea8a : e054             tdad7   cpx #ad2
                                trap_ne         ;x altered during test
ea8c : f003            >        beq skip2772
                       >        trap            ;failed not equal (non zero)
ea8e : 20c7ed          >        jsr report_error
                       >
ea91 :                 >skip2772
                        
ea91 : c0ff                     cpy #$ff
                                trap_ne         ;y altered during test
ea93 : f003            >        beq skip2774
                       >        trap            ;failed not equal (non zero)
ea95 : 20c7ed          >        jsr report_error
                       >
ea98 :                 >skip2774
                        
ea98 : ba                       tsx
ea99 : e0ff                     cpx #$ff
                                trap_ne         ;sp push/pop mismatch
ea9b : f003            >        beq skip2776
                       >        trap            ;failed not equal (non zero)
ea9d : 20c7ed          >        jsr report_error
                       >
eaa0 :                 >skip2776
                        
eaa0 : d8                       cld
                        
eaa1 : ad0232                   lda test_case
eaa4 : c914                     cmp #test_num
                                trap_ne         ;previous test is out of sequence
eaa6 : f003            >        beq skip2778
                       >        trap            ;failed not equal (non zero)
eaa8 : 20c7ed          >        jsr report_error
                       >
eaab :                 >skip2778
                        
eaab : a9f0                     lda #$f0        ;mark opcode testing complete
eaad : 8d0232                   sta test_case
                        
                        ; final RAM integrity test
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                                check_ram
                       >            ;RAM check disabled - RAM size not set
                        
                        ; *** DEBUG INFO ***
                        ; to debug checksum errors uncomment check_ram in the next_test macro to
                        ; narrow down the responsible opcode.
                        ; may give false errors when monitor, OS or other background activity is
                        ; allowed during previous tests.
                        
                        
                        ; S U C C E S S ************************************************
                        ; -------------
                                success         ;if you get here everything went well
eab0 : 2090ee          >        jsr report_success
                        
                        ; -------------
                        ; S U C C E S S ************************************************
eab3 : 4c00c0                   jmp start       ;run again
                        
                        ; core subroutine of the decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, V flag is ignored
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
eab6 :                  chkdad
                        ; decimal ADC / SBC zp
eab6 : 08                       php             ;save carry for subtract
eab7 : a553                     lda ad1
eab9 : 6554                     adc ad2         ;perform add
eabb : 08                       php
eabc : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
eabe : f003            >        beq skip2782
                       >        trap            ;failed not equal (non zero)
eac0 : 20c7ed          >        jsr report_error
                       >
eac3 :                 >skip2782
                        
eac3 : 68                       pla             ;check flags
eac4 : 2983                     and #$83        ;mask N-----ZC
eac6 : c557                     cmp adrf
                                trap_ne         ;bad flags
eac8 : f003            >        beq skip2784
                       >        trap            ;failed not equal (non zero)
eaca : 20c7ed          >        jsr report_error
                       >
eacd :                 >skip2784
                        
eacd : 28                       plp
eace : 08                       php             ;save carry for next add
eacf : a553                     lda ad1
ead1 : e558                     sbc sb2         ;perform subtract
ead3 : 08                       php
ead4 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
ead6 : f003            >        beq skip2786
                       >        trap            ;failed not equal (non zero)
ead8 : 20c7ed          >        jsr report_error
                       >
eadb :                 >skip2786
                        
eadb : 68                       pla             ;check flags
eadc : 2983                     and #$83        ;mask N-----ZC
eade : c557                     cmp adrf
                                trap_ne         ;bad flags
eae0 : f003            >        beq skip2788
                       >        trap            ;failed not equal (non zero)
eae2 : 20c7ed          >        jsr report_error
                       >
eae5 :                 >skip2788
                        
eae5 : 28                       plp
                        ; decimal ADC / SBC abs
eae6 : 08                       php             ;save carry for subtract
eae7 : a553                     lda ad1
eae9 : 6d0532                   adc ada2        ;perform add
eaec : 08                       php
eaed : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
eaef : f003            >        beq skip2790
                       >        trap            ;failed not equal (non zero)
eaf1 : 20c7ed          >        jsr report_error
                       >
eaf4 :                 >skip2790
                        
eaf4 : 68                       pla             ;check flags
eaf5 : 2983                     and #$83        ;mask N-----ZC
eaf7 : c557                     cmp adrf
                                trap_ne         ;bad flags
eaf9 : f003            >        beq skip2792
                       >        trap            ;failed not equal (non zero)
eafb : 20c7ed          >        jsr report_error
                       >
eafe :                 >skip2792
                        
eafe : 28                       plp
eaff : 08                       php             ;save carry for next add
eb00 : a553                     lda ad1
eb02 : ed0632                   sbc sba2        ;perform subtract
eb05 : 08                       php
eb06 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
eb08 : f003            >        beq skip2794
                       >        trap            ;failed not equal (non zero)
eb0a : 20c7ed          >        jsr report_error
                       >
eb0d :                 >skip2794
                        
eb0d : 68                       pla             ;check flags
eb0e : 2983                     and #$83        ;mask N-----ZC
eb10 : c557                     cmp adrf
                                trap_ne         ;bad flags
eb12 : f003            >        beq skip2796
                       >        trap            ;failed not equal (non zero)
eb14 : 20c7ed          >        jsr report_error
                       >
eb17 :                 >skip2796
                        
eb17 : 28                       plp
                        ; decimal ADC / SBC #
eb18 : 08                       php             ;save carry for subtract
eb19 : a554                     lda ad2
eb1b : 8d0b32                   sta ex_adci+1   ;set ADC # operand
eb1e : a553                     lda ad1
eb20 : 200a32                   jsr ex_adci     ;execute ADC # in RAM
eb23 : 08                       php
eb24 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
eb26 : f003            >        beq skip2798
                       >        trap            ;failed not equal (non zero)
eb28 : 20c7ed          >        jsr report_error
                       >
eb2b :                 >skip2798
                        
eb2b : 68                       pla             ;check flags
eb2c : 2983                     and #$83        ;mask N-----ZC
eb2e : c557                     cmp adrf
                                trap_ne         ;bad flags
eb30 : f003            >        beq skip2800
                       >        trap            ;failed not equal (non zero)
eb32 : 20c7ed          >        jsr report_error
                       >
eb35 :                 >skip2800
                        
eb35 : 28                       plp
eb36 : 08                       php             ;save carry for next add
eb37 : a558                     lda sb2
eb39 : 8d0e32                   sta ex_sbci+1   ;set SBC # operand
eb3c : a553                     lda ad1
eb3e : 200d32                   jsr ex_sbci     ;execute SBC # in RAM
eb41 : 08                       php
eb42 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
eb44 : f003            >        beq skip2802
                       >        trap            ;failed not equal (non zero)
eb46 : 20c7ed          >        jsr report_error
                       >
eb49 :                 >skip2802
                        
eb49 : 68                       pla             ;check flags
eb4a : 2983                     and #$83        ;mask N-----ZC
eb4c : c557                     cmp adrf
                                trap_ne         ;bad flags
eb4e : f003            >        beq skip2804
                       >        trap            ;failed not equal (non zero)
eb50 : 20c7ed          >        jsr report_error
                       >
eb53 :                 >skip2804
                        
eb53 : 28                       plp
                        ; decimal ADC / SBC zp,x
eb54 : 08                       php             ;save carry for subtract
eb55 : a553                     lda ad1
eb57 : 7500                     adc 0,x         ;perform add
eb59 : 08                       php
eb5a : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
eb5c : f003            >        beq skip2806
                       >        trap            ;failed not equal (non zero)
eb5e : 20c7ed          >        jsr report_error
                       >
eb61 :                 >skip2806
                        
eb61 : 68                       pla             ;check flags
eb62 : 2983                     and #$83        ;mask N-----ZC
eb64 : c557                     cmp adrf
                                trap_ne         ;bad flags
eb66 : f003            >        beq skip2808
                       >        trap            ;failed not equal (non zero)
eb68 : 20c7ed          >        jsr report_error
                       >
eb6b :                 >skip2808
                        
eb6b : 28                       plp
eb6c : 08                       php             ;save carry for next add
eb6d : a553                     lda ad1
eb6f : f504                     sbc sb2-ad2,x   ;perform subtract
eb71 : 08                       php
eb72 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
eb74 : f003            >        beq skip2810
                       >        trap            ;failed not equal (non zero)
eb76 : 20c7ed          >        jsr report_error
                       >
eb79 :                 >skip2810
                        
eb79 : 68                       pla             ;check flags
eb7a : 2983                     and #$83        ;mask N-----ZC
eb7c : c557                     cmp adrf
                                trap_ne         ;bad flags
eb7e : f003            >        beq skip2812
                       >        trap            ;failed not equal (non zero)
eb80 : 20c7ed          >        jsr report_error
                       >
eb83 :                 >skip2812
                        
eb83 : 28                       plp
                        ; decimal ADC / SBC abs,x
eb84 : 08                       php             ;save carry for subtract
eb85 : a553                     lda ad1
eb87 : 7db131                   adc ada2-ad2,x  ;perform add
eb8a : 08                       php
eb8b : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
eb8d : f003            >        beq skip2814
                       >        trap            ;failed not equal (non zero)
eb8f : 20c7ed          >        jsr report_error
                       >
eb92 :                 >skip2814
                        
eb92 : 68                       pla             ;check flags
eb93 : 2983                     and #$83        ;mask N-----ZC
eb95 : c557                     cmp adrf
                                trap_ne         ;bad flags
eb97 : f003            >        beq skip2816
                       >        trap            ;failed not equal (non zero)
eb99 : 20c7ed          >        jsr report_error
                       >
eb9c :                 >skip2816
                        
eb9c : 28                       plp
eb9d : 08                       php             ;save carry for next add
eb9e : a553                     lda ad1
eba0 : fdb231                   sbc sba2-ad2,x  ;perform subtract
eba3 : 08                       php
eba4 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
eba6 : f003            >        beq skip2818
                       >        trap            ;failed not equal (non zero)
eba8 : 20c7ed          >        jsr report_error
                       >
ebab :                 >skip2818
                        
ebab : 68                       pla             ;check flags
ebac : 2983                     and #$83        ;mask N-----ZC
ebae : c557                     cmp adrf
                                trap_ne         ;bad flags
ebb0 : f003            >        beq skip2820
                       >        trap            ;failed not equal (non zero)
ebb2 : 20c7ed          >        jsr report_error
                       >
ebb5 :                 >skip2820
                        
ebb5 : 28                       plp
                        ; decimal ADC / SBC abs,y
ebb6 : 08                       php             ;save carry for subtract
ebb7 : a553                     lda ad1
ebb9 : 790631                   adc ada2-$ff,y  ;perform add
ebbc : 08                       php
ebbd : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
ebbf : f003            >        beq skip2822
                       >        trap            ;failed not equal (non zero)
ebc1 : 20c7ed          >        jsr report_error
                       >
ebc4 :                 >skip2822
                        
ebc4 : 68                       pla             ;check flags
ebc5 : 2983                     and #$83        ;mask N-----ZC
ebc7 : c557                     cmp adrf
                                trap_ne         ;bad flags
ebc9 : f003            >        beq skip2824
                       >        trap            ;failed not equal (non zero)
ebcb : 20c7ed          >        jsr report_error
                       >
ebce :                 >skip2824
                        
ebce : 28                       plp
ebcf : 08                       php             ;save carry for next add
ebd0 : a553                     lda ad1
ebd2 : f90731                   sbc sba2-$ff,y  ;perform subtract
ebd5 : 08                       php
ebd6 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
ebd8 : f003            >        beq skip2826
                       >        trap            ;failed not equal (non zero)
ebda : 20c7ed          >        jsr report_error
                       >
ebdd :                 >skip2826
                        
ebdd : 68                       pla             ;check flags
ebde : 2983                     and #$83        ;mask N-----ZC
ebe0 : c557                     cmp adrf
                                trap_ne         ;bad flags
ebe2 : f003            >        beq skip2828
                       >        trap            ;failed not equal (non zero)
ebe4 : 20c7ed          >        jsr report_error
                       >
ebe7 :                 >skip2828
                        
ebe7 : 28                       plp
                        ; decimal ADC / SBC (zp,x)
ebe8 : 08                       php             ;save carry for subtract
ebe9 : a553                     lda ad1
ebeb : 6144                     adc (lo adi2-ad2,x) ;perform add
ebed : 08                       php
ebee : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
ebf0 : f003            >        beq skip2830
                       >        trap            ;failed not equal (non zero)
ebf2 : 20c7ed          >        jsr report_error
                       >
ebf5 :                 >skip2830
                        
ebf5 : 68                       pla             ;check flags
ebf6 : 2983                     and #$83        ;mask N-----ZC
ebf8 : c557                     cmp adrf
                                trap_ne         ;bad flags
ebfa : f003            >        beq skip2832
                       >        trap            ;failed not equal (non zero)
ebfc : 20c7ed          >        jsr report_error
                       >
ebff :                 >skip2832
                        
ebff : 28                       plp
ec00 : 08                       php             ;save carry for next add
ec01 : a553                     lda ad1
ec03 : e146                     sbc (lo sbi2-ad2,x) ;perform subtract
ec05 : 08                       php
ec06 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
ec08 : f003            >        beq skip2834
                       >        trap            ;failed not equal (non zero)
ec0a : 20c7ed          >        jsr report_error
                       >
ec0d :                 >skip2834
                        
ec0d : 68                       pla             ;check flags
ec0e : 2983                     and #$83        ;mask N-----ZC
ec10 : c557                     cmp adrf
                                trap_ne         ;bad flags
ec12 : f003            >        beq skip2836
                       >        trap            ;failed not equal (non zero)
ec14 : 20c7ed          >        jsr report_error
                       >
ec17 :                 >skip2836
                        
ec17 : 28                       plp
                        ; decimal ADC / SBC (abs),y
ec18 : 08                       php             ;save carry for subtract
ec19 : a553                     lda ad1
ec1b : 719c                     adc (adiy2),y   ;perform add
ec1d : 08                       php
ec1e : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
ec20 : f003            >        beq skip2838
                       >        trap            ;failed not equal (non zero)
ec22 : 20c7ed          >        jsr report_error
                       >
ec25 :                 >skip2838
                        
ec25 : 68                       pla             ;check flags
ec26 : 2983                     and #$83        ;mask N-----ZC
ec28 : c557                     cmp adrf
                                trap_ne         ;bad flags
ec2a : f003            >        beq skip2840
                       >        trap            ;failed not equal (non zero)
ec2c : 20c7ed          >        jsr report_error
                       >
ec2f :                 >skip2840
                        
ec2f : 28                       plp
ec30 : 08                       php             ;save carry for next add
ec31 : a553                     lda ad1
ec33 : f19e                     sbc (sbiy2),y   ;perform subtract
ec35 : 08                       php
ec36 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
ec38 : f003            >        beq skip2842
                       >        trap            ;failed not equal (non zero)
ec3a : 20c7ed          >        jsr report_error
                       >
ec3d :                 >skip2842
                        
ec3d : 68                       pla             ;check flags
ec3e : 2983                     and #$83        ;mask N-----ZC
ec40 : c557                     cmp adrf
                                trap_ne         ;bad flags
ec42 : f003            >        beq skip2844
                       >        trap            ;failed not equal (non zero)
ec44 : 20c7ed          >        jsr report_error
                       >
ec47 :                 >skip2844
                        
ec47 : 28                       plp
                        ; decimal ADC / SBC (zp)
ec48 : 08                       php             ;save carry for subtract
ec49 : a553                     lda ad1
ec4b : 7298                     adc (adi2)      ;perform add
ec4d : 08                       php
ec4e : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
ec50 : f003            >        beq skip2846
                       >        trap            ;failed not equal (non zero)
ec52 : 20c7ed          >        jsr report_error
                       >
ec55 :                 >skip2846
                        
ec55 : 68                       pla             ;check flags
ec56 : 2983                     and #$83        ;mask N-----ZC
ec58 : c557                     cmp adrf
                                trap_ne         ;bad flags
ec5a : f003            >        beq skip2848
                       >        trap            ;failed not equal (non zero)
ec5c : 20c7ed          >        jsr report_error
                       >
ec5f :                 >skip2848
                        
ec5f : 28                       plp
ec60 : 08                       php             ;save carry for next add
ec61 : a553                     lda ad1
ec63 : f29a                     sbc (sbi2)      ;perform subtract
ec65 : 08                       php
ec66 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
ec68 : f003            >        beq skip2850
                       >        trap            ;failed not equal (non zero)
ec6a : 20c7ed          >        jsr report_error
                       >
ec6d :                 >skip2850
                        
ec6d : 68                       pla             ;check flags
ec6e : 2983                     and #$83        ;mask N-----ZC
ec70 : c557                     cmp adrf
                                trap_ne         ;bad flags
ec72 : f003            >        beq skip2852
                       >        trap            ;failed not equal (non zero)
ec74 : 20c7ed          >        jsr report_error
                       >
ec77 :                 >skip2852
                        
ec77 : 28                       plp
ec78 : 60                       rts
                        
                        ; core subroutine of the full binary add/subtract test
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
ec79 : a557             chkadd  lda adrf        ;add V-flag if overflow
ec7b : 2983                     and #$83        ;keep N-----ZC / clear V
ec7d : 48                       pha
ec7e : a553                     lda ad1         ;test sign unequal between operands
ec80 : 4554                     eor ad2
ec82 : 300a                     bmi ckad1       ;no overflow possible - operands have different sign
ec84 : a553                     lda ad1         ;test sign equal between operands and result
ec86 : 4555                     eor adrl
ec88 : 1004                     bpl ckad1       ;no overflow occured - operand and result have same sign
ec8a : 68                       pla
ec8b : 0940                     ora #$40        ;set V
ec8d : 48                       pha
ec8e : 68               ckad1   pla
ec8f : 8557                     sta adrf        ;save expected flags
                        ; binary ADC / SBC (zp)
ec91 : 08                       php             ;save carry for subtract
ec92 : a553                     lda ad1
ec94 : 7298                     adc (adi2)      ;perform add
ec96 : 08                       php
ec97 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
ec99 : f003            >        beq skip2854
                       >        trap            ;failed not equal (non zero)
ec9b : 20c7ed          >        jsr report_error
                       >
ec9e :                 >skip2854
                        
ec9e : 68                       pla             ;check flags
ec9f : 29c3                     and #$c3        ;mask NV----ZC
eca1 : c557                     cmp adrf
                                trap_ne         ;bad flags
eca3 : f003            >        beq skip2856
                       >        trap            ;failed not equal (non zero)
eca5 : 20c7ed          >        jsr report_error
                       >
eca8 :                 >skip2856
                        
eca8 : 28                       plp
eca9 : 08                       php             ;save carry for next add
ecaa : a553                     lda ad1
ecac : f29a                     sbc (sbi2)      ;perform subtract
ecae : 08                       php
ecaf : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
ecb1 : f003            >        beq skip2858
                       >        trap            ;failed not equal (non zero)
ecb3 : 20c7ed          >        jsr report_error
                       >
ecb6 :                 >skip2858
                        
ecb6 : 68                       pla             ;check flags
ecb7 : 29c3                     and #$c3        ;mask NV----ZC
ecb9 : c557                     cmp adrf
                                trap_ne         ;bad flags
ecbb : f003            >        beq skip2860
                       >        trap            ;failed not equal (non zero)
ecbd : 20c7ed          >        jsr report_error
                       >
ecc0 :                 >skip2860
                        
ecc0 : 28                       plp
ecc1 : 60                       rts
                        
                        ; target for the jump indirect test
ecc2 : c8ec             ji_adr  dw test_ji
ecc4 : d9d8                     dw ji_ret
                        
ecc6 : 88                       dey
ecc7 : 88                       dey
ecc8 :                  test_ji
ecc8 : 08                       php             ;either SP or Y count will fail, if we do not hit
ecc9 : 88                       dey
ecca : 88                       dey
eccb : 88                       dey
eccc : 28                       plp
                                trap_cs         ;flags loaded?
eccd : 9003            >        bcc skip2862
                       >        trap            ;failed carry set
eccf : 20c7ed          >        jsr report_error
                       >
ecd2 :                 >skip2862
                        
                                trap_vs
ecd2 : 5003            >        bvc skip2864
                       >        trap            ;failed overflow set
ecd4 : 20c7ed          >        jsr report_error
                       >
ecd7 :                 >skip2864
                        
                                trap_mi
ecd7 : 1003            >        bpl skip2866
                       >        trap            ;failed minus (bit 7 set)
ecd9 : 20c7ed          >        jsr report_error
                       >
ecdc :                 >skip2866
                        
                                trap_eq
ecdc : d003            >        bne skip2868
                       >        trap           ;failed equal (zero)
ecde : 20c7ed          >        jsr report_error
                       >
ece1 :                 >skip2868
                        
ece1 : c949                     cmp #'I'        ;registers loaded?
                                trap_ne
ece3 : f003            >        beq skip2870
                       >        trap            ;failed not equal (non zero)
ece5 : 20c7ed          >        jsr report_error
                       >
ece8 :                 >skip2870
                        
ece8 : e04e                     cpx #'N'
                                trap_ne
ecea : f003            >        beq skip2872
                       >        trap            ;failed not equal (non zero)
ecec : 20c7ed          >        jsr report_error
                       >
ecef :                 >skip2872
                        
ecef : c041                     cpy #('D'-3)
                                trap_ne
ecf1 : f003            >        beq skip2874
                       >        trap            ;failed not equal (non zero)
ecf3 : 20c7ed          >        jsr report_error
                       >
ecf6 :                 >skip2874
                        
ecf6 : 48                       pha             ;save a,x
ecf7 : 8a                       txa
ecf8 : 48                       pha
ecf9 : ba                       tsx
ecfa : e0fd                     cpx #$fd        ;check SP
                                trap_ne
ecfc : f003            >        beq skip2876
                       >        trap            ;failed not equal (non zero)
ecfe : 20c7ed          >        jsr report_error
                       >
ed01 :                 >skip2876
                        
ed01 : 68                       pla             ;restore x
ed02 : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
ed03 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
ed05 : 48              >            pha         ;use stack to load status
ed06 : 28              >            plp
                        
ed07 : 68                       pla             ;restore a
ed08 : e8                       inx             ;return registers with modifications
ed09 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
ed0b : 6cff32                   jmp (ji_tab+2)
ed0e : ea                       nop
ed0f : ea                       nop
                                trap            ;runover protection
ed10 : 20c7ed          >        jsr report_error
                        
ed13 : 4c00c0                   jmp start       ;catastrophic error - cannot continue
                        
                        ; target for the jump indirect test
ed16 : 75ed             jxi_adr dw  trap_ind
ed18 : 75ed                     dw  trap_ind
ed1a : 24ed                     dw  test_jxi    ;+4
ed1c : 43d9                     dw  jxi_ret     ;+6
ed1e : 75ed                     dw  trap_ind
ed20 : 75ed                     dw  trap_ind
                        
ed22 : 88                       dey
ed23 : 88                       dey
ed24 :                  test_jxi
ed24 : 08                       php             ;either SP or Y count will fail, if we do not hit
ed25 : 88                       dey
ed26 : 88                       dey
ed27 : 88                       dey
ed28 : 28                       plp
                                trap_cs         ;flags loaded?
ed29 : 9003            >        bcc skip2881
                       >        trap            ;failed carry set
ed2b : 20c7ed          >        jsr report_error
                       >
ed2e :                 >skip2881
                        
                                trap_vs
ed2e : 5003            >        bvc skip2883
                       >        trap            ;failed overflow set
ed30 : 20c7ed          >        jsr report_error
                       >
ed33 :                 >skip2883
                        
                                trap_mi
ed33 : 1003            >        bpl skip2885
                       >        trap            ;failed minus (bit 7 set)
ed35 : 20c7ed          >        jsr report_error
                       >
ed38 :                 >skip2885
                        
                                trap_eq
ed38 : d003            >        bne skip2887
                       >        trap           ;failed equal (zero)
ed3a : 20c7ed          >        jsr report_error
                       >
ed3d :                 >skip2887
                        
ed3d : c958                     cmp #'X'        ;registers loaded?
                                trap_ne
ed3f : f003            >        beq skip2889
                       >        trap            ;failed not equal (non zero)
ed41 : 20c7ed          >        jsr report_error
                       >
ed44 :                 >skip2889
                        
ed44 : e004                     cpx #4
                                trap_ne
ed46 : f003            >        beq skip2891
                       >        trap            ;failed not equal (non zero)
ed48 : 20c7ed          >        jsr report_error
                       >
ed4b :                 >skip2891
                        
ed4b : c046                     cpy #('I'-3)
                                trap_ne
ed4d : f003            >        beq skip2893
                       >        trap            ;failed not equal (non zero)
ed4f : 20c7ed          >        jsr report_error
                       >
ed52 :                 >skip2893
                        
ed52 : 48                       pha             ;save a,x
ed53 : 8a                       txa
ed54 : 48                       pha
ed55 : ba                       tsx
ed56 : e0fd                     cpx #$fd        ;check SP
                                trap_ne
ed58 : f003            >        beq skip2895
                       >        trap            ;failed not equal (non zero)
ed5a : 20c7ed          >        jsr report_error
                       >
ed5d :                 >skip2895
                        
ed5d : 68                       pla             ;restore x
ed5e : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
ed5f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
ed61 : 48              >            pha         ;use stack to load status
ed62 : 28              >            plp
                        
ed63 : 68                       pla             ;restore a
ed64 : e8                       inx             ;return registers with modifications
ed65 : e8                       inx
ed66 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
ed68 : 7cf932                   jmp (jxi_tab,x)
ed6b : ea                       nop
ed6c : ea                       nop
                                trap            ;runover protection
ed6d : 20c7ed          >        jsr report_error
                        
ed70 : 4c00c0                   jmp start       ;catastrophic error - cannot continue
                        
                        ; JMP (abs,x) with bad x
ed73 : ea                       nop
ed74 : ea                       nop
ed75 :                  trap_ind
ed75 : ea                       nop
ed76 : ea                       nop
                                trap            ;near miss indexed indirect jump
ed77 : 20c7ed          >        jsr report_error
                        
ed7a : 4c00c0                   jmp start       ;catastrophic error - cannot continue
                        
                        ;trap in case of unexpected IRQ, NMI, BRK, RESET
ed7d :                  nmi_trap
                                trap            ;check stack for conditions at NMI
ed7d : 20c7ed          >        jsr report_error
                        
ed80 : 4c00c0                   jmp start       ;catastrophic error - cannot continue
ed83 :                  res_trap
                                trap            ;unexpected RESET
ed83 : 20c7ed          >        jsr report_error
                        
ed86 : 4c00c0                   jmp start       ;catastrophic error - cannot continue
                        
ed89 : 88                       dey
ed8a : 88                       dey
ed8b :                  irq_trap                ;BRK test or unextpected BRK or IRQ
ed8b : 08                       php             ;either SP or Y count will fail, if we do not hit
ed8c : 88                       dey
ed8d : 88                       dey
ed8e : 88                       dey
                                ;next traps could be caused by unexpected BRK or IRQ
                                ;check stack for BREAK and originating location
                                ;possible jump/branch into weeds (uninitialized space)
                            if ROM_vectors = 1
                                cmp #$ff-'B'    ;BRK pass 2 registers loaded?
                                beq break2
                            endif
ed8f : c942                     cmp #'B'        ;BRK pass 1 registers loaded?
                                trap_ne
ed91 : f003            >        beq skip2903
                       >        trap            ;failed not equal (non zero)
ed93 : 20c7ed          >        jsr report_error
                       >
ed96 :                 >skip2903
                        
ed96 : e052                     cpx #'R'
                                trap_ne
ed98 : f003            >        beq skip2905
                       >        trap            ;failed not equal (non zero)
ed9a : 20c7ed          >        jsr report_error
                       >
ed9d :                 >skip2905
                        
ed9d : c048                     cpy #'K'-3
                                trap_ne
ed9f : f003            >        beq skip2907
                       >        trap            ;failed not equal (non zero)
eda1 : 20c7ed          >        jsr report_error
                       >
eda4 :                 >skip2907
                        
eda4 : 8550                     sta irq_a       ;save registers during break test
eda6 : 8651                     stx irq_x
eda8 : ba                       tsx             ;test break on stack
eda9 : bd0201                   lda $102,x
                                cmp_flag 0      ;break test should have B=1 & unused=1 on stack
edac : c930            >            cmp #(0      |fao)&m8    ;expected flags + always on bits
                        
                                trap_ne         ;possible no break flag on stack
edae : f003            >        beq skip2910
                       >        trap            ;failed not equal (non zero)
edb0 : 20c7ed          >        jsr report_error
                       >
edb3 :                 >skip2910
                        
                            if ROM_vectors = 1
                                pla
                                cmp_flag intdis ;should have added interrupt disable
                                trap_ne
                                tsx
                                cpx #$fc        ;sp -3? (return addr, flags)
                                trap_ne
                                lda $1ff        ;propper return on stack
                                cmp #hi(brk_ret0)
                                trap_ne
                                lda $1fe
                                cmp #lo(brk_ret0)
                                trap_ne
                                load_flag $ff
                                pha
                                ldx irq_x
                                inx             ;return registers with modifications
                                lda irq_a
                                eor #$aa
                                plp             ;N=1, V=1, Z=1, C=1 but original flags should be restored
                                rti
                                trap            ;runover protection
                                jmp start       ;catastrophic error - cannot continue
                        
                        break2                  ;BRK pass 2
                                cpx #$ff-'R'
                                trap_ne
                                cpy #$ff-'K'-3
                                trap_ne
                                sta irq_a       ;save registers during break test
                                stx irq_x
                                tsx             ;test break on stack
                                lda $102,x
                                cmp_flag $ff    ;break test should have B=1
                                trap_ne         ;possibly no break flag on stack
                                pla
                                cmp_flag $ff-decmode ;actual passed flags should have decmode cleared
                                trap_ne
                                tsx
                                cpx #$fc        ;sp -3? (return addr, flags)
                                trap_ne
                                lda $1ff        ;propper return on stack
                                cmp #hi(brk_ret1)
                                trap_ne
                                lda $1fe
                                cmp #lo(brk_ret1)
                                trap_ne
                                load_flag intdis
                                pha
                                ldx irq_x
                                inx             ;return registers with modifications
                                lda irq_a
                                eor #$aa
                                plp             ;N=0, V=0, Z=0, C=0 but original flags should be restored
                                rti
                                trap            ;runover protection
                                jmp start       ;catastrophic error - cannot continue
                            else
                                trap_eq         ;check stack for conditions at BRK
edb3 : d003            >        bne skip2912
                       >        trap           ;failed equal (zero)
edb5 : 20c7ed          >        jsr report_error
                       >
edb8 :                 >skip2912
                        
                            endif
                        
                            if report = 1
                                include "report.i65"
0001 =                  T_ATOM = 1
0002 =                  T_BEEB = 2
                        
                          if (TARGET = T_ATOM)
                        OSRDCH = $FFE3
                        OSWRCH = $FFF4
                          else
                            if (TARGET = T_BEEB)
ffe0 =                  OSRDCH = $FFE0
ffee =                  OSWRCH = $FFEE
                            else
                        ERROR TARGET must be 1 or 2
                            endif
                          endif
                        
                        
                        ;**** report 6502 funtional test errors to standard I/O ****
                        ;
                        ;this include file is part of the 6502 functional tests
                        ;it is used when you configure report = 1 in the tests
                        ;
                        ;to adopt the standard output vectors of your test environment
                        ;you must modify the rchar and rget subroutines in this include
                        ;
                        ;I/O hardware may have to be initialized in report_init
                        
                        ;print message macro - \1 = message location
                        rprt    macro
                                ldx #0
                                lda \1
                        loop\?
                                jsr rchar
                                inx
                                lda \1,x
                                bne loop\?
                                endm
                        
                        ;initialize I/O as required (example: configure & enable ACIA)
edb8 :                  report_init
                                ;nothing to initialize
                                rprt rmsg_start
edb8 : a200            >        ldx #0
edba : add5ee          >        lda rmsg_start
edbd :                 >loop2914
edbd : 20d1ee          >        jsr rchar
edc0 : e8              >        inx
edc1 : bdd5ee          >        lda rmsg_start,x
edc4 : d0f7            >        bne loop2914
                        
edc6 : 60                       rts
                                
                        ;show stack (with saved registers), zeropage and absolute memory workspace
                        ;after an error was trapped in the test program
edc7 :                  report_error
                        ;save registers
edc7 : 08                       php
edc8 : 48                       pha
edc9 : 8a                       txa
edca : 48                       pha
edcb : 98                       tya
edcc : 48                       pha
edcd : d8                       cld
                        ;show stack with index to registers at error
                                rprt rmsg_stack
edce : a200            >        ldx #0
edd0 : ade9ee          >        lda rmsg_stack
edd3 :                 >loop2915
edd3 : 20d1ee          >        jsr rchar
edd6 : e8              >        inx
edd7 : bde9ee          >        lda rmsg_stack,x
edda : d0f7            >        bne loop2915
                        
eddc : ba                       tsx
eddd : e8                       inx
edde : a901                     lda #1      ;address high
ede0 : 20bdee                   jsr rhex
ede3 : 8a                       txa         ;address low
ede4 : 20bdee                   jsr rhex
ede7 : 20b9ee           rstack  jsr rspace
edea : bd0001                   lda $100,x  ;stack data
eded : 20bdee                   jsr rhex
edf0 : e8                       inx
edf1 : d0f4                     bne rstack
edf3 : 20b0ee                   jsr rcrlf   ;new line
                        ;show zero page workspace
edf6 : a900                     lda #0
edf8 : 20bdee                   jsr rhex
edfb : a952                     lda #zpt
edfd : aa                       tax
edfe : 20bdee                   jsr rhex
ee01 : 20b9ee           rzp     jsr rspace
ee04 : b500                     lda 0,x
ee06 : 20bdee                   jsr rhex
ee09 : e8                       inx
ee0a : e059                     cpx #zp_bss
ee0c : d0f3                     bne rzp
ee0e : 20b0ee                   jsr rcrlf
                        ;show absolute workspace
ee11 : a932                     lda #hi(data_segment)
ee13 : 20bdee                   jsr rhex
ee16 : a900                     lda #lo(data_segment)
ee18 : 20bdee                   jsr rhex
ee1b : a200                     ldx #0
ee1d : 20b9ee           rabs    jsr rspace
ee20 : bd0032                   lda data_segment,x
ee23 : 20bdee                   jsr rhex
ee26 : e8                       inx
ee27 : e00a                     cpx #(data_bss-data_segment)
ee29 : d0f2                     bne rabs
                        ;ask to continue
                                rprt rmsg_cont
ee2b : a200            >        ldx #0
ee2d : ad05ef          >        lda rmsg_cont
ee30 :                 >loop2916
ee30 : 20d1ee          >        jsr rchar
ee33 : e8              >        inx
ee34 : bd05ef          >        lda rmsg_cont,x
ee37 : d0f7            >        bne loop2916
                        
ee39 : 20a6ee           rerr1   jsr rget
ee3c : c953                     cmp #'S'
ee3e : f00b                     beq rskip
ee40 : c943                     cmp #'C'
ee42 : d0f5                     bne rerr1        
                        ;restore registers
ee44 : 68                       pla
ee45 : a8                       tay
ee46 : 68                       pla
ee47 : aa                       tax
ee48 : 68                       pla 
ee49 : 28                       plp
ee4a : 60                       rts
                        ;skip the current test
ee4b : a9f0             rskip   lda #$f0            ;already end of tests?
ee4d : cd0232                   cmp test_case
ee50 : f0e7                     beq rerr1           ;skip is not available
ee52 : a2ff                     ldx #$ff            ;clear stack
ee54 : 9a                       txs
ee55 : ee0232                   inc test_case       ;next test
ee58 : a900                     lda #lo(start)      ;find begin of test
ee5a : 8552                     sta zpt
ee5c : a9c0                     lda #hi(start)
ee5e : 8553                     sta zpt+1
ee60 : a004             rskipl1 ldy #4              ;search pattern
ee62 : b152             rskipl2 lda (zpt),y         ;next byte
ee64 : d98bee                   cmp rmark,y
ee67 : d00a                     bne rskipnx         ;no match
ee69 : 88                       dey
ee6a : 300f                     bmi rskipf          ;found pattern        
ee6c : c001                     cpy #1              ;skip immediate value
ee6e : d0f2                     bne rskipl2
ee70 : 88                       dey
ee71 : f0ef                     beq rskipl2
                                
ee73 : e652             rskipnx inc zpt             ;next RAM location
ee75 : d0e9                     bne rskipl1
ee77 : e653                     inc zpt+1
ee79 : d0e5                     bne rskipl1
                        
ee7b : a001             rskipf  ldy #1              ;pattern found - check test number
ee7d : b152                     lda (zpt),y         ;test number
ee7f : c9f0                     cmp #$f0            ;end of last test?
ee81 : f005                     beq rskipe          ;ask to rerun all
ee83 : cd0232                   cmp test_case       ;is next test?
ee86 : d0eb                     bne rskipnx         ;continue searching
ee88 : 6c5200           rskipe  jmp (zpt)           ;start next test or rerun at end of tests
                                
ee8b : a900             rmark   lda #0              ;begin of test search pattern
ee8d : 8d0232                   sta test_case
                        
                        ;show test has ended, ask to repeat
ee90 :                  report_success
                            if rep_int = 1
                                rprt rmsg_priority
                                lda data_segment    ;show interrupt sequence
                                jsr rhex
                                jsr rspace
                                lda data_segment+1
                                jsr rhex
                                jsr rspace
                                lda data_segment+2
                                jsr rhex
                            endif
                                rprt rmsg_success
ee90 : a200            >        ldx #0
ee92 : ad37ef          >        lda rmsg_success
ee95 :                 >loop2917
ee95 : 20d1ee          >        jsr rchar
ee98 : e8              >        inx
ee99 : bd37ef          >        lda rmsg_success,x
ee9c : d0f7            >        bne loop2917
                        
ee9e : 20a6ee           rsuc1   jsr rget
eea1 : c952                     cmp #'R'
eea3 : d0f9                     bne rsuc1        
eea5 : 60                       rts
                        
                        ;input subroutine
                        ;get a character from standard input 
                        ;adjust according to the needs in your test environment
eea6 :                  rget                ;get character in A
eea6 : 20e0ff                   jsr OSRDCH  ;example: OSRDCH on a Beeb/Atom
                        ;rget1
                        ;        lda $bff1   ;wait RDRF
                        ;        and #8
                        ;        beq rget1
                        ;not a real ACIA - so RDRF is not checked
                        ;        lda $bff0   ;read acia rx reg
                        ;       lda $f004   ;Kowalski simulator default
                        ;the load can be replaced by a call to a kernal routine
                        ;        jsr $ffcf   ;example: CHRIN for a C64
eea9 : c961                     cmp #'a'    ;lower case
eeab : 9002                     bcc rget1
eead : 295f                     and #$5f    ;convert to upper case
eeaf : 60               rget1   rts
                        
                        ;output subroutines
eeb0 : a90a             rcrlf   lda #10
eeb2 : 20d1ee                   jsr rchar
eeb5 : a90d                     lda #13
eeb7 : d018                     bne rchar
                        
eeb9 : a920             rspace  lda #' '
eebb : d014                     bne rchar
                                
eebd : 48               rhex    pha         ;report hex byte in A
eebe : 4a                       lsr a       ;high nibble first
eebf : 4a                       lsr a
eec0 : 4a                       lsr a
eec1 : 4a                       lsr a
eec2 : 20c8ee                   jsr rnib
eec5 : 68                       pla         ;now low nibble
eec6 : 290f                     and #$f
                        
eec8 : 18               rnib    clc         ;report nibble in A
eec9 : 6930                     adc #'0'    ;make printable 0-9
eecb : c93a                     cmp #'9'+1
eecd : 9002                     bcc rchar
eecf : 6906                     adc #6      ;make printable A-F
                        
                        ;send a character to standard output 
                        ;adjust according to the needs in your test environment
                        ;register X needs to be preserved!
eed1 :                  rchar               ;report character in A
eed1 : 20eeff                   jsr OSWRCH  ;example: OSWRCH on a Beeb/Atom
                        ;        pha         ;wait TDRF
                        ;rchar1  lda $bff1
                        ;        and #$10
                        ;        beq rchar1
                        ;        pla
                        ;not a real ACIA - so TDRF is not checked
                        ;        sta $bff0   ;write acia tx reg
                        ;        sta $f001   ;Kowalski simulator default
                        ;the store can be replaced by a call to a kernal routine
                        ;        jsr $ffd2   ;example: CHROUT for a C64
eed4 : 60                       rts
                        
eed5 :                  rmsg_start
eed5 : 0a0d5374617274..         db  10,13,"Started testing",10,13,0
eee9 :                  rmsg_stack
eee9 : 0a0d7265677320..         db  10,13,"regs Y  X  A  PS PCLPCH",10,13,0
ef05 :                  rmsg_cont
ef05 : 0a0d7072657373..         db  10,13,"press C to continue or S to skip current test",10,13,0
ef37 :                  rmsg_success
ef37 : 0a0d416c6c2074..         db  10,13,"All tests completed, press R to repeat",10,13,0
                            if rep_int = 1
                        rmsg_priority
                                db  10,13,"interrupt sequence (NMI IRQ BRK) ",0
                            endif
                           
                            endif
                        
                        ;copy of data to initialize BSS segment
                            if load_data_direct != 1
ef62 :                  zp_init
ef62 : c3824100         zp1_    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
ef66 : 7f               zp7f_   db  $7f             ;test pattern for compare
                        ;logical zeropage operands
ef67 : 001f7180         zpOR_   db  0,$1f,$71,$80   ;test pattern for OR
ef6b : 0fff7f80         zpAN_   db  $0f,$ff,$7f,$80 ;test pattern for AND
ef6f : ff0f8f8f         zpEO_   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
ef73 : 1032             ind1_   dw  abs1            ;indirect pointer to pattern in absolute memory
ef75 : 1132                     dw  abs1+1
ef77 : 1232                     dw  abs1+2
ef79 : 1332                     dw  abs1+3
ef7b : 1432                     dw  abs7f
ef7d : 1831             inw1_   dw  abs1-$f8        ;indirect pointer for wrap-test pattern
ef7f : 0532             indt_   dw  abst            ;indirect pointer to store area in absolute memory
ef81 : 0632                     dw  abst+1
ef83 : 0732                     dw  abst+2
ef85 : 0832                     dw  abst+3
ef87 : 0d31             inwt_   dw  abst-$f8        ;indirect pointer for wrap-test store
ef89 : 4732             indAN_  dw  absAN           ;indirect pointer to AND pattern in absolute memory
ef8b : 4832                     dw  absAN+1
ef8d : 4932                     dw  absAN+2
ef8f : 4a32                     dw  absAN+3
ef91 : 4b32             indEO_  dw  absEO           ;indirect pointer to EOR pattern in absolute memory
ef93 : 4c32                     dw  absEO+1
ef95 : 4d32                     dw  absEO+2
ef97 : 4e32                     dw  absEO+3
ef99 : 4332             indOR_  dw  absOR           ;indirect pointer to OR pattern in absolute memory
ef9b : 4432                     dw  absOR+1
ef9d : 4532                     dw  absOR+2
ef9f : 4632                     dw  absOR+3
                        ;add/subtract indirect pointers
efa1 : 0532             adi2_   dw  ada2            ;indirect pointer to operand 2 in absolute memory
efa3 : 0632             sbi2_   dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
efa5 : 0631             adiy2_  dw  ada2-$ff        ;with offset for indirect indexed
efa7 : 0731             sbiy2_  dw  sba2-$ff
efa9 :                  zp_end
                            if (zp_end - zp_init) != (zp_bss_end - zp_bss)
                                ;force assembler error if size is different
                                ERROR ERROR ERROR   ;mismatch between bss and zeropage data
                            endif
efa9 :                  data_init
efa9 : 6900             ex_adc_ adc #0              ;execute immediate opcodes
efab : 60                       rts
efac : e900             ex_sbc_ sbc #0              ;execute immediate opcodes
efae : 60                       rts
efaf : c3824100         abs1_   db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
efb3 : 7f               abs7f_  db  $7f             ;test pattern for compare
                        ;loads
efb4 : 80800002         fLDx_   db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
efb8 :                  rASL_                       ;expected result ASL & ROL -carry
efb8 : 86048200         rROL_   db  $86,$04,$82,0   ; "
efbc : 87058301         rROLc_  db  $87,$05,$83,1   ;expected result ROL +carry
efc0 :                  rLSR_                       ;expected result LSR & ROR -carry
efc0 : 61412000         rROR_   db  $61,$41,$20,0   ; "
efc4 : e1c1a080         rRORc_  db  $e1,$c1,$a0,$80 ;expected result ROR +carry
efc8 :                  fASL_                       ;expected flags for shifts
efc8 : 81018002         fROL_   db  fnc,fc,fn,fz    ;no carry in
efcc : 81018000         fROLc_  db  fnc,fc,fn,0     ;carry in
efd0 :                  fLSR_
efd0 : 01000102         fROR_   db  fc,0,fc,fz      ;no carry in
efd4 : 81808180         fRORc_  db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
efd8 : 7f80ff0001       rINC_   db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
efdd : 0080800200       fINC_   db  0,fn,fn,fz,0    ;expected flags for INC/DEC
                        ;logical memory operand
efe2 : 001f7180         absOR_  db  0,$1f,$71,$80   ;test pattern for OR
efe6 : 0fff7f80         absAN_  db  $0f,$ff,$7f,$80 ;test pattern for AND
efea : ff0f8f8f         absEO_  db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
efee : 00f11f00         absORa_ db  0,$f1,$1f,0     ;test pattern for OR
eff2 : f0ffffff         absANa_ db  $f0,$ff,$ff,$ff ;test pattern for AND
eff6 : fff0f00f         absEOa_ db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
effa : 00ff7f80         absrlo_ db  0,$ff,$7f,$80
effe : 02800080         absflo_ db  fz,fn,0,fn
f002 :                  data_end
                            if (data_end - data_init) != (data_bss_end - data_bss)
                                ;force assembler error if size is different
                                ERROR ERROR ERROR   ;mismatch between bss and data
                            endif
                        
f002 :                  vec_init
f002 : 7ded                     dw  nmi_trap
f004 : 83ed                     dw  res_trap
f006 : 8bed                     dw  irq_trap
fffa =                  vec_bss equ $fffa
                            endif                   ;end of RAM init data
                        
                        ; code at end of image due to the need to add blank space as required
                            if ($ff & (ji_ret - * - 2)) < ($ff & (jxi_ret - * - 2))
                        ; JMP (abs) when $xxff and $xx00 are from same page
                                ds  lo(ji_ret - * - 2)
                                nop
                                nop
                        ji_px   nop             ;low address byte matched with ji_ret
                                nop
                                trap            ;jmp indirect page cross bug
                        
                        ; JMP (abs,x) when $xxff and $xx00 are from same page
                                ds  lo(jxi_ret - * - 2)
                                nop
                                nop
                        jxi_px  nop             ;low address byte matched with jxi_ret
                                nop
                                trap            ;jmp indexed indirect page cross bug
                            else
                        ; JMP (abs,x) when $xxff and $xx00 are from same page
f008 : 00000000000000..         ds  lo(jxi_ret - * - 2)
f041 : ea                       nop
f042 : ea                       nop
f043 : ea               jxi_px  nop             ;low address byte matched with jxi_ret
f044 : ea                       nop
                                trap            ;jmp indexed indirect page cross bug
f045 : 20c7ed          >        jsr report_error
                        
                        
                        ; JMP (abs) when $xxff and $xx00 are from same page
f048 : 00000000000000..         ds  lo(ji_ret - * - 2)
f0d7 : ea                       nop
f0d8 : ea                       nop
f0d9 : ea               ji_px   nop             ;low address byte matched with ji_ret
f0da : ea                       nop
                                trap            ;jmp indirect page cross bug
f0db : 20c7ed          >        jsr report_error
                        
                            endif
                        
                            if (load_data_direct = 1) & (ROM_vectors = 1)
                                org $fffa       ;vectors
                                dw  nmi_trap
                                dw  res_trap
                                dw  irq_trap
                            endif
                        
f0d9 =                          end start
                        
No errors in pass 2.
Wrote binary from address $c000 through $f0dd.
Total size 12510 bytes.
Program start address is at $c000 (49152).
